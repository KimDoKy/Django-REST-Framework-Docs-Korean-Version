{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Django REST Framework Docs - \ud55c\uad6d\uc5b4 \ubc84\uc804 DRF(Django REST Framework)\uc758 \uacf5\uc2dd\ubb38\uc11c\ub97c \ud55c\uad6d\uc5b4\ub85c \ubc88\uc5ed\ud558\uc600\uc2b5\ub2c8\ub2e4. API \uac00\uc774\ub4dc API \uac00\uc774\ub4dc\ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \ubaa8\ub4e0 \uae30\ub2a5\uc5d0 \ub300\ud55c \uc644\ubcbd\ud55c \uc124\uba85\uc11c\uc785\ub2c8\ub2e4. Requests Responses Views Generic views Viewsets Routers Parsers Renderers Serializers Serializer fields Serializer relations Validators Authentication Permissions Throttling Filtering Pagination Versioning Content negotiation Metadata Schemas Format suffixes Returning URLs Exceptions Status codes Testing Settings","title":"Home"},{"location":"#django-rest-framework-docs-","text":"DRF(Django REST Framework)\uc758 \uacf5\uc2dd\ubb38\uc11c\ub97c \ud55c\uad6d\uc5b4\ub85c \ubc88\uc5ed\ud558\uc600\uc2b5\ub2c8\ub2e4.","title":"Django REST Framework Docs - \ud55c\uad6d\uc5b4 \ubc84\uc804"},{"location":"#api","text":"API \uac00\uc774\ub4dc\ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \ubaa8\ub4e0 \uae30\ub2a5\uc5d0 \ub300\ud55c \uc644\ubcbd\ud55c \uc124\uba85\uc11c\uc785\ub2c8\ub2e4. Requests Responses Views Generic views Viewsets Routers Parsers Renderers Serializers Serializer fields Serializer relations Validators Authentication Permissions Throttling Filtering Pagination Versioning Content negotiation Metadata Schemas Format suffixes Returning URLs Exceptions Status codes Testing Settings","title":"API \uac00\uc774\ub4dc"},{"location":"Authentication/","text":"Django REST Framework - Authentication \"Auth needs to be pluggable.\" \"\uc778\uc99d\uc740 \ud50c\ub7ec\uadf8\uac00 \uac00\ub2a5\ud574\uc57c \ud569\ub2c8\ub2e4.\" \u2014 Jacob Kaplan-Moss, \"REST worst practices\" Authentication(\uc785\uc99d) Authentication\uc740 \uc218\uc2e0 \uc694\uccad\uc744 \uc694\uccad\ud55c \uc0ac\uc6a9\uc790 \ub610\ub294 \uc11c\uba85 \ub41c \ud1a0\ud070\uacfc \uac19\uc740 \uc2dd\ubcc4 \uc790\uaca9 \uc99d\uba85 \uc138\ud2b8\ub97c \uc5f0\uacb0\ud558\ub294 \uba54\ucee4\ub2c8\uc998\uc785\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \uad8c\ud55c \uacfc \uc815\ucc45 \uc740 \uc774\ub7ec\ud55c \uc790\uaca9 \uc99d\uba85\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc694\uccad\uc744 \ud5c8\uc6a9\ud574\uc57c \ud558\ub294\uc9c0 \uacb0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc5ec\ub7ec\uac00\uc9c0 \uc778\uc99d \uc2a4\ud0a4\ub9c8\ub97c \uc989\uc2dc \uc81c\uacf5\ud558\uba70 custom \uc2a4\ud0a4\ub9c8\ub97c \uad6c\ud604\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Authentication\uc740 \ud56d\uc0c1 View\uc758 \ub9e8 \ucc98\uc74c, \uad8c\ud55c \ubc0f \uc81c\ud55c \uac80\uc0ac\uac00 \uc218\ud589\ub418\uae30 \uc804\uc5d0 \uadf8\ub9ac\uace0 \ub2e4\ub978 \ucf54\ub4dc\uac00 \uc9c4\ud589\ub418\uae30 \uc804\uc5d0 \uc2e4\ud589\ub429\ub2c8\ub2e4. request.user \uc18d\uc131\uc740 \uc77c\ubc18\uc801\uc73c\ub85c contrib.auth \ud328\ud0a4\uc9c0\uc758 User \ud074\ub798\uc2a4 \uc778\uc2a4\ud134\uc2a4\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. request.auth \ub4f1\ub85d\uc815\ubcf4\ub294 \ucd94\uac00\uc778\uc99d \uc815\ubcf4\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, request\uac00 \uc11c\uba85 \ub41c \uc778\uc99d \ud1a0\ud070\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note : \ub4e4\uc5b4\uc624\ub294 request\ub97c \ud5c8\uc6a9\ud558\uac70\ub098 \uac70\ubd80\ud558\uc9c0 \uc54a\ub294 \uc778\uc99d\uc740 request\uac00 \uc218\ud589\ub41c \uc790\uaca9 \uc99d\uba85\uc744 \uc2dd\ubcc4\ud558\uae30\ub9cc\ud558\uba74 \ub41c\ub2e4\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. API\uc5d0 \ub300\ud55c \uc0ac\uc6a9\uad8c\ud55c\uc815\ucc45\uc744 \uc124\uc815\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 permissions documentation \ub97c \ucc38\uc870\ud558\uc138\uc694. How authentication is determined \uc778\uc99d \uccb4\uacc4\ub294 \ud56d\uc0c1 \ud074\ub798\uc2a4 list\uc73c\ub85c \uc815\uc758\ub429\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 list\uc758 \uac01 \ud074\ub798\uc2a4\uc5d0 \ub300\ud574 \uc778\uc99d\uc744 \uc2dc\ub3c4\ud558\uace0 \uc131\uacf5\uc801\uc73c\ub85c \uc778\uc99d\ud55c \uccab \ubc88\uc9f8 \ud074\ub798\uc2a4\uc758 \ubc18\ud658 \uac12\uc744 \uc0ac\uc6a9\ud558\uc5ec request.user \ubc0f request.auth \ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \ud074\ub798\uc2a4\uac00 \uc778\uc99d\ub418\uc9c0 \uc54a\uc73c\uba74 request.user \ub294 django.contrib.auth.AnonymousUser \uc758 \uc778\uc2a4\ud134\uc2a4\ub85c \uc124\uc815\ub418\uace0 request.auth \ub294 None \uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc5d0 \ub300\ud55c request.user , request.auth \uc758 \uac12\uc740 UNAUTHENTICATED_USER , UNAUTHENTICATED_TOKEN \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Setting the authentication scheme DEFAULT_AUTHENTICATION_CLASSES \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uae30\ubcf8 \uc778\uc99d \uad6c\uc131\ud45c\ub97c \uc804\uc5ed\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74. REST_FRAMEWORK = { 'DEFAULT_AUTHENTICATION_CLASSES': ( 'rest_framework.authentication.BasicAuthentication', 'rest_framework.authentication.SessionAuthentication', ) } \ub610\ud55c APIVIew CBV\ub97c \uc0ac\uc6a9\ud558\uc5ec view \ub2e8\uc704 \ub610\ub294 view\ub2e8\uc704\ub85c \uc778\uc99d \uccb4\uacc4\ub97c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.authentication import SessionAuthentication, BasicAuthentication from rest_framework.permissions import IsAuthenticated from rest_framework.response import Response from rest_framework.views import APIView class ExampleView(APIView): authentication_classes = (SessionAuthentication, BasicAuthentication) permission_classes = (IsAuthenticated,) def get(self, request, format=None): content = { 'user': unicode(request.user), # `django.contrib.auth.User` instance. 'auth': unicode(request.auth), # None } return Response(content) \ub610\ub294 FBV\uc640 \ud568\uaed8 @api_view \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 @api_view(['GET']) @authentication_classes((SessionAuthentication, BasicAuthentication)) @permission_classes((IsAuthenticated,)) def example_view(request, format=None): content = { 'user': unicode(request.user), # `django.contrib.auth.User` instance. 'auth': unicode(request.auth), # None } return Response(content) Unauthorized and Forbidden responses(\ubb34\ub2e8 \ubc0f \uae08\uc9c0\ub41c \uc751\ub2f5) \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc5d0 \uad8c\ud55c\uc774 \uac70\ubd80\ub418\uba74 \uc801\uc808\ud55c \ub450 \uac00\uc9c0 \uc624\ub958 \ucf54\ub4dc\uac00 \uc788\uc2b5\ub2c8\ub2e4. HTTP 401 Unauthorized HTTP 403 Permission Denied HTTP 401 \uc751\ub2f5\uc5d0\ub294 \ud56d\uc0c1 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc778\uc99d \ubc29\ubc95\uc744 \uc9c0\uc2dc\ud558\ub294 WWW-Authenticate \ud5e4\ub354\uac00 \ud3ec\ud568\ub418\uc5b4\uc57c\ud569\ub2c8\ub2e4. HTTP 403 \uc751\ub2f5\uc5d0\ub294 WWW-Authenticate \ud5e4\ub354\uac00 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\ub418\ub294 response\uc758 \uc885\ub958\ub294 \uc778\uc99d \uccb4\uacc4\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. \uc5ec\ub7ec \uc778\uc99d \uc2a4\ud0a4\ub9c8\uac00 \uc0ac\uc6a9 \uc911\uc77c \uc218 \uc788\uc9c0\ub9cc, response\uc758 \ud0c0\uc785\uc744 \uacb0\uc815\ud558\ub294\ub370 \ud558\ub098\uc758 \uc2a4\ud0a4\ub9c8\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. view\uc5d0 \uc124\uc815\ub41c \uccab\ubc88\uc9f8 authentication \ud074\ub798\uc2a4\ub294 response \ud0c0\uc785\uc744 \uacb0\uc815 \ud560 \ub54c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. request\uac00 \uc131\uacf5\uc801\uc73c\ub85c \uc778\uc99d \ub420 \uc218 \uc788\uc9c0\ub9cc, \uc5ec\uc804\ud788 request\ub97c \uc218\ud589\ud560 \uad8c\ud55c\uc774 \uac70\ubd80 \ub41c \uacbd\uc6b0, \uc778\uc99d \uc2a4\ud0a4\ub9c8\uc5d0 \uad00\uacc4\uc5c6\uc774 403 Permission Denied \uc751\ub2f5\uc774 \ud56d\uc0c1 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Apache mod_wsgi specific configuration mod_wsgi\ub97c \uc0ac\uc6a9\ud558\uc5ec Apache\uc5d0 \ubc30\ud3ec\ud55c\ub2e4\uba74, \uad8c\ud55c \ubd80\uc5ec \ud5e4\ub354\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc751\uc6a9\ud504\ub85c\uadf8\ub7a8 \uc218\uc900\uc774 \uc544\ub2cc Apache\uc5d0\uc11c \uc778\uc99d\uc744 \ucc98\ub9ac\ud55c\ub2e4\uace0 \uac00\uc815\ud558\ubbc0\ub85c, \uae30\ubcf8\uc801\uc73c\ub85c WSGI \uc751\uc6a9\ud504\ub85c\uadf8\ub7a8\uc5d0 \uc804\ub2ec\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Apache\uc5d0 \ubc30\ud3ec\ud558\uace0 \ube44 \uc138\uc158 \uae30\ubc18 \uc778\uc99d\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 mod_wsgi \ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uad6c\uc131\ud558\uc5ec \ud544\uc694\ud55c \ud5e4\ub354\ub97c \uc751\uc6a9\ud504\ub85c\uadf8\ub7a8\uc5d0 \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 \uc801\uc808\ud55c \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c WSGIPassAuthorization \uc9c0\uc2dc\ubb38\uc744 \uc9c0\uc815\ud558\uace0 On \uc73c\ub85c \uc124\uc815\ud558\uc5ec \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. # \uc774\uac83\uc740 \uc11c\ubc84 \uc124\uc815, \uac00\uc0c1 \ud638\uc2a4\ud2b8, \ub514\ub809\ud1a0\ub9ac \ub610\ub294 .htaccess \uc911 \ud558\ub098\uc5d0 \ub4e4\uc5b4\uac08 \uc218 \uc788\uc2b5\ub2c8\ub2e4. WSGIPassAuthorization On API Reference BasicAuthentication \uc774 \uc778\uc99d \uccb4\uacc4\ub294 \uc0ac\uc6a9\uc790\uc758 \uc0ac\uc6a9\uc790 \uc774\ub984\uacfc \uc554\ud638\uc5d0 \ub300\ud574 \uc11c\uba85 \ub41c HTTP basic Authentication \uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8 \uc778\uc99d\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \ud14c\uc2a4\ud2b8\uc5d0\ub9cc \uc801\ud569\ud569\ub2c8\ub2e4. \uc131\uacf5\uc801\uc73c\ub85c \uc778\uc99d\ub418\uba74 BasicAuthencation \uc740 \ub2e4\uc74c \uc790\uaca9 \uc99d\uba85\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. request.user \ub294 Django User \uc778\uc2a4\ud134\uc2a4\uac00 \ub420 \uac83\uc785\ub2c8\ub2e4. request.auth \ub294 None \uc785\ub2c8\ub2e4. \uad8c\ud55c\uc774 \uac70\ubd80 \ub41c \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc751\ub2f5\uc740 \uc801\uc808\ud55c WWW-Authenticate \ud5e4\ub354\uc640 \ud568\uaed8 HTTP 401 Unauthorized \uc6c5\ub2f5\uc774 \ub429\ub2c8\ub2e4. WWW-Authenticate: Basic realm=\"api\" Note : \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c BasicAuthentication \uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 https \ub97c \ud1b5\ud574\uc11c\ub9cc API\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub610\ud55c API \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ub85c\uadf8\uc778 \ud560\ub54c \ud56d\uc0c1 \uc0ac\uc6a9\uc790 \uc774\ub984\uacfc \ube44\ubc00\ubc88\ud638\ub97c \ub2e4\uc2dc \uc694\uccad\ud558\uace0 \ud574\ub2f9 \uc138\ubd80\uc815\ubcf4\ub97c \uc601\uad6c \uc800\uc7a5\uc18c\uc5d0 \uc800\uc7a5\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud574\uc57c\ud569\ub2c8\ub2e4. TokenAuthentication \uc774 \uc778\uc99d\uccb4\uacc4\ub294 \uac04\ub2e8\ud55c \ud1a0\ud070 \uae30\ubc18 HTTP\uc778\uc99d\uccb4\uacc4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ud1a0\ud070 \uc778\uc99d\uc740 \ub124\uc774\ud2f0\ube0c \ub370\uc2a4\ud06c\ud1b1 \ubc0f \ubaa8\ubc14\uc77c \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uac19\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8 - \uc11c\ubc84 \uc124\uc815\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. TokenAuthentication \uc2a4\ud0a4\ub9c8\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 TokenAuthentication \uc744 \ud3ec\ud568\ud558\ub3c4\ub85d authentication\ud074\ub798\uc2a4\ub97c \uad6c\uc131 \ud558\uace0 INSTALLED_APPS \uc124\uc815\uc5d0 rest_framework.authtoken \ub97c \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. INSTALLED_APPS = ( ... 'rest_framework.authtoken' ) Note : \uc124\uc815\uc744 \ubcc0\uacbd\ud55c \ud6c4\uc5d0 manage.py migrate \ub97c \uc2e4\ud589\ud574\uc57c\ud569\ub2c8\ub2e4. rest_framework.authtoken \uc571\uc740 Django \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub610\ud55c \uc0ac\uc6a9\uc790\ub97c \uc704\ud55c \ud1a0\ud070\uc744 \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4. from rest_framework.authtoken.models import Token token = Token.objects.create(user=...) print token.key \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc778\uc99d\ud558\ub824\uba74 \ud1a0\ud070 \ud0a4\uac00 Authorization HTTP \ud5e4\ub354\uc5d0 \ud3ec\ud568\ub418\uc5b4\uc57c\ud569\ub2c8\ub2e4. \ud0a4\uc5d0\ub294 \ub450 \ubb38\uc790\uc5f4\uc744 \uacf5\ubc31\uc73c\ub85c \uad6c\ubd84\ud558\uc5ec \ubb38\uc790\uc5f4 \ub9ac\ud130\ub7f4 \"Token\"\uc744 prefix\ub85c \uc0ac\uc6a9\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: Authorization: Token 9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b Note : Bearer \uc640 \uac19\uc740 \ud5e4\ub354\uc5d0 \ub2e4\ub978 \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e8\uc21c\ud788 TokenAuthentication \uc744 \uc11c\ube0c \ud074\ub798\uc2a4\ud654\ud558\uace0 keyword \ud074\ub798\uc2a4 \ubcc0\uc218\ub97c \uc124\uc815\ud558\uc2ed\uc2dc\uc624. \uc131\uacf5\uc801\uc73c\ub85c \uc778\uc99d\ub418\uba74 TokenAuthentication \uc740 \ub2e4\uc74c \uc790\uaca9 \uc99d\uba85\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. request.user \ub294 Django User \uc778\uc2a4\ud134\uc2a4\uac00 \ub420 \uac83\uc785\ub2c8\ub2e4. request.auth \ub294 rest_framework.authtoken.models.Token \uc778\uc2a4\ud134\uc2a4\uac00 \ub429\ub2c8\ub2e4. \uad8c\ud55c\uc774 \uac70\ubd80 \ub41c \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc751\ub2f5\uc740 \uc801\uc808\ud55c WWW-Authenticate \ud5e4\ub354\uc640 \ud568\uaed8 HTTP 401 Unauthorized \uc751\ub2f5\uc774 \ub429\ub2c8\ub2e4. \uc608: WWW-Authenticate: Token curl command line tool\uc740 \ud1a0\ud070\uc73c\ub85c \uc778\uc99d\ub41c API\ub97c \ud14c\uc2a4\ud2b8 \ud558\ub294\ub370 \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608: curl -X GET http://127.0.0.1:8000/api/example/ -H 'Authorization: Token 9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b' Note : \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c TokenAuthentication \uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 https \ub97c \ud1b5\ud574\uc11c\ub9cc API\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. Generating Tokens By using signals \ubaa8\ub4e0 \uc0ac\uc6a9\uc790\uac00 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc120 \ub41c \ud1a0\ud070\uc744 \uac16\uae30\ub97c \uc6d0\ud558\uba74 \uc0ac\uc6a9\uc790\uc758 post_save \uc2e0\ud638\ub97c \uac04\ub2e8\ud788 \uc7a1\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from django.conf import settings from django.db.models.signals import post_save from django.dispatch import receiver from rest_framework.authtoken.models import Token @receiver(post_save, sender=settings.AUTH_USER_MODEL) def create_auth_token(sender, instance=None, created=False, **kwargs): if created: Token.objects.create(user=instance) \uc774 \ucf54\ub4dc\ub294 snippet\uc774 \uc124\uce58\ub41c models.py \ubaa8\ub4c8\uc774\ub098 \uc2dc\uc791\uc2dc Django\uac00 \uac00\uc838\uc62c \ub2e4\ub978 \uc704\uce58\uc5d0 \ubc30\uce58\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ubbf8 \uc77c\ubd80 \uc0ac\uc6a9\uc790\ub97c \ub9cc\ub4e0 \uacbd\uc6b0 \ub2e4\uc74c\uacfc \uac19\uc774 \ubaa8\ub4e0 \uae30\uc874 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \ud1a0\ud070\uc744 \uc0dd\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from django.contrib.auth.models import User from rest_framework.authtoken.models import Token for user in User.objects.all(): Token.objects.get_or_create(user=user) By exposing an api endpoint(api \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ub178\ucd9c\uc2dc\ud0b4) TokenAuthentication \uc744 \uc0ac\uc6a9\ud560 \ub54c \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc0ac\uc6a9\uc790 \uc774\ub984\uacfc \uc554\ud638\uac00 \uc788\ub294 \ud1a0\ud070\uc744 \uc5bb\uc744 \uc218 \uc788\ub294 \uba54\ucee4\ub2c8\uc998\uc744 \uc81c\uacf5 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc774 \ub3d9\uc791\uc744 \uc81c\uacf5\ud558\ub294 built-in \ubdf0\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uadf8\uac83\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 URLconf\uc5d0 obtain_auth_token \ubdf0\ub97c \ucd94\uac00\ud558\uc138\uc694. from rest_framework.authtoken import views urlpatterns += [ url(r'^api-token-auth/', views.obtain_auth_token) ] \ud328\ud134\uc758 URL \ubd80\ubd84\uc740 \uc6d0\ud558\ub294\ub300\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. obtain_auth_token \ubdf0\ub294 \uc720\ud6a8\ud55c \uc0ac\uc6a9\uc790 \uc774\ub984 \ubc0f \uc554\ud638 \ud544\ub4dc\uac00 \uc591\uc2dd \ub370\uc774\ud130 \ub610\ub294 JSON\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubdf0\uc5d0 POST\ub418\uba74 JSON \uc751\ub2f5\uc744 \ub9ac\ud134\ud569\ub2c8\ub2e4. { 'token' : '9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b' } \uae30\ubcf8 obtain_auth_token \ubdf0\ub294 \uc124\uc815\uc5d0\uc11c \uae30\ubcf8 renderer \ubc0f parser \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \ub300\uc2e0 JSON \uc694\uccad \ubc0f \uc751\ub2f5\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. obtain_auth_token view\uc758 custom \ub41c \ubc84\uc804\uc774 \ud544\uc694\ud558\uba74 ObtainAuthToken view \ud074\ub798\uc2a4\ub97c \ub300\uccb4\ud558\uace0 URL conf\uc5d0 \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc138\uc694. \uae30\ubcf8\uc801\uc73c\ub85c obtain_auth_token view\uc5d0 \uc801\uc6a9\ub41c \uc0ac\uc6a9 \uad8c\ud55c\uc774\ub098 \uc81c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \uc81c\ud55c\uc744 \uc801\uc6a9\ud558\ub824\uba74 view\ud074\ub798\uc2a4\ub97c \uc7ac\uc815\uc758\ud558\uace0 throttle_classes \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec view\ud074\ub798\uc2a4\ub97c \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4. With Django admin \uad00\ub9ac\uc790 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ud1b5\ud574 \uc218\ub3d9\uc73c\ub85c \ud1a0\ud070\uc744 \uc0dd\uc131 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ub300\uaddc\ubaa8 \uc0ac\uc6a9\uc790 \uae30\ubc18\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, user \ud544\ub4dc\ub97c raw_field \ub85c \uc120\uc5b8\ud558\uc5ec TokenAdmin \ud074\ub798\uc2a4\ub97c monkey \ud328\uce58\ud558\uc5ec \ud544\uc694\uc5d0 \ub9de\uac8c custom\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. your_app/admin.py : from rest_framework.authtoken.admin import TokenAdmin TokenAdmin.raw_id_fields = ('user',) SessionAuthentication \uc774 \uc778\uc99d\ubc29\uc2dd\uc740 Django\uc758 \uae30\ubcf8 \uc138\uc158 \ubc31\uc5d4\ub4dc\ub97c \uc778\uc99d\uc5d0 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc138\uc158 \uc778\uc99d\uc740 \uc6f9 \uc0ac\uc774\ud2b8\ub878 \ub3d9\uc77c\ud55c \uc138\uc158 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 AJAX \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. \uc131\uacf5\uc801\uc73c\ub85c \uc778\uc99d\ub418\uba74 SessionAuthentication \uc740 \ub2e4\uc74c \uc790\uaca9 \uc99d\uba85\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. request.use r\ub294 Django User \uc778\uc2a4\ud134\uc2a4\uac00 \ub420 \uac83\uc785\ub2c8\ub2e4. request.auth \ub294 None \uc785\ub2c8\ub2e4. \uad8c\ud55c\uc774 \uac70\ubd80 \ub41c \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc751\ub2f5\uc740 HTTP 403 Forbidden \uc751\ub2f5\uc774 \ub429\ub2c8\ub2e4. SessionAuthentication\uacfc \ud568\uaed8 AJAX \uc2a4\ud0c0\uc77c API\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 PUT , PATCH , POST \ub610\ub294 DELETE \uc694\uccad\uacfc \uac19\uc740 \"\uc548\uc804\ud558\uc9c0 \uc54a\uc740\" HTTP \uba54\uc18c\ub4dc \ud638\ucd9c\uc5d0 \uc720\ud6a8\ud55c CSRF \ud1a0\ud070\uc744 \ud3ec\ud568\uc2dc\ucf1c\uc57c\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Django CSRF documentation \ucc38\uc870 Warning : \ub85c\uadf8\uc778 \ud398\uc774\uc9c0\ub97c \ub9cc\ub4e4 \ub54c \ud56d\uc0c1 Django\uc758 \ud45c\uc900 \ub85c\uadf8\uc778 view\ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uc774\ub807\uac8c \ud558\uba74 \ub85c\uadf8\uc778view\uac00 \uc62c\ubc14\ub974\uac8c \ubcf4\ud638\ub429\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\ub294 \ub3d9\uc77c\ud55c view\uc5d0 \ub300\ud574 session \ubc0f non-session \uae30\ubc18 \uc778\uc99d\uc744 \ubaa8\ub450 \uc9c0\uc6d0\ud574\uc57c\ud558\ubbc0\ub85c \ud45c\uc900 Django\uc640 \uc57d\uac04 \ub2e4\ub974\uac8c \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc989, \uc778\uc99d \ub41c \uc694\uccad\ub9cc CSRF \ud1a0\ud070\uc774 \ud544\uc694\ub85c \ud558\uba70 \uc775\uba85 \uc694\uccad\uc740 CSRF \ud1a0\ud070 \uc5c6\uc774 \uc804\uc1a1\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc740 \ud56d\uc0c1 CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc801\uc6a9\ub41c \ub85c\uadf8\uc778 View\uc5d0\ub294 \uc801\ud569\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Custom authentication \uc0ac\uc6a9\uc790 \uc815\uc758 \uc778\uc99d \uccb4\uacc4\ub97c \uad6c\ud604\ud558\ub824\uba74 BaseAuthentication \uc744 \uc11c\ube0c \ud074\ub798\uc2a4\ud654\ud558\uace0 .authenticate(self, request) \uba54\uc18c\ub4dc\ub97c \ub300\uccb4\ud558\uc2ed\uc2dc\uc624. \uc774 \uba54\uc18c\ub4dc\ub294 \uc778\uc99d\uc5d0 \uc131\uacf5\ud558\uba74 2-tuple(user, auth)\uc744 \ubc18\ud658\ud558\uace0, \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 None \uc744 \ubc18\ud658\ud590\uc57c \ud569\ub2c8\ub2e4. None \uc744 \ubc18\ud658\ud558\ub294 \ub300\uc2e0 \uc0c1\ud669\uc5d0 \ub530\ub77c .authenticate() \uba54\uc11c\ub4dc\uc5d0\uc11c AuthenticationFailed \uc608\uc678\ub97c \ubc1c\uc0dd \uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ucde8\ud574\uc57c \ud560 \uc811\uadfc \ubc29\uc2dd\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc778\uc99d\uc744 \uc2dc\ub3c4\ud558\uc9c0 \uc54a\uc73c\uba74 None \uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc911\uc778 \ub2e4\ub978 \uc778\uc99d \uccb4\uacc4\ub3c4 \uacc4\uc18d \uac80\uc0ac\ub429\ub2c8\ub2e4. \uc778\uc99d\uc744 \uc2dc\ub3c4\ud588\uc9c0\ub9cc \uc2e4\ud328\ud55c \uacbd\uc6b0 AuthenticationFailed \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b5\ub2c8\ub2e4. \uad8c\ud55c \ud655\uc778\uacfc \uad00\uacc4\uc5c6\uc774 \ub2e4\ub978 \uc778\uc99d \uc2a4\ud0a4\ub9c8\ub97c \ud655\uc778\ud558\uc9c0 \uc54a\uace0 \uc989\uc2dc \uc624\ub958 \uc751\ub2f5\uc774 \ubc18\ud658\ub429\ub2c8\ub2e4. \ub610\ud55c .authenticate_header(self, request) \uba54\uc18c\ub4dc\ub97c \ub300\uccb4 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad6c\ud604 \ub41c \uacbd\uc6b0 HTTP 401 Unauthorized \uc751\ub2f5\uc5d0\uc11c WWW-Authenticate \ud5e4\ub354\uc758 \uac12\uc73c\ub85c \uc0ac\uc6a9 \ub420 \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. .authenticate_header() \uba54\uc18c\ub4dc\uac00 \ub300\uccb4\ub418\uc9c0 \uc54a\uc73c\uba74, \uc778\uc99d \uc2a4\ud0a4\ub9c8\ub294 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc774 \uc561\uc138\uc2a4\ub97c \uac70\ubd80 \ud560 \ub54c HTTP 403 Forbidden \uc751\ub2f5\uc744 \ub9ac\ud134\ud569\ub2c8\ub2e4. Example \ub2e4\uc74c \uc608\uc81c\ub294 \ub4e4\uc5b4\uc624\ub294 \uc694\uccad\uc744 'X_USERNAME'\uc774\ub77c\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 request \ud5e4\ub354\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc774\ub984\uc73c\ub85c \uc9c0\uc815\ub41c \uc0ac\uc6a9\uc790\ub85c \uc778\uc99d\ud569\ub2c8\ub2e4. from django.contrib.auth.models import User from rest_framework import authentication from rest_framework import exceptions class ExampleAuthentication(authentication.BaseAuthentication): def authenticate(self, request): username = request.META.get('X_USERNAME') if not username: return None try: user = User.objects.get(username=username) except User.DoesNotExist: raise exceptions.AuthenticationFailed('No such user') return (user, None) Third party packages \ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4. Django OAuth Toolkit Django OAuth Toolkit \ud328\ud0a4\uc9c0\ub294 OAuth 2.0 \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\uba70 Python 2.7 \ubc0f Python 3.3 \uc774\uc0c1\uc5d0\uc11c \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc774 \ud328\ud0a4\uc9c0\ub294 Evonove \uc5d0\uc11c \uc720\uc9c0 \uad00\ub9ac\ud558\uba70 \uc6b0\uc218\ud55c OAuthLib \uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \ud328\ud0a4\uc9c0\ub294 \uc798 \ubb38\uc11c\ud654\ub418\uc5b4 \uc798 \uc9c0\uc6d0\ub418\uba70 \ud604\uc7ac OAuth 2.0 \uc9c0\uc6d0\uc744\uc704\ud55c \uad8c\uc7a5 \ud328\ud0a4\uc9c0 \uc785\ub2c8\ub2e4. \uc124\uce58\uc640 \uad6c\uc131 pip\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uce58\ud569\ub2c8\ub2e4. pip install django-oauth-toolkit \ud328\ud0a4\uc9c0\ub97c INSTALLED_APPS \uc5d0 \ucd94\uac00\ud558\uace0 REST \ud504\ub808\uc784\uc6cc\ud06c \uc124\uc815\uc744 \uc218\uc815\ud558\uc2ed\uc2dc\uc624. INSTALLED_APPS = ( ... 'oauth2_provider', ) REST_FRAMEWORK = { 'DEFAULT_AUTHENTICATION_CLASSES': ( 'oauth2_provider.ext.rest_framework.OAuth2Authentication', ) } \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Django REST framework - Getting started \ub97c \ucc38\uc870\ud558\uc138\uc694. Django REST framework OAuth Django REST \ud504\ub808\uc784\uc6cc\ud06c OAuth \ud328\ud0a4\uc9c0\ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ub300\ud55c OAuth1 \ubc0f OAuth2 \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 \ud328\ud0a4\uc9c0\ub294 \uc774\uc804\uc5d0 REST \ud504\ub808\uc784 \uc6cc\ud06c\uc5d0 \uc9c1\uc811 \ud3ec\ud568\ub418\uc5c8\uc9c0\ub9cc \uc774\uc81c\ub294 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub85c \uc9c0\uc6d0 \ubc0f \uc720\uc9c0 \uad00\ub9ac\ub429\ub2c8\ub2e4. \uc124\uce58\uc640 \uad6c\uc131 pip\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud328\ud0a4\uc9c0\ub97c \uc124\uce58\ud569\ub2c8\ub2e4. pip install djangorestframework-oauth \uc124\uc815\uacfc \uc0ac\uc6a9\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Django REST \ud504\ub808\uc784\uc6cc\ud06c OAuth\ubb38\uc11c\uc5d0\uc11c \uc778\uc99d \uacfc \uad8c\ud55c \uc744 \ucc38\uc870\ud558\uc138\uc694. Digest Authentication HTTP \ub2e4\uc774\uc81c\uc2a4\ud2b8 \uc778\uc99d\uc740 HTTP \uae30\ubcf8 \uc778\uc99d\uc744 \ub300\uccb4\ud558\uae30 \uc704\ud55c \uac83\uc73c\ub85c \ub110\ub9ac \uad6c\ud604 \ub41c \uad6c\uc131\uc774\uba70 \uac04\ub2e8\ud55c \uc554\ud638\ud654 \ub41c \uc778\uc99d \uba54\ucee4\ub2c8\uc998\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Juan Riaza \ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 HTTP \ub2e4\uc774\uc81c\uc2a4\ud2b8 \uc778\uc99d \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\ub294 djangorestframework-digestauth \ud328\ud0a4\uc9c0\ub97c \uc720\uc9c0 \uad00\ub9ac\ud569\ub2c8\ub2e4. Django OAuth2 Consumer Rediker Software \uc758 Django OAuth2 Consumer \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 REST \ud504\ub808\uc784 \uc6cc\ud06c\uc5d0 \ub300\ud55c OAuth 2.0 \uc9c0\uc6d0 \uc744 \uc81c\uacf5\ud558\ub294 \ub610 \ub2e4\ub978 \ud328\ud0a4\uc9c0\uc785\ub2c8\ub2e4. \uc774 \ud328\ud0a4\uc9c0\uc5d0\ub294 \ud1a0\ud070\uc5d0 \ub300\ud55c \ud1a0\ud070 \ubc94\uc704 \uc9c0\uc815 \uad8c\ud55c\uc774 \ud3ec\ud568\ub418\uc5b4\uc788\uc5b4 API\uc5d0 \ub300\ud55c \uc138\ubc00\ud55c \uc561\uc138\uc2a4\uac00 \uac00\ub2a5\ud569\ub2c8\ub2e4. JSON Web Token JSON Web Token\uc740 \ud1a0\ud070 \uae30\ubc18 \uc778\uc99d\uc5d0 \uc0ac\uc6a9\ud560 \uc218\uc788\ub294 \uc0c1\ub2f9\ud788 \uc0c8\ub85c\uc6b4 \ud45c\uc900\uc785\ub2c8\ub2e4. \ub0b4\uc7a5 \ub41c TokenAuthentication \uccb4\uacc4\uc640 \ub2ec\ub9ac JWT \uc778\uc99d\uc740 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud1a0\ud070\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. Blimp \ub294 JWT \uc778\uc99d \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud558\ub294 djangorestframework-jwt \ud328\ud0a4\uc9c0\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc0ac\uc6a9\uc790 \uc774\ub984\uacfc \ube44\ubc00\ubc88\ud638\uac00 \uc788\ub294 JWT\ub97c \uc5bb\uc744 \uc218 \uc788\ub294 \uba54\ucee4\ub2c8\uc998\uc744 \uc720\uc9c0\ud569\ub2c8\ub2e4. Hawk HTTP Authentication HawkREST \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 Mohawk \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uae30\ubc18\uc73c\ub85c Hawk \uc5d0\uc11c \uc11c\uba85 \ud55c \uc694\uccad \ubc0f \uc751\ub2f5\uc744 API\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d\ud569\ub2c8\ub2e4. Hawk \uc740 \uacf5\uc720 \ud0a4\ub85c \uc11c\uba85 \ub41c \uba54\uc2dc\uc9c0\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub450 \ub2f9\uc0ac\uc790\uac00 \uc11c\ub85c \uc548\uc804\ud558\uac8c \ud1b5\uc2e0 \ud560 \uc218\uc788\uac8c\ud569\ub2c8\ub2e4. HTTP MAC \uc561\uc138\uc2a4 \uc778\uc99d ( OAuth 1.0 \uc758 \uc77c\ubd80\ub97c \uae30\ubc18\uc73c\ub85c \ud568)\uc744 \uae30\ubc18\uc73c\ub85c\ud569\ub2c8\ub2e4. HTTP Signature HTTP \uc11c\uba85 (\ud604\uc7ac IETF \ucd08\uc548 )\uc740 HTTP \uba54\uc2dc\uc9c0\uc5d0 \ub300\ud55c \uc6d0\ubcf8 \uc778\uc99d \ubc0f \uba54\uc2dc\uc9c0 \ubb34\uacb0\uc131\uc744 \ub2ec\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub9ce\uc740 \uc11c\ube44\uc2a4\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 Amazon\uc758 HTTP \uc11c\uba85 \uccb4\uacc4 \uc640 \uc720\uc0ac\ud558\uac8c \uc0c1\ud0dc \ube44 \uc800\uc7a5 \uc694\uccad \ubcc4 \uc778\uc99d\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. Elvio Toccalino \ub294 \uc0ac\uc6a9\ud558\uae30 \uc26c\uc6b4 HTTP \uc11c\uba85 \uc778\uc99d \uba54\ucee4\ub2c8\uc998\uc744 \uc81c\uacf5\ud558\ub294 djangorestframework-httpsignature \ud328\ud0a4\uc9c0\ub97c \uc720\uc9c0 \uad00\ub9ac\ud569\ub2c8\ub2e4. Djoser Djoser \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \ub4f1\ub85d, \ub85c\uadf8\uc778, \ub85c\uadf8 \uc544\uc6c3, \ube44\ubc00\ubc88\ud638 \uc7ac\uc124\uc815 \ubc0f \uacc4\uc815 \ud65c\uc131\ud654\uc640 \uac19\uc740 \uae30\ubcf8 \uc791\uc5c5\uc744 \ucc98\ub9ac\ud558\uae30 \uc704\ud55c \uc77c\ub828\uc758 \ubcf4\uae30\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ud328\ud0a4\uc9c0\ub294 custom \uc0ac\uc6a9\uc790 \ubaa8\ub378\uacfc \uc791\ub3d9\ud558\uba70 \ud1a0\ud070 \uae30\ubc18 \uc778\uc99d\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 Django \uc778\uc99d \uc2dc\uc2a4\ud15c\uc758 REST \uad6c\ud604\uc744 \uc0ac\uc6a9\ud560 \uc900\ube44\uac00\ub418\uc5c8\uc2b5\ub2c8\ub2e4. django-rest-auth Django-rest-auth \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \ub4f1\ub85d, \uc778\uc99d (\uc18c\uc15c \ubbf8\ub514\uc5b4 \uc778\uc99d \ud3ec\ud568), \ube44\ubc00\ubc88\ud638 \uc7ac\uc124\uc815, \uc0ac\uc6a9\uc790 \uc138\ubd80 \uc815\ubcf4 \uac80\uc0c9 \ubc0f \uc5c5\ub370\uc774\ud2b8 \ub4f1\uc744 \uc704\ud55c \uc77c\ub828\uc758 REST API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0ac\uc6a9\ud558\uba74 AngularJS, iOS, Android \ubc0f \uae30\ud0c0 \uc0ac\uc6a9\uc790\ub294 \uc0ac\uc6a9\uc790 \uad00\ub9ac\ub97c \uc704\ud574 REST API\ub97c \ud1b5\ud574 \ub3c5\ub9bd\uc801\uc73c\ub85c Django \ubc31\uc5d4\ub4dc \uc0ac\uc774\ud2b8\uc640 \ud1b5\uc2e0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. django-rest-framework-social-oauth2 Django-rest-framework-social-oauth2 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \uc18c\uc15c \ud50c\ub7ec\uadf8\uc778 (facebook, twitter, google \ub4f1)\uc744 \uc778\uc99d \uc2dc\uc2a4\ud15c\uc5d0 \uc27d\uac8c \ud1b5\ud569\ud558\uace0 \uc26c\uc6b4 oauth2 \uc124\uc815\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uba74 \uc678\ubd80 \ud1a0\ud070 (\uc608 : \ud398\uc774\uc2a4 \ubd81 \uc561\uc138\uc2a4 \ud1a0\ud070)\uc744 \uae30\ubc18\uc73c\ub85c \uc0ac\uc6a9\uc790\ub97c \uc778\uc99d\ud558\uace0 \uc774\ub7ec\ud55c \ud1a0\ud070\uc744 \"in-house\" oauth2 \ud1a0\ud070\uc73c\ub85c \ubcc0\ud658\ud558\uace0 oauth2 \ud1a0\ud070\uc744 \uc0ac\uc6a9 \ubc0f \uc0dd\uc131\ud558\uc5ec \uc0ac\uc6a9\uc790\ub97c \uc778\uc99d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. django-rest-knox Django-rest-knox \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \ub2e8\uc77c \ud398\uc774\uc9c0 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \ubc0f \ubaa8\ubc14\uc77c \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc5fc\ub450\uc5d0 \ub450\uace0 \uae30\ubcf8 TokenAuthentication \uccb4\uacc4\ubcf4\ub2e4 \uc548\uc804\ud558\uace0 \ud655\uc7a5 \uac00\ub2a5\ud55c \ubc29\uc2dd\uc73c\ub85c \ud1a0\ud070 \uae30\ubc18 \uc778\uc99d\uc744 \ucc98\ub9ac \ud560 \uc218 \uc788\ub294 \ubaa8\ub378\uacfc \ubdf0\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8 \ubcc4 \ud1a0\ud070 \ubc0f \uc77c\ubd80 \ub2e4\ub978 \uc778\uc99d (\uc77c\ubc18\uc801\uc73c\ub85c \uae30\ubcf8 \uc778\uc99d)\uc774 \uc81c\uacf5\ub41c \uacbd\uc6b0 \uc0dd\uc131\ud558\ub294 View, \ud1a0\ud070\uc744 \uc0ad\uc81c (\uc11c\ubc84 \uac15\uc81c \ub85c\uadf8 \uc544\uc6c3 \uc81c\uacf5) \ubc0f \ubaa8\ub4e0 \ud1a0\ud070 \uc0ad\uc81c(\uc0ac\uc6a9\uc790\uac00 \ub85c\uadf8\uc778 \ud55c \ubaa8\ub4e0 \ud074\ub77c\uc774\uc5b8\ud2b8 \ub85c\uadf8 \uc544\uc6c3) view\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.). \ucd94\uac00 \ub0b4\uc6a9 (Token \ub4f1\ub85d \ubc0f \uc0ad\uc81c) member_myuser authtoken_token postman \uc5d0\uc11c \ud1a0\ud070 \uc0dd\uc131 token \uc758 user_id \uac12\uc740 member_myuser \uc758 id \uac12\uc73c\ub85c \ub4f1\ub85d\ub429\ub2c8\ub2e4. postman\uc5d0\uc11c \uc0dd\uc131\ud55c test5(username)\uc758 myuser \ud14c\uc774\ube14\uc5d0\uc11c\uc758 id \uac12\uc740 8\uc774\uace0, \ud574\ub2f9 \ud1a0\ud070\uac12\uc73c\ub85c token \ud14c\uc774\ube14\uc744 \ube44\uad50\ud574\ubcf4\uba74 user_id \uac00 \uac19\uc740 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. token \uc0ad\uc81c\ub294 \ud574\ub2f9 \ud1a0\ud070\uac12\uc758 \uacc4\uc815\uc73c\ub85c \ub85c\uadf8\uc778\ud574\uc57c \uc0ad\uc81c\uac00 \uac00\ub2a5\ud569\ub2c8\ub2e4. request.user \ub97c \ud504\ub9b0\ud2b8\ud574\ubcf4\uba74 username \uac12\uc774 \uc870\ud68c\ub429\ub2c8\ub2e4.","title":"Authentication"},{"location":"Authentication/#django-rest-framework-authentication","text":"\"Auth needs to be pluggable.\" \"\uc778\uc99d\uc740 \ud50c\ub7ec\uadf8\uac00 \uac00\ub2a5\ud574\uc57c \ud569\ub2c8\ub2e4.\" \u2014 Jacob Kaplan-Moss, \"REST worst practices\"","title":"Django REST Framework - Authentication"},{"location":"Authentication/#authentication","text":"Authentication\uc740 \uc218\uc2e0 \uc694\uccad\uc744 \uc694\uccad\ud55c \uc0ac\uc6a9\uc790 \ub610\ub294 \uc11c\uba85 \ub41c \ud1a0\ud070\uacfc \uac19\uc740 \uc2dd\ubcc4 \uc790\uaca9 \uc99d\uba85 \uc138\ud2b8\ub97c \uc5f0\uacb0\ud558\ub294 \uba54\ucee4\ub2c8\uc998\uc785\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \uad8c\ud55c \uacfc \uc815\ucc45 \uc740 \uc774\ub7ec\ud55c \uc790\uaca9 \uc99d\uba85\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc694\uccad\uc744 \ud5c8\uc6a9\ud574\uc57c \ud558\ub294\uc9c0 \uacb0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc5ec\ub7ec\uac00\uc9c0 \uc778\uc99d \uc2a4\ud0a4\ub9c8\ub97c \uc989\uc2dc \uc81c\uacf5\ud558\uba70 custom \uc2a4\ud0a4\ub9c8\ub97c \uad6c\ud604\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Authentication\uc740 \ud56d\uc0c1 View\uc758 \ub9e8 \ucc98\uc74c, \uad8c\ud55c \ubc0f \uc81c\ud55c \uac80\uc0ac\uac00 \uc218\ud589\ub418\uae30 \uc804\uc5d0 \uadf8\ub9ac\uace0 \ub2e4\ub978 \ucf54\ub4dc\uac00 \uc9c4\ud589\ub418\uae30 \uc804\uc5d0 \uc2e4\ud589\ub429\ub2c8\ub2e4. request.user \uc18d\uc131\uc740 \uc77c\ubc18\uc801\uc73c\ub85c contrib.auth \ud328\ud0a4\uc9c0\uc758 User \ud074\ub798\uc2a4 \uc778\uc2a4\ud134\uc2a4\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. request.auth \ub4f1\ub85d\uc815\ubcf4\ub294 \ucd94\uac00\uc778\uc99d \uc815\ubcf4\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, request\uac00 \uc11c\uba85 \ub41c \uc778\uc99d \ud1a0\ud070\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note : \ub4e4\uc5b4\uc624\ub294 request\ub97c \ud5c8\uc6a9\ud558\uac70\ub098 \uac70\ubd80\ud558\uc9c0 \uc54a\ub294 \uc778\uc99d\uc740 request\uac00 \uc218\ud589\ub41c \uc790\uaca9 \uc99d\uba85\uc744 \uc2dd\ubcc4\ud558\uae30\ub9cc\ud558\uba74 \ub41c\ub2e4\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. API\uc5d0 \ub300\ud55c \uc0ac\uc6a9\uad8c\ud55c\uc815\ucc45\uc744 \uc124\uc815\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 permissions documentation \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"Authentication(\uc785\uc99d)"},{"location":"Authentication/#how-authentication-is-determined","text":"\uc778\uc99d \uccb4\uacc4\ub294 \ud56d\uc0c1 \ud074\ub798\uc2a4 list\uc73c\ub85c \uc815\uc758\ub429\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 list\uc758 \uac01 \ud074\ub798\uc2a4\uc5d0 \ub300\ud574 \uc778\uc99d\uc744 \uc2dc\ub3c4\ud558\uace0 \uc131\uacf5\uc801\uc73c\ub85c \uc778\uc99d\ud55c \uccab \ubc88\uc9f8 \ud074\ub798\uc2a4\uc758 \ubc18\ud658 \uac12\uc744 \uc0ac\uc6a9\ud558\uc5ec request.user \ubc0f request.auth \ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \ud074\ub798\uc2a4\uac00 \uc778\uc99d\ub418\uc9c0 \uc54a\uc73c\uba74 request.user \ub294 django.contrib.auth.AnonymousUser \uc758 \uc778\uc2a4\ud134\uc2a4\ub85c \uc124\uc815\ub418\uace0 request.auth \ub294 None \uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc5d0 \ub300\ud55c request.user , request.auth \uc758 \uac12\uc740 UNAUTHENTICATED_USER , UNAUTHENTICATED_TOKEN \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"How authentication is determined"},{"location":"Authentication/#setting-the-authentication-scheme","text":"DEFAULT_AUTHENTICATION_CLASSES \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uae30\ubcf8 \uc778\uc99d \uad6c\uc131\ud45c\ub97c \uc804\uc5ed\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74. REST_FRAMEWORK = { 'DEFAULT_AUTHENTICATION_CLASSES': ( 'rest_framework.authentication.BasicAuthentication', 'rest_framework.authentication.SessionAuthentication', ) } \ub610\ud55c APIVIew CBV\ub97c \uc0ac\uc6a9\ud558\uc5ec view \ub2e8\uc704 \ub610\ub294 view\ub2e8\uc704\ub85c \uc778\uc99d \uccb4\uacc4\ub97c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.authentication import SessionAuthentication, BasicAuthentication from rest_framework.permissions import IsAuthenticated from rest_framework.response import Response from rest_framework.views import APIView class ExampleView(APIView): authentication_classes = (SessionAuthentication, BasicAuthentication) permission_classes = (IsAuthenticated,) def get(self, request, format=None): content = { 'user': unicode(request.user), # `django.contrib.auth.User` instance. 'auth': unicode(request.auth), # None } return Response(content) \ub610\ub294 FBV\uc640 \ud568\uaed8 @api_view \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 @api_view(['GET']) @authentication_classes((SessionAuthentication, BasicAuthentication)) @permission_classes((IsAuthenticated,)) def example_view(request, format=None): content = { 'user': unicode(request.user), # `django.contrib.auth.User` instance. 'auth': unicode(request.auth), # None } return Response(content)","title":"Setting the authentication scheme"},{"location":"Authentication/#unauthorized-and-forbidden-responses","text":"\uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc5d0 \uad8c\ud55c\uc774 \uac70\ubd80\ub418\uba74 \uc801\uc808\ud55c \ub450 \uac00\uc9c0 \uc624\ub958 \ucf54\ub4dc\uac00 \uc788\uc2b5\ub2c8\ub2e4. HTTP 401 Unauthorized HTTP 403 Permission Denied HTTP 401 \uc751\ub2f5\uc5d0\ub294 \ud56d\uc0c1 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc778\uc99d \ubc29\ubc95\uc744 \uc9c0\uc2dc\ud558\ub294 WWW-Authenticate \ud5e4\ub354\uac00 \ud3ec\ud568\ub418\uc5b4\uc57c\ud569\ub2c8\ub2e4. HTTP 403 \uc751\ub2f5\uc5d0\ub294 WWW-Authenticate \ud5e4\ub354\uac00 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\ub418\ub294 response\uc758 \uc885\ub958\ub294 \uc778\uc99d \uccb4\uacc4\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. \uc5ec\ub7ec \uc778\uc99d \uc2a4\ud0a4\ub9c8\uac00 \uc0ac\uc6a9 \uc911\uc77c \uc218 \uc788\uc9c0\ub9cc, response\uc758 \ud0c0\uc785\uc744 \uacb0\uc815\ud558\ub294\ub370 \ud558\ub098\uc758 \uc2a4\ud0a4\ub9c8\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. view\uc5d0 \uc124\uc815\ub41c \uccab\ubc88\uc9f8 authentication \ud074\ub798\uc2a4\ub294 response \ud0c0\uc785\uc744 \uacb0\uc815 \ud560 \ub54c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. request\uac00 \uc131\uacf5\uc801\uc73c\ub85c \uc778\uc99d \ub420 \uc218 \uc788\uc9c0\ub9cc, \uc5ec\uc804\ud788 request\ub97c \uc218\ud589\ud560 \uad8c\ud55c\uc774 \uac70\ubd80 \ub41c \uacbd\uc6b0, \uc778\uc99d \uc2a4\ud0a4\ub9c8\uc5d0 \uad00\uacc4\uc5c6\uc774 403 Permission Denied \uc751\ub2f5\uc774 \ud56d\uc0c1 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.","title":"Unauthorized and Forbidden responses(\ubb34\ub2e8 \ubc0f \uae08\uc9c0\ub41c \uc751\ub2f5)"},{"location":"Authentication/#apache-mod_wsgi-specific-configuration","text":"mod_wsgi\ub97c \uc0ac\uc6a9\ud558\uc5ec Apache\uc5d0 \ubc30\ud3ec\ud55c\ub2e4\uba74, \uad8c\ud55c \ubd80\uc5ec \ud5e4\ub354\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc751\uc6a9\ud504\ub85c\uadf8\ub7a8 \uc218\uc900\uc774 \uc544\ub2cc Apache\uc5d0\uc11c \uc778\uc99d\uc744 \ucc98\ub9ac\ud55c\ub2e4\uace0 \uac00\uc815\ud558\ubbc0\ub85c, \uae30\ubcf8\uc801\uc73c\ub85c WSGI \uc751\uc6a9\ud504\ub85c\uadf8\ub7a8\uc5d0 \uc804\ub2ec\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Apache\uc5d0 \ubc30\ud3ec\ud558\uace0 \ube44 \uc138\uc158 \uae30\ubc18 \uc778\uc99d\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 mod_wsgi \ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uad6c\uc131\ud558\uc5ec \ud544\uc694\ud55c \ud5e4\ub354\ub97c \uc751\uc6a9\ud504\ub85c\uadf8\ub7a8\uc5d0 \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 \uc801\uc808\ud55c \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c WSGIPassAuthorization \uc9c0\uc2dc\ubb38\uc744 \uc9c0\uc815\ud558\uace0 On \uc73c\ub85c \uc124\uc815\ud558\uc5ec \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. # \uc774\uac83\uc740 \uc11c\ubc84 \uc124\uc815, \uac00\uc0c1 \ud638\uc2a4\ud2b8, \ub514\ub809\ud1a0\ub9ac \ub610\ub294 .htaccess \uc911 \ud558\ub098\uc5d0 \ub4e4\uc5b4\uac08 \uc218 \uc788\uc2b5\ub2c8\ub2e4. WSGIPassAuthorization On","title":"Apache mod_wsgi specific configuration"},{"location":"Authentication/#api-reference","text":"","title":"API Reference"},{"location":"Authentication/#basicauthentication","text":"\uc774 \uc778\uc99d \uccb4\uacc4\ub294 \uc0ac\uc6a9\uc790\uc758 \uc0ac\uc6a9\uc790 \uc774\ub984\uacfc \uc554\ud638\uc5d0 \ub300\ud574 \uc11c\uba85 \ub41c HTTP basic Authentication \uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8 \uc778\uc99d\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \ud14c\uc2a4\ud2b8\uc5d0\ub9cc \uc801\ud569\ud569\ub2c8\ub2e4. \uc131\uacf5\uc801\uc73c\ub85c \uc778\uc99d\ub418\uba74 BasicAuthencation \uc740 \ub2e4\uc74c \uc790\uaca9 \uc99d\uba85\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. request.user \ub294 Django User \uc778\uc2a4\ud134\uc2a4\uac00 \ub420 \uac83\uc785\ub2c8\ub2e4. request.auth \ub294 None \uc785\ub2c8\ub2e4. \uad8c\ud55c\uc774 \uac70\ubd80 \ub41c \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc751\ub2f5\uc740 \uc801\uc808\ud55c WWW-Authenticate \ud5e4\ub354\uc640 \ud568\uaed8 HTTP 401 Unauthorized \uc6c5\ub2f5\uc774 \ub429\ub2c8\ub2e4. WWW-Authenticate: Basic realm=\"api\" Note : \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c BasicAuthentication \uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 https \ub97c \ud1b5\ud574\uc11c\ub9cc API\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub610\ud55c API \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ub85c\uadf8\uc778 \ud560\ub54c \ud56d\uc0c1 \uc0ac\uc6a9\uc790 \uc774\ub984\uacfc \ube44\ubc00\ubc88\ud638\ub97c \ub2e4\uc2dc \uc694\uccad\ud558\uace0 \ud574\ub2f9 \uc138\ubd80\uc815\ubcf4\ub97c \uc601\uad6c \uc800\uc7a5\uc18c\uc5d0 \uc800\uc7a5\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud574\uc57c\ud569\ub2c8\ub2e4.","title":"BasicAuthentication"},{"location":"Authentication/#tokenauthentication","text":"\uc774 \uc778\uc99d\uccb4\uacc4\ub294 \uac04\ub2e8\ud55c \ud1a0\ud070 \uae30\ubc18 HTTP\uc778\uc99d\uccb4\uacc4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ud1a0\ud070 \uc778\uc99d\uc740 \ub124\uc774\ud2f0\ube0c \ub370\uc2a4\ud06c\ud1b1 \ubc0f \ubaa8\ubc14\uc77c \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uac19\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8 - \uc11c\ubc84 \uc124\uc815\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. TokenAuthentication \uc2a4\ud0a4\ub9c8\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 TokenAuthentication \uc744 \ud3ec\ud568\ud558\ub3c4\ub85d authentication\ud074\ub798\uc2a4\ub97c \uad6c\uc131 \ud558\uace0 INSTALLED_APPS \uc124\uc815\uc5d0 rest_framework.authtoken \ub97c \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. INSTALLED_APPS = ( ... 'rest_framework.authtoken' ) Note : \uc124\uc815\uc744 \ubcc0\uacbd\ud55c \ud6c4\uc5d0 manage.py migrate \ub97c \uc2e4\ud589\ud574\uc57c\ud569\ub2c8\ub2e4. rest_framework.authtoken \uc571\uc740 Django \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub610\ud55c \uc0ac\uc6a9\uc790\ub97c \uc704\ud55c \ud1a0\ud070\uc744 \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4. from rest_framework.authtoken.models import Token token = Token.objects.create(user=...) print token.key \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc778\uc99d\ud558\ub824\uba74 \ud1a0\ud070 \ud0a4\uac00 Authorization HTTP \ud5e4\ub354\uc5d0 \ud3ec\ud568\ub418\uc5b4\uc57c\ud569\ub2c8\ub2e4. \ud0a4\uc5d0\ub294 \ub450 \ubb38\uc790\uc5f4\uc744 \uacf5\ubc31\uc73c\ub85c \uad6c\ubd84\ud558\uc5ec \ubb38\uc790\uc5f4 \ub9ac\ud130\ub7f4 \"Token\"\uc744 prefix\ub85c \uc0ac\uc6a9\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: Authorization: Token 9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b Note : Bearer \uc640 \uac19\uc740 \ud5e4\ub354\uc5d0 \ub2e4\ub978 \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e8\uc21c\ud788 TokenAuthentication \uc744 \uc11c\ube0c \ud074\ub798\uc2a4\ud654\ud558\uace0 keyword \ud074\ub798\uc2a4 \ubcc0\uc218\ub97c \uc124\uc815\ud558\uc2ed\uc2dc\uc624. \uc131\uacf5\uc801\uc73c\ub85c \uc778\uc99d\ub418\uba74 TokenAuthentication \uc740 \ub2e4\uc74c \uc790\uaca9 \uc99d\uba85\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. request.user \ub294 Django User \uc778\uc2a4\ud134\uc2a4\uac00 \ub420 \uac83\uc785\ub2c8\ub2e4. request.auth \ub294 rest_framework.authtoken.models.Token \uc778\uc2a4\ud134\uc2a4\uac00 \ub429\ub2c8\ub2e4. \uad8c\ud55c\uc774 \uac70\ubd80 \ub41c \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc751\ub2f5\uc740 \uc801\uc808\ud55c WWW-Authenticate \ud5e4\ub354\uc640 \ud568\uaed8 HTTP 401 Unauthorized \uc751\ub2f5\uc774 \ub429\ub2c8\ub2e4. \uc608: WWW-Authenticate: Token curl command line tool\uc740 \ud1a0\ud070\uc73c\ub85c \uc778\uc99d\ub41c API\ub97c \ud14c\uc2a4\ud2b8 \ud558\ub294\ub370 \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608: curl -X GET http://127.0.0.1:8000/api/example/ -H 'Authorization: Token 9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b' Note : \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c TokenAuthentication \uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 https \ub97c \ud1b5\ud574\uc11c\ub9cc API\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.","title":"TokenAuthentication"},{"location":"Authentication/#generating-tokens","text":"","title":"Generating Tokens"},{"location":"Authentication/#by-using-signals","text":"\ubaa8\ub4e0 \uc0ac\uc6a9\uc790\uac00 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc120 \ub41c \ud1a0\ud070\uc744 \uac16\uae30\ub97c \uc6d0\ud558\uba74 \uc0ac\uc6a9\uc790\uc758 post_save \uc2e0\ud638\ub97c \uac04\ub2e8\ud788 \uc7a1\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from django.conf import settings from django.db.models.signals import post_save from django.dispatch import receiver from rest_framework.authtoken.models import Token @receiver(post_save, sender=settings.AUTH_USER_MODEL) def create_auth_token(sender, instance=None, created=False, **kwargs): if created: Token.objects.create(user=instance) \uc774 \ucf54\ub4dc\ub294 snippet\uc774 \uc124\uce58\ub41c models.py \ubaa8\ub4c8\uc774\ub098 \uc2dc\uc791\uc2dc Django\uac00 \uac00\uc838\uc62c \ub2e4\ub978 \uc704\uce58\uc5d0 \ubc30\uce58\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ubbf8 \uc77c\ubd80 \uc0ac\uc6a9\uc790\ub97c \ub9cc\ub4e0 \uacbd\uc6b0 \ub2e4\uc74c\uacfc \uac19\uc774 \ubaa8\ub4e0 \uae30\uc874 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \ud1a0\ud070\uc744 \uc0dd\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from django.contrib.auth.models import User from rest_framework.authtoken.models import Token for user in User.objects.all(): Token.objects.get_or_create(user=user)","title":"By using signals"},{"location":"Authentication/#by-exposing-an-api-endpointapi","text":"TokenAuthentication \uc744 \uc0ac\uc6a9\ud560 \ub54c \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc0ac\uc6a9\uc790 \uc774\ub984\uacfc \uc554\ud638\uac00 \uc788\ub294 \ud1a0\ud070\uc744 \uc5bb\uc744 \uc218 \uc788\ub294 \uba54\ucee4\ub2c8\uc998\uc744 \uc81c\uacf5 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc774 \ub3d9\uc791\uc744 \uc81c\uacf5\ud558\ub294 built-in \ubdf0\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uadf8\uac83\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 URLconf\uc5d0 obtain_auth_token \ubdf0\ub97c \ucd94\uac00\ud558\uc138\uc694. from rest_framework.authtoken import views urlpatterns += [ url(r'^api-token-auth/', views.obtain_auth_token) ] \ud328\ud134\uc758 URL \ubd80\ubd84\uc740 \uc6d0\ud558\ub294\ub300\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. obtain_auth_token \ubdf0\ub294 \uc720\ud6a8\ud55c \uc0ac\uc6a9\uc790 \uc774\ub984 \ubc0f \uc554\ud638 \ud544\ub4dc\uac00 \uc591\uc2dd \ub370\uc774\ud130 \ub610\ub294 JSON\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubdf0\uc5d0 POST\ub418\uba74 JSON \uc751\ub2f5\uc744 \ub9ac\ud134\ud569\ub2c8\ub2e4. { 'token' : '9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b' } \uae30\ubcf8 obtain_auth_token \ubdf0\ub294 \uc124\uc815\uc5d0\uc11c \uae30\ubcf8 renderer \ubc0f parser \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \ub300\uc2e0 JSON \uc694\uccad \ubc0f \uc751\ub2f5\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. obtain_auth_token view\uc758 custom \ub41c \ubc84\uc804\uc774 \ud544\uc694\ud558\uba74 ObtainAuthToken view \ud074\ub798\uc2a4\ub97c \ub300\uccb4\ud558\uace0 URL conf\uc5d0 \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc138\uc694. \uae30\ubcf8\uc801\uc73c\ub85c obtain_auth_token view\uc5d0 \uc801\uc6a9\ub41c \uc0ac\uc6a9 \uad8c\ud55c\uc774\ub098 \uc81c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \uc81c\ud55c\uc744 \uc801\uc6a9\ud558\ub824\uba74 view\ud074\ub798\uc2a4\ub97c \uc7ac\uc815\uc758\ud558\uace0 throttle_classes \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec view\ud074\ub798\uc2a4\ub97c \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"By exposing an api endpoint(api \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ub178\ucd9c\uc2dc\ud0b4)"},{"location":"Authentication/#with-django-admin","text":"\uad00\ub9ac\uc790 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ud1b5\ud574 \uc218\ub3d9\uc73c\ub85c \ud1a0\ud070\uc744 \uc0dd\uc131 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ub300\uaddc\ubaa8 \uc0ac\uc6a9\uc790 \uae30\ubc18\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, user \ud544\ub4dc\ub97c raw_field \ub85c \uc120\uc5b8\ud558\uc5ec TokenAdmin \ud074\ub798\uc2a4\ub97c monkey \ud328\uce58\ud558\uc5ec \ud544\uc694\uc5d0 \ub9de\uac8c custom\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. your_app/admin.py : from rest_framework.authtoken.admin import TokenAdmin TokenAdmin.raw_id_fields = ('user',)","title":"With Django admin"},{"location":"Authentication/#sessionauthentication","text":"\uc774 \uc778\uc99d\ubc29\uc2dd\uc740 Django\uc758 \uae30\ubcf8 \uc138\uc158 \ubc31\uc5d4\ub4dc\ub97c \uc778\uc99d\uc5d0 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc138\uc158 \uc778\uc99d\uc740 \uc6f9 \uc0ac\uc774\ud2b8\ub878 \ub3d9\uc77c\ud55c \uc138\uc158 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 AJAX \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. \uc131\uacf5\uc801\uc73c\ub85c \uc778\uc99d\ub418\uba74 SessionAuthentication \uc740 \ub2e4\uc74c \uc790\uaca9 \uc99d\uba85\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. request.use r\ub294 Django User \uc778\uc2a4\ud134\uc2a4\uac00 \ub420 \uac83\uc785\ub2c8\ub2e4. request.auth \ub294 None \uc785\ub2c8\ub2e4. \uad8c\ud55c\uc774 \uac70\ubd80 \ub41c \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc751\ub2f5\uc740 HTTP 403 Forbidden \uc751\ub2f5\uc774 \ub429\ub2c8\ub2e4. SessionAuthentication\uacfc \ud568\uaed8 AJAX \uc2a4\ud0c0\uc77c API\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 PUT , PATCH , POST \ub610\ub294 DELETE \uc694\uccad\uacfc \uac19\uc740 \"\uc548\uc804\ud558\uc9c0 \uc54a\uc740\" HTTP \uba54\uc18c\ub4dc \ud638\ucd9c\uc5d0 \uc720\ud6a8\ud55c CSRF \ud1a0\ud070\uc744 \ud3ec\ud568\uc2dc\ucf1c\uc57c\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Django CSRF documentation \ucc38\uc870 Warning : \ub85c\uadf8\uc778 \ud398\uc774\uc9c0\ub97c \ub9cc\ub4e4 \ub54c \ud56d\uc0c1 Django\uc758 \ud45c\uc900 \ub85c\uadf8\uc778 view\ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uc774\ub807\uac8c \ud558\uba74 \ub85c\uadf8\uc778view\uac00 \uc62c\ubc14\ub974\uac8c \ubcf4\ud638\ub429\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\ub294 \ub3d9\uc77c\ud55c view\uc5d0 \ub300\ud574 session \ubc0f non-session \uae30\ubc18 \uc778\uc99d\uc744 \ubaa8\ub450 \uc9c0\uc6d0\ud574\uc57c\ud558\ubbc0\ub85c \ud45c\uc900 Django\uc640 \uc57d\uac04 \ub2e4\ub974\uac8c \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc989, \uc778\uc99d \ub41c \uc694\uccad\ub9cc CSRF \ud1a0\ud070\uc774 \ud544\uc694\ub85c \ud558\uba70 \uc775\uba85 \uc694\uccad\uc740 CSRF \ud1a0\ud070 \uc5c6\uc774 \uc804\uc1a1\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc740 \ud56d\uc0c1 CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc801\uc6a9\ub41c \ub85c\uadf8\uc778 View\uc5d0\ub294 \uc801\ud569\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"SessionAuthentication"},{"location":"Authentication/#custom-authentication","text":"\uc0ac\uc6a9\uc790 \uc815\uc758 \uc778\uc99d \uccb4\uacc4\ub97c \uad6c\ud604\ud558\ub824\uba74 BaseAuthentication \uc744 \uc11c\ube0c \ud074\ub798\uc2a4\ud654\ud558\uace0 .authenticate(self, request) \uba54\uc18c\ub4dc\ub97c \ub300\uccb4\ud558\uc2ed\uc2dc\uc624. \uc774 \uba54\uc18c\ub4dc\ub294 \uc778\uc99d\uc5d0 \uc131\uacf5\ud558\uba74 2-tuple(user, auth)\uc744 \ubc18\ud658\ud558\uace0, \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 None \uc744 \ubc18\ud658\ud590\uc57c \ud569\ub2c8\ub2e4. None \uc744 \ubc18\ud658\ud558\ub294 \ub300\uc2e0 \uc0c1\ud669\uc5d0 \ub530\ub77c .authenticate() \uba54\uc11c\ub4dc\uc5d0\uc11c AuthenticationFailed \uc608\uc678\ub97c \ubc1c\uc0dd \uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ucde8\ud574\uc57c \ud560 \uc811\uadfc \ubc29\uc2dd\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc778\uc99d\uc744 \uc2dc\ub3c4\ud558\uc9c0 \uc54a\uc73c\uba74 None \uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc911\uc778 \ub2e4\ub978 \uc778\uc99d \uccb4\uacc4\ub3c4 \uacc4\uc18d \uac80\uc0ac\ub429\ub2c8\ub2e4. \uc778\uc99d\uc744 \uc2dc\ub3c4\ud588\uc9c0\ub9cc \uc2e4\ud328\ud55c \uacbd\uc6b0 AuthenticationFailed \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b5\ub2c8\ub2e4. \uad8c\ud55c \ud655\uc778\uacfc \uad00\uacc4\uc5c6\uc774 \ub2e4\ub978 \uc778\uc99d \uc2a4\ud0a4\ub9c8\ub97c \ud655\uc778\ud558\uc9c0 \uc54a\uace0 \uc989\uc2dc \uc624\ub958 \uc751\ub2f5\uc774 \ubc18\ud658\ub429\ub2c8\ub2e4. \ub610\ud55c .authenticate_header(self, request) \uba54\uc18c\ub4dc\ub97c \ub300\uccb4 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad6c\ud604 \ub41c \uacbd\uc6b0 HTTP 401 Unauthorized \uc751\ub2f5\uc5d0\uc11c WWW-Authenticate \ud5e4\ub354\uc758 \uac12\uc73c\ub85c \uc0ac\uc6a9 \ub420 \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. .authenticate_header() \uba54\uc18c\ub4dc\uac00 \ub300\uccb4\ub418\uc9c0 \uc54a\uc73c\uba74, \uc778\uc99d \uc2a4\ud0a4\ub9c8\ub294 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc774 \uc561\uc138\uc2a4\ub97c \uac70\ubd80 \ud560 \ub54c HTTP 403 Forbidden \uc751\ub2f5\uc744 \ub9ac\ud134\ud569\ub2c8\ub2e4.","title":"Custom authentication"},{"location":"Authentication/#example","text":"\ub2e4\uc74c \uc608\uc81c\ub294 \ub4e4\uc5b4\uc624\ub294 \uc694\uccad\uc744 'X_USERNAME'\uc774\ub77c\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 request \ud5e4\ub354\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc774\ub984\uc73c\ub85c \uc9c0\uc815\ub41c \uc0ac\uc6a9\uc790\ub85c \uc778\uc99d\ud569\ub2c8\ub2e4. from django.contrib.auth.models import User from rest_framework import authentication from rest_framework import exceptions class ExampleAuthentication(authentication.BaseAuthentication): def authenticate(self, request): username = request.META.get('X_USERNAME') if not username: return None try: user = User.objects.get(username=username) except User.DoesNotExist: raise exceptions.AuthenticationFailed('No such user') return (user, None)","title":"Example"},{"location":"Authentication/#third-party-packages","text":"\ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"Third party packages"},{"location":"Authentication/#django-oauth-toolkit","text":"Django OAuth Toolkit \ud328\ud0a4\uc9c0\ub294 OAuth 2.0 \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\uba70 Python 2.7 \ubc0f Python 3.3 \uc774\uc0c1\uc5d0\uc11c \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc774 \ud328\ud0a4\uc9c0\ub294 Evonove \uc5d0\uc11c \uc720\uc9c0 \uad00\ub9ac\ud558\uba70 \uc6b0\uc218\ud55c OAuthLib \uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \ud328\ud0a4\uc9c0\ub294 \uc798 \ubb38\uc11c\ud654\ub418\uc5b4 \uc798 \uc9c0\uc6d0\ub418\uba70 \ud604\uc7ac OAuth 2.0 \uc9c0\uc6d0\uc744\uc704\ud55c \uad8c\uc7a5 \ud328\ud0a4\uc9c0 \uc785\ub2c8\ub2e4.","title":"Django OAuth Toolkit"},{"location":"Authentication/#_1","text":"pip\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uce58\ud569\ub2c8\ub2e4. pip install django-oauth-toolkit \ud328\ud0a4\uc9c0\ub97c INSTALLED_APPS \uc5d0 \ucd94\uac00\ud558\uace0 REST \ud504\ub808\uc784\uc6cc\ud06c \uc124\uc815\uc744 \uc218\uc815\ud558\uc2ed\uc2dc\uc624. INSTALLED_APPS = ( ... 'oauth2_provider', ) REST_FRAMEWORK = { 'DEFAULT_AUTHENTICATION_CLASSES': ( 'oauth2_provider.ext.rest_framework.OAuth2Authentication', ) } \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Django REST framework - Getting started \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"\uc124\uce58\uc640 \uad6c\uc131"},{"location":"Authentication/#django-rest-framework-oauth","text":"Django REST \ud504\ub808\uc784\uc6cc\ud06c OAuth \ud328\ud0a4\uc9c0\ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ub300\ud55c OAuth1 \ubc0f OAuth2 \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 \ud328\ud0a4\uc9c0\ub294 \uc774\uc804\uc5d0 REST \ud504\ub808\uc784 \uc6cc\ud06c\uc5d0 \uc9c1\uc811 \ud3ec\ud568\ub418\uc5c8\uc9c0\ub9cc \uc774\uc81c\ub294 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub85c \uc9c0\uc6d0 \ubc0f \uc720\uc9c0 \uad00\ub9ac\ub429\ub2c8\ub2e4.","title":"Django REST framework OAuth"},{"location":"Authentication/#_2","text":"pip\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud328\ud0a4\uc9c0\ub97c \uc124\uce58\ud569\ub2c8\ub2e4. pip install djangorestframework-oauth \uc124\uc815\uacfc \uc0ac\uc6a9\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Django REST \ud504\ub808\uc784\uc6cc\ud06c OAuth\ubb38\uc11c\uc5d0\uc11c \uc778\uc99d \uacfc \uad8c\ud55c \uc744 \ucc38\uc870\ud558\uc138\uc694.","title":"\uc124\uce58\uc640 \uad6c\uc131"},{"location":"Authentication/#digest-authentication","text":"HTTP \ub2e4\uc774\uc81c\uc2a4\ud2b8 \uc778\uc99d\uc740 HTTP \uae30\ubcf8 \uc778\uc99d\uc744 \ub300\uccb4\ud558\uae30 \uc704\ud55c \uac83\uc73c\ub85c \ub110\ub9ac \uad6c\ud604 \ub41c \uad6c\uc131\uc774\uba70 \uac04\ub2e8\ud55c \uc554\ud638\ud654 \ub41c \uc778\uc99d \uba54\ucee4\ub2c8\uc998\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Juan Riaza \ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 HTTP \ub2e4\uc774\uc81c\uc2a4\ud2b8 \uc778\uc99d \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\ub294 djangorestframework-digestauth \ud328\ud0a4\uc9c0\ub97c \uc720\uc9c0 \uad00\ub9ac\ud569\ub2c8\ub2e4.","title":"Digest Authentication"},{"location":"Authentication/#django-oauth2-consumer","text":"Rediker Software \uc758 Django OAuth2 Consumer \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 REST \ud504\ub808\uc784 \uc6cc\ud06c\uc5d0 \ub300\ud55c OAuth 2.0 \uc9c0\uc6d0 \uc744 \uc81c\uacf5\ud558\ub294 \ub610 \ub2e4\ub978 \ud328\ud0a4\uc9c0\uc785\ub2c8\ub2e4. \uc774 \ud328\ud0a4\uc9c0\uc5d0\ub294 \ud1a0\ud070\uc5d0 \ub300\ud55c \ud1a0\ud070 \ubc94\uc704 \uc9c0\uc815 \uad8c\ud55c\uc774 \ud3ec\ud568\ub418\uc5b4\uc788\uc5b4 API\uc5d0 \ub300\ud55c \uc138\ubc00\ud55c \uc561\uc138\uc2a4\uac00 \uac00\ub2a5\ud569\ub2c8\ub2e4.","title":"Django OAuth2 Consumer"},{"location":"Authentication/#json-web-token","text":"JSON Web Token\uc740 \ud1a0\ud070 \uae30\ubc18 \uc778\uc99d\uc5d0 \uc0ac\uc6a9\ud560 \uc218\uc788\ub294 \uc0c1\ub2f9\ud788 \uc0c8\ub85c\uc6b4 \ud45c\uc900\uc785\ub2c8\ub2e4. \ub0b4\uc7a5 \ub41c TokenAuthentication \uccb4\uacc4\uc640 \ub2ec\ub9ac JWT \uc778\uc99d\uc740 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud1a0\ud070\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. Blimp \ub294 JWT \uc778\uc99d \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud558\ub294 djangorestframework-jwt \ud328\ud0a4\uc9c0\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc0ac\uc6a9\uc790 \uc774\ub984\uacfc \ube44\ubc00\ubc88\ud638\uac00 \uc788\ub294 JWT\ub97c \uc5bb\uc744 \uc218 \uc788\ub294 \uba54\ucee4\ub2c8\uc998\uc744 \uc720\uc9c0\ud569\ub2c8\ub2e4.","title":"JSON Web Token"},{"location":"Authentication/#hawk-http-authentication","text":"HawkREST \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 Mohawk \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uae30\ubc18\uc73c\ub85c Hawk \uc5d0\uc11c \uc11c\uba85 \ud55c \uc694\uccad \ubc0f \uc751\ub2f5\uc744 API\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d\ud569\ub2c8\ub2e4. Hawk \uc740 \uacf5\uc720 \ud0a4\ub85c \uc11c\uba85 \ub41c \uba54\uc2dc\uc9c0\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub450 \ub2f9\uc0ac\uc790\uac00 \uc11c\ub85c \uc548\uc804\ud558\uac8c \ud1b5\uc2e0 \ud560 \uc218\uc788\uac8c\ud569\ub2c8\ub2e4. HTTP MAC \uc561\uc138\uc2a4 \uc778\uc99d ( OAuth 1.0 \uc758 \uc77c\ubd80\ub97c \uae30\ubc18\uc73c\ub85c \ud568)\uc744 \uae30\ubc18\uc73c\ub85c\ud569\ub2c8\ub2e4.","title":"Hawk HTTP Authentication"},{"location":"Authentication/#http-signature","text":"HTTP \uc11c\uba85 (\ud604\uc7ac IETF \ucd08\uc548 )\uc740 HTTP \uba54\uc2dc\uc9c0\uc5d0 \ub300\ud55c \uc6d0\ubcf8 \uc778\uc99d \ubc0f \uba54\uc2dc\uc9c0 \ubb34\uacb0\uc131\uc744 \ub2ec\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub9ce\uc740 \uc11c\ube44\uc2a4\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 Amazon\uc758 HTTP \uc11c\uba85 \uccb4\uacc4 \uc640 \uc720\uc0ac\ud558\uac8c \uc0c1\ud0dc \ube44 \uc800\uc7a5 \uc694\uccad \ubcc4 \uc778\uc99d\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. Elvio Toccalino \ub294 \uc0ac\uc6a9\ud558\uae30 \uc26c\uc6b4 HTTP \uc11c\uba85 \uc778\uc99d \uba54\ucee4\ub2c8\uc998\uc744 \uc81c\uacf5\ud558\ub294 djangorestframework-httpsignature \ud328\ud0a4\uc9c0\ub97c \uc720\uc9c0 \uad00\ub9ac\ud569\ub2c8\ub2e4.","title":"HTTP Signature"},{"location":"Authentication/#djoser","text":"Djoser \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \ub4f1\ub85d, \ub85c\uadf8\uc778, \ub85c\uadf8 \uc544\uc6c3, \ube44\ubc00\ubc88\ud638 \uc7ac\uc124\uc815 \ubc0f \uacc4\uc815 \ud65c\uc131\ud654\uc640 \uac19\uc740 \uae30\ubcf8 \uc791\uc5c5\uc744 \ucc98\ub9ac\ud558\uae30 \uc704\ud55c \uc77c\ub828\uc758 \ubcf4\uae30\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ud328\ud0a4\uc9c0\ub294 custom \uc0ac\uc6a9\uc790 \ubaa8\ub378\uacfc \uc791\ub3d9\ud558\uba70 \ud1a0\ud070 \uae30\ubc18 \uc778\uc99d\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 Django \uc778\uc99d \uc2dc\uc2a4\ud15c\uc758 REST \uad6c\ud604\uc744 \uc0ac\uc6a9\ud560 \uc900\ube44\uac00\ub418\uc5c8\uc2b5\ub2c8\ub2e4.","title":"Djoser"},{"location":"Authentication/#django-rest-auth","text":"Django-rest-auth \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \ub4f1\ub85d, \uc778\uc99d (\uc18c\uc15c \ubbf8\ub514\uc5b4 \uc778\uc99d \ud3ec\ud568), \ube44\ubc00\ubc88\ud638 \uc7ac\uc124\uc815, \uc0ac\uc6a9\uc790 \uc138\ubd80 \uc815\ubcf4 \uac80\uc0c9 \ubc0f \uc5c5\ub370\uc774\ud2b8 \ub4f1\uc744 \uc704\ud55c \uc77c\ub828\uc758 REST API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0ac\uc6a9\ud558\uba74 AngularJS, iOS, Android \ubc0f \uae30\ud0c0 \uc0ac\uc6a9\uc790\ub294 \uc0ac\uc6a9\uc790 \uad00\ub9ac\ub97c \uc704\ud574 REST API\ub97c \ud1b5\ud574 \ub3c5\ub9bd\uc801\uc73c\ub85c Django \ubc31\uc5d4\ub4dc \uc0ac\uc774\ud2b8\uc640 \ud1b5\uc2e0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"django-rest-auth"},{"location":"Authentication/#django-rest-framework-social-oauth2","text":"Django-rest-framework-social-oauth2 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \uc18c\uc15c \ud50c\ub7ec\uadf8\uc778 (facebook, twitter, google \ub4f1)\uc744 \uc778\uc99d \uc2dc\uc2a4\ud15c\uc5d0 \uc27d\uac8c \ud1b5\ud569\ud558\uace0 \uc26c\uc6b4 oauth2 \uc124\uc815\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uba74 \uc678\ubd80 \ud1a0\ud070 (\uc608 : \ud398\uc774\uc2a4 \ubd81 \uc561\uc138\uc2a4 \ud1a0\ud070)\uc744 \uae30\ubc18\uc73c\ub85c \uc0ac\uc6a9\uc790\ub97c \uc778\uc99d\ud558\uace0 \uc774\ub7ec\ud55c \ud1a0\ud070\uc744 \"in-house\" oauth2 \ud1a0\ud070\uc73c\ub85c \ubcc0\ud658\ud558\uace0 oauth2 \ud1a0\ud070\uc744 \uc0ac\uc6a9 \ubc0f \uc0dd\uc131\ud558\uc5ec \uc0ac\uc6a9\uc790\ub97c \uc778\uc99d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"django-rest-framework-social-oauth2"},{"location":"Authentication/#django-rest-knox","text":"Django-rest-knox \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \ub2e8\uc77c \ud398\uc774\uc9c0 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \ubc0f \ubaa8\ubc14\uc77c \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc5fc\ub450\uc5d0 \ub450\uace0 \uae30\ubcf8 TokenAuthentication \uccb4\uacc4\ubcf4\ub2e4 \uc548\uc804\ud558\uace0 \ud655\uc7a5 \uac00\ub2a5\ud55c \ubc29\uc2dd\uc73c\ub85c \ud1a0\ud070 \uae30\ubc18 \uc778\uc99d\uc744 \ucc98\ub9ac \ud560 \uc218 \uc788\ub294 \ubaa8\ub378\uacfc \ubdf0\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8 \ubcc4 \ud1a0\ud070 \ubc0f \uc77c\ubd80 \ub2e4\ub978 \uc778\uc99d (\uc77c\ubc18\uc801\uc73c\ub85c \uae30\ubcf8 \uc778\uc99d)\uc774 \uc81c\uacf5\ub41c \uacbd\uc6b0 \uc0dd\uc131\ud558\ub294 View, \ud1a0\ud070\uc744 \uc0ad\uc81c (\uc11c\ubc84 \uac15\uc81c \ub85c\uadf8 \uc544\uc6c3 \uc81c\uacf5) \ubc0f \ubaa8\ub4e0 \ud1a0\ud070 \uc0ad\uc81c(\uc0ac\uc6a9\uc790\uac00 \ub85c\uadf8\uc778 \ud55c \ubaa8\ub4e0 \ud074\ub77c\uc774\uc5b8\ud2b8 \ub85c\uadf8 \uc544\uc6c3) view\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.).","title":"django-rest-knox"},{"location":"Authentication/#token","text":"member_myuser authtoken_token postman \uc5d0\uc11c \ud1a0\ud070 \uc0dd\uc131 token \uc758 user_id \uac12\uc740 member_myuser \uc758 id \uac12\uc73c\ub85c \ub4f1\ub85d\ub429\ub2c8\ub2e4. postman\uc5d0\uc11c \uc0dd\uc131\ud55c test5(username)\uc758 myuser \ud14c\uc774\ube14\uc5d0\uc11c\uc758 id \uac12\uc740 8\uc774\uace0, \ud574\ub2f9 \ud1a0\ud070\uac12\uc73c\ub85c token \ud14c\uc774\ube14\uc744 \ube44\uad50\ud574\ubcf4\uba74 user_id \uac00 \uac19\uc740 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. token \uc0ad\uc81c\ub294 \ud574\ub2f9 \ud1a0\ud070\uac12\uc758 \uacc4\uc815\uc73c\ub85c \ub85c\uadf8\uc778\ud574\uc57c \uc0ad\uc81c\uac00 \uac00\ub2a5\ud569\ub2c8\ub2e4. request.user \ub97c \ud504\ub9b0\ud2b8\ud574\ubcf4\uba74 username \uac12\uc774 \uc870\ud68c\ub429\ub2c8\ub2e4.","title":"\ucd94\uac00 \ub0b4\uc6a9 (Token \ub4f1\ub85d \ubc0f \uc0ad\uc81c)"},{"location":"Content_negotiation/","text":"Django REST Framework - Content negotiation \"HTTP has provisions for several mechanisms for \"content negotiation\" - the proce\ubc18s of selecting the best representation for a given response when there are multiple representations available.\" \"HTTP\ub294 \"\ub0b4\uc6a9 \ud611\uc0c1 (content negotiation)\"\uc5d0 \ub300\ud55c \uba87 \uac00\uc9c0 \uba54\ucee4\ub2c8\uc998\uc5d0 \ub300\ud55c \uaddc\uc815\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub294 \uc5ec\ub7ec \ud45c\ud604\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uacbd\uc6b0 \uc8fc\uc5b4\uc9c4 \uc751\ub2f5\uc5d0 \ub300\ud55c \ucd5c\uc0c1\uc758 \ud45c\ud604\uc744 \uc120\ud0dd\ud558\ub294 \ud504\ub85c\uc138\uc2a4\uc785\ub2c8\ub2e4.\" \u2014 RFC 2616, Fielding et al. Content negotiation content negotiation\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8 \ub610\ub294 \uc11c\ubc84 \ud658\uacbd \uc124\uc815\uc5d0 \ub530\ub77c \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c \ub9ac\ud134\ud560 \uc218 \uc788\ub294 \uc5ec\ub7ec \ud45c\ud604 \uc911 \ud558\ub098\ub97c \uc120\ud0dd\ud558\ub294 \ud504\ub85c\uc138\uc2a4\uc785\ub2c8\ub2e4. Determining the accepted renderer REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uac04\ub2e8\ud55c \uc2a4\ud0c0\uc77c\uc758 content negotiation\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc0ac\uc6a9 \uac00\ub2a5\ud55c renderer. \uac01 \ub80c\ub354\ub7ec\uc758 \uc6b0\uc120 \uc21c\uc704 \ubc0f \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 Accept: \ud5e4\ub354\ub97c \uae30\ubc18\uc73c\ub85c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ubc18\ud658\ud574\uc57c\ud558\ub294 \ubbf8\ub514\uc5b4 \uc720\ud615\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\ub418\ub294 \uc2a4\ud0c0\uc77c\uc740 \ubd80\ubd84\uc801\uc73c\ub85c \ud074\ub77c\uc774\uc5b8\ud2b8 / \uc11c\ubc84 \uc911\uc2ec\uc801\uc785\ub2c8\ub2e4. \ub354 \uad6c\uccb4\uc801\uc778 \ubbf8\ub514\uc5b4 \uc720\ud615\uc740 \ub35c \uad6c\uccb4\uc801\uc778 \ubbf8\ub514\uc5b4 \uc720\ud615\ubcf4\ub2e4 \uc6b0\uc120\ud569\ub2c8\ub2e4. \ubcf5\uc218\uc758 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc774 \uac19\uc740 \ud2b9\uc774\uc131\uc744 \uac00\uc9c0\ub294 \uacbd\uc6b0, \uc9c0\uc815\ub41c \ubdf0\uc5d0 \ub300\ud574\uc11c \uc124\uc815\ub41c \ub80c\ub354\ub7ec\uc758 \uc21c\uc11c\uc5d0 \ub530\ub77c \uc6b0\uc120\uad8c\uc774 \uc8fc\uc5b4\uc9d1\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c Accept \ud5e4\ub354\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. application/json; indent=4, application/json, application/yaml, text/html, */* \uac01 \ubbf8\ub514\uc5b4 \uc720\ud615\uc758 \uc6b0\uc120 \uc21c\uc704\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. application/json; indent=4 application/json , application/yaml and text/html */* \uc694\uccad \ub41c \ubdf0\uac00 YAML \uacfc HTML \uc6a9 \ub80c\ub354\ub7ec\ub85c\ub9cc \uad6c\uc131\ub41c \uacbd\uc6b0 REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 renderer_classes list \ub610\ub294 DEFAULT_RENDERER_CLASSES \uc124\uc815\uc5d0\uc11c \uba3c\uc800 \ub098\uc5f4\ub41c \ub80c\ub354\ub7ec\ub97c \uc120\ud0dd\ud569\ub2c8\ub2e4. HTTP Accept \ud5e4\ub354\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 RFC 2616 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. Note : \ud658\uacbd \uc124\uc815\uc5d0\uc11c REST \ud504\ub808\uc784\uc6cc\ud06c\uac00 \"q\" \uac12\uc744 \uace0\ub824\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \"q\" \uac12\uc758 \uc0ac\uc6a9\uc740 \uce90\uc2f1\uc5d0 \ubd80\uc815\uc801\uc778 \uc601\ud5a5\uc744 \uc8fc\uba70 \uc800\uc790\uc758 \uc758\uacac\uc73c\ub85c\ub294 content negotiation\uc5d0 \ubd88\ud544\uc694\ud558\uace0 \ubcf5\uc7a1\ud574\uc9c0\ub294 \uc811\uadfc\ubc29\uc2dd\uc785\ub2c8\ub2e4. \uc774\ub294 HTTP \uc0ac\uc591\uc774 \uc758\ub3c4\uc801\uc73c\ub85c \uc11c\ubc84\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8 \uae30\ubc18 \ud658\uacbd\uc124\uc815\uc5d0 \ub300\ud574 \uc11c\ubc84 \uae30\uc794 \ud658\uacbd\uc124\uc815\uc5d0 \uac00\uc911\uce58\ub97c \ubd80\uc5ec\ud558\ub294 \ubc29\ubc95\uc744 \uba85\uc2dc\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \uc720\ud6a8\ud55c \uc811\uadfc \ubc29\uc2dd\uc785\ub2c8\ub2e4. Custom content negotiation REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ub300\ud574 custom content negotiation scheme\ub97c \uc81c\uacf5\ud558\ub294 \uac83\uc740 \uac70\uc758 \ubd88\uac00\ub2a5\ud558\uc9c0\ub9cc \ud544\uc694\ud55c \uacbd\uc6b0 \uadf8\ub807\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. custom content negotiation scheme\ub97c \uad6c\ud604\ud558\ub824\uba74 BaseContentNegotiation \uc744 \uc624\ubc84\ub77c\uc774\ub4dc\ud569\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 content negotiation \ud074\ub798\uc2a4\ub294 \uc694\uccad\uc5d0 \ub300\ud55c \uc801\uc808\ud55c \ud30c\uc11c \ubc0f \uc751\ub2f5\uc5d0 \uc801\ud569\ud55c \ub80c\ub354\ub7ec \ubaa8\ub450\ub97c \ucc98\ub9ac\ud558\ubbc0\ub85c .select_parser(request, parser) \ubc0f .select_renderer(request, renderers, format_suffix) \uba54\uc11c\ub4dc\ub97c \ubaa8\ub450 \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4. select_parser() \uba54\uc11c\ub4dc\ub294 \ud30c\uc11c \uc778\uc2a4\ud134\uc2a4 \uc911 \ud558\ub098\ub97c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud30c\uc11c \ubaa9\ub85d\uc5d0\uc11c \ubc18\ud658\ud558\uac70\ub098 \ud30c\uc11c\uac00 \ub4e4\uc5b4\uc624\ub294 \uc694\uccad\uc744 \ucc98\ub9ac \ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 None \uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. select_renderer() \uba54\uc11c\ub4dc\ub294 (renderer instance, media type)\uc758 \ub450 tuple\uc744 \ubc18\ud658\ud558\uac70\ub098 NotAcceptable \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b5\ub2c8\ub2e4. Example \ub2e4\uc74c\uc740 \uc801\uc808\ud55c \ud30c\uc11c \ub610\ub294 \ub80c\ub354\ub7ec\ub97c \uc120\ud0dd\ud560 \ub54c \ud074\ub77c\uc774\uc5b8\ud2b8 \uc694\uccad\uc744 \ubb34\uc2dc\ud558\ub294 custom content negotiation \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. from rest_framework.negotiation import BaseContentNegotiation class IgnoreClientContentNegotiation(BaseContentNegotiation): def select_parser(self, request, parsers): \"\"\" Select the first parser in the `.parser_classes` list. \"\"\" return parsers[0] def select_renderer(self, request, renderers, format_suffix): \"\"\" Select the first renderer in the `.renderer_classes` list. \"\"\" return (renderers[0], renderers[0].media_type) Setting the content negotiation \uae30\ubcf8 content negotiation \ud074\ub798\uc2a4\ub294 DEFAULT_CONTENT_NEGOTIATION_CLASS \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\uc5ed\uc73c\ub85c \uc124\uc815 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c \uc124\uc815\uc740 \uc608\uc81c IgnoreClientContentNegotitaion \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_CONTENT_NEGOTIATION_CLASS': 'myapp.negotiation.IgnoreClientContentNegotiation', } APIView CBV\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac1c\ubcc4 view \ub610\ub294 viewset\uc5d0 \uc0ac\uc6a9 \ub41c content negotiation\uc744 \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. from myapp.negotiation import IgnoreClientContentNegotiation from rest_framework.response import Response from rest_framework.views import APIView class NoNegotiationView(APIView): \"\"\" An example view that does not perform content negotiation. \"\"\" content_negotiation_class = IgnoreClientContentNegotiation def get(self, request, format=None): return Response({ 'accepted media type': request.accepted_renderer.media_type })","title":"Content negotiation"},{"location":"Content_negotiation/#django-rest-framework-content-negotiation","text":"\"HTTP has provisions for several mechanisms for \"content negotiation\" - the proce\ubc18s of selecting the best representation for a given response when there are multiple representations available.\" \"HTTP\ub294 \"\ub0b4\uc6a9 \ud611\uc0c1 (content negotiation)\"\uc5d0 \ub300\ud55c \uba87 \uac00\uc9c0 \uba54\ucee4\ub2c8\uc998\uc5d0 \ub300\ud55c \uaddc\uc815\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub294 \uc5ec\ub7ec \ud45c\ud604\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uacbd\uc6b0 \uc8fc\uc5b4\uc9c4 \uc751\ub2f5\uc5d0 \ub300\ud55c \ucd5c\uc0c1\uc758 \ud45c\ud604\uc744 \uc120\ud0dd\ud558\ub294 \ud504\ub85c\uc138\uc2a4\uc785\ub2c8\ub2e4.\" \u2014 RFC 2616, Fielding et al.","title":"Django REST Framework - Content negotiation"},{"location":"Content_negotiation/#content-negotiation","text":"content negotiation\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8 \ub610\ub294 \uc11c\ubc84 \ud658\uacbd \uc124\uc815\uc5d0 \ub530\ub77c \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c \ub9ac\ud134\ud560 \uc218 \uc788\ub294 \uc5ec\ub7ec \ud45c\ud604 \uc911 \ud558\ub098\ub97c \uc120\ud0dd\ud558\ub294 \ud504\ub85c\uc138\uc2a4\uc785\ub2c8\ub2e4.","title":"Content negotiation"},{"location":"Content_negotiation/#determining-the-accepted-renderer","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uac04\ub2e8\ud55c \uc2a4\ud0c0\uc77c\uc758 content negotiation\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc0ac\uc6a9 \uac00\ub2a5\ud55c renderer. \uac01 \ub80c\ub354\ub7ec\uc758 \uc6b0\uc120 \uc21c\uc704 \ubc0f \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 Accept: \ud5e4\ub354\ub97c \uae30\ubc18\uc73c\ub85c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ubc18\ud658\ud574\uc57c\ud558\ub294 \ubbf8\ub514\uc5b4 \uc720\ud615\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\ub418\ub294 \uc2a4\ud0c0\uc77c\uc740 \ubd80\ubd84\uc801\uc73c\ub85c \ud074\ub77c\uc774\uc5b8\ud2b8 / \uc11c\ubc84 \uc911\uc2ec\uc801\uc785\ub2c8\ub2e4. \ub354 \uad6c\uccb4\uc801\uc778 \ubbf8\ub514\uc5b4 \uc720\ud615\uc740 \ub35c \uad6c\uccb4\uc801\uc778 \ubbf8\ub514\uc5b4 \uc720\ud615\ubcf4\ub2e4 \uc6b0\uc120\ud569\ub2c8\ub2e4. \ubcf5\uc218\uc758 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc774 \uac19\uc740 \ud2b9\uc774\uc131\uc744 \uac00\uc9c0\ub294 \uacbd\uc6b0, \uc9c0\uc815\ub41c \ubdf0\uc5d0 \ub300\ud574\uc11c \uc124\uc815\ub41c \ub80c\ub354\ub7ec\uc758 \uc21c\uc11c\uc5d0 \ub530\ub77c \uc6b0\uc120\uad8c\uc774 \uc8fc\uc5b4\uc9d1\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c Accept \ud5e4\ub354\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. application/json; indent=4, application/json, application/yaml, text/html, */* \uac01 \ubbf8\ub514\uc5b4 \uc720\ud615\uc758 \uc6b0\uc120 \uc21c\uc704\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. application/json; indent=4 application/json , application/yaml and text/html */* \uc694\uccad \ub41c \ubdf0\uac00 YAML \uacfc HTML \uc6a9 \ub80c\ub354\ub7ec\ub85c\ub9cc \uad6c\uc131\ub41c \uacbd\uc6b0 REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 renderer_classes list \ub610\ub294 DEFAULT_RENDERER_CLASSES \uc124\uc815\uc5d0\uc11c \uba3c\uc800 \ub098\uc5f4\ub41c \ub80c\ub354\ub7ec\ub97c \uc120\ud0dd\ud569\ub2c8\ub2e4. HTTP Accept \ud5e4\ub354\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 RFC 2616 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. Note : \ud658\uacbd \uc124\uc815\uc5d0\uc11c REST \ud504\ub808\uc784\uc6cc\ud06c\uac00 \"q\" \uac12\uc744 \uace0\ub824\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \"q\" \uac12\uc758 \uc0ac\uc6a9\uc740 \uce90\uc2f1\uc5d0 \ubd80\uc815\uc801\uc778 \uc601\ud5a5\uc744 \uc8fc\uba70 \uc800\uc790\uc758 \uc758\uacac\uc73c\ub85c\ub294 content negotiation\uc5d0 \ubd88\ud544\uc694\ud558\uace0 \ubcf5\uc7a1\ud574\uc9c0\ub294 \uc811\uadfc\ubc29\uc2dd\uc785\ub2c8\ub2e4. \uc774\ub294 HTTP \uc0ac\uc591\uc774 \uc758\ub3c4\uc801\uc73c\ub85c \uc11c\ubc84\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8 \uae30\ubc18 \ud658\uacbd\uc124\uc815\uc5d0 \ub300\ud574 \uc11c\ubc84 \uae30\uc794 \ud658\uacbd\uc124\uc815\uc5d0 \uac00\uc911\uce58\ub97c \ubd80\uc5ec\ud558\ub294 \ubc29\ubc95\uc744 \uba85\uc2dc\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \uc720\ud6a8\ud55c \uc811\uadfc \ubc29\uc2dd\uc785\ub2c8\ub2e4.","title":"Determining the accepted renderer"},{"location":"Content_negotiation/#custom-content-negotiation","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ub300\ud574 custom content negotiation scheme\ub97c \uc81c\uacf5\ud558\ub294 \uac83\uc740 \uac70\uc758 \ubd88\uac00\ub2a5\ud558\uc9c0\ub9cc \ud544\uc694\ud55c \uacbd\uc6b0 \uadf8\ub807\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. custom content negotiation scheme\ub97c \uad6c\ud604\ud558\ub824\uba74 BaseContentNegotiation \uc744 \uc624\ubc84\ub77c\uc774\ub4dc\ud569\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 content negotiation \ud074\ub798\uc2a4\ub294 \uc694\uccad\uc5d0 \ub300\ud55c \uc801\uc808\ud55c \ud30c\uc11c \ubc0f \uc751\ub2f5\uc5d0 \uc801\ud569\ud55c \ub80c\ub354\ub7ec \ubaa8\ub450\ub97c \ucc98\ub9ac\ud558\ubbc0\ub85c .select_parser(request, parser) \ubc0f .select_renderer(request, renderers, format_suffix) \uba54\uc11c\ub4dc\ub97c \ubaa8\ub450 \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4. select_parser() \uba54\uc11c\ub4dc\ub294 \ud30c\uc11c \uc778\uc2a4\ud134\uc2a4 \uc911 \ud558\ub098\ub97c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud30c\uc11c \ubaa9\ub85d\uc5d0\uc11c \ubc18\ud658\ud558\uac70\ub098 \ud30c\uc11c\uac00 \ub4e4\uc5b4\uc624\ub294 \uc694\uccad\uc744 \ucc98\ub9ac \ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 None \uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. select_renderer() \uba54\uc11c\ub4dc\ub294 (renderer instance, media type)\uc758 \ub450 tuple\uc744 \ubc18\ud658\ud558\uac70\ub098 NotAcceptable \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b5\ub2c8\ub2e4.","title":"Custom content negotiation"},{"location":"Content_negotiation/#example","text":"\ub2e4\uc74c\uc740 \uc801\uc808\ud55c \ud30c\uc11c \ub610\ub294 \ub80c\ub354\ub7ec\ub97c \uc120\ud0dd\ud560 \ub54c \ud074\ub77c\uc774\uc5b8\ud2b8 \uc694\uccad\uc744 \ubb34\uc2dc\ud558\ub294 custom content negotiation \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. from rest_framework.negotiation import BaseContentNegotiation class IgnoreClientContentNegotiation(BaseContentNegotiation): def select_parser(self, request, parsers): \"\"\" Select the first parser in the `.parser_classes` list. \"\"\" return parsers[0] def select_renderer(self, request, renderers, format_suffix): \"\"\" Select the first renderer in the `.renderer_classes` list. \"\"\" return (renderers[0], renderers[0].media_type)","title":"Example"},{"location":"Content_negotiation/#setting-the-content-negotiation","text":"\uae30\ubcf8 content negotiation \ud074\ub798\uc2a4\ub294 DEFAULT_CONTENT_NEGOTIATION_CLASS \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\uc5ed\uc73c\ub85c \uc124\uc815 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c \uc124\uc815\uc740 \uc608\uc81c IgnoreClientContentNegotitaion \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_CONTENT_NEGOTIATION_CLASS': 'myapp.negotiation.IgnoreClientContentNegotiation', } APIView CBV\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac1c\ubcc4 view \ub610\ub294 viewset\uc5d0 \uc0ac\uc6a9 \ub41c content negotiation\uc744 \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. from myapp.negotiation import IgnoreClientContentNegotiation from rest_framework.response import Response from rest_framework.views import APIView class NoNegotiationView(APIView): \"\"\" An example view that does not perform content negotiation. \"\"\" content_negotiation_class = IgnoreClientContentNegotiation def get(self, request, format=None): return Response({ 'accepted media type': request.accepted_renderer.media_type })","title":"Setting the content negotiation"},{"location":"Exceptions/","text":"Django REST Framework - Exceptions \"Exceptions\u2026 allow error handling to be organized cleanly in a central or high-level place within the program structure.\" \"\uc608\uc678... \ud504\ub85c\uadf8\ub7a8 \uad6c\uc870 \ub0b4\uc758 \uc911\uc559 \ub610\ub294 \uc0c1\uc704 \uc704\uce58\uc5d0\uc11c \uc624\ub958 \ucc98\ub9ac\ub97c \uba85\ud655\ud558\uac8c \uad6c\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\" \u2014 Doug Hellmann, Python Exception Handling Techniques Exceptions Exception handling in REST framework views REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \ubdf0\ub294 \ub2e4\uc591\ud55c \uc608\uc678\ub97c \ucc98\ub9ac\ud558\uace0 \uc801\uc808\ud55c \uc624\ub958 \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \ucc98\ub9ac\ub418\ub294 \uc608\uc678\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c \ub0b4\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 APIException \uc758 \uc11c\ube0c\ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. Django\uc758 Http404 exception. Django\uc758 PermissionDenied exception. \uac01\uac01\uc758 \uacbd\uc6b0\uc5d0 REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc801\uc808\ud55c \uc0c1\ud0dc \ucf54\ub4dc \ubc0f \ub0b4\uc6a9 \uc720\ud615\uc774 \ud3ec\ud568\ub41c \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. response \ubcf8\ubb38\uc5d0\ub294 \uc624\ub958\uc758 \uc131\uaca9\uc5d0 \uad00\ud55c \ucd94\uac00 \uc138\ubd80 \uc815\ubcf4\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uc624\ub958 \uc751\ub2f5\uc5d0\ub294 response \ubcf8\ubb38\uc758 detail \uc815\ubcf4\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c \uc694\uccad\uc740: DELETE http://api.example.com/foo/bar HTTP/1.1 Accept: application/json \ud574\ub2f9 \ub9ac\uc18c\uc2a4\uc5d0\uc11c DELETE \uba54\uc11c\ub4dc\uac00 \ud5c8\uc6a9\ub418\uc9c0 \uc54a\ub294\ub2e4\ub294 \uc624\ub958 \uc751\ub2f5\uc744 \ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. HTTP/1.1 405 Method Not Allowed Content-Type: application/json Content-Length: 42 {\"detail\": \"Method 'DELETE' not allowed.\"} \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\ub294 \uc57d\uac04 \ub2e4\ub974\uac8c \ucc98\ub9ac\ub418\uba70 \ud544\ub4dc \uc774\ub984\uc744 \uc751\ub2f5\uc758 \ud0a4\ub85c \ud3ec\ud568\ud569\ub2c8\ub2e4. \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uac00 \ud2b9\uc815 \ud544\ub4dc\uc5d0\ub9cc \ud574\ub2f9\ub418\uc9c0 \uc54a\uc73c\uba74 \"non_field_errors\" \ud0a4\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 NON_FIELD_ERRORS_KEY \uc124\uc815\uc5d0 \ub300\ud574 \uc124\uc815\ub41c \ubb38\uc790\uc5f4 \uac12\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uc720\ud6a8\uc131 \uac80\uc99d \uc624\ub958\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. HTTP/1.1 400 Bad Request Content-Type: application/json Content-Length: 94 {\"amount\": [\"A valid integer is required.\"], \"description\": [\"This field may not be blank.\"]} Custom exception handling API view\uc5d0\uc11c \ubc1c\uc0dd\ud55c \uc608\uc678\ub97c response \uac1d\uccb4\ub85c \ubcc0\ud658\ud558\ub294 handler \ud568\uc218\ub97c \ub9cc\ub4e4\uc5b4 custom exception\ub97c \uad6c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 API\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \uc624\ub958 \uc751\ub2f5 \uc2a4\ud0c0\uc77c\uc744 \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud568\uc218\ub294 \ud55c\uc30d\uc758 \uc778\uc218\ub97c \ucde8\ud574\uc57c\ud558\uba70, \uccab\ubc88\uc9f8\ub294 \ucc98\ub9ac\ud560 \uc608\uc678\uc774\uace0, \ub450\ubc88\uc9f8\ub294 \ud604\uc7ac \ucc98\ub9ac\uc911\uc778 \ubdf0\uc640 \uac19\uc740 \ucd94\uac00 context\ub97c \ud3ec\ud568\ud558\ub294 dict\uc785\ub2c8\ub2e4. exception handler \ud568\uc218\ub294 Response \uac1d\uccb4\ub97c \ubc18\ud658\ud558\uac70\ub098 \uc608\uc678\ub97c \ucc98\ub9ac \ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 None \uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. handler\uac00 None \uc744 \ubc18\ud658\ud558\uba74 \uc608\uc678\uac00 \ub2e4\uc2dc \ubc1c\uc0dd\ud558\uace0 Django\ub294 \ud45c\uc900 HTTP 500 'server error'\uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ubaa8\ub4e0 \uc624\ub958 \uc751\ub2f5\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc774 HTTP \ubcf8\ubb38 \ucf54\ub4dc\uc5d0 HTTP \uc0c1\ud0dc \ucf54\ub4dc\uac00 \ud3ec\ud568\ub418\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. HTTP/1.1 405 Method Not Allowed Content-Type: application/json Content-Length: 62 {\"status_code\": 405, \"detail\": \"Method 'DELETE' not allowed.\"} response \uc2a4\ud0c0\uc77c\uc744 \ubcc0\uacbd\ud558\uae30 \uc704\ud574 \ub2e4\uc74c\uacfc \uac19\uc740 custom exception handler\ub97c \uc791\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.views import exception_handler def custom_exception_handler(exc, context): # Call REST framework's default exception handler first, # to get the standard error response. response = exception_handler(exc, context) # Now add the HTTP status code to the response. if response is not None: response.data['status_code'] = response.status_code return response context \uc778\uc218\ub294 \uae30\ubcf8 handler\uc5d0\uc11c \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc9c0\ub9cc exception handler\uac00 context['view'] \ub85c \uc561\uc11c\uc2a4 \ud560 \uc218 \uc788\ub294 \ud604\uc7ac \ucc98\ub9ac\uc911\uc778 \ubdf0\uc640 \uac19\uc740 \ucd94\uac00 \uc815\ubcf4\ub97c \ud544\uc694\ub85c \ud560 \ub54c \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EXCEPTION_HANDLER \uc124\uc815 \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uc815\uc5d0\uc11c exception handler\ub97c \uad6c\uc131\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: REST_FRAMEWORK = { 'EXCEPTION_HANDLER': 'my_project.my_app.utils.custom_exception_handler' } \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 EXCEPTION_HANDLER \uc124\uc815\uc758 \uae30\ubcf8\uac12\uc740 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \ud45c\uc900 exception handler\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. REST_FRAMEWORK = { 'EXCEPTION_HANDLER': 'rest_framework.views.exception_handler' } exception handler\ub294 \ubc1c\uc0dd\ud558\ub294 \uc608\uc678\uc5d0 \uc758\ud574 \uc0dd\uc131 \ub41c \uc751\ub2f5\uc5d0 \ub300\ud574\uc11c\ub9cc \ud638\ucd9c\ub429\ub2c8\ub2e4. serializer \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc2e4\ud328 \ud560 \ub54c generic view\uc5d0\uc11c \ubc18\ud658\ub418\ub294 HTTP_400_BAD_REQUEST \uc751\ub2f5\uacfc \uac19\uc774 \ubdf0\uc5d0\uc11c \uc9c1\uc811 \ubc18\ud658 \ub41c \uc751\ub2f5\uc5d0\ub294 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. API Reference APIException Signature : APIException() APIView \ud074\ub798\uc2a4 \ub610\ub294 @api_view \ub0b4\ubd80\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ubaa8\ub4e0 \uc608\uc678\uc5d0 \ub300\ud55c \uae30\ubcf8 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. custom exception\uc744 \uc81c\uacf5\ud558\ub824\uba74, APIException \uc744 \uc11c\ube0c\ud074\ub798\uc2a4\ud654\ud558\uace0 \ud074\ub798\uc2a4\uc758 .status_code , .default_detail \ubc0f default_code \uc18d\uc131\uc744 \uc124\uc815\ud558\uc138\uc694. \uc608\ub97c \ub4e4\uc5b4, API\uac00 \uac00\ub054 \ub3c4\ub2ec \ud560 \uc218 \uc5c6\ub294 \uc81c3\uc790 \uc11c\ube44\uc2a4\uc5d0 \uc758\uc874\ud558\ub294 \uacbd\uc6b0, \"503 Service Unavailable\" HTTP response \ucf54\ub4dc\uc5d0 \ub300\ud55c \uc608\uc678\ub97c \uad6c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \uc774\ub807\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.exceptions import APIException class ServiceUnavailable(APIException): status_code = 503 default_detail = 'Service temporarily unavailable, try again later.' default_code = 'service_unavailable' Inspecting API exceptions API exception\uc744 \uac80\uc0ac\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc5ec\ub7ec \uc18d\uc131\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c custom exception\ub97c \ube4c\ub4dc \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc18d\uc131 \ubc0f \uba54\uc11c\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. .detail : \uc624\ub958\uc758 \ud14d\uc2a4\ud2b8 \uc124\uba85\uc744 \ub9ac\ud134\ud569\ub2c8\ub2e4. .get_codes() : \uc624\ub958\uc758 \ucf54\ub4dc \uc2dd\ubcc4\uc790\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. .get_full_details() : \ud14d\uc2a4\ud2b8 \uc124\uba85\uacfc \ucf54\ub4dc \uc2dd\ubcc4\uc790\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uacbd\uc6b0 \uc624\ub958 \uc138\ubd80 \uc0ac\ud56d\uc740 \uac04\ub2e8\ud55c \ud56d\ubaa9\uc785\ub2c8\ub2e4. >>> print(exc.detail) You do not have permission to perform this action. >>> print(exc.get_codes()) permission_denied >>> print(exc.get_full_details()) {'message':'You do not have permission to perform this action.','code':'permission_denied'} \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uc758 \uacbd\uc6b0 \uc624\ub958 \uc138\ubd80 \uc815\ubcf4\ub294 list\ub098 dict\uc785\ub2c8\ub2e4. >>> print(exc.detail) {\"name\":\"This field is required.\",\"age\":\"A valid integer is required.\"} >>> print(exc.get_codes()) {\"name\":\"required\",\"age\":\"invalid\"} >>> print(exc.get_full_details()) {\"name\":{\"message\":\"This field is required.\",\"code\":\"required\"},\"age\":{\"message\":\"A valid integer is required.\",\"code\":\"invalid\"}} ParseError Signature : ParseError(detail=None, code=None) request.data \uc5d0 \uc5d1\uc11c\uc2a4 \ud560 \ub54c request\uc5d0 \uc798\ubabb\ub41c \ub370\uc774\ud130\uac00 \ud3ec\ud568 \ub41c \uacbd\uc6b0 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub294 HTTP status code \"400 Bad Request\"\ub85c \uc751\ub2f5\ud569\ub2c8\ub2e4. AuthenticationFailed Signature : AuthenticationFailed(detail=None, code=None) \ub4e4\uc5b4\uc624\ub294 request\uc5d0 \uc798\ubabb\ub41c \uc778\uc99d\uc774 \ud3ec\ud568\ub420 \ub584 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub85c \uc778\ud574 HTTP status code \"401 Unauthenticated\"\uac00 \ubc18\ud658\ub418\uc9c0\ub9cc, \uc0ac\uc6a9\uc911\uc778 \uc778\uc99d \ubc29\uc2dd\uc5d0 \ub530\ub77c \"403 Forbidden\" \uc751\ub2f5\uc774 \ubc1c\uc0dd\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc778\uc99d \ubb38\uc11c \ub97c \ucc38\uc870\ud558\uc138\uc694. NotAuthenticated Signature : NotAuthenticated(detail=None, code=None) \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc774 \uad8c\ud55c \uac80\uc0ac\uc5d0 \uc2e4\ud328\ud558\uba74 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub85c \uc778\ud574 HTTP status code \"401 Unauthenticated\"\uac00 \ubc18\ud658\ub418\uc9c0\ub9cc \uc0ac\uc6a9\uc911\uc778 \uc778\uc99d \ubc29\uc2dd\uc5d0 \ub530\ub77c \"403 Forbidden\"\uc751\ub2f5\uc774 \ubc1c\uc0dd \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc778\uc99d \ubb38\uc11c \ub97c \ucc38\uc870\ud558\uc138\uc694. PermissionDenied Signature : PermissionDenied(detail=None, code=None) \uc778\uc99d \ub41c \uc694\uccad\uc774 \uad8c\ud55c \uac80\uc0ac\uc5d0 \uc2e4\ud328\ud558\uba74 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub294 HTTP status code \"403 Forbidden\"\uc73c\ub85c \uc751\ub2f5\ud558\ub2c8\ub2e4. NotFound Signature : NotFound(detail=None, code=None) \uc8fc\uc5b4\uc9c4 URL\uc5d0 resource\uac00 \uc5c6\uc744 \ub54c \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774 \uc608\uc678\ub294 \ud45c\uc900 Http404 Django exception\uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub294 HTTP status code \"404 Not Found\"\uc73c\ub85c \uc751\ub2f5\ud569\ub2c8\ub2e4. MethodNotAllowed Signature : MethodNotAllowed(method, detail=None, code=None) \ubdf0\uc758 handler \uba54\uc11c\ub4dc\uc5d0 \ub9e4\ud551\ub418\uc9c0 \uc54a\ub294 \ub4e4\uc5b4\uc624\ub294 request\uac00 \ubc1c\uc0dd\ud588\uc744 \ub584 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub294 HTTP status code \"405 Method Not Allowed\"\ub85c \uc751\ub2f5\ud569\ub2c8\ub2e4. NotAcceptable Signature : NotAcceptable(detail=None, code=None) \uc0ac\uc6a9 \uac00\ub2a5\ud55c randerer\uc5d0\uc11c \ub9cc\uc871 \ud560 \uc218 \uc5c6\ub294 Accept \ud5e4\ub354\ub85c \ub4e4\uc5b4\uc624\ub294 request\uac00 \ubc1c\uc0dd\ud560\ub54c \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub294 HTTP status code \"406 Not Acceptable\"\uc73c\ub85c \uc751\ub2f5\ud569\ub2c8\ub2e4. UnsupportedMediaType Signature : UnsupportedMediaType(media_type, detail=None, code=None) request.data \uc5d0 \uc5d1\uc11c\uc2a4 \ud560 \ub54c request \ub370\uc774\ud130\uc758 \ub0b4\uc6a9 \uc720\ud615\uc744 \ucc98\ub9ac \ud560 \uc218 \uc788\ub294 parser\uac00 \uc5c6\ub294 \uacbd\uc6b0 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub294 HTTP status code \"415 Unsupported Media Type\"\uc73c\ub85c \uc751\ub2f5\ud569\ub2c8\ub2e4. Throttled Signature : Throttled(wait=None, detail=None, code=None) \ub4e4\uc5b4\uc624\ub294 request\uac00 throttle \uac80\uc0ac\uc5d0 \uc2e4\ud328\ud558\uba74 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub294 HTTP status code \"429 Too Many Requests\"\uc73c\ub85c \uc751\ub2f5\ud569\ub2c8\ub2e4. ValidationError Signature : ValidationError(detail, code=None) ValidationError \uc608\uc678\ub294 \ub2e4\ub978 APIException \ud074\ub798\uc2a4\uc640 \uc57d\uac04 \ub2e4\ub985\ub2c8\ub2e4. detail \uc778\uc218\ub294 \ud544\uc218\uc785\ub2c8\ub2e4. \uc120\ud0dd\uc0ac\ud56d\uc774 \uc544\ub2d9\ub2c8\ub2e4. detail \uc778\uc218\ub294 \uc624\ub958 \uc138\ubd80 \uc0ac\ud56d list \ub610\ub294 dict \uc77c \uc218 \uc788\uc73c\uba70, \uc911\ucca9\ub41c \ub370\uc774\ud130 \uad6c\uc870 \uc77c \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uaddc\uc57d\uc5d0 \ub530\ub77c serializer \ubaa8\ub4c8\uc744 \uac00\uc838\uc640 \uc815\uaddc\ud654 \ub41c ValidationError \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec Django\uc758 \uae30\ubcf8 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uc640 \uad6c\ubcc4\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: raise serializers.ValidationError('\uc774 \ud544\ub4dc\ub294 \uc815\uc218(Integer)\uac12\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4.') ValidationError \ud074\ub798\uc2a4\ub294 serializer \ubc0f \ud544\ub4dc \uc720\ud6a8\uc131 \uac80\uc0ac \ubc0f \uc720\ud6a8\uc131 \uac80\uc0ac\uae30 \ud074\ub798\uc2a4\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud569\ub2c8\ub2e4. \ub610\ud55c raise_exception \ud0a4\uc6cc\ub4dc \uc778\uc218\ub85c serializer.is_valid \ub97c \ud638\ucd9c \ud560 \ub54c \ubc1c\uc0dd\ud569\ub2c8\ub2e4. serializer.is_valid(raise_exception=True) generic view\ub294 raise_exception=True \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc989, API\uc5d0\uc11c \uc720\ud6a8\uc131 \uac80\uc99d \uc624\ub958 \uc751\ub2f5\uc758 \uc2a4\ud0c0\uc77c\uc744 \ub300\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\ub824\uba74 \uc704\uc5d0\uc11c \uc124\uba85\ud55c\ub300\ub85c custom exception handler\ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub294 HTTP status code \"400 Bad Request\"\uc73c\ub85c \uc751\ub2f5\ud569\ub2c8\ub2e4.","title":"Exceptions"},{"location":"Exceptions/#django-rest-framework-exceptions","text":"\"Exceptions\u2026 allow error handling to be organized cleanly in a central or high-level place within the program structure.\" \"\uc608\uc678... \ud504\ub85c\uadf8\ub7a8 \uad6c\uc870 \ub0b4\uc758 \uc911\uc559 \ub610\ub294 \uc0c1\uc704 \uc704\uce58\uc5d0\uc11c \uc624\ub958 \ucc98\ub9ac\ub97c \uba85\ud655\ud558\uac8c \uad6c\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\"","title":"Django REST Framework - Exceptions"},{"location":"Exceptions/#doug-hellmann-python-exception-handling-techniques","text":"","title":"\u2014 Doug Hellmann, Python Exception Handling Techniques"},{"location":"Exceptions/#exceptions","text":"","title":"Exceptions"},{"location":"Exceptions/#exception-handling-in-rest-framework-views","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \ubdf0\ub294 \ub2e4\uc591\ud55c \uc608\uc678\ub97c \ucc98\ub9ac\ud558\uace0 \uc801\uc808\ud55c \uc624\ub958 \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \ucc98\ub9ac\ub418\ub294 \uc608\uc678\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c \ub0b4\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 APIException \uc758 \uc11c\ube0c\ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. Django\uc758 Http404 exception. Django\uc758 PermissionDenied exception. \uac01\uac01\uc758 \uacbd\uc6b0\uc5d0 REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc801\uc808\ud55c \uc0c1\ud0dc \ucf54\ub4dc \ubc0f \ub0b4\uc6a9 \uc720\ud615\uc774 \ud3ec\ud568\ub41c \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. response \ubcf8\ubb38\uc5d0\ub294 \uc624\ub958\uc758 \uc131\uaca9\uc5d0 \uad00\ud55c \ucd94\uac00 \uc138\ubd80 \uc815\ubcf4\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uc624\ub958 \uc751\ub2f5\uc5d0\ub294 response \ubcf8\ubb38\uc758 detail \uc815\ubcf4\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c \uc694\uccad\uc740: DELETE http://api.example.com/foo/bar HTTP/1.1 Accept: application/json \ud574\ub2f9 \ub9ac\uc18c\uc2a4\uc5d0\uc11c DELETE \uba54\uc11c\ub4dc\uac00 \ud5c8\uc6a9\ub418\uc9c0 \uc54a\ub294\ub2e4\ub294 \uc624\ub958 \uc751\ub2f5\uc744 \ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. HTTP/1.1 405 Method Not Allowed Content-Type: application/json Content-Length: 42 {\"detail\": \"Method 'DELETE' not allowed.\"} \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\ub294 \uc57d\uac04 \ub2e4\ub974\uac8c \ucc98\ub9ac\ub418\uba70 \ud544\ub4dc \uc774\ub984\uc744 \uc751\ub2f5\uc758 \ud0a4\ub85c \ud3ec\ud568\ud569\ub2c8\ub2e4. \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uac00 \ud2b9\uc815 \ud544\ub4dc\uc5d0\ub9cc \ud574\ub2f9\ub418\uc9c0 \uc54a\uc73c\uba74 \"non_field_errors\" \ud0a4\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 NON_FIELD_ERRORS_KEY \uc124\uc815\uc5d0 \ub300\ud574 \uc124\uc815\ub41c \ubb38\uc790\uc5f4 \uac12\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uc720\ud6a8\uc131 \uac80\uc99d \uc624\ub958\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. HTTP/1.1 400 Bad Request Content-Type: application/json Content-Length: 94 {\"amount\": [\"A valid integer is required.\"], \"description\": [\"This field may not be blank.\"]}","title":"Exception handling in REST framework views"},{"location":"Exceptions/#custom-exception-handling","text":"API view\uc5d0\uc11c \ubc1c\uc0dd\ud55c \uc608\uc678\ub97c response \uac1d\uccb4\ub85c \ubcc0\ud658\ud558\ub294 handler \ud568\uc218\ub97c \ub9cc\ub4e4\uc5b4 custom exception\ub97c \uad6c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 API\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \uc624\ub958 \uc751\ub2f5 \uc2a4\ud0c0\uc77c\uc744 \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud568\uc218\ub294 \ud55c\uc30d\uc758 \uc778\uc218\ub97c \ucde8\ud574\uc57c\ud558\uba70, \uccab\ubc88\uc9f8\ub294 \ucc98\ub9ac\ud560 \uc608\uc678\uc774\uace0, \ub450\ubc88\uc9f8\ub294 \ud604\uc7ac \ucc98\ub9ac\uc911\uc778 \ubdf0\uc640 \uac19\uc740 \ucd94\uac00 context\ub97c \ud3ec\ud568\ud558\ub294 dict\uc785\ub2c8\ub2e4. exception handler \ud568\uc218\ub294 Response \uac1d\uccb4\ub97c \ubc18\ud658\ud558\uac70\ub098 \uc608\uc678\ub97c \ucc98\ub9ac \ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 None \uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. handler\uac00 None \uc744 \ubc18\ud658\ud558\uba74 \uc608\uc678\uac00 \ub2e4\uc2dc \ubc1c\uc0dd\ud558\uace0 Django\ub294 \ud45c\uc900 HTTP 500 'server error'\uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ubaa8\ub4e0 \uc624\ub958 \uc751\ub2f5\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc774 HTTP \ubcf8\ubb38 \ucf54\ub4dc\uc5d0 HTTP \uc0c1\ud0dc \ucf54\ub4dc\uac00 \ud3ec\ud568\ub418\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. HTTP/1.1 405 Method Not Allowed Content-Type: application/json Content-Length: 62 {\"status_code\": 405, \"detail\": \"Method 'DELETE' not allowed.\"} response \uc2a4\ud0c0\uc77c\uc744 \ubcc0\uacbd\ud558\uae30 \uc704\ud574 \ub2e4\uc74c\uacfc \uac19\uc740 custom exception handler\ub97c \uc791\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.views import exception_handler def custom_exception_handler(exc, context): # Call REST framework's default exception handler first, # to get the standard error response. response = exception_handler(exc, context) # Now add the HTTP status code to the response. if response is not None: response.data['status_code'] = response.status_code return response context \uc778\uc218\ub294 \uae30\ubcf8 handler\uc5d0\uc11c \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc9c0\ub9cc exception handler\uac00 context['view'] \ub85c \uc561\uc11c\uc2a4 \ud560 \uc218 \uc788\ub294 \ud604\uc7ac \ucc98\ub9ac\uc911\uc778 \ubdf0\uc640 \uac19\uc740 \ucd94\uac00 \uc815\ubcf4\ub97c \ud544\uc694\ub85c \ud560 \ub54c \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EXCEPTION_HANDLER \uc124\uc815 \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uc815\uc5d0\uc11c exception handler\ub97c \uad6c\uc131\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: REST_FRAMEWORK = { 'EXCEPTION_HANDLER': 'my_project.my_app.utils.custom_exception_handler' } \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 EXCEPTION_HANDLER \uc124\uc815\uc758 \uae30\ubcf8\uac12\uc740 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \ud45c\uc900 exception handler\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. REST_FRAMEWORK = { 'EXCEPTION_HANDLER': 'rest_framework.views.exception_handler' } exception handler\ub294 \ubc1c\uc0dd\ud558\ub294 \uc608\uc678\uc5d0 \uc758\ud574 \uc0dd\uc131 \ub41c \uc751\ub2f5\uc5d0 \ub300\ud574\uc11c\ub9cc \ud638\ucd9c\ub429\ub2c8\ub2e4. serializer \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc2e4\ud328 \ud560 \ub54c generic view\uc5d0\uc11c \ubc18\ud658\ub418\ub294 HTTP_400_BAD_REQUEST \uc751\ub2f5\uacfc \uac19\uc774 \ubdf0\uc5d0\uc11c \uc9c1\uc811 \ubc18\ud658 \ub41c \uc751\ub2f5\uc5d0\ub294 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"Custom exception handling"},{"location":"Exceptions/#api-reference","text":"","title":"API Reference"},{"location":"Exceptions/#apiexception","text":"Signature : APIException() APIView \ud074\ub798\uc2a4 \ub610\ub294 @api_view \ub0b4\ubd80\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ubaa8\ub4e0 \uc608\uc678\uc5d0 \ub300\ud55c \uae30\ubcf8 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. custom exception\uc744 \uc81c\uacf5\ud558\ub824\uba74, APIException \uc744 \uc11c\ube0c\ud074\ub798\uc2a4\ud654\ud558\uace0 \ud074\ub798\uc2a4\uc758 .status_code , .default_detail \ubc0f default_code \uc18d\uc131\uc744 \uc124\uc815\ud558\uc138\uc694. \uc608\ub97c \ub4e4\uc5b4, API\uac00 \uac00\ub054 \ub3c4\ub2ec \ud560 \uc218 \uc5c6\ub294 \uc81c3\uc790 \uc11c\ube44\uc2a4\uc5d0 \uc758\uc874\ud558\ub294 \uacbd\uc6b0, \"503 Service Unavailable\" HTTP response \ucf54\ub4dc\uc5d0 \ub300\ud55c \uc608\uc678\ub97c \uad6c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \uc774\ub807\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.exceptions import APIException class ServiceUnavailable(APIException): status_code = 503 default_detail = 'Service temporarily unavailable, try again later.' default_code = 'service_unavailable'","title":"APIException"},{"location":"Exceptions/#inspecting-api-exceptions","text":"API exception\uc744 \uac80\uc0ac\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc5ec\ub7ec \uc18d\uc131\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c custom exception\ub97c \ube4c\ub4dc \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc18d\uc131 \ubc0f \uba54\uc11c\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. .detail : \uc624\ub958\uc758 \ud14d\uc2a4\ud2b8 \uc124\uba85\uc744 \ub9ac\ud134\ud569\ub2c8\ub2e4. .get_codes() : \uc624\ub958\uc758 \ucf54\ub4dc \uc2dd\ubcc4\uc790\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. .get_full_details() : \ud14d\uc2a4\ud2b8 \uc124\uba85\uacfc \ucf54\ub4dc \uc2dd\ubcc4\uc790\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uacbd\uc6b0 \uc624\ub958 \uc138\ubd80 \uc0ac\ud56d\uc740 \uac04\ub2e8\ud55c \ud56d\ubaa9\uc785\ub2c8\ub2e4. >>> print(exc.detail) You do not have permission to perform this action. >>> print(exc.get_codes()) permission_denied >>> print(exc.get_full_details()) {'message':'You do not have permission to perform this action.','code':'permission_denied'} \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uc758 \uacbd\uc6b0 \uc624\ub958 \uc138\ubd80 \uc815\ubcf4\ub294 list\ub098 dict\uc785\ub2c8\ub2e4. >>> print(exc.detail) {\"name\":\"This field is required.\",\"age\":\"A valid integer is required.\"} >>> print(exc.get_codes()) {\"name\":\"required\",\"age\":\"invalid\"} >>> print(exc.get_full_details()) {\"name\":{\"message\":\"This field is required.\",\"code\":\"required\"},\"age\":{\"message\":\"A valid integer is required.\",\"code\":\"invalid\"}}","title":"Inspecting API exceptions"},{"location":"Exceptions/#parseerror","text":"Signature : ParseError(detail=None, code=None) request.data \uc5d0 \uc5d1\uc11c\uc2a4 \ud560 \ub54c request\uc5d0 \uc798\ubabb\ub41c \ub370\uc774\ud130\uac00 \ud3ec\ud568 \ub41c \uacbd\uc6b0 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub294 HTTP status code \"400 Bad Request\"\ub85c \uc751\ub2f5\ud569\ub2c8\ub2e4.","title":"ParseError"},{"location":"Exceptions/#authenticationfailed","text":"Signature : AuthenticationFailed(detail=None, code=None) \ub4e4\uc5b4\uc624\ub294 request\uc5d0 \uc798\ubabb\ub41c \uc778\uc99d\uc774 \ud3ec\ud568\ub420 \ub584 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub85c \uc778\ud574 HTTP status code \"401 Unauthenticated\"\uac00 \ubc18\ud658\ub418\uc9c0\ub9cc, \uc0ac\uc6a9\uc911\uc778 \uc778\uc99d \ubc29\uc2dd\uc5d0 \ub530\ub77c \"403 Forbidden\" \uc751\ub2f5\uc774 \ubc1c\uc0dd\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc778\uc99d \ubb38\uc11c \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"AuthenticationFailed"},{"location":"Exceptions/#notauthenticated","text":"Signature : NotAuthenticated(detail=None, code=None) \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc774 \uad8c\ud55c \uac80\uc0ac\uc5d0 \uc2e4\ud328\ud558\uba74 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub85c \uc778\ud574 HTTP status code \"401 Unauthenticated\"\uac00 \ubc18\ud658\ub418\uc9c0\ub9cc \uc0ac\uc6a9\uc911\uc778 \uc778\uc99d \ubc29\uc2dd\uc5d0 \ub530\ub77c \"403 Forbidden\"\uc751\ub2f5\uc774 \ubc1c\uc0dd \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc778\uc99d \ubb38\uc11c \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"NotAuthenticated"},{"location":"Exceptions/#permissiondenied","text":"Signature : PermissionDenied(detail=None, code=None) \uc778\uc99d \ub41c \uc694\uccad\uc774 \uad8c\ud55c \uac80\uc0ac\uc5d0 \uc2e4\ud328\ud558\uba74 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub294 HTTP status code \"403 Forbidden\"\uc73c\ub85c \uc751\ub2f5\ud558\ub2c8\ub2e4.","title":"PermissionDenied"},{"location":"Exceptions/#notfound","text":"Signature : NotFound(detail=None, code=None) \uc8fc\uc5b4\uc9c4 URL\uc5d0 resource\uac00 \uc5c6\uc744 \ub54c \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774 \uc608\uc678\ub294 \ud45c\uc900 Http404 Django exception\uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub294 HTTP status code \"404 Not Found\"\uc73c\ub85c \uc751\ub2f5\ud569\ub2c8\ub2e4.","title":"NotFound"},{"location":"Exceptions/#methodnotallowed","text":"Signature : MethodNotAllowed(method, detail=None, code=None) \ubdf0\uc758 handler \uba54\uc11c\ub4dc\uc5d0 \ub9e4\ud551\ub418\uc9c0 \uc54a\ub294 \ub4e4\uc5b4\uc624\ub294 request\uac00 \ubc1c\uc0dd\ud588\uc744 \ub584 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub294 HTTP status code \"405 Method Not Allowed\"\ub85c \uc751\ub2f5\ud569\ub2c8\ub2e4.","title":"MethodNotAllowed"},{"location":"Exceptions/#notacceptable","text":"Signature : NotAcceptable(detail=None, code=None) \uc0ac\uc6a9 \uac00\ub2a5\ud55c randerer\uc5d0\uc11c \ub9cc\uc871 \ud560 \uc218 \uc5c6\ub294 Accept \ud5e4\ub354\ub85c \ub4e4\uc5b4\uc624\ub294 request\uac00 \ubc1c\uc0dd\ud560\ub54c \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub294 HTTP status code \"406 Not Acceptable\"\uc73c\ub85c \uc751\ub2f5\ud569\ub2c8\ub2e4.","title":"NotAcceptable"},{"location":"Exceptions/#unsupportedmediatype","text":"Signature : UnsupportedMediaType(media_type, detail=None, code=None) request.data \uc5d0 \uc5d1\uc11c\uc2a4 \ud560 \ub54c request \ub370\uc774\ud130\uc758 \ub0b4\uc6a9 \uc720\ud615\uc744 \ucc98\ub9ac \ud560 \uc218 \uc788\ub294 parser\uac00 \uc5c6\ub294 \uacbd\uc6b0 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub294 HTTP status code \"415 Unsupported Media Type\"\uc73c\ub85c \uc751\ub2f5\ud569\ub2c8\ub2e4.","title":"UnsupportedMediaType"},{"location":"Exceptions/#throttled","text":"Signature : Throttled(wait=None, detail=None, code=None) \ub4e4\uc5b4\uc624\ub294 request\uac00 throttle \uac80\uc0ac\uc5d0 \uc2e4\ud328\ud558\uba74 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub294 HTTP status code \"429 Too Many Requests\"\uc73c\ub85c \uc751\ub2f5\ud569\ub2c8\ub2e4.","title":"Throttled"},{"location":"Exceptions/#validationerror","text":"Signature : ValidationError(detail, code=None) ValidationError \uc608\uc678\ub294 \ub2e4\ub978 APIException \ud074\ub798\uc2a4\uc640 \uc57d\uac04 \ub2e4\ub985\ub2c8\ub2e4. detail \uc778\uc218\ub294 \ud544\uc218\uc785\ub2c8\ub2e4. \uc120\ud0dd\uc0ac\ud56d\uc774 \uc544\ub2d9\ub2c8\ub2e4. detail \uc778\uc218\ub294 \uc624\ub958 \uc138\ubd80 \uc0ac\ud56d list \ub610\ub294 dict \uc77c \uc218 \uc788\uc73c\uba70, \uc911\ucca9\ub41c \ub370\uc774\ud130 \uad6c\uc870 \uc77c \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uaddc\uc57d\uc5d0 \ub530\ub77c serializer \ubaa8\ub4c8\uc744 \uac00\uc838\uc640 \uc815\uaddc\ud654 \ub41c ValidationError \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec Django\uc758 \uae30\ubcf8 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uc640 \uad6c\ubcc4\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: raise serializers.ValidationError('\uc774 \ud544\ub4dc\ub294 \uc815\uc218(Integer)\uac12\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4.') ValidationError \ud074\ub798\uc2a4\ub294 serializer \ubc0f \ud544\ub4dc \uc720\ud6a8\uc131 \uac80\uc0ac \ubc0f \uc720\ud6a8\uc131 \uac80\uc0ac\uae30 \ud074\ub798\uc2a4\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud569\ub2c8\ub2e4. \ub610\ud55c raise_exception \ud0a4\uc6cc\ub4dc \uc778\uc218\ub85c serializer.is_valid \ub97c \ud638\ucd9c \ud560 \ub54c \ubc1c\uc0dd\ud569\ub2c8\ub2e4. serializer.is_valid(raise_exception=True) generic view\ub294 raise_exception=True \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc989, API\uc5d0\uc11c \uc720\ud6a8\uc131 \uac80\uc99d \uc624\ub958 \uc751\ub2f5\uc758 \uc2a4\ud0c0\uc77c\uc744 \ub300\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\ub824\uba74 \uc704\uc5d0\uc11c \uc124\uba85\ud55c\ub300\ub85c custom exception handler\ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc608\uc678\ub294 HTTP status code \"400 Bad Request\"\uc73c\ub85c \uc751\ub2f5\ud569\ub2c8\ub2e4.","title":"ValidationError"},{"location":"Filtering/","text":"Django REST Framework - Filtering \"The root QuerySet provided by the Manager describes all objects in the database table. Usually, though, you'll need to select only a subset of the complete set of objects.\" \"Manager\uac00 \uc81c\uacf5\ud558\ub294 \ub8e8\ud2b8 QuerySet\uc740 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud14c\uc774\ube14\uc758 \ubaa8\ub4e0 \uac1d\uccb4\ub97c \uc124\uba85\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc77c\ubc18\uc801\uc73c\ub85c \uac1c\uccb4\uc758 \uc804\uccb4 \uc9d1\ud569 \uc911 \uc77c\ubd80\ub9cc \uc120\ud0dd\ud574\uc57c\ud569\ub2c8\ub2e4.\" \u2014 Django documentation Filtering REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 generic list view \uc758 \uae30\ubcf8 \ub3d9\uc791 \ubaa8\ub378 manager\uc5d0 \ub300\ud55c \uc804\uccb4 QuerySet\uc744 \ubc18\ud658\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub54c\ub54c\ub85c \ub2f9\uc2e0 API\uac00 QuerySet\uc5d0 \uc758\ud574 \ubc18\ud658 \ub418\ub41c \ud56d\ubaa9\uc744 \uc81c\ud55c\ud558\uae30\ub97c \uc6d0\ud560 \uac83\uc785\ub2c8\ub2e4. GenericAPIView \ub97c \ud558\uc704 \ud074\ub798\uc2a4\ub85c \ud558\ub294 view\uc758 QuerySet\ub97c \ud544\ud130\ub9c1\ud558\ub294 \uac00\uc7a5 \uac04\ub2e8\ud55c \ubc29\ubc95\uc740 .get_queryset() \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774 \uba54\uc18c\ub4dc\uc751 \ub300\uccb4\ub77c\uba74 \ub2e4\uc591\ud55c \ubc29\uc2dd\uc73c\ub85c view\uc5d0\uc11c \ub9ac\ud134 \ub41c queryset\uc744 custom \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Filtering against the current user (\ud604\uc7ac \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \ud544\ud130\ub9c1) \ucffc\ub9ac\ub97c \ud544\ud130\ub9c1\ud558\uc5ec \uc694\uccad\uc744 \ud55c \ud604\uc7ac \uc778\uc99d \ub41c \uc0ac\uc6a9\uc790\uc640 \uad00\ub828\ub41c \uacb0\uacfc\ub9cc \ubc18\ud658\ub418\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. request.user \uc758 \uac12\uc5d0 \ub530\ub77c \ud544\ud130\ub9c1\uc744 \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: from myapp.models import Purchase from myapp.serializers import PurchaseSerializer from rest_framework import generics class PurchaseList(generics.ListAPIView): serializer_class = PurchaseSerializer def get_queryset(self): \"\"\" This view should return a list of all the purchases for the currently authenticated user. \"\"\" user = self.request.user return Purchase.objects.filter(purchaser=user) Filtering against the URL \ud544\ud130\ub9c1\uc758 \ub610 \ub2e4\ub978 \uc2a4\ud0c0\uc77c\uc740 URL \uc77c\ubd80\ub97c \uae30\ubc18\uc73c\ub85c queryset\uc744 \uc81c\ud55c\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 URLconfig\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc740 \ud56d\ubaa9\uc774 \ud3ec\ud568 \ub41c \uacbd\uc6b0: url('^purchases/(?P<username>.+)/$', PurchaseList.as_view()), \uadf8\ub7f0 \ub2e4\uc74c URL\uc758 \uc0ac\uc6a9\uc790 \uc774\ub984 \ubd80\ubd84\uc73c\ub85c \ud544\ud130\ub9c1 \ub41c purchases queryset\uc744 \ubc18\ud658\ud558\ub294 view\ub97c \uc791\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class PurchaseList(generics.ListAPIView): serializer_class = PurchaseSerializer def get_queryset(self): \"\"\" This view should return a list of all the purchases for the user as determined by the username portion of the URL. \"\"\" username = self.kwargs['username'] return Purchase.objects.filter(purchaser__username=username) Filtering against query parameters \ucd08\uae30 \ucffc\ub9ac\uc14b\uc744 \ud544\ud130\ub9c1\ud558\ub294 \ub9c8\uc9c0\ub9c9 \uc608\ub294 URL\uc758 \ucffc\ub9ac parameter\ub97c \uae30\ubc18\uc73c\ub85c \ucd08\uae30 \ucffc\ub9ac\uac8d\uc744 \uacb0\uc815\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. http://example.com/api/purchases?username=denvercoder9 \uacfc \uac19\uc740 URL\uc744 \ucc98\ub9ac\ud558\ub824\uba74 .get.queryset() \uc744 \uc7ac\uc815\uc758\ud558\uace0 username \ub9e4\uac1c\ubcc0\uc218\uac00 URL\uc5d0 \ud3ec\ud568\ub418\uc5b4\uc788\ub294 \uacbd\uc6b0\uc5d0\ub9cc \ucffc\ub9ac\uc14b\uc744 \ud544\ud130\ub9c1\ud558\uc138\uc694. class PurchaseList(generics.ListAPIView): serializer_class = PurchaseSerializer def get_queryset(self): \"\"\" Optionally restricts the returned purchases to a given user, by filtering against a `username` query parameter in the URL. \"\"\" queryset = Purchase.objects.all() username = self.request.query_params.get('username', None) if username is not None: queryset = queryset.filter(purchaser__username=username) return queryset Generic Filtering \uae30\ubcf8 \ucffc\ub9ac\uc14b\uc744 \uc7ac\uc815\uc758 \ud560 \uc218 \uc788\uc744\ubfd0\ub9cc \uc544\ub2c8\ub77c REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ubcf5\uc7a1\ud55c \uac80\uc0c9 \ubc0f \ud544\ud130\ub97c \uc27d\uac8c \uad6c\uc131\ud560 \uc218 \uc788\ub294 \uc77c\ubc18 \ud544\ud130\ub9c1 \ubc31\uc5d4\ub4dc\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Generic filter\ub294 browsable API \ubc0f admin API\uc5d0\uc11c HTML \ucee8\ud2b8\ub864\ub85c \ub098\ud0c0\ub0bc \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Setting filter backends \uae30\ubcf8 \ud544\ud130 \ubc31\uc5d4\ub4dc\ub294 DEFAULT_FILTER_BACKENDS \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\uccb4\uc801\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74, REST_FRAMEWORK = { 'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',) } GenericAPIView CBV\ub97c \uc0ac\uc6a9\ud558\uc5ec view \ub2f9 \ub610\ub294 viewset \ub2e8\uc704\ub85c \ud544\ud130 \ubc31\uc5d4\ub4dc\ub97c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. import django_filters.rest_framework from django.contrib.auth.models import User from myapp.serializers import UserSerializer from rest_framework import generics class UserListView(generics.ListAPIView): queryset = User.objects.all() serializer_class = UserSerializer filter_backends = (django_filters.rest_framework.DjangoFilterBackend,) Filtering and object lookups \ud544\ud130 \ubc31\uc5d4\ub4dc\ub294 view\uc5d0 \ub300\ud574 \uad6c\uc131\ub418\uace0 list view\ub97c \ud544\ud130\ub9c1\ud558\ub294\ub370 \uc0ac\uc6a9\ub418\ub294 \uacbd\uc6b0, \ud558\ub098\uc758 \uac1d\uccb4\ub97c \ubc18\ud658\ud558\ub294\ub370 \uac00\uc6a9\ub418\ub294 queryset\uc744 \ud544\ud130\ub9c1\ud558\ub294\ub370\uc5d0\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc55e\uc758 \uc608\uc81c\uc640 id\uac00 4675\uc778 \uc81c\ud488\uc758 \uacbd\uc6b0 \ub2e4\uc74c URL\uc740 \ud574\ub2f9 \uc81c\ud488 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ud544\ud130\ub9c1 \uc870\uac74\uc774 \ucda9\uc871\ub418\uc5c8\ub294\uc9c0 \uc5ec\ubd80\uc5d0 \ub530\ub77c \ud574\ub2f9 \uac1d\uccb4\ub97c \ubc18\ud658\ud558\uac70\ub098 404 \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. http://example.com/api/products/4675/?category=clothing&max_price=10.00 Overriding the initial queryset \uc624\ubc84\ub77c\uc774\ub4dc \ub41c .get_queryset() \uacfc generic filtering\uc744 \ud568\uaed8 \uc0ac\uc6a9\ud558\uba74 \ubaa8\ub4e0 \uac83\uc774 \uc608\uc0c1\ub300\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, Product \uac00 User \ub77c\ub294 \uad6c\ub9e4\uc790\uc640 many-to-many \uad00\uacc4\ub97c \uac16\uace0 \uc788\ub2e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 view\ub97c \uc791\uc131\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. class PurchasedProductsList(generics.ListAPIView): \"\"\" Return a list of all the products that the authenticated user has ever purchased, with optional filtering. \"\"\" model = Product serializer_class = ProductSerializer filter_class = ProductFilter def get_queryset(self): user = self.request.user return user.purchase_set.all() API Guide DjangoFilterBackend django-filter \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0\ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ub300\ud574 \uace0\ub3c4\uc758 custom\uc774 \uac00\ub2a5\ud55c \ud544\ub4dc \ud544\ud130\ub9c1\uc744 \uc9c0\uc6d0\ud558\ub294 DjangoFilterBackend \ud074\ub798\uc2a4\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. DjangoFilterBackend \ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \uba3c\uc800 django-filter \ub97c \uc124\uce58\ud558\uc138\uc694. pip install django-filter \uc774\uc81c \ud544\ud130 \ubc31\uc5d4\ub4dc\ub97c \uc124\uc815\uc5d0 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',) } \ub610\ub294 \ud544\ud130 \ubc31\uc5d4\ub4dc\ub97c \uac1c\ubcc4 view \ub610\ub294 viewset\uc5d0 \ucd94\uac00\ud558\uc138\uc694. from django_filters.rest_framework import DjangoFilterBackend class UserListView(generics.ListAPIView): ... filter_backends = (DjangoFilterBackend,) browsable API\ub098 admin API\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, django-crispy-forms \ub97c \uc124\uce58\ud558\uc5ec HTML View\uc5d0\uc11c \ud544\ud130 \uc591\uc2dd\uc758 \ud45c\uc2dc\ub97c \ud5a5\uc0c1\uc2dc\ud0a4\uace0 \ubd80\ud2b8\uc2a4\ud2b8\ub7a93 HTML\uc744 \ub79c\ub354\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. pip install django-crispy-forms crispy-forms \ub97c \uc124\uce58\ud558\uace0 Django\uc758 INSTALLED_APPS \uc5d0 \ucd94\uac00\ud558\uba74 browsable API\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 DjangoFilterBackend \uc5d0 \ub300\ud55c \ud544\ud130\ub9c1 \ucee8\ud2b8\ub864\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Specifying filter fields \ud544\uc694\ud55c \uac83\uc740 \uac04\ub2e8\ud55c equality-based \ud544\ud130\ub9c1 \ubfd0\uc785\ub2c8\ub2e4. \ud544\ud130\ub9c1 \ud560 \ud544\ub4dc \uc9d1\ud569\uc744 \ub098\uc5f4\ud558\ub294 view \ub610\ub294 viewset\uc5d0 filter_fields \uc18d\uc131\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class ProductList(generics.ListAPIView): queryset = Product.objects.all() serializer_class = ProductSerializer filter_backends = (filters.DjangoFilterBackend,) filter_fields = ('category', 'in_stock') \uc774\ub807\uac8c \ud558\uba74 \uc8fc\uc5b4\uc9c4 \ud544\ub4dc\uc5d0 \ub300\ud55c FilterSet \ud074\ub798\uc2a4\uac00 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub418\uba70 \ub2e4\uc74c\uacfc \uac19\uc740 \uc694\uccad\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. http://example.com/api/products?category=clothing&in_stock=True Specifying a FilterSet (FilterSet \uc9c0\uc815\ud558\uae30) \uace0\uae09 \ud544\ud130\ub9c1 \uc694\uad6c \uc0ac\ud56d\uc758 \uacbd\uc6b0 view\uc5d0\uc11c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 FilterSet \ud074\ub798\uc2a4\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608: import django_filters from myapp.models import Product from myapp.serializers import ProductSerializer from rest_framework import generics class ProductFilter(django_filters.rest_framework.FilterSet): min_price = django_filters.NumberFilter(name=\"price\", lookup_expr='gte') max_price = django_filters.NumberFilter(name=\"price\", lookup_expr='lte') class Meta: model = Product fields = ['category', 'in_stock', 'min_price', 'max_price'] class ProductList(generics.ListAPIView): queryset = Product.objects.all() serializer_class = ProductSerializer filter_backends = (django_filters.rest_framework.DjangoFilterBackend,) filter_class = ProductFilter \uadf8\ub7ec\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uc694\uccad\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. http://example.com/api/products?category=clothing&max_price=10.00 django-filter \ub97c \uc0ac\uc6a9\ud558\uc5ec \uad00\uacc4\ub97c \ud655\uc7a5\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \uc81c\ud488\uc5d0\ub294 \uc81c\uc870\uc5c5\uccb4 \ubaa8\ub378\uc5d0 \ub300\ud55c \uc678\ub798 \ud0a4\uac00 \uc788\ub2e4\uace0 \uac00\uc815\ud558\uc5ec \uc81c\uc870\uc5c5\uccb4 \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud544\ud130\ub9c1 \ud558\ub294 \ud544\ud130\ub97c \ub9cc\ub4ed\ub2c8\ub2e4. \uc608: import django_filters from myapp.models import Product from myapp.serializers import ProductSerializer from rest_framework import generics class ProductFilter(django_filters.rest_framework.FilterSet): class Meta: model = Product fields = ['category', 'in_stock', 'manufacturer__name'] \uc774\ub807\uac8c \ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \ucffc\ub9ac\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. http://example.com/api/products?manufacturer__name=foo \uc774\uac83\uc740 \uc88b\uc740 \uc77c\uc774\uc9c0\ub9cc Django\uc758 double-underscore \uaddc\uce59\uc744 API\uc758 \uc77c\ubd80\ub85c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \ub300\uc2e0 \uba85\uc2dd\uc801\uc73c\ub85c \ud544\ud130 \uc778\uc218\uc758 \uc774\ub984\uc744 \uc9c0\uc815\ud558\ub824\uba74 FilterSet \ud074\ub798\uc2a4\uc5d0 \ud544\ud130 \uc778\uc218\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \ud3ec\ud568\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. import django_filters from myapp.models import Product from myapp.serializers import ProductSerializer from rest_framework import generics class ProductFilter(django_filters.rest_framework.FilterSet): manufacturer = django_filters.CharFilter(name=\"manufacturer__name\") class Meta: model = Product fields = ['category', 'in_stock', 'manufacturer'] \uc774\uc81c \ub2e4\uc74c\uc744 \uc2e4\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. http://example.com/api/products?manufacturer=foo \ud544\ud130 \uc14b \uc0ac\uc6a9\ub370 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 django-filter documentation \ub97c \ucc38\uc870\ud558\uc138\uc694. Hints & Tips \uae30\ubcf8\uc801\uc73c\ub85c \ud544\ud130\ub9c1\uc740 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. DjangoFilterBackend \ub97c \uc0ac\uc6a9\ud558\ub824\uba74 DEFAULT_FILTER_BACKENDS \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc124\uce58\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694. Boolean \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud560 \ub54c\ub294 0 , 1 , true \ub098 false \uac00 \uc544\ub2cc URL \ucffc\ub9ac \ub9e4\uac1c\ubcc0\uc218\uc5d0 True \ubc0f False \uac12\uc744 \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. (\ud5c8\uc6a9\ub41c boolean \uac12\uc740 \ud604\uc7ac Django\uc758 NullBooleanSelect implementation \uc5d0\uc11c \uace0\uc815\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.) django-filter \ub294 Django\uc758 double-underscore \ubb38\ubc95\uc744 \ud1b5\ud574 \uad00\uacc4\uac00 \ub9fa\uc5b4\uc9c4 \ud544\ud130\ub9c1\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. SearchFilter SearchFilter \ud074\ub798\uc2a4\ub294 \uac04\ub2e8\ud55c \ub2e8\uc77c \ucffc\ub9ac parameter \uae30\ubc18 \uac80\uc0c9\uc744 \uc9c0\uc6d0\ud558\uba70 django \uad00\ub9ac\uc790\uc758 \uac80\uc0c9 \uae30\ub2a5 \uc744 \uae30\ubc18\uc73c\ub85c \ud569\ub2c8\ub2e4. \uc0ac\uc6a9 \uc911\uc5d0\ub294 browsable API\uc5d0 SearchFilter \ucee8\ud2b8\ub864\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. SearchFilter \ud074\ub798\uc2a4\ub294 \ubdf0\uc5d0 search_fields \uc18d\uc131\uc774 \uc124\uc815\ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc801\uc6a9\ub429\ub2c8\ub2e4. search_fields \uc18d\uc131\uc740 CharField \ub610\ub294 TextField \uc640 \uac19\uc774 \ubaa8\ub378\uc758 \ud14d\uc2a4\ud2b8 \uc720\ud615 \ud544\ub4dc\uc758 \uc774\ub984\uc758 list\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. class UserListView(generics.ListAPIView): queryset = User.objects.all() serializer_class = UserSerializer filter_backends = (filters.SearchFilter,) search_fields = ('username', 'email') \uc774\ub807\uac8c \ud558\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ub2e4\uc74c\uacfc \uac19\uc740 \ucffc\ub9ac\ub97c \uc791\uc131\ud558\uc5ec list\uc758 items\ub97c \ud544\ud130\ub9c1 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. http://example.com/api/users?search=russell \uac80\uc0c9 API double-underscore \ud45c\uae30\ubc95\uc744 \uc0ac\uc6a9\ud558\uc5ec ForeignKey \ub610\ub294 ManyToManyField \uc5d0\uc11c \uad00\ub828 \uc870\ud68c\ub97c \uc218\ud589\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. search_fields = ('username', 'email', 'profile__profession') \uae30\ubcf8\uc801\uc73c\ub85c \uac80\uc0c9\uc740 \ub300\uc18c \ubb38\uc790\ub97c \uad6c\ubd84\ud558\uc9c0 \uc54a\ub294 \ubd80\ubd84 \uc77c\uce58\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uac80\uc0c9 parameter\uc5d0\ub294 \uacf5\ubc31 \ub610\ub294 / \ub610\ub294 \uc27c\ud45c\ub85c \uad6c\ubd84 \ub41c \uc5ec\ub7ec \uac80\uc0c9\uc5b4\uac00 \ud3ec\ud568 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\ub7ec \uac80\uc0c9\uc5b4\uac00 \uc0ac\uc6a9\ub418\uba74 \uc81c\uacf5\ub41c \ubaa8\ub4e0 \uc6a9\uc5b4\uac00 \uc77c\uce58\ud558\ub294 \uacbd\uc6b0\uc5d0\ub9cc list\uc5d0\uc11c \uac1d\uccb4\uac00 \ubc18\ud658\ub429\ub2c8\ub2e4. \uac80\uc0c9 \ub3d9\uc791\uc740 \ub2e4\uc591\ud55c \ubb38\uc790\ub97c search_fields \uc55e\uc5d0 \ubd99\uc774\uba74 \uc81c\ud55c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. '^' : \uac80\uc0c9\uc744 \uc2dc\uc791\ud569\ub2c8\ub2e4. '=' : \uc815\ud655\ud788 \uc77c\uce58 '@' : \uc804\uccb4 \ud14d\uc2a4\ud2b8 \uac80\uc0c9 (\ud604\uc7ac django\uc758 MySQL \ubc31\uc5d4\ub4dc\ub9cc \uc9c0\uc6d0\ub429\ub2c8\ub2e4. '$' : \uc815\uaddc\uc2dd \uac80\uc0c9 \uc608\ub97c \ub4e4\uba74 : search_fields = ('=username', '=email') \uae30\ubcf8\uc801\uc73c\ub85c \uac80\uc0c9 parameter\uc758 \uc774\ub984\uc740 'search' \uc774\uc9c0\ub9cc SEARCH_PARAM \uc124\uc815\uc73c\ub85c \uc624\ubc84\ub77c\uc774\ub4dc \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc7a5\uace0 \ubb38\uc11c \ub97c \ucc38\uc870\ud558\uc138\uc694. OrderingFilter OrderingFilter \ud074\ub798\uc2a4\ub294 \ucffc\ub9ac parameter\ub85c \uc81c\uc5b4\ub418\ub294 \uac04\ub2e8\ud55c \uacb0\uacfc \uc21c\uc11c\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \ucffc\ub808 parameter\uc758 \uc774\ub984\uc740 'ordering' \uc774\uc9c0\ub9cc, ORDERING_PARAM \uc124\uc815\uc73c\ub85c \uc624\ubc84\ub77c\uc774\ub4dc \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc0ac\uc6a9\uc790 \uc774\ub984\ubcc4\ub85c \uc0ac\uc6a9\uc790\ub97c \uc815\ub82c \ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \uc785\ub825\ud558\uc138\uc694. http://example.com/api/users?ordering=username \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \ud544\ub4dc \uc774\ub984\uc758 \uc811\ub450\uc0ac\ub97c '-' \ub85c \uc9c0\uc815\ud568\uc73c\ub85c\uc368 \uc5ed\uc21c\uc73c\ub85c \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. http://example.com/api/users?ordering=-username \uc5ec\ub7ec \uac1c\uc758 \uc21c\uc11c\ub3c4 \uc9c0\uc815 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. http://example.com/api/users?ordering=account,username Specifying which fields may be ordered against API\uac00 \uc815\ub82c \ud544\ud130\uc5d0\uc11c \ud5c8\uc6a9\ud574\uc57c\ud558\ub294 \ud544\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc774 view\uc5d0\uc11c ordering_fields \uc18d\uc131\uc744 \uc124\uc815\ud558\uc5ec \uc774\ub97c \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class UserListView(generics.ListAPIView): queryset = User.objects.all() serializer_class = UserSerializer filter_backends = (filters.OrderingFilter,) ordering_fields = ('username', 'email') \uc774\ub807\uac8c \ud558\uba74 \uc0ac\uc6a9\uc790\uac00 \uc554\ud638 \ud574\uc2dc \ud544\ub4dc\ub098 \uae30\ud0c0 \uc911\uc694\ud55c \ub370\uc774\ud130\uc5d0 \ub300\ud574 \uc815\ub82c\ud560 \uc218 \uc788\uac8c \ud558\ub294 \ub4f1 \uc608\uae30\uce58 \uc54a\uc740 \ub370\uc774\ud130 \uc720\ucd9c\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. view\uc5d0\uc11c ordering_fields \uc18d\uc131\uc744 \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 \ud544\ud130 \ud074\ub798\uc2a4\ub294 \uae30\ubcf8\uc801\uc73c\ub85c serializer_class \uc18d\uc131\uc744 \uc9c0\uc815\ub41c serializer\uc758 \uc77d\uc744 \uc218 \uc788\ub294 \ud544\ub4dc\ub97c \ud544\ud130\ub9c1 \ud560 \uc218 \uc788\uac8c \ud569\ub2c8\ub2e4. ordering_fields \uc5d0 \ud55c\uac1c\uc758 \uc870\uac74(ex. start_date)\ub9cc \ub123\uc73c\uba74, pagination \uc0ac\uc6a9\uc2dc \uc911\ubcf5\ub418\ub294 \uc870\uac74\uc5d0 \ub300\ud558\uc5ec \uc5b4\ub5a4 \uac83\uc744 \uc55e\uc5d0 \ub450\uc5b4\uc57c\ud558\ub294\uc9c0\uc5d0 \ub300\ud55c \uc774\uc288\uac00 \uc77c\uc5b4\ub098\uc11c \ud398\uc774\uc9c0\uac00 \ub118\uc5b4\uac08\ub54c \uc911\ubcf5\ub41c \uac12\uc774 \ucd9c\ub825\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub450\uac1c \uc774\uc0c1\uc758 \uc870\uac74\uc744 \uc81c\uc2dc\ud558\uba74 pagination \uc2dc \uc911\ubcf5\ub41c \uac12\uc758 \ucd9c\ub825\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubdf0\uc5d0 \uc0ac\uc6a9 \ub41c \ucffc\ub9ac\uc14b\uc740 \uc911\uc694\ud55c \ub370\uc774\ud130\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc740 \uac83\uc73c\ub85c \ud655\uc2e0\ud558\ub294 \uacbd\uc6b0, \ud2b9\uc218 \uac12 '__all__' \uc744 \uc0ac\uc6a9\ud558\uc5ec view\uac00 \ubaa8\ub4e0 \ubaa8\ub378 \ud544\ub4dc \ub610\ub294 \ucffc\ub9ac\uc14b \ud569\uacc4\uc5d0\uc11c \uc815\ub82c\uc744 \ud5c8\uc6a9\ud558\ub3c4\ub85d \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class BookingsListView(generics.ListAPIView): queryset = Booking.objects.all() serializer_class = BookingSerializer filter_backends = (filters.OrderingFilter,) ordering_fields = '__all__' Specifying a default ordering ordering \uc18d\uc131\uc774 view\uc5d0 \uc124\uc815\ub418\uc5b4 \uc788\ub294 \uacbd\uc6b0, \uc774\uac83\uc740 \uae30\ubcf8 \uc21c\uc11c\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ucd08\uae30 \ucffc\ub9ac\uc14b\uc5d0\uc11c order_by \ub97c \uc124\uc815\ud558\uc5ec \uc774 \uc791\uc5c5\uc744 \uc81c\uc5b4\ud560 \uc218 \uc788\uc9c0\ub9cc view\uc758 ordering parameter\ub97c \uc0ac\uc6a9\ud558\uba74 \ub80c\ub354\ub9c1 \ub41c \ud15c\ud50c\ub9bf\uc5d0 \ucee8\ud14d\uc2a4\ud2b8\ub85c \uc790\ub3d9 \uc804\ub2ec \ud560 \uc218 \uc788\ub294 \ubc29\uc2dd\uc73c\ub85c \uc21c\uc11c\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uacb0\uacfc\ub97c \uc815\ub82c\ud558\ub294\ub370 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, column headers\ub97c \uc790\ub3d9\uc73c\ub85c \ub2e4\ub974\uac8c \ub80c\ub354\ub9c1 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class UserListView(generics.ListAPIView): queryset = User.objects.all() serializer_class = UserSerializer filter_backends = (filters.OrderingFilter,) ordering_fields = ('username', 'email') ordering = ('username',) ordering \uc18d\uc131\uc740 \ubb38\uc790\uc5f4\uc774\uac70\ub098 \ubb38\uc790\uc5f4\uc758 list/tuple \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. DjangoObjectPermissionsFilter DjangoObjectPermissionsFilter \ub294 django-guardian \ud328\ud0a4\uc9c0\uc640 \ud568\uaed8 \uc0ac\uc6a9\ub418\uba70 custom 'view' \uad8c\ud55c\uc774 \ucd94\uac00\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ud544\ud130\ub294 \ucffc\ub9ac\uc14b\uc774 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc801\uc808\ud55c view \uad8c\ud55c\uc774 \uc788\ub294 \uac1d\uccb4\ub9cc \ubc18\ud658\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4. DjangoObjectPermissionsFilter \ub97c \uc0ac\uc6a9\ud558\uace0 \uc788\ub2e4\uba74 \uc801\uc808\ud55c \uac1d\uccb4 \uad8c\ud55c \ud074\ub798\uc2a4\ub97c \ucd94\uac00\ud558\uc5ec \uc801\uc808\ud55c \uac1d\uccb4 \uad8c\ud55c\uc774 \uc788\ub294 \uc0ac\uc6a9\uc790\ub9cc \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc791\uc5c5 \ud560 \uc218 \uc788\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac00\uc7a5 \uc26c\uc6b4 \ubc29\ubc95\uc740 DjangoObjectPermissions \ub97c \uc11c\ube0c \ud074\ub798\uc2a4\ud654\ud558\uace0 perms_map \uc18d\uc131\uc5d0 'view' \uad8c\ud55c\uc744 \ucd94\uac00\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. DjangoObjectPermissionsFilter \uc640 DjangoObjectPermissions \ub97c \uc0ac\uc6a9\ud558\ub294 \uc644\uc804\ud55c \uc608\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. permission.py : class CustomObjectPermissions(permissions.DjangoObjectPermissions): \"\"\" Similar to `DjangoObjectPermissions`, but adding 'view' permissions. \"\"\" perms_map = { 'GET': ['%(app_label)s.view_%(model_name)s'], 'OPTIONS': ['%(app_label)s.view_%(model_name)s'], 'HEAD': ['%(app_label)s.view_%(model_name)s'], 'POST': ['%(app_label)s.add_%(model_name)s'], 'PUT': ['%(app_label)s.change_%(model_name)s'], 'PATCH': ['%(app_label)s.change_%(model_name)s'], 'DELETE': ['%(app_label)s.delete_%(model_name)s'], } views.py : class EventViewSet(viewsets.ModelViewSet): \"\"\" Viewset that only lists events if user has 'view' permissions, and only allows operations on individual events if user has appropriate 'view', 'add', 'change' or 'delete' permissions. \"\"\" queryset = Event.objects.all() serializer_class = EventSerializer filter_backends = (filters.DjangoObjectPermissionsFilter,) permission_classes = (myapp.permissions.CustomObjectPermissions,) \ubaa8\ub378\uc5d0 \ub300\ud55c 'view' \uad8c\ud55c\uc744 \ucd94\uac00\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 django-guardian \uc758 relevant section \uacfc \uc774 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c \uc744 \ucc38\uc870\ud558\uc138\uc694. Custom generic filtering \ub098\ub9cc\uc758 generic \ud544\ud130\ub9c1 \ubc31\uc5d4\ub4dc\ub97c \uc81c\uacf5\ud558\uac70\ub098, \ub2e4\ub978 \uac1c\ubc1c\uc790\uac00 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc124\uce58 \uac00\ub2a5\ud55c \uc571\uc744 \uc791\uc131 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c\ud558\ub824\uba74 BaseFilterBackend \ub97c \ubb34\uc2dc\ud558\uace0 .filter_queryset(self, request, queryset, view) \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694. \uba54\uc11c\ub4dc\ub294 \ud544\ud130\ub9c1 \ub41c \uc0c8 \ucffc\ub9ac\uc14b\uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uac80\uc0c9 \ubc0f \ud544\ud130\ub9c1\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc744\ubfd0\ub9cc \uc544\ub2c8\ub77c generic filter \ubc31\uc5d4\ub4dc\ub294 \ud2b9\uc815 \uc694\uccad\uc774\ub098 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud45c\uc2dc\ub418\uc5b4\uc57c \ud558\ub294 \uac1d\uccb4\ub97c \uc81c\ud55c\ud558\ub294\ub370 \uc720\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Example \uc608\ub97c \ub4e4\uc5b4, \uc0ac\uc6a9\uc790\uac00 \ub9cc\ub4e0 \uac1c\uccb4\ub9cc \ubcfc \uc218 \uc788\ub3c4\ub85d \uc0ac\uc6a9\uc790\ub97c \uc81c\ud55c\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class IsOwnerFilterBackend(filters.BaseFilterBackend): \"\"\" Filter that only allows users to see their own objects. \"\"\" def filter_queryset(self, request, queryset, view): return queryset.filter(owner=request.user) view\uc5d0\uc11c get_queryset() \uc744 \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc5ec \ub3d9\uc77c\ud55c \ub3d9\uc791\uc744 \uc5bb\uc744 \uc218 \uc788\uc9c0\ub9cc filter \ubc31\uc5d4\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 \uc774 \uc81c\ud55c\uc744 \uc5ec\ub7ec view\uc5d0 \ub354 \uc27d\uac8c \ucd94\uac00\ud558\uac70\ub098 \uc804\uccb4 API\uc5d0 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Customizing the interface generic filter\ub294 browsable API\uc5d0\ub3c4 \uce5c\ud130\ud398\uc774\uc2a4\ub97c \uc81c\uacf5 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\ub824\uba74 filter\uc758 \ub80c\ub354\ub9c1 \ub41c HTML \ud45c\ud604\uc744 \ubc18\ud658\ud558\ub294 to_html() \uba54\uc11c\ub4dc\ub97c \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\uc758 \uc11c\uba85\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. to_html(self, request, queryset, view) \uba54\uc11c\ub4dc\ub294 \ub80c\ub354\ub9c1 \ub41c HTML \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud574\uc57c \ud569\ub2c8\ub2e4. Pagination & schemas REST \ud504\ub808\uc784\uc6cc\ud06c\uac00 \uc81c\uacf5\ud558\ub294 \uc2a4\ud0a4\ub9c8 \uc790\ub3d9 \uc0dd\uc131\uc5d0\uc11c filter \ucee8\ud2b8\ub864\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub824\uba74, get_schema_fields() \uba54\uc11c\ub4dc\ub97c \uad6c\ud604\ud558\uba74 \ub429\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 coreapi.Filed \uc778\uc2a4\ud134\uc2a4\uc758 list\ub97c \ubc18\ud658\ud574\uc57c \ud569\ub2c8\ub2e4. Third party packages \ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub294 \ucd94\uac00 \ud544\ud130 \uad6c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Django REST framework django-rest-framework-filters \ud328\ud0a4\uc9c0\ub294 DjangoFilterBackend \ud074\ub798\uc2a4\uc640 \ud568\uaed8 \uc791\ub3d9\ud558\uba70 \uad00\uacc4\uc5d0 \ub300\ud55c \ud544\ud130\ub97c \uc27d\uac8c \ub9cc\ub4e4\uac70\ub098 \uc8fc\uc5b4\uc9c4 \ud544\ub4dc\uc5d0 \ub300\ud574 \uc5ec\ub7ec \uac1c\uc758 \ud544\ud130 \uc870\ud68c \uc720\ud615\uc744 \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Django REST framework full word search filter djangorestframework-word-filter \ub294 filters.SearchFilter \uc758 \ub300\uc548\uc73c\ub85c \uac1c\ubc1c\ub418\uc5c8\uc73c\uba70 \ud14d\uc2a4\ud2b8 \ub610\ub294 \uc644\uc804 \uc77c\uce58\uc5d0\uc11c \uc804\uccb4 \ub2e8\uc5b4\ub97c \uac80\uc0c9\ud569\ub2c8\ub2e4. Django URL Filter django-url-filter \ub294 \uce5c\uc778\uac04\uc801\uc778 URL\uc744 \ud1b5\ud574 \ub370\uc774\ud130\ub97c \ud544\ud130\ub9c1\ud558\ub294 \uc548\uc804\ud55c \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub294 DRF serializer \ubc0f \ud544\ub4dc\uc640 \ub9e4\uc6b0 \uc720\uc0ac\ud558\uac8c \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc989, filtersets \ubc0f \ud544\ud130\ub77c\uace0 \ud558\ub294 \uac83\uc744 \uc81c\uc678\ud558\uace0\ub294 \uc911\ucca9 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uad00\ub828 \ub370\uc774\ud130\ub97c \uc27d\uac8c \ud544\ud130\ub9c1 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc774 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \uc77c\ubc18\uc801\uc778 \ubaa9\uc801\uc774\ubbc0\ub85c Django QuerySet \ubfd0\ub9cc \uc544\ub2c8\ub77c \ub2e4\ub978 \uc18c\uc2a4\uc758 \ub370\uc774\ud130\ub97c \ud544\ud130\ub9c1\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. drf-url-filters drf-url-filter \ub294 Drf ModelViewSet \uc758 Queryset \uc5d0 \ud544\ud130\ub97c \uac04\ub2e8\ud558\uace0 \uad6c\uc131 \uac00\ub2a5\ud55c \ubc29\uc2dd\uc73c\ub85c \uc801\uc6a9\ud558\ub294 \uac04\ub2e8\ud55c Django \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc785\ub2c8\ub2e4. \ub610\ud55c \ub4e4\uc5b4\uc624\ub294 \ucffc\ub9ac parameter \ubc0f \ud574\ub2f9 \uac12\uc5d0 \ub300\ud55c \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc544\ub984\ub2e4\uc6b4 python \ud328\ud0a4\uc9c0 Voluptuous \ub294 \ub4e4\uc5b4\uc624\ub294 \ucffc\ub9ac parameter\uc758 \uc720\ud6a8\uc131 \uac80\uc0ac\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uac00\uc7a5 \uad00\ub300\ud55c \ubd80\ubd84\uc740 \ucffc\ub9ac parameter \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub530\ub77c \uc790\uccb4 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc815\uc758\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4.","title":"Filtering"},{"location":"Filtering/#django-rest-framework-filtering","text":"\"The root QuerySet provided by the Manager describes all objects in the database table. Usually, though, you'll need to select only a subset of the complete set of objects.\" \"Manager\uac00 \uc81c\uacf5\ud558\ub294 \ub8e8\ud2b8 QuerySet\uc740 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud14c\uc774\ube14\uc758 \ubaa8\ub4e0 \uac1d\uccb4\ub97c \uc124\uba85\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc77c\ubc18\uc801\uc73c\ub85c \uac1c\uccb4\uc758 \uc804\uccb4 \uc9d1\ud569 \uc911 \uc77c\ubd80\ub9cc \uc120\ud0dd\ud574\uc57c\ud569\ub2c8\ub2e4.\" \u2014 Django documentation","title":"Django REST Framework - Filtering"},{"location":"Filtering/#filtering","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 generic list view \uc758 \uae30\ubcf8 \ub3d9\uc791 \ubaa8\ub378 manager\uc5d0 \ub300\ud55c \uc804\uccb4 QuerySet\uc744 \ubc18\ud658\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub54c\ub54c\ub85c \ub2f9\uc2e0 API\uac00 QuerySet\uc5d0 \uc758\ud574 \ubc18\ud658 \ub418\ub41c \ud56d\ubaa9\uc744 \uc81c\ud55c\ud558\uae30\ub97c \uc6d0\ud560 \uac83\uc785\ub2c8\ub2e4. GenericAPIView \ub97c \ud558\uc704 \ud074\ub798\uc2a4\ub85c \ud558\ub294 view\uc758 QuerySet\ub97c \ud544\ud130\ub9c1\ud558\ub294 \uac00\uc7a5 \uac04\ub2e8\ud55c \ubc29\ubc95\uc740 .get_queryset() \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774 \uba54\uc18c\ub4dc\uc751 \ub300\uccb4\ub77c\uba74 \ub2e4\uc591\ud55c \ubc29\uc2dd\uc73c\ub85c view\uc5d0\uc11c \ub9ac\ud134 \ub41c queryset\uc744 custom \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Filtering"},{"location":"Filtering/#filtering-against-the-current-user","text":"\ucffc\ub9ac\ub97c \ud544\ud130\ub9c1\ud558\uc5ec \uc694\uccad\uc744 \ud55c \ud604\uc7ac \uc778\uc99d \ub41c \uc0ac\uc6a9\uc790\uc640 \uad00\ub828\ub41c \uacb0\uacfc\ub9cc \ubc18\ud658\ub418\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. request.user \uc758 \uac12\uc5d0 \ub530\ub77c \ud544\ud130\ub9c1\uc744 \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: from myapp.models import Purchase from myapp.serializers import PurchaseSerializer from rest_framework import generics class PurchaseList(generics.ListAPIView): serializer_class = PurchaseSerializer def get_queryset(self): \"\"\" This view should return a list of all the purchases for the currently authenticated user. \"\"\" user = self.request.user return Purchase.objects.filter(purchaser=user)","title":"Filtering against the current user (\ud604\uc7ac \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \ud544\ud130\ub9c1)"},{"location":"Filtering/#filtering-against-the-url","text":"\ud544\ud130\ub9c1\uc758 \ub610 \ub2e4\ub978 \uc2a4\ud0c0\uc77c\uc740 URL \uc77c\ubd80\ub97c \uae30\ubc18\uc73c\ub85c queryset\uc744 \uc81c\ud55c\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 URLconfig\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc740 \ud56d\ubaa9\uc774 \ud3ec\ud568 \ub41c \uacbd\uc6b0: url('^purchases/(?P<username>.+)/$', PurchaseList.as_view()), \uadf8\ub7f0 \ub2e4\uc74c URL\uc758 \uc0ac\uc6a9\uc790 \uc774\ub984 \ubd80\ubd84\uc73c\ub85c \ud544\ud130\ub9c1 \ub41c purchases queryset\uc744 \ubc18\ud658\ud558\ub294 view\ub97c \uc791\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class PurchaseList(generics.ListAPIView): serializer_class = PurchaseSerializer def get_queryset(self): \"\"\" This view should return a list of all the purchases for the user as determined by the username portion of the URL. \"\"\" username = self.kwargs['username'] return Purchase.objects.filter(purchaser__username=username)","title":"Filtering against the URL"},{"location":"Filtering/#filtering-against-query-parameters","text":"\ucd08\uae30 \ucffc\ub9ac\uc14b\uc744 \ud544\ud130\ub9c1\ud558\ub294 \ub9c8\uc9c0\ub9c9 \uc608\ub294 URL\uc758 \ucffc\ub9ac parameter\ub97c \uae30\ubc18\uc73c\ub85c \ucd08\uae30 \ucffc\ub9ac\uac8d\uc744 \uacb0\uc815\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. http://example.com/api/purchases?username=denvercoder9 \uacfc \uac19\uc740 URL\uc744 \ucc98\ub9ac\ud558\ub824\uba74 .get.queryset() \uc744 \uc7ac\uc815\uc758\ud558\uace0 username \ub9e4\uac1c\ubcc0\uc218\uac00 URL\uc5d0 \ud3ec\ud568\ub418\uc5b4\uc788\ub294 \uacbd\uc6b0\uc5d0\ub9cc \ucffc\ub9ac\uc14b\uc744 \ud544\ud130\ub9c1\ud558\uc138\uc694. class PurchaseList(generics.ListAPIView): serializer_class = PurchaseSerializer def get_queryset(self): \"\"\" Optionally restricts the returned purchases to a given user, by filtering against a `username` query parameter in the URL. \"\"\" queryset = Purchase.objects.all() username = self.request.query_params.get('username', None) if username is not None: queryset = queryset.filter(purchaser__username=username) return queryset","title":"Filtering against query parameters"},{"location":"Filtering/#generic-filtering","text":"\uae30\ubcf8 \ucffc\ub9ac\uc14b\uc744 \uc7ac\uc815\uc758 \ud560 \uc218 \uc788\uc744\ubfd0\ub9cc \uc544\ub2c8\ub77c REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ubcf5\uc7a1\ud55c \uac80\uc0c9 \ubc0f \ud544\ud130\ub97c \uc27d\uac8c \uad6c\uc131\ud560 \uc218 \uc788\ub294 \uc77c\ubc18 \ud544\ud130\ub9c1 \ubc31\uc5d4\ub4dc\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Generic filter\ub294 browsable API \ubc0f admin API\uc5d0\uc11c HTML \ucee8\ud2b8\ub864\ub85c \ub098\ud0c0\ub0bc \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"Generic Filtering"},{"location":"Filtering/#setting-filter-backends","text":"\uae30\ubcf8 \ud544\ud130 \ubc31\uc5d4\ub4dc\ub294 DEFAULT_FILTER_BACKENDS \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\uccb4\uc801\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74, REST_FRAMEWORK = { 'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',) } GenericAPIView CBV\ub97c \uc0ac\uc6a9\ud558\uc5ec view \ub2f9 \ub610\ub294 viewset \ub2e8\uc704\ub85c \ud544\ud130 \ubc31\uc5d4\ub4dc\ub97c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. import django_filters.rest_framework from django.contrib.auth.models import User from myapp.serializers import UserSerializer from rest_framework import generics class UserListView(generics.ListAPIView): queryset = User.objects.all() serializer_class = UserSerializer filter_backends = (django_filters.rest_framework.DjangoFilterBackend,)","title":"Setting filter backends"},{"location":"Filtering/#filtering-and-object-lookups","text":"\ud544\ud130 \ubc31\uc5d4\ub4dc\ub294 view\uc5d0 \ub300\ud574 \uad6c\uc131\ub418\uace0 list view\ub97c \ud544\ud130\ub9c1\ud558\ub294\ub370 \uc0ac\uc6a9\ub418\ub294 \uacbd\uc6b0, \ud558\ub098\uc758 \uac1d\uccb4\ub97c \ubc18\ud658\ud558\ub294\ub370 \uac00\uc6a9\ub418\ub294 queryset\uc744 \ud544\ud130\ub9c1\ud558\ub294\ub370\uc5d0\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc55e\uc758 \uc608\uc81c\uc640 id\uac00 4675\uc778 \uc81c\ud488\uc758 \uacbd\uc6b0 \ub2e4\uc74c URL\uc740 \ud574\ub2f9 \uc81c\ud488 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ud544\ud130\ub9c1 \uc870\uac74\uc774 \ucda9\uc871\ub418\uc5c8\ub294\uc9c0 \uc5ec\ubd80\uc5d0 \ub530\ub77c \ud574\ub2f9 \uac1d\uccb4\ub97c \ubc18\ud658\ud558\uac70\ub098 404 \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. http://example.com/api/products/4675/?category=clothing&max_price=10.00","title":"Filtering and object lookups"},{"location":"Filtering/#overriding-the-initial-queryset","text":"\uc624\ubc84\ub77c\uc774\ub4dc \ub41c .get_queryset() \uacfc generic filtering\uc744 \ud568\uaed8 \uc0ac\uc6a9\ud558\uba74 \ubaa8\ub4e0 \uac83\uc774 \uc608\uc0c1\ub300\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, Product \uac00 User \ub77c\ub294 \uad6c\ub9e4\uc790\uc640 many-to-many \uad00\uacc4\ub97c \uac16\uace0 \uc788\ub2e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 view\ub97c \uc791\uc131\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. class PurchasedProductsList(generics.ListAPIView): \"\"\" Return a list of all the products that the authenticated user has ever purchased, with optional filtering. \"\"\" model = Product serializer_class = ProductSerializer filter_class = ProductFilter def get_queryset(self): user = self.request.user return user.purchase_set.all()","title":"Overriding the initial queryset"},{"location":"Filtering/#api-guide","text":"","title":"API Guide"},{"location":"Filtering/#djangofilterbackend","text":"django-filter \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0\ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ub300\ud574 \uace0\ub3c4\uc758 custom\uc774 \uac00\ub2a5\ud55c \ud544\ub4dc \ud544\ud130\ub9c1\uc744 \uc9c0\uc6d0\ud558\ub294 DjangoFilterBackend \ud074\ub798\uc2a4\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. DjangoFilterBackend \ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \uba3c\uc800 django-filter \ub97c \uc124\uce58\ud558\uc138\uc694. pip install django-filter \uc774\uc81c \ud544\ud130 \ubc31\uc5d4\ub4dc\ub97c \uc124\uc815\uc5d0 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',) } \ub610\ub294 \ud544\ud130 \ubc31\uc5d4\ub4dc\ub97c \uac1c\ubcc4 view \ub610\ub294 viewset\uc5d0 \ucd94\uac00\ud558\uc138\uc694. from django_filters.rest_framework import DjangoFilterBackend class UserListView(generics.ListAPIView): ... filter_backends = (DjangoFilterBackend,) browsable API\ub098 admin API\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, django-crispy-forms \ub97c \uc124\uce58\ud558\uc5ec HTML View\uc5d0\uc11c \ud544\ud130 \uc591\uc2dd\uc758 \ud45c\uc2dc\ub97c \ud5a5\uc0c1\uc2dc\ud0a4\uace0 \ubd80\ud2b8\uc2a4\ud2b8\ub7a93 HTML\uc744 \ub79c\ub354\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. pip install django-crispy-forms crispy-forms \ub97c \uc124\uce58\ud558\uace0 Django\uc758 INSTALLED_APPS \uc5d0 \ucd94\uac00\ud558\uba74 browsable API\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 DjangoFilterBackend \uc5d0 \ub300\ud55c \ud544\ud130\ub9c1 \ucee8\ud2b8\ub864\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"DjangoFilterBackend"},{"location":"Filtering/#specifying-filter-fields","text":"\ud544\uc694\ud55c \uac83\uc740 \uac04\ub2e8\ud55c equality-based \ud544\ud130\ub9c1 \ubfd0\uc785\ub2c8\ub2e4. \ud544\ud130\ub9c1 \ud560 \ud544\ub4dc \uc9d1\ud569\uc744 \ub098\uc5f4\ud558\ub294 view \ub610\ub294 viewset\uc5d0 filter_fields \uc18d\uc131\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class ProductList(generics.ListAPIView): queryset = Product.objects.all() serializer_class = ProductSerializer filter_backends = (filters.DjangoFilterBackend,) filter_fields = ('category', 'in_stock') \uc774\ub807\uac8c \ud558\uba74 \uc8fc\uc5b4\uc9c4 \ud544\ub4dc\uc5d0 \ub300\ud55c FilterSet \ud074\ub798\uc2a4\uac00 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub418\uba70 \ub2e4\uc74c\uacfc \uac19\uc740 \uc694\uccad\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. http://example.com/api/products?category=clothing&in_stock=True","title":"Specifying filter fields"},{"location":"Filtering/#specifying-a-filterset-filterset","text":"\uace0\uae09 \ud544\ud130\ub9c1 \uc694\uad6c \uc0ac\ud56d\uc758 \uacbd\uc6b0 view\uc5d0\uc11c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 FilterSet \ud074\ub798\uc2a4\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608: import django_filters from myapp.models import Product from myapp.serializers import ProductSerializer from rest_framework import generics class ProductFilter(django_filters.rest_framework.FilterSet): min_price = django_filters.NumberFilter(name=\"price\", lookup_expr='gte') max_price = django_filters.NumberFilter(name=\"price\", lookup_expr='lte') class Meta: model = Product fields = ['category', 'in_stock', 'min_price', 'max_price'] class ProductList(generics.ListAPIView): queryset = Product.objects.all() serializer_class = ProductSerializer filter_backends = (django_filters.rest_framework.DjangoFilterBackend,) filter_class = ProductFilter \uadf8\ub7ec\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uc694\uccad\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. http://example.com/api/products?category=clothing&max_price=10.00 django-filter \ub97c \uc0ac\uc6a9\ud558\uc5ec \uad00\uacc4\ub97c \ud655\uc7a5\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \uc81c\ud488\uc5d0\ub294 \uc81c\uc870\uc5c5\uccb4 \ubaa8\ub378\uc5d0 \ub300\ud55c \uc678\ub798 \ud0a4\uac00 \uc788\ub2e4\uace0 \uac00\uc815\ud558\uc5ec \uc81c\uc870\uc5c5\uccb4 \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud544\ud130\ub9c1 \ud558\ub294 \ud544\ud130\ub97c \ub9cc\ub4ed\ub2c8\ub2e4. \uc608: import django_filters from myapp.models import Product from myapp.serializers import ProductSerializer from rest_framework import generics class ProductFilter(django_filters.rest_framework.FilterSet): class Meta: model = Product fields = ['category', 'in_stock', 'manufacturer__name'] \uc774\ub807\uac8c \ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \ucffc\ub9ac\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. http://example.com/api/products?manufacturer__name=foo \uc774\uac83\uc740 \uc88b\uc740 \uc77c\uc774\uc9c0\ub9cc Django\uc758 double-underscore \uaddc\uce59\uc744 API\uc758 \uc77c\ubd80\ub85c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \ub300\uc2e0 \uba85\uc2dd\uc801\uc73c\ub85c \ud544\ud130 \uc778\uc218\uc758 \uc774\ub984\uc744 \uc9c0\uc815\ud558\ub824\uba74 FilterSet \ud074\ub798\uc2a4\uc5d0 \ud544\ud130 \uc778\uc218\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \ud3ec\ud568\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. import django_filters from myapp.models import Product from myapp.serializers import ProductSerializer from rest_framework import generics class ProductFilter(django_filters.rest_framework.FilterSet): manufacturer = django_filters.CharFilter(name=\"manufacturer__name\") class Meta: model = Product fields = ['category', 'in_stock', 'manufacturer'] \uc774\uc81c \ub2e4\uc74c\uc744 \uc2e4\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. http://example.com/api/products?manufacturer=foo \ud544\ud130 \uc14b \uc0ac\uc6a9\ub370 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 django-filter documentation \ub97c \ucc38\uc870\ud558\uc138\uc694. Hints & Tips \uae30\ubcf8\uc801\uc73c\ub85c \ud544\ud130\ub9c1\uc740 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. DjangoFilterBackend \ub97c \uc0ac\uc6a9\ud558\ub824\uba74 DEFAULT_FILTER_BACKENDS \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc124\uce58\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694. Boolean \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud560 \ub54c\ub294 0 , 1 , true \ub098 false \uac00 \uc544\ub2cc URL \ucffc\ub9ac \ub9e4\uac1c\ubcc0\uc218\uc5d0 True \ubc0f False \uac12\uc744 \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. (\ud5c8\uc6a9\ub41c boolean \uac12\uc740 \ud604\uc7ac Django\uc758 NullBooleanSelect implementation \uc5d0\uc11c \uace0\uc815\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.) django-filter \ub294 Django\uc758 double-underscore \ubb38\ubc95\uc744 \ud1b5\ud574 \uad00\uacc4\uac00 \ub9fa\uc5b4\uc9c4 \ud544\ud130\ub9c1\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4.","title":"Specifying a FilterSet (FilterSet \uc9c0\uc815\ud558\uae30)"},{"location":"Filtering/#searchfilter","text":"SearchFilter \ud074\ub798\uc2a4\ub294 \uac04\ub2e8\ud55c \ub2e8\uc77c \ucffc\ub9ac parameter \uae30\ubc18 \uac80\uc0c9\uc744 \uc9c0\uc6d0\ud558\uba70 django \uad00\ub9ac\uc790\uc758 \uac80\uc0c9 \uae30\ub2a5 \uc744 \uae30\ubc18\uc73c\ub85c \ud569\ub2c8\ub2e4. \uc0ac\uc6a9 \uc911\uc5d0\ub294 browsable API\uc5d0 SearchFilter \ucee8\ud2b8\ub864\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. SearchFilter \ud074\ub798\uc2a4\ub294 \ubdf0\uc5d0 search_fields \uc18d\uc131\uc774 \uc124\uc815\ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc801\uc6a9\ub429\ub2c8\ub2e4. search_fields \uc18d\uc131\uc740 CharField \ub610\ub294 TextField \uc640 \uac19\uc774 \ubaa8\ub378\uc758 \ud14d\uc2a4\ud2b8 \uc720\ud615 \ud544\ub4dc\uc758 \uc774\ub984\uc758 list\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. class UserListView(generics.ListAPIView): queryset = User.objects.all() serializer_class = UserSerializer filter_backends = (filters.SearchFilter,) search_fields = ('username', 'email') \uc774\ub807\uac8c \ud558\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ub2e4\uc74c\uacfc \uac19\uc740 \ucffc\ub9ac\ub97c \uc791\uc131\ud558\uc5ec list\uc758 items\ub97c \ud544\ud130\ub9c1 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. http://example.com/api/users?search=russell \uac80\uc0c9 API double-underscore \ud45c\uae30\ubc95\uc744 \uc0ac\uc6a9\ud558\uc5ec ForeignKey \ub610\ub294 ManyToManyField \uc5d0\uc11c \uad00\ub828 \uc870\ud68c\ub97c \uc218\ud589\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. search_fields = ('username', 'email', 'profile__profession') \uae30\ubcf8\uc801\uc73c\ub85c \uac80\uc0c9\uc740 \ub300\uc18c \ubb38\uc790\ub97c \uad6c\ubd84\ud558\uc9c0 \uc54a\ub294 \ubd80\ubd84 \uc77c\uce58\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uac80\uc0c9 parameter\uc5d0\ub294 \uacf5\ubc31 \ub610\ub294 / \ub610\ub294 \uc27c\ud45c\ub85c \uad6c\ubd84 \ub41c \uc5ec\ub7ec \uac80\uc0c9\uc5b4\uac00 \ud3ec\ud568 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\ub7ec \uac80\uc0c9\uc5b4\uac00 \uc0ac\uc6a9\ub418\uba74 \uc81c\uacf5\ub41c \ubaa8\ub4e0 \uc6a9\uc5b4\uac00 \uc77c\uce58\ud558\ub294 \uacbd\uc6b0\uc5d0\ub9cc list\uc5d0\uc11c \uac1d\uccb4\uac00 \ubc18\ud658\ub429\ub2c8\ub2e4. \uac80\uc0c9 \ub3d9\uc791\uc740 \ub2e4\uc591\ud55c \ubb38\uc790\ub97c search_fields \uc55e\uc5d0 \ubd99\uc774\uba74 \uc81c\ud55c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. '^' : \uac80\uc0c9\uc744 \uc2dc\uc791\ud569\ub2c8\ub2e4. '=' : \uc815\ud655\ud788 \uc77c\uce58 '@' : \uc804\uccb4 \ud14d\uc2a4\ud2b8 \uac80\uc0c9 (\ud604\uc7ac django\uc758 MySQL \ubc31\uc5d4\ub4dc\ub9cc \uc9c0\uc6d0\ub429\ub2c8\ub2e4. '$' : \uc815\uaddc\uc2dd \uac80\uc0c9 \uc608\ub97c \ub4e4\uba74 : search_fields = ('=username', '=email') \uae30\ubcf8\uc801\uc73c\ub85c \uac80\uc0c9 parameter\uc758 \uc774\ub984\uc740 'search' \uc774\uc9c0\ub9cc SEARCH_PARAM \uc124\uc815\uc73c\ub85c \uc624\ubc84\ub77c\uc774\ub4dc \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc7a5\uace0 \ubb38\uc11c \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"SearchFilter"},{"location":"Filtering/#orderingfilter","text":"OrderingFilter \ud074\ub798\uc2a4\ub294 \ucffc\ub9ac parameter\ub85c \uc81c\uc5b4\ub418\ub294 \uac04\ub2e8\ud55c \uacb0\uacfc \uc21c\uc11c\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \ucffc\ub808 parameter\uc758 \uc774\ub984\uc740 'ordering' \uc774\uc9c0\ub9cc, ORDERING_PARAM \uc124\uc815\uc73c\ub85c \uc624\ubc84\ub77c\uc774\ub4dc \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc0ac\uc6a9\uc790 \uc774\ub984\ubcc4\ub85c \uc0ac\uc6a9\uc790\ub97c \uc815\ub82c \ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \uc785\ub825\ud558\uc138\uc694. http://example.com/api/users?ordering=username \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \ud544\ub4dc \uc774\ub984\uc758 \uc811\ub450\uc0ac\ub97c '-' \ub85c \uc9c0\uc815\ud568\uc73c\ub85c\uc368 \uc5ed\uc21c\uc73c\ub85c \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. http://example.com/api/users?ordering=-username \uc5ec\ub7ec \uac1c\uc758 \uc21c\uc11c\ub3c4 \uc9c0\uc815 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. http://example.com/api/users?ordering=account,username","title":"OrderingFilter"},{"location":"Filtering/#specifying-which-fields-may-be-ordered-against","text":"API\uac00 \uc815\ub82c \ud544\ud130\uc5d0\uc11c \ud5c8\uc6a9\ud574\uc57c\ud558\ub294 \ud544\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc774 view\uc5d0\uc11c ordering_fields \uc18d\uc131\uc744 \uc124\uc815\ud558\uc5ec \uc774\ub97c \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class UserListView(generics.ListAPIView): queryset = User.objects.all() serializer_class = UserSerializer filter_backends = (filters.OrderingFilter,) ordering_fields = ('username', 'email') \uc774\ub807\uac8c \ud558\uba74 \uc0ac\uc6a9\uc790\uac00 \uc554\ud638 \ud574\uc2dc \ud544\ub4dc\ub098 \uae30\ud0c0 \uc911\uc694\ud55c \ub370\uc774\ud130\uc5d0 \ub300\ud574 \uc815\ub82c\ud560 \uc218 \uc788\uac8c \ud558\ub294 \ub4f1 \uc608\uae30\uce58 \uc54a\uc740 \ub370\uc774\ud130 \uc720\ucd9c\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. view\uc5d0\uc11c ordering_fields \uc18d\uc131\uc744 \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 \ud544\ud130 \ud074\ub798\uc2a4\ub294 \uae30\ubcf8\uc801\uc73c\ub85c serializer_class \uc18d\uc131\uc744 \uc9c0\uc815\ub41c serializer\uc758 \uc77d\uc744 \uc218 \uc788\ub294 \ud544\ub4dc\ub97c \ud544\ud130\ub9c1 \ud560 \uc218 \uc788\uac8c \ud569\ub2c8\ub2e4. ordering_fields \uc5d0 \ud55c\uac1c\uc758 \uc870\uac74(ex. start_date)\ub9cc \ub123\uc73c\uba74, pagination \uc0ac\uc6a9\uc2dc \uc911\ubcf5\ub418\ub294 \uc870\uac74\uc5d0 \ub300\ud558\uc5ec \uc5b4\ub5a4 \uac83\uc744 \uc55e\uc5d0 \ub450\uc5b4\uc57c\ud558\ub294\uc9c0\uc5d0 \ub300\ud55c \uc774\uc288\uac00 \uc77c\uc5b4\ub098\uc11c \ud398\uc774\uc9c0\uac00 \ub118\uc5b4\uac08\ub54c \uc911\ubcf5\ub41c \uac12\uc774 \ucd9c\ub825\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub450\uac1c \uc774\uc0c1\uc758 \uc870\uac74\uc744 \uc81c\uc2dc\ud558\uba74 pagination \uc2dc \uc911\ubcf5\ub41c \uac12\uc758 \ucd9c\ub825\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubdf0\uc5d0 \uc0ac\uc6a9 \ub41c \ucffc\ub9ac\uc14b\uc740 \uc911\uc694\ud55c \ub370\uc774\ud130\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc740 \uac83\uc73c\ub85c \ud655\uc2e0\ud558\ub294 \uacbd\uc6b0, \ud2b9\uc218 \uac12 '__all__' \uc744 \uc0ac\uc6a9\ud558\uc5ec view\uac00 \ubaa8\ub4e0 \ubaa8\ub378 \ud544\ub4dc \ub610\ub294 \ucffc\ub9ac\uc14b \ud569\uacc4\uc5d0\uc11c \uc815\ub82c\uc744 \ud5c8\uc6a9\ud558\ub3c4\ub85d \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class BookingsListView(generics.ListAPIView): queryset = Booking.objects.all() serializer_class = BookingSerializer filter_backends = (filters.OrderingFilter,) ordering_fields = '__all__'","title":"Specifying which fields may be ordered against"},{"location":"Filtering/#specifying-a-default-ordering","text":"ordering \uc18d\uc131\uc774 view\uc5d0 \uc124\uc815\ub418\uc5b4 \uc788\ub294 \uacbd\uc6b0, \uc774\uac83\uc740 \uae30\ubcf8 \uc21c\uc11c\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ucd08\uae30 \ucffc\ub9ac\uc14b\uc5d0\uc11c order_by \ub97c \uc124\uc815\ud558\uc5ec \uc774 \uc791\uc5c5\uc744 \uc81c\uc5b4\ud560 \uc218 \uc788\uc9c0\ub9cc view\uc758 ordering parameter\ub97c \uc0ac\uc6a9\ud558\uba74 \ub80c\ub354\ub9c1 \ub41c \ud15c\ud50c\ub9bf\uc5d0 \ucee8\ud14d\uc2a4\ud2b8\ub85c \uc790\ub3d9 \uc804\ub2ec \ud560 \uc218 \uc788\ub294 \ubc29\uc2dd\uc73c\ub85c \uc21c\uc11c\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uacb0\uacfc\ub97c \uc815\ub82c\ud558\ub294\ub370 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, column headers\ub97c \uc790\ub3d9\uc73c\ub85c \ub2e4\ub974\uac8c \ub80c\ub354\ub9c1 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class UserListView(generics.ListAPIView): queryset = User.objects.all() serializer_class = UserSerializer filter_backends = (filters.OrderingFilter,) ordering_fields = ('username', 'email') ordering = ('username',) ordering \uc18d\uc131\uc740 \ubb38\uc790\uc5f4\uc774\uac70\ub098 \ubb38\uc790\uc5f4\uc758 list/tuple \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Specifying a default ordering"},{"location":"Filtering/#djangoobjectpermissionsfilter","text":"DjangoObjectPermissionsFilter \ub294 django-guardian \ud328\ud0a4\uc9c0\uc640 \ud568\uaed8 \uc0ac\uc6a9\ub418\uba70 custom 'view' \uad8c\ud55c\uc774 \ucd94\uac00\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ud544\ud130\ub294 \ucffc\ub9ac\uc14b\uc774 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc801\uc808\ud55c view \uad8c\ud55c\uc774 \uc788\ub294 \uac1d\uccb4\ub9cc \ubc18\ud658\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4. DjangoObjectPermissionsFilter \ub97c \uc0ac\uc6a9\ud558\uace0 \uc788\ub2e4\uba74 \uc801\uc808\ud55c \uac1d\uccb4 \uad8c\ud55c \ud074\ub798\uc2a4\ub97c \ucd94\uac00\ud558\uc5ec \uc801\uc808\ud55c \uac1d\uccb4 \uad8c\ud55c\uc774 \uc788\ub294 \uc0ac\uc6a9\uc790\ub9cc \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc791\uc5c5 \ud560 \uc218 \uc788\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac00\uc7a5 \uc26c\uc6b4 \ubc29\ubc95\uc740 DjangoObjectPermissions \ub97c \uc11c\ube0c \ud074\ub798\uc2a4\ud654\ud558\uace0 perms_map \uc18d\uc131\uc5d0 'view' \uad8c\ud55c\uc744 \ucd94\uac00\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. DjangoObjectPermissionsFilter \uc640 DjangoObjectPermissions \ub97c \uc0ac\uc6a9\ud558\ub294 \uc644\uc804\ud55c \uc608\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. permission.py : class CustomObjectPermissions(permissions.DjangoObjectPermissions): \"\"\" Similar to `DjangoObjectPermissions`, but adding 'view' permissions. \"\"\" perms_map = { 'GET': ['%(app_label)s.view_%(model_name)s'], 'OPTIONS': ['%(app_label)s.view_%(model_name)s'], 'HEAD': ['%(app_label)s.view_%(model_name)s'], 'POST': ['%(app_label)s.add_%(model_name)s'], 'PUT': ['%(app_label)s.change_%(model_name)s'], 'PATCH': ['%(app_label)s.change_%(model_name)s'], 'DELETE': ['%(app_label)s.delete_%(model_name)s'], } views.py : class EventViewSet(viewsets.ModelViewSet): \"\"\" Viewset that only lists events if user has 'view' permissions, and only allows operations on individual events if user has appropriate 'view', 'add', 'change' or 'delete' permissions. \"\"\" queryset = Event.objects.all() serializer_class = EventSerializer filter_backends = (filters.DjangoObjectPermissionsFilter,) permission_classes = (myapp.permissions.CustomObjectPermissions,) \ubaa8\ub378\uc5d0 \ub300\ud55c 'view' \uad8c\ud55c\uc744 \ucd94\uac00\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 django-guardian \uc758 relevant section \uacfc \uc774 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c \uc744 \ucc38\uc870\ud558\uc138\uc694.","title":"DjangoObjectPermissionsFilter"},{"location":"Filtering/#custom-generic-filtering","text":"\ub098\ub9cc\uc758 generic \ud544\ud130\ub9c1 \ubc31\uc5d4\ub4dc\ub97c \uc81c\uacf5\ud558\uac70\ub098, \ub2e4\ub978 \uac1c\ubc1c\uc790\uac00 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc124\uce58 \uac00\ub2a5\ud55c \uc571\uc744 \uc791\uc131 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c\ud558\ub824\uba74 BaseFilterBackend \ub97c \ubb34\uc2dc\ud558\uace0 .filter_queryset(self, request, queryset, view) \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694. \uba54\uc11c\ub4dc\ub294 \ud544\ud130\ub9c1 \ub41c \uc0c8 \ucffc\ub9ac\uc14b\uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uac80\uc0c9 \ubc0f \ud544\ud130\ub9c1\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc744\ubfd0\ub9cc \uc544\ub2c8\ub77c generic filter \ubc31\uc5d4\ub4dc\ub294 \ud2b9\uc815 \uc694\uccad\uc774\ub098 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud45c\uc2dc\ub418\uc5b4\uc57c \ud558\ub294 \uac1d\uccb4\ub97c \uc81c\ud55c\ud558\ub294\ub370 \uc720\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Custom generic filtering"},{"location":"Filtering/#example","text":"\uc608\ub97c \ub4e4\uc5b4, \uc0ac\uc6a9\uc790\uac00 \ub9cc\ub4e0 \uac1c\uccb4\ub9cc \ubcfc \uc218 \uc788\ub3c4\ub85d \uc0ac\uc6a9\uc790\ub97c \uc81c\ud55c\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class IsOwnerFilterBackend(filters.BaseFilterBackend): \"\"\" Filter that only allows users to see their own objects. \"\"\" def filter_queryset(self, request, queryset, view): return queryset.filter(owner=request.user) view\uc5d0\uc11c get_queryset() \uc744 \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc5ec \ub3d9\uc77c\ud55c \ub3d9\uc791\uc744 \uc5bb\uc744 \uc218 \uc788\uc9c0\ub9cc filter \ubc31\uc5d4\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 \uc774 \uc81c\ud55c\uc744 \uc5ec\ub7ec view\uc5d0 \ub354 \uc27d\uac8c \ucd94\uac00\ud558\uac70\ub098 \uc804\uccb4 API\uc5d0 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Example"},{"location":"Filtering/#customizing-the-interface","text":"generic filter\ub294 browsable API\uc5d0\ub3c4 \uce5c\ud130\ud398\uc774\uc2a4\ub97c \uc81c\uacf5 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\ub824\uba74 filter\uc758 \ub80c\ub354\ub9c1 \ub41c HTML \ud45c\ud604\uc744 \ubc18\ud658\ud558\ub294 to_html() \uba54\uc11c\ub4dc\ub97c \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\uc758 \uc11c\uba85\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. to_html(self, request, queryset, view) \uba54\uc11c\ub4dc\ub294 \ub80c\ub354\ub9c1 \ub41c HTML \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"Customizing the interface"},{"location":"Filtering/#pagination-schemas","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\uac00 \uc81c\uacf5\ud558\ub294 \uc2a4\ud0a4\ub9c8 \uc790\ub3d9 \uc0dd\uc131\uc5d0\uc11c filter \ucee8\ud2b8\ub864\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub824\uba74, get_schema_fields() \uba54\uc11c\ub4dc\ub97c \uad6c\ud604\ud558\uba74 \ub429\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 coreapi.Filed \uc778\uc2a4\ud134\uc2a4\uc758 list\ub97c \ubc18\ud658\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"Pagination &amp; schemas"},{"location":"Filtering/#third-party-packages","text":"\ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub294 \ucd94\uac00 \ud544\ud130 \uad6c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Third party packages"},{"location":"Filtering/#django-rest-framework","text":"django-rest-framework-filters \ud328\ud0a4\uc9c0\ub294 DjangoFilterBackend \ud074\ub798\uc2a4\uc640 \ud568\uaed8 \uc791\ub3d9\ud558\uba70 \uad00\uacc4\uc5d0 \ub300\ud55c \ud544\ud130\ub97c \uc27d\uac8c \ub9cc\ub4e4\uac70\ub098 \uc8fc\uc5b4\uc9c4 \ud544\ub4dc\uc5d0 \ub300\ud574 \uc5ec\ub7ec \uac1c\uc758 \ud544\ud130 \uc870\ud68c \uc720\ud615\uc744 \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Django REST framework"},{"location":"Filtering/#django-rest-framework-full-word-search-filter","text":"djangorestframework-word-filter \ub294 filters.SearchFilter \uc758 \ub300\uc548\uc73c\ub85c \uac1c\ubc1c\ub418\uc5c8\uc73c\uba70 \ud14d\uc2a4\ud2b8 \ub610\ub294 \uc644\uc804 \uc77c\uce58\uc5d0\uc11c \uc804\uccb4 \ub2e8\uc5b4\ub97c \uac80\uc0c9\ud569\ub2c8\ub2e4.","title":"Django REST framework full word search filter"},{"location":"Filtering/#django-url-filter","text":"django-url-filter \ub294 \uce5c\uc778\uac04\uc801\uc778 URL\uc744 \ud1b5\ud574 \ub370\uc774\ud130\ub97c \ud544\ud130\ub9c1\ud558\ub294 \uc548\uc804\ud55c \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub294 DRF serializer \ubc0f \ud544\ub4dc\uc640 \ub9e4\uc6b0 \uc720\uc0ac\ud558\uac8c \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc989, filtersets \ubc0f \ud544\ud130\ub77c\uace0 \ud558\ub294 \uac83\uc744 \uc81c\uc678\ud558\uace0\ub294 \uc911\ucca9 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uad00\ub828 \ub370\uc774\ud130\ub97c \uc27d\uac8c \ud544\ud130\ub9c1 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc774 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \uc77c\ubc18\uc801\uc778 \ubaa9\uc801\uc774\ubbc0\ub85c Django QuerySet \ubfd0\ub9cc \uc544\ub2c8\ub77c \ub2e4\ub978 \uc18c\uc2a4\uc758 \ub370\uc774\ud130\ub97c \ud544\ud130\ub9c1\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Django URL Filter"},{"location":"Filtering/#drf-url-filters","text":"drf-url-filter \ub294 Drf ModelViewSet \uc758 Queryset \uc5d0 \ud544\ud130\ub97c \uac04\ub2e8\ud558\uace0 \uad6c\uc131 \uac00\ub2a5\ud55c \ubc29\uc2dd\uc73c\ub85c \uc801\uc6a9\ud558\ub294 \uac04\ub2e8\ud55c Django \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc785\ub2c8\ub2e4. \ub610\ud55c \ub4e4\uc5b4\uc624\ub294 \ucffc\ub9ac parameter \ubc0f \ud574\ub2f9 \uac12\uc5d0 \ub300\ud55c \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc544\ub984\ub2e4\uc6b4 python \ud328\ud0a4\uc9c0 Voluptuous \ub294 \ub4e4\uc5b4\uc624\ub294 \ucffc\ub9ac parameter\uc758 \uc720\ud6a8\uc131 \uac80\uc0ac\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uac00\uc7a5 \uad00\ub300\ud55c \ubd80\ubd84\uc740 \ucffc\ub9ac parameter \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub530\ub77c \uc790\uccb4 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc815\uc758\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4.","title":"drf-url-filters"},{"location":"Format_suffixes/","text":"Django REST Framework - Format suffixes \"Section 6.2.1 does not say that content negotiation should be used all the time.\" \"\uc139\uc158 6.2.1\uc740 content negotiation\uc774 \ud56d\uc0c1 \uc0ac\uc6a9\ub418\uc5b4\uc57c\ud55c\ub2e4\uace0 \ub9d0\ud558\uc9c0 \uc54a\ub294\ub2e4. \" \u2014 Roy Fielding, REST discuss mailing list Format suffixes \uc6f9 API\uc758 \uc77c\ubc18\uc801\uc778 \ud328\ud134\uc740 URL\uc5d0\uc11c \ud30c\uc77c \uc774\ub984 \ud655\uc7a5\uc790\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 \ubbf8\ub514\uc5b4 \uc720\ud615\uc5d0 \ub300\ud55c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc81c\uacf5\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, 'http://example.com/api/users.json'\uc740 JSON \ud45c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. API\uc758 URLconf\uc5d0 \uc788\ub294 \uac01 \uac1c\ubcc4 \ud56d\ubaa9\uc5d0 \ud615\uc2dd \uc811\ubbf8\uc0ac \ud328\ud134\uc744 \ucd94\uac00\ud558\ub294 \uac83\uc740 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uae30 \uc27d\uace0 DRY\uac00 \uc544\ub2c8\ubbc0\ub85c REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc774\ub7ec\ud55c \ud328\ud134\uc744 URLconf\uc5d0 \ucd94\uac00\ud558\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. format_suffix_patterns Signature : format_suffix_patterns(urlpatterns, suffix_required=False, allowed=None) \uc81c\uacf5\ub41c \uac01 URL \ud328\ud134\uc5d0 \ucd94\uac00 \ub41c \ud615\uc2dd \uc811\ubbf8\uc0ac \ud328\ud134\uc744 \ud3ec\ud568\ud558\ub294 URL \ud328\ud134 list\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. Arguments: urlpatterns : \ud544\uc218 . URL \ud328\ud134 \ubaa9\ub85d. suffix_required : \uc120\ud0dd\uc0ac\ud56d. URL\uc758 \uc811\ubbf8\uc0ac\ub97c \uc635\uc158\uc73c\ub85c \ud558\ub294\uc9c0, \ud544\uc218\ub85c \ud558\ub294\uc9c0\ub97c \ub098\ud0c0\ub0b4\ub294 boolean\uc785\ub2c8\ub2e4. \ub514\ud3f4\ud2b8\ub294 False \uc785\ub2c8\ub2e4. \uc811\ubbf8\uc0ac\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. allowed : \uc120\ud0dd\uc0ac\ud56d. \uc720\ud6a8\ud55c \ud615\uc2dd \uc811\ubbf8\uc0ac\uc758 list \ub610\ub294 tuple\uc785\ub2c8\ub2e4. \uc81c\uacf5\ub418\uc9c0 \uc54a\uc73c\uba74 \uc640\uc77c\ub4dc \uce74\ub4dc \ud615\uc2dd \uc811\ubbf8\uc0ac \ud328\ud134\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc608: from rest_framework.urlpatterns import format_suffix_patterns from blog import views urlpatterns = [ url(r'^/$', views.apt_root), url(r'^comments/$', views.comment_list), url(r'^comments/(?P<pk>[0-9]+)/$', views.comment_detail) ] urlpatterns = format_suffix_patterns(urlpatterns, allowed=['json', 'html']) format_suffix_patterns \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 'format' \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \ud574\ub2f9 \ubd80\uc5d0 \ucd94\uac00\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: @api_view(('GET', 'POST')) def comment_list(request, format=None): # do stuff... \ub610\ub294 class-bassed-views: class CommentList(APIView): def get(self, request, format=None): # do stuff... def post(self, request, format=None): # do stuff... \uc0ac\uc6a9 \ub41c kwarg\uc758 \uc774\ub984\uc740 FORMAT_SUFFIX_KWARG \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c format_suffix_patterns \ub294 include URL \ud328\ud134\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Using with i18n_patterns Django\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 i18n_patterns \ud568\uc218\uc640 format_suffix_patterns \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 i18n_patterns \ud568\uc218\uac00 \ucd5c\uc885 \ud568\uc218 \ub610\ub294 \uac00\uc7a5 \ubc14\uae65\ucabd \ud568\uc218\ub85c \uc801\uc6a9\ub418\ub294\uc9c0 \ud655\uc778\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: url patterns = [ \u2026 ] urlpatterns = i18n_patterns( format_suffix_patterns(urlpatterns, allowed=['json', 'html']) ) Query parameter formats format suffixe\uc758 \ub300\uc2e0 \uc694\uccad \ub41c \ucffc\ub9ac parameter\uc5d0 \ud3ec\ud568\uc2dc\ud0a4\ub294 \uac83\uc785\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc635\uc158\uc744 \uc81c\uacf5\ud558\uba70, browsable API\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ub2e4\uc591\ud55c \ud45c\ud604\uc744 \uc804\ud658\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc9e7\uc740 \ud615\uc2dd\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud45c\ud604\uc744 \uc120\ud0dd\ud558\ub824\uba74 format \ucffc\ub9ac parameter\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624. \uc608 : http://example.com/organizations/?format=csv \uc774 \ucffc\ub9ac parameter\uc758 \uc774\ub984\uc740 URL_FORMAT_OVERRIDE \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc73c\ub824\uba74 \uac12\uc744 None \uc73c\ub85c \uc124\uc815\ud558\uc138\uc694. Accept headers vs. format suffixes \ud30c\uc77c \uc774\ub984 \ud655\uc7a5\uc790\ub294 RESTfull \ud328\ud134\uc774 \uc544\ub2c8\uba74 HTTP Accept \ud5e4\ub354\uac00 \ud56d\uc0c1 \ub300\uc2e0 \uc0ac\uc6a9\ub418\uc5b4\uc57c \ud55c\ub2e4\ub294 \uc6f9 \ucee4\ubba4\ub2c8\ud2f0\uc758 \uacac\ud574\uac00 \uc788\ub294 \uac83 \uac19\uc2b5\ub2c8\ub2e4. \uadf8\uac83\uc740 \uc2e4\uc81c\ub860 \uc624\ud574\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 Roy Fileding\uc740 \ucffc\ub9ac parameter \ubbf8\ub514\uc5b4 \ud0c0\uc785 \ud45c\uc2dc\uae30\uc640 \ud30c\uc77c \ud655\uc7a5 \ubbf8\ub514\uc5b4 \ud0c0\uc785 \ud45c\uc2dc\uae30\uc758 \uc0c1\ub300\uc801 \uc7a5\uc810\uc5d0 \ub300\ud574 \ub2e4\uc74c\uacfc \uac19\uc774 \uc124\uba85\ud569\ub2c8\ub2e4. \"\uadf8\ub798\uc11c \ub098\ub294 \ud56d\uc0c1 \ud655\uc7a5 \ud504\ub85c\uadf8\ub7a8\uc744 \uc120\ud638\ud569\ub2c8\ub2e4. \uc5b4\ub290 \uc120\ud0dd\ub3c4 REST\uc640\ub294 \uc544\ubb34\ub7f0 \uad00\ub828\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \"- Roy Fielding, REST \ud1a0\ub860 \uba54\uc77c \ub9c1\ub9ac\uc2a4\ud2b8 \uc778\uc6a9\ubb38\uc5d0\ub294 Accept Headers\uac00 \uc5b8\uae09\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc9c0\ub9cc format suffix\ub294 \ud5c8\uc6a9\ub418\ub294 \ud328\ud134\uc73c\ub85c \uac04\uc8fc\ub418\uc5b4\uc57c \ud55c\ub2e4\ub294 \uc810\uc744 \ubd84\uba85\ud788 \ud569\ub2c8\ub2e4.","title":"Format suffixes"},{"location":"Format_suffixes/#django-rest-framework-format-suffixes","text":"\"Section 6.2.1 does not say that content negotiation should be used all the time.\" \"\uc139\uc158 6.2.1\uc740 content negotiation\uc774 \ud56d\uc0c1 \uc0ac\uc6a9\ub418\uc5b4\uc57c\ud55c\ub2e4\uace0 \ub9d0\ud558\uc9c0 \uc54a\ub294\ub2e4. \" \u2014 Roy Fielding, REST discuss mailing list","title":"Django REST Framework - Format suffixes"},{"location":"Format_suffixes/#format-suffixes","text":"\uc6f9 API\uc758 \uc77c\ubc18\uc801\uc778 \ud328\ud134\uc740 URL\uc5d0\uc11c \ud30c\uc77c \uc774\ub984 \ud655\uc7a5\uc790\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 \ubbf8\ub514\uc5b4 \uc720\ud615\uc5d0 \ub300\ud55c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc81c\uacf5\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, 'http://example.com/api/users.json'\uc740 JSON \ud45c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. API\uc758 URLconf\uc5d0 \uc788\ub294 \uac01 \uac1c\ubcc4 \ud56d\ubaa9\uc5d0 \ud615\uc2dd \uc811\ubbf8\uc0ac \ud328\ud134\uc744 \ucd94\uac00\ud558\ub294 \uac83\uc740 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uae30 \uc27d\uace0 DRY\uac00 \uc544\ub2c8\ubbc0\ub85c REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc774\ub7ec\ud55c \ud328\ud134\uc744 URLconf\uc5d0 \ucd94\uac00\ud558\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Format suffixes"},{"location":"Format_suffixes/#format_suffix_patterns","text":"Signature : format_suffix_patterns(urlpatterns, suffix_required=False, allowed=None) \uc81c\uacf5\ub41c \uac01 URL \ud328\ud134\uc5d0 \ucd94\uac00 \ub41c \ud615\uc2dd \uc811\ubbf8\uc0ac \ud328\ud134\uc744 \ud3ec\ud568\ud558\ub294 URL \ud328\ud134 list\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. Arguments: urlpatterns : \ud544\uc218 . URL \ud328\ud134 \ubaa9\ub85d. suffix_required : \uc120\ud0dd\uc0ac\ud56d. URL\uc758 \uc811\ubbf8\uc0ac\ub97c \uc635\uc158\uc73c\ub85c \ud558\ub294\uc9c0, \ud544\uc218\ub85c \ud558\ub294\uc9c0\ub97c \ub098\ud0c0\ub0b4\ub294 boolean\uc785\ub2c8\ub2e4. \ub514\ud3f4\ud2b8\ub294 False \uc785\ub2c8\ub2e4. \uc811\ubbf8\uc0ac\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. allowed : \uc120\ud0dd\uc0ac\ud56d. \uc720\ud6a8\ud55c \ud615\uc2dd \uc811\ubbf8\uc0ac\uc758 list \ub610\ub294 tuple\uc785\ub2c8\ub2e4. \uc81c\uacf5\ub418\uc9c0 \uc54a\uc73c\uba74 \uc640\uc77c\ub4dc \uce74\ub4dc \ud615\uc2dd \uc811\ubbf8\uc0ac \ud328\ud134\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc608: from rest_framework.urlpatterns import format_suffix_patterns from blog import views urlpatterns = [ url(r'^/$', views.apt_root), url(r'^comments/$', views.comment_list), url(r'^comments/(?P<pk>[0-9]+)/$', views.comment_detail) ] urlpatterns = format_suffix_patterns(urlpatterns, allowed=['json', 'html']) format_suffix_patterns \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 'format' \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \ud574\ub2f9 \ubd80\uc5d0 \ucd94\uac00\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: @api_view(('GET', 'POST')) def comment_list(request, format=None): # do stuff... \ub610\ub294 class-bassed-views: class CommentList(APIView): def get(self, request, format=None): # do stuff... def post(self, request, format=None): # do stuff... \uc0ac\uc6a9 \ub41c kwarg\uc758 \uc774\ub984\uc740 FORMAT_SUFFIX_KWARG \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c format_suffix_patterns \ub294 include URL \ud328\ud134\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"format_suffix_patterns"},{"location":"Format_suffixes/#using-with-i18n_patterns","text":"Django\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 i18n_patterns \ud568\uc218\uc640 format_suffix_patterns \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 i18n_patterns \ud568\uc218\uac00 \ucd5c\uc885 \ud568\uc218 \ub610\ub294 \uac00\uc7a5 \ubc14\uae65\ucabd \ud568\uc218\ub85c \uc801\uc6a9\ub418\ub294\uc9c0 \ud655\uc778\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: url patterns = [ \u2026 ] urlpatterns = i18n_patterns( format_suffix_patterns(urlpatterns, allowed=['json', 'html']) )","title":"Using with i18n_patterns"},{"location":"Format_suffixes/#query-parameter-formats","text":"format suffixe\uc758 \ub300\uc2e0 \uc694\uccad \ub41c \ucffc\ub9ac parameter\uc5d0 \ud3ec\ud568\uc2dc\ud0a4\ub294 \uac83\uc785\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc635\uc158\uc744 \uc81c\uacf5\ud558\uba70, browsable API\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ub2e4\uc591\ud55c \ud45c\ud604\uc744 \uc804\ud658\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc9e7\uc740 \ud615\uc2dd\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud45c\ud604\uc744 \uc120\ud0dd\ud558\ub824\uba74 format \ucffc\ub9ac parameter\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624. \uc608 : http://example.com/organizations/?format=csv \uc774 \ucffc\ub9ac parameter\uc758 \uc774\ub984\uc740 URL_FORMAT_OVERRIDE \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc73c\ub824\uba74 \uac12\uc744 None \uc73c\ub85c \uc124\uc815\ud558\uc138\uc694.","title":"Query parameter formats"},{"location":"Format_suffixes/#accept-headers-vs-format-suffixes","text":"\ud30c\uc77c \uc774\ub984 \ud655\uc7a5\uc790\ub294 RESTfull \ud328\ud134\uc774 \uc544\ub2c8\uba74 HTTP Accept \ud5e4\ub354\uac00 \ud56d\uc0c1 \ub300\uc2e0 \uc0ac\uc6a9\ub418\uc5b4\uc57c \ud55c\ub2e4\ub294 \uc6f9 \ucee4\ubba4\ub2c8\ud2f0\uc758 \uacac\ud574\uac00 \uc788\ub294 \uac83 \uac19\uc2b5\ub2c8\ub2e4. \uadf8\uac83\uc740 \uc2e4\uc81c\ub860 \uc624\ud574\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 Roy Fileding\uc740 \ucffc\ub9ac parameter \ubbf8\ub514\uc5b4 \ud0c0\uc785 \ud45c\uc2dc\uae30\uc640 \ud30c\uc77c \ud655\uc7a5 \ubbf8\ub514\uc5b4 \ud0c0\uc785 \ud45c\uc2dc\uae30\uc758 \uc0c1\ub300\uc801 \uc7a5\uc810\uc5d0 \ub300\ud574 \ub2e4\uc74c\uacfc \uac19\uc774 \uc124\uba85\ud569\ub2c8\ub2e4. \"\uadf8\ub798\uc11c \ub098\ub294 \ud56d\uc0c1 \ud655\uc7a5 \ud504\ub85c\uadf8\ub7a8\uc744 \uc120\ud638\ud569\ub2c8\ub2e4. \uc5b4\ub290 \uc120\ud0dd\ub3c4 REST\uc640\ub294 \uc544\ubb34\ub7f0 \uad00\ub828\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \"- Roy Fielding, REST \ud1a0\ub860 \uba54\uc77c \ub9c1\ub9ac\uc2a4\ud2b8 \uc778\uc6a9\ubb38\uc5d0\ub294 Accept Headers\uac00 \uc5b8\uae09\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc9c0\ub9cc format suffix\ub294 \ud5c8\uc6a9\ub418\ub294 \ud328\ud134\uc73c\ub85c \uac04\uc8fc\ub418\uc5b4\uc57c \ud55c\ub2e4\ub294 \uc810\uc744 \ubd84\uba85\ud788 \ud569\ub2c8\ub2e4.","title":"Accept headers vs. format suffixes"},{"location":"Generic_views/","text":"Django REST Framework - Generic views \"Django\u2019s generic views... were developed as a shortcut for common usage patterns... They take certain common idioms and patterns found in view development and abstract them so that you can quickly write common views of data without having to repeat yourself.\" \"Django\uc758 generic views... \uc77c\ubc18\uc801\uc778 \uc0ac\uc6a9 \ud328\ud134\uc744 \uc704\ud55c \uc9c0\ub984\uae38\ub85c \uac1c\ubc1c\ub418\uc5c8\uc2b5\ub2c8\ub2e4... \uadf8\ub4e4\uc740 view \uac1c\ubc1c\uc5d0\uc11c \ubc1c\uacac\ub418\ub294 \ud2b9\uc815 \uacf5\ud1b5 \uad00\uc6a9\uad6c\uc640 \ud328\ud134\uc744 \ucde8\ud574\uc11c \ubc18\ubcf5\ud568\uc73c\ub85c\uc368 \ubc18\ubcf5\ud558\uc9c0 \uc54a\uace0\ub3c4 \uacf5\ud1b5\ub41c \ub370\uc774\ud130 view\ub97c \ube60\ub974\uac8c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\" \u2014 Django Documentation Generic views CBV\uc758 \uc8fc\uc694 \uc774\uc810 \uc911 \ud558\ub098\ub294 \uc7ac\uc0ac\uc6a9\uc774 \uac00\ub2a5\ud55c \ub3d9\uc791\uc744 \uad6c\uc131\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \ud328\ud134\uc744 \uc81c\uacf5\ud558\ub294 \ub2e4\uc218\uc758 dict\uc5d0 \ube4c\ub4dc \ub41c view\ub97c \uc81c\uacf5\ud568\uc73c\ub85c\uc368 \uc774\ub97c \ud65c\uc6a9\ud569\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 generic view\ub97c \uc0ac\uc6a9\ud558\uba74 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ubaa8\ub378\uacfc \ubc00\uc811\ud558\uac8c \ub9e4\ud551\ub418\ub294 API \ubdf0\ub97c \ube60\ub974\uac8c \ube4c\ub4dc \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. generic views \uac00 API\uc758 \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub9de\uc9c0 \uc54a\uc73c\uba74 \uc815\uaddc APIView \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec drop down \ud558\uac70\ub098 generic views \uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 mixin \uacfc \uae30\ubcf8 \ud074\ub798\uc2a4\ub97c \uc7ac\uc0ac\uc6a9\ud558\uc5ec, \uc790\uc2e0\ub9cc \uc7ac\uc0ac\uc6a9\uc774 \uac00\ub2a5\ud55c generic views set\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Examples \uc77c\ubc18\uc801\uc73c\ub85c generic views \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 view\ub97c \ubb34\uc2dc\ud558\uace0 \uc5ec\ub7ec \ud074\ub798\uc2a4 \uc18d\uc131\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. from django.contrib.auth.models import User from myapp.serializers import UserSerializer from rest_framework import generics from rest_framework.permissions import IsAdminUser class UserList(generics.ListCreateAPIView): queryset = User.objects.all() serializer_class = UserSerializer permission_classes = (IsAdminUser,) \ubcf4\ub2e4 \ubcf5\uc7a1\ud55c \uacbd\uc6b0\uc5d0\ub294 view \ud074\ub798\uc2a4\uc758 \ub2e4\uc591\ud55c \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74: class UserList(generics.ListCreateAPIView): queryset = User.objects.all() serializer_class = UserSerializer permission_classes = (IsAdminUser,) def list(self, request): # Note the use of `get_queryset()` instead of `self.queryset` queryset = self.get_queryset() serializer = UserSerializer(queryset, many=True) return Response(serializer.data) \ub9e4\uc6b0 \uac04\ub2e8\ud55c \uacbd\uc6b0\uc5d0\ub294 .as_view() \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub798\uc2a4 \uc18d\uc131\uc744 \uc804\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, URLconf \uc5d0 \ub2e4\uc74c \ud56d\ubaa9\uc774 \ud3ec\ud568 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. url(r'^/users/', ListCreateAPIView.as_view(queryset=User.objects.all(), serializer_class=UserSerializer), name='user-list') API Reference GenericAPIView \uc774 \ud074\ub798\uc2a4\ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 APIView \ud074\ub798\uc2a4\ub97c \ud655\uc7a5\ud558\uc5ec \uae30\uc874 list view\uc640 detail views\uc5d0 \uc77c\ubc18\uc801\uc73c\ub85c \ud544\uc694\ud55c \ub3d9\uc791\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. \uc81c\uacf5\ub41c \uac01\uac01\uc758 generic views \ub294 GenericAPIView \ub97c \ud558\ub098 \uc774\uc0c1\uc758 minxin \ud074\ub798\uc2a4\uc640 \uacb0\ud569\ud558\uc5ec \ube4c\ub4dc\ub429\ub2c8\ub2e4. Attributes Basic settings: \ub2e4\uc74c \uc18d\uc131\uc740 \uae30\ubcf8 \ubdf0 \ub3d9\uc791\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4. queryset : \uc774 \ubdf0\uc5d0\uc11c \uac1d\uccb4\ub97c \ubc18\ud658\ud558\ub294 \ub370 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \ucffc\ub9ac\uc14b\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uc18d\uc131\uc744 \uc124\uc815\ud558\uac70\ub098 get_queryset() \uba54\uc11c\ub4dc\ub97c \ub300\uccb4\ud574\uc57c\ud569\ub2c8\ub2e4. \ubdf0 \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\ub294 \uacbd\uc6b0, \uc774 \uc18d\uc131\uc5d0 \uc9c1\uc811 \uc561\uc11c\uc2a4\ud558\ub294 \ub300\uc2e0 get_queryset() \uc744 \ud638\ucd9c\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \ucffc\ub9ac\uc14b\uc740 \ud55c\ubc88 \ud3c9\uac00\ub418\uace0 \uadf8 \uacb0\uacfc\ub294 \ubaa8\ub4e0 \ud6c4\uc18d request\uc5d0 \ub300\ud574 \uce90\uc2dc\ub429\ub2c8\ub2e4. serializer_class : \uc785\ub825\uc758 \uac80\uc99d\uacfc serializer \ubcf5\uc6d0 \ubc0f \ucd9c\ub825 serializer\uc5d0 \uc0ac\uc6a9\ud558\ub294 serializer \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uc18d\uc131\uc744 \uc124\uc815\ud558\uac70\ub098 get_serializer_class() \uba54\uc18c\ub4dc\ub97c \ub300\uccb4\ud574\uc57c \ud569\ub2c8\ub2e4. lookup_field : \uac1c\ubcc4 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc758 object \uc870\ud68c\ub97c \uc218\ud589 \ud560 \ub54c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ubaa8\ub378 \ud544\ub4dc\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 'pk' \uc785\ub2c8\ub2e4. \ud558\uc774\ud37c\ub9c1\ud06c \ub41c API\uc5d0 custom \uac12\uc744 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 API views\uc640 serializer \ud074\ub798\uc2a4\uac00 lookup \ud544\ub4dc\ub97c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. lookup_url_kwarg : \uac1d\uccb4 \uac80\uc0c9\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 URL \ud0a4\uc6cc\ub4dc \uc778\uc218\uc785\ub2c8\ub2e4. URL conf \uc5d0\ub294 \uc774 \uac12\uc5d0 \ud574\ub2f9\ud558\ub294 \ud0a4\uc6cc\ub4dc \uc778\uc218\uac00 \ud3ec\ud568\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc124\uc815\uc744 \ud574\uc81c\ud558\uba74 lookup_field \uc640 \ub3d9\uc77c\ud55c \uac12\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. Pagination: \ub2e4\uc74c \uc18d\uc131\uc740 list views\uc640 \ud568\uaed8 \uc0ac\uc6a9\ub420 \ub54c pagination \uc744 \uc81c\uc5b4\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. pagination_class : \uacb0\uacfc \ubaa9\ub85d\uc744 \uc9c0\uc815\ud560 \ub54c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 pagination \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 'rest_framework.pagination.PageNumberPagination' \uc778 DEFAULT_PAGINATION_CLASS \uc124\uc815\uacfc \ub3d9\uc77c\ud55c \uac12\uc785\ub2c8\ub2e4. pagination_class=None \uc73c\ub85c \uc124\uc815\ud558\uba74 \uc774 view\uc5d0\uc11c pagination\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. Filtering: filter_backends : \ucffc\ub9ac\uc14b\uc744 \ud544\ud130\ub9c1\ud558\ub294\ub370 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 filter backend \ud074\ub798\uc2a4\uc758 list\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 DEFAULT_FILTER_BACKENDS \uc124\uc815\uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4. Method Base methods: get_queryset(self) list view \uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \ucffc\ub9ac\uc14b\uc744 \ub3cc\ub824\uc90d\ub2c8\ub2e4. detail view \uc548\uc758 lookup \uc758 \ubca0\uc774\uc2a4\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. queryset \uc18d\uc131\uc5d0 \uc758\ud574 \uc9c0\uc815\ub41c \ucffc\ub9ac\uc14b\uc744 \ub9ac\ud134\ud558\ub294 \uac83\uc774 \uae30\ubcf8\uac12\uc785\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 self.queryset \uc5d0 \uc9c1\uc811 \uc561\uc11c\uc2a4\ud558\ub294 \ub300\uc2e0 \ud56d\uc0c1 \uc0ac\uc6a9\ub418\uc5b4\uc57c\ud558\uba70, self.queryset \uc740 \ud55c\ubc88\ub9cc \ud3c9\uac00\ub418\uace0 \uadf8 \uacb0\uacfc\ub294 \ubaa8\ub4e0 \ud6c4\uc18d \uc694\uccad\uc5d0 \uce90\uc2dc\ub429\ub2c8\ub2e4. request\ub97c \uc791\uc131\ud558\ub294 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud2b9\uc815\ub418\ub294 \ucffc\ub9ac\uc14b \ubc18\ud658\uacfc \uac19\uc740 \ub3d9\uc801 \ub3d9\uc791\uc744 \uc81c\uacf5\ud558\ub3c4\ub85d \uc7ac\uc815\uc758 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\uc81c: def get_queryset(self): user = self.request.user return user.accounts.all() get_object(self) detail views \uc5d0 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c lookup_field parameter\ub97c \uc0ac\uc6a9\ud558\uc5ec \uae30\ubcf8 \ucffc\ub9ac\uc14b\uc744 \ud544\ud130\ub9c1\ud569\ub2c8\ub2e4. \ub458 \uc774\uc0c1\uc758 URL kwarg \ub97c \uae30\ubc18\uc73c\ub85c \ud558\ub294 object lookups \uc640 \uac19\uc774 \ubcf5\uc7a1\ud55c \ub3d9\uc791\uc744 \uc81c\uacf5\ud558\uae30 \uc704\ud574 \ubb34\uc2dc\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: def get_object(self): queryset = self.get_queryset() filter = {} for field in self.multiple_lookup_fields: filter[field] = self.kwargs[field] obj = get_object_or_404(queryset, **filter) self.check_object_permissions(self.request, obj) return obj API\uc5d0 \uac1d\uccb4 \uc218\uc900 \uad8c\ud55c\uc774 \uc5c6\uc73c\uba74 \uc120\ud0dd\uc801\uc73c\ub85c self.check_object_permissions \ub97c \uc81c\uc678\ud558\uace0 \ub2e8\uc21c\ud788 get_object_or_404 lookup\uc5d0\uc11c \uac1d\uccb4\ub97c \ubc18\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. filter_queryset(self, queryset) serializer \uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud074\ub798\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 serializer_class \uc18d\uc131\uc744 \ubc18\ud658\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc77d\uae30\uc640 \uc4f0\uae30 \uc791\uc5c5\uc5d0 \ub2e4\ub978 serializer\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 \ub2e4\ub978 \uc720\ud615\uc758 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ub2e4\ub978 serializer\ub97c \uc81c\uacf5\ud558\ub294 \ub4f1\uc758 \ub3d9\uc801 \ub3d9\uc791\uc744 \uc81c\uacf5\ud558\uae30 \uc704\ud574 \uc7ac\uc815\uc758 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608: def get_serializer_class(self): if self.request.user.is_staff: return FullAccountSerializer return BasicAccountSerializer Save and deletion hooks: \ub2e4\uc74c\uacfc \uac19\uc740 \uba54\uc11c\ub4dc\uac00 mixin \ud074\ub798\uc2a4\uc5d0\uc11c \uc81c\uacf5\ub418\uba70 object \uc800\uc7a5\uc774\ub098 \uc0ad\uc81c \ub3d9\uc791\uc744 \uc27d\uac8c \ub300\uccb4 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. perform_create(self, serializer) : \uc0c8 object \uc778\uc2a4\ud134\uc2a4\ub97c \uc800\uc7a5\ud560 \ub54c CreateModelMixin \uc5d0 \uc758\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. perform_update(self, serializer) : \uae30\uc874 object \uc778\uc2a4\ud134\uc2a4\ub97c \uc800\uc7a5\ud560 \ub54c UpdateModelMixin \uc5d0 \uc758\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. perform_destroy(self, instance) : object \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ad\uc81c\ud560 \ub54c DestroyModelMixin \uc5d0 \uc758\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c hooks \ub294 request\uc5d0 \ub0b4\ud3ec\ub418\uc5b4 \uc788\uc9c0\ub9cc, \uc694\uccad \ub370\uc774\ud130\uc758 \uc77c\ubd80\uac00 \uc544\ub2cc \uc18d\uc131\uc744 \uc124\uc815\ud558\ub294\ub370 \ud2b9\ud788 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, request \uc0ac\uc6a9\uc790\ub97c \uae30\uc900\uc73c\ub85c \ub610\ub294 URL \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \uae30\ubc18\uc73c\ub85c object\uc758 \uc18d\uc131\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. def perform_create(self, serializer): serializer.save(user=self.request.user) \ub610\ud55c \uc774\ub7ec\ud55c \uc624\ubc84\ub77c\uc774\ub4dc \ud3ec\uc778\ud2b8\ub294 \ud655\uc778 \uc774\uba54\uc77c\uc744 \ubcf4\ub0b4\uac70\ub098 \uc5c5\ub370\uc774\ud2b8\ub97c \ub85c\uae45\ud558\ub294 \uac83\uacfc \uac19\uc774 object \uc800\uc7a5 \uc804\ud6c4\uc5d0 \ubc1c\uc0dd\ud558\ub294 \ub3d9\uc791\uc744 \ucd94\uac00 \ud560 \ub54c \ud2b9\ud788 \uc720\uc6a9\ud569\ub2c8\ub2e4. \ub85c\uae45 : \uc2dc\uc2a4\ud15c\uc744 \uc791\ub3d9\ud560 \ub54c \uc2dc\uc2a4\ud15c\uc758 \uc791\ub3d9 \uc0c1\ud0dc\uc758 \uae30\ub85d,\ubcf4\uc874,\uc2dc\uc2a4\ud15c\ub3d9\uc791 \ubd84\uc11d\ub4e4\uc744 \uae30\ub85d\ud558\ub294 \uac83 def perform_update(self, serializer): instance = serializer.save() send_email_confirmation(user=self.request.user, modified=instance) ValidationError() \ub97c \ubc1c\uc0dd\uc2dc\ucf1c \ucd94\uac00 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc81c\uacf5\ud558\uae30 \uc704\ud574 \uc774\ub7ec\ud55c hooks \uc744 \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc800\uc7a5 \uc2dc\uc810\uc5d0 \uc801\uc6a9 \ud560 \uc720\ud6a8\uc131 \uac80\uc99d \ub85c\uc9c1\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 \uc720\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. def perform_create(self, serializer): queryset = SignupRequest.objects.filter(user=self.request.user) if queryset.exists(): raise ValidationError('You have already signed up') serializer.save(user=self.request.user) Note : \uc774 \uba54\uc11c\ub4dc\ub294 \uc774\uc804 \ubc84\uc804(2.x)\uc758 pre_save , post_save , pre_delete \uc640 post_delete \uba54\uc11c\ub4dc\ub97c \ub300\uccb4\ud558\uba70 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. Other methods: GenericAPIView \ub97c \uc0ac\uc6a9\ud558\uc5ec custom views\ub97c \uc791\uc131\ud558\ub294 \uacbd\uc6b0, \ud638\ucd9c\ud560 \uc218\ub3c4 \uc788\uc9c0\ub9cc \uc77c\ubc18\uc801\uc73c\ub85c \ub2e4\uc74c\uc758 \uba54\uc11c\ub4dc\ub97c \ub300\uccb4\ud558\uc57c \ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. get_serializer_context(self) : serializer\uc5d0 \uc81c\uacf5\ub418\uc5b4\uc57c \ud558\ub294 \ucd94\uac00 \ucee8\ud150\uc2a4\ud2b8\uac00 \ud3ec\ud568\ub41c dict\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc5d4 request , view , format \ud0a4\uac00 \ud3ec\ud569\ub429\ub2c8\ub2e4. get_serializer(self, instance=None, data=None, many=False, partial=False) : serializer \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. get_paginated_response(self, data) : pagination \uc2a4\ud0c0\uc77c\uc758 response object\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. paginate_queryset(self, queryset) : \ud544\uc694\ud558\uba74, paginate_queryset \uc5d0 page object\ub97c \ubc18\ud658\ud558\uac70\ub098, \uc774 view\uc5d0 pagination\uc774 \uad6c\uc131\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 None\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. filter_queryset(self, queryset) : \uc8fc\uc5b4\uc9c4 \ucffc\ub9ac\uc14b\uc744 \uc0ac\uc6a9\uc911\uc778 \ud544\ud130 \ubc31\uc5d4\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0c8\ub85c\uc6b4 \ucffc\ub9ac\uc14b\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. Mixins mixin \ud074\ub798\uc2a4\ub294 \uae30\ubcf8 view \ub3d9\uc791\uc744 \uc81c\uacf5\ud558\ub294\ub370 \uc0ac\uc6a9\ub418\ub294 \uc791\uc5c5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. mixin \ud074\ub798\uc2a4\ub294 .get() \uc640 .post() \uc640 \uac19\uc740 \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\ub97c \uc9c1\uc811 \uc815\uc758\ud558\ub294 \uac83\uc774 \uc544\ub2c8\ub77c \uc791\uc5c5 \uba54\uc11c\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \ubcf4\ub2e4 \uc720\uc5f0\ud55c \uc791\ub3d9 \uad6c\uc131\uc744 \uac00\ub2a5\ud558\uac8c \ud569\ub2c8\ub2e4. mixin \ud074\ub798\uc2a4\ub294 rest_framework.mixins \uc5d0\uc11c \uac00\uc838 \uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4. ListModelMixin \ucffc\ub9ac\uc14b list\ub97c \uad6c\ud604\ud558\ub294 .list(request, *args, **kwargs) \uba54\uc11c\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ucffc\ub9ac\uc14b\uc774 \ucc44\uc6cc\uc9c0\uba74 response\uc758 \ubcf8\ubb38\uc73c\ub85c \ucffc\ub9ac\uc14b\uc758 serializer \ub41c \ud45c\ud604\uacfc \ud568\uaed8 200 OK \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. response \ub370\uc774\ud130\ub294 \uc120\ud0dd\uc801\uc73c\ub85c \ud398\uc774\uc9d5 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CreateModelMixin \uc0c8 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \ub9cc\ub4e4\uae30 \ubc0f \uc800\uc7a5\uc744 \uad6c\ud604\ud558\ub294 .create(request, *args, **kwargs) \uba54\uc11c\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uac1d\uccb4\uac00 \uc0dd\uc131\ub418\uba74 \uac1d\uccb4\uc758 serializer \ub41c \ud45c\ud604\uc744 response\uc758 \ubcf8\ubb38\uc73c\ub85c \uc0ac\uc6a9\ud558\uc5ec 201 Created \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \ud45c\ud604\uc5d0 url \uc774\ub77c\ub294 \ud0a4\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc73c\uba74 response\uc758 Location \ud5e4\ub354\uac00 \ud574\ub2f9 \uac12\uc73c\ub85c \ucc44\uc6cc\uc9d1\ub2c8\ub2e4. \uac1d\uccb4 \uc0dd\uc131\uc744 \uc704\ud574 \uc81c\uacf5\ub41c request \ub370\uc774\ud130\uac00 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 400 Bad Request \uc751\ub2f5\uc774 \ubc18\ud658\ub418\uba70, \uc624\ub958 \ub0b4\uc5ed\uc740 response \ubcf8\ubb38\uc73c\ub85c \ubc18\ud658\ub429\ub2c8\ub2e4. RetrieveModelMixin response\uc5d0\uc11c \uae30\uc874 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud558\ub3c4\ub85d \uad6c\ud604\ud558\ub294 .retrieve(request, *args, **kwargs) \uba54\uc11c\ub4dc\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uac1d\uccb4\ub97c \uac80\uc0c9 \ud560 \uc218 \uc788\ub294 \uacbd\uc6b0 200 OK \uc751\ub2f5\uc744 \ubc18\ud658\ud558\uba70, \uac1d\uccb4\ub97c response \ubcf8\ubb38\uc73c\ub85c serializer\ud558\uc5ec \ubc18\ud658\ud569\ub2c8\ub2e4. UpdateModelMixin \uae30\uc874 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uace0 \uc800\uc7a5\ud558\ub294 .update(request, *args, **kwargs) \uba54\uc11c\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub610\ud55c update \uba54\uc18c\ub4dc\uc640 \uc720\uc0ac\ud55c .partial_update(request, *args, **kwargs) \uba54\uc18c\ub4dc\ub3c4 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub2e8, \uc5c5\ub370\uc774\ud2b8\uc758 \ubaa8\ub4e0 \ud544\ub4dc\ub294 \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 HTTP PATCH request\ub97c \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac1d\uccb4\uac00 \uc5c5\ub370\uc774\ud2b8\ub418\uba74 \uac1d\uccb4\uc758 serializer \ub41c \ud45c\ud604\uc774 \uc751\ub2f5 \ubcf8\ubb38\uacfc \ud568\uaed8 200 OK \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uac1d\uccb4\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uae30 \uc704\ud574 \uc81c\uacf5\ub41c request \ub370\uc774\ud130\uac00 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 400 Bad Request \uc751\ub2f5\uc774 \ubc18\ud658\ub418\uace0 \uc624\ub958 \uc138\ubd80 \uc815\ubcf4\uac00 response \ubcf8\ubb38\uc73c\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. DestroyModelMixin \uae30\uc874 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc758 \uc0ad\uc81c\ub97c \uad6c\ud604\ud558\ub294 .destroy(request, *args, **kwargs) \uba54\uc11c\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uac1d\uccb4\uac00 \uc0ad\uc81c\ub418\uba74 204 No Content \uc751\ub2f5\uc744 \ubc18\ud658\ud558\uace0, \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 404 Not Found \uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. Concrete View Classes \ub2e4\uc74c\uc758 \ud074\ub798\uc2a4\ub294 \uad6c\uccb4\uc801\uc778 generic views \uc785\ub2c8\ub2e4. generic views \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc77c\ubc18\uc801\uc744 \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5 \ub41c \ub3d9\uc791\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc73c\uba74 \ud560\ub9cc\ud55c \uc218\uc900\uc785\ub2c8\ub2e4. \ubdf0 \ud074\ub798\uc2a4\ub294 rest_framework.generics \uc5d0\uc11c \uac00\uc838\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4. CreateAPIView \uc77d\uae30 \uc804\uc6a9 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. post \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , CreateModelMixin ListAPIView \uc77d\uae30 \uc804\uc6a9 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc758 \ucf5c\ub809\uc158 \uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. get \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , ListModelMixin RetrieveAPIView \uc77d\uae30 \uc804\uc6a9 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ub2e8\uc77c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. get \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , RetrieveModelMixin DestroyAPIView \uc0ad\uc81c \uc804\uc6a9 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ub2e8\uc77c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. delete \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , DestroyModelMixin UpdateAPIView \uc5c5\ub370\uc774\ud2b8 \uc804\uc6a9 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ub2e8\uc77c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. put \uacfc patch \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , UpdateModelMixin ListCreateAPIView \uc77d\uae30-\uc4f0\uae30 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc758 \uceec\ub809\uc158 \ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. get \uacfc post \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , ListModelMixin , CreateModelMixin RetrieveUpdateAPIView \uc77d\uac70\ub098 \uc5c5\ub370\uc774\ud2b8 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ub2e8\uc77c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. get , put , patch \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , RetrieveModelMixin , UpdateModelMixin RetrieveDestroyAPIView \uc77d\uac70\ub098 \uc0ad\uc81c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ub2e8\uc77c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. get \uacfc delete \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , RetrieveModelMixin , DestroyModelMixin RetrieveUpdateDestroyAPIView \uc77d\uae30-\uc4f0\uae30-\uc0ad\uc81c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ub2e8\uc77c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. get , put , patch , delete \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , RetrieveModelMixin , UpdateModelMixin , DestroyModelMixin Customizing the generic views \uc885\uc885 \uae30\ubcf8 generic views\ub97c \uc0ac\uc6a9\ud558\uace0 \uc57d\uac04 custom \ub41c \ub3d9\uc791\uc744 \uc0ac\uc6a9\ud558\ub824\uace0 \ud569\ub2c8\ub2e4. \uc5ec\ub7ec \uc704\uce58\uc5d0\uc11c custom \ub41c \ub3d9\uc791\uc744 \uc7ac\uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, \ub3d9\uc791\uc744 \uacf5\ud1b5 \ud074\ub798\uc2a4\ub85c \ub9ac\ud329\ud1a0\ub9c1\ud558\uc5ec \ud544\uc694\ud560 \ub54c \ubaa8\ub4e0 view\ub098 viewset\uc5d0 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Creating custom mixins \uc608\ub97c \ub4e4\uc5b4, URL conf \ub0b4\uc758 \ubcf5\uc218\uc758 \ud544\ub4dc\uc5d0 \uadfc\uac70\ud574 \uc624\ube0c\uc81d\ud2b8\ub97c \uac80\uc0c9 \ud560 \ud544\uc694\uac00 \uc788\ub294 \uacbd\uc6b0, \ub2e4\uc74c\uacfc \uac19\uc774 mixin \ud074\ub798\uc2a4\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class MultipleFieldLookupMixin(object): \"\"\" Apply this mixin to any view or viewset to get multiple field filtering based on a `lookup_fields` attribute, instead of the default single field filtering. \"\"\" def get_object(self): queryset = self.get_queryset() # \uae30\ubcf8 \ucffc\ub9ac\uc14b \uac00\uc838\uc624\uae30 queryset = self.filter_queryset(queryset) # backends\uc5d0\uc11c \ud544\ud130 \uc801\uc6a9 filter = {} for field in self.lookup_fields: if self.kwargs[field]: # \ube48 \ud544\ub4dc\ub294 \ubb34\uc2dc filter[field] = self.kwargs[field] return get_object_or_404(queryset, **filter) # \uac1d\uccb4\ub97c \ucc3e\ub294\ub2e4 \uadf8\ub7f0 \ub2e4\uc74c custom \ub3d9\uc791\uc744 \uc801\uc6a9\ud574\uc57c \ud560\ub54c mixin\uc744 view\ub098 viewset\uc5d0 \uac04\ub2e8\ud558\uac8c \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class RetrieveUserView(MultipleFieldLookupMixin, generics.RetrieveAPIView): queryset = User.objects.all() serializer_class = UserSerializer lookup_fields = ('account', 'username') \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 custom \ub3d9\uc791\uc774 \uc788\ub294 \uacbd\uc6b0, custom mixin\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Creating custom base classes \uc5ec\ub7ec views\uc5d0\uc11c mixin\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, \uc774 \ub2e8\uacc4\ub97c \ub354 \uc9c4\ud589\ud558\uace0 \ud504\ub85c\uc81d\ud2b8 \uc804\uccb4\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uace0\uc720\ud55c \uae30\ubcf8 views set\uc744 \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class BaseRetrieveView(MultipleFieldLookupMixin, generics.RetrieveAPIView): pass class BaseRetrieveUpdateDestroyView(MultipleFieldLookupMixin, generics.RetrieveUpdateDestroyAPIView): pass \ud504\ub85c\uc81d\ud2b8 \uc804\ubc18\uc5d0 \uac78\uccd0 \ub9ce\uc740 \uc218\uc758 views\uc5d0\uc11c \uc77c\uad00\ub418\uac8c \ubc18\ubcf5\ud574\uc57c \ud558\ub294 custom \ub3d9\uc791\uc774 \uc788\ub294 \uacbd\uc6b0, custom \uae30\ubcf8 \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. PUT as create \ubc84\uc804 3.0 \uc774\uc804\uc5d0\ub294 \uac1d\uccb4\uac00 \uc774\ubbf8 \uc874\uc7ac\ud558\ub294\uc9c0 \uc5ec\ubd80\uc5d0 \ub530\ub77c REST \ud504\ub808\uc784\uc6cc\ud06c mixins\uac00 PUT \uc744 \uc5c5\ub370\uc774\ud2b8\ub098 \uc791\uc131 \uc791\uc5c5\uc73c\ub85c \ucc98\ub9ac\ud588\uc2b5\ub2c8\ub2e4. \uc0dd\uc131 \uc791\uc5c5\uc73c\ub85c PUT \uc744 \ud5c8\uc6a9\ud558\ub294 \uac83\uc740 \uac1d\uccb4\uc758 \uc874\uc7ac\ub098 \ubd80\uc7ac\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c \ubc18\ub4dc\uc2dc \ub178\ucd9c\uc2dc\ud0a4\uae30 \ub54c\ubb38\uc5d0 \ubb38\uc81c\uac00 \ub429\ub2c8\ub2e4. \ub610\ud55c \uc774\uc804\uc5d0 \uc0ad\uc81c \ub41c \uc778\uc2a4\ud134\uc2a4\ub97c \ud22c\uba85\ud558\uac8c \ub2e4\uc2dc \ub9cc\ub4e4\uc218 \uc788\ub2e4\ub294 \uac83\uc774 \ub2e8\uc21c\ud788 404 \uc751\ub2f5\uc744 \ubc18\ud658\ud558\ub294 \uac83\ubcf4\ub2e4 \ub354 \ub098\uc740 \uae30\ubcf8 \ub3d9\uc791\uc774\ub77c\uace0 \ud560 \uc218\ub9cc\uc740 \uc5c6\uc2b5\ub2c8\ub2e4. \" PUT as 404\"\uc640 \" PUT as create\"\ub294 \uc11c\ub85c \ub2e4\ub978 \uc0c1\ud669\uc5d0\uc11c \uc720\ud6a8 \ud560 \uc218 \uc788\uc9c0\ub9cc, \ubc84\uc804 3.0\ubd80\ud130\ub294 \ub354 \uac04\ub2e8\ud558\uace0 \uba85\ud655\ud55c 404 \ub3d9\uc791\uc744 \uae30\ubcf8\uac12\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc778 PUT-as-create \ub3d9\uc791\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 AllowPUTAsCreateMixin \ud074\ub798\uc2a4\ub97c views\uc5d0 mixin\uc73c\ub85c \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Third party packages \ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub294 \ucd94\uac00 generic view \uad6c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Django REST Framework bulk django-rest-framework-bulk \ud328\ud0a4\uc9c0\ub294 API request\uc744 \ud1b5\ud574 \ub300\ub7c9 \uc791\uc5c5\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d generic views mixin \ubfd0\ub9cc \uc544\ub2c8\ub77c \uc77c\ubc18\uc801\uc778 \uad6c\uccb4\uc801 generic views\ub97c \uad6c\ud604\ud569\ub2c8\ub2e4. Django Rest Multiple Models Django Rest Multiple Models \uc740 \ub2e8\uc77c API request\uc744 \ud1b5\ud574 \uc5ec\ub7ec serializer\ub41c \ubaa8\ub378 \ubc0f / \ub610\ub294 \ucffc\ub9ac\uc14b\uc744 \uc804\uc1a1\ud558\uae30 \uc704\ud55c generic views(and mixin)\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Generic views"},{"location":"Generic_views/#django-rest-framework-generic-views","text":"\"Django\u2019s generic views... were developed as a shortcut for common usage patterns... They take certain common idioms and patterns found in view development and abstract them so that you can quickly write common views of data without having to repeat yourself.\" \"Django\uc758 generic views... \uc77c\ubc18\uc801\uc778 \uc0ac\uc6a9 \ud328\ud134\uc744 \uc704\ud55c \uc9c0\ub984\uae38\ub85c \uac1c\ubc1c\ub418\uc5c8\uc2b5\ub2c8\ub2e4... \uadf8\ub4e4\uc740 view \uac1c\ubc1c\uc5d0\uc11c \ubc1c\uacac\ub418\ub294 \ud2b9\uc815 \uacf5\ud1b5 \uad00\uc6a9\uad6c\uc640 \ud328\ud134\uc744 \ucde8\ud574\uc11c \ubc18\ubcf5\ud568\uc73c\ub85c\uc368 \ubc18\ubcf5\ud558\uc9c0 \uc54a\uace0\ub3c4 \uacf5\ud1b5\ub41c \ub370\uc774\ud130 view\ub97c \ube60\ub974\uac8c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\" \u2014 Django Documentation","title":"Django REST Framework - Generic views"},{"location":"Generic_views/#generic-views","text":"CBV\uc758 \uc8fc\uc694 \uc774\uc810 \uc911 \ud558\ub098\ub294 \uc7ac\uc0ac\uc6a9\uc774 \uac00\ub2a5\ud55c \ub3d9\uc791\uc744 \uad6c\uc131\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \ud328\ud134\uc744 \uc81c\uacf5\ud558\ub294 \ub2e4\uc218\uc758 dict\uc5d0 \ube4c\ub4dc \ub41c view\ub97c \uc81c\uacf5\ud568\uc73c\ub85c\uc368 \uc774\ub97c \ud65c\uc6a9\ud569\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 generic view\ub97c \uc0ac\uc6a9\ud558\uba74 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ubaa8\ub378\uacfc \ubc00\uc811\ud558\uac8c \ub9e4\ud551\ub418\ub294 API \ubdf0\ub97c \ube60\ub974\uac8c \ube4c\ub4dc \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. generic views \uac00 API\uc758 \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub9de\uc9c0 \uc54a\uc73c\uba74 \uc815\uaddc APIView \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec drop down \ud558\uac70\ub098 generic views \uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 mixin \uacfc \uae30\ubcf8 \ud074\ub798\uc2a4\ub97c \uc7ac\uc0ac\uc6a9\ud558\uc5ec, \uc790\uc2e0\ub9cc \uc7ac\uc0ac\uc6a9\uc774 \uac00\ub2a5\ud55c generic views set\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Generic views"},{"location":"Generic_views/#examples","text":"\uc77c\ubc18\uc801\uc73c\ub85c generic views \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 view\ub97c \ubb34\uc2dc\ud558\uace0 \uc5ec\ub7ec \ud074\ub798\uc2a4 \uc18d\uc131\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. from django.contrib.auth.models import User from myapp.serializers import UserSerializer from rest_framework import generics from rest_framework.permissions import IsAdminUser class UserList(generics.ListCreateAPIView): queryset = User.objects.all() serializer_class = UserSerializer permission_classes = (IsAdminUser,) \ubcf4\ub2e4 \ubcf5\uc7a1\ud55c \uacbd\uc6b0\uc5d0\ub294 view \ud074\ub798\uc2a4\uc758 \ub2e4\uc591\ud55c \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74: class UserList(generics.ListCreateAPIView): queryset = User.objects.all() serializer_class = UserSerializer permission_classes = (IsAdminUser,) def list(self, request): # Note the use of `get_queryset()` instead of `self.queryset` queryset = self.get_queryset() serializer = UserSerializer(queryset, many=True) return Response(serializer.data) \ub9e4\uc6b0 \uac04\ub2e8\ud55c \uacbd\uc6b0\uc5d0\ub294 .as_view() \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub798\uc2a4 \uc18d\uc131\uc744 \uc804\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, URLconf \uc5d0 \ub2e4\uc74c \ud56d\ubaa9\uc774 \ud3ec\ud568 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. url(r'^/users/', ListCreateAPIView.as_view(queryset=User.objects.all(), serializer_class=UserSerializer), name='user-list')","title":"Examples"},{"location":"Generic_views/#api-reference","text":"","title":"API Reference"},{"location":"Generic_views/#genericapiview","text":"\uc774 \ud074\ub798\uc2a4\ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 APIView \ud074\ub798\uc2a4\ub97c \ud655\uc7a5\ud558\uc5ec \uae30\uc874 list view\uc640 detail views\uc5d0 \uc77c\ubc18\uc801\uc73c\ub85c \ud544\uc694\ud55c \ub3d9\uc791\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. \uc81c\uacf5\ub41c \uac01\uac01\uc758 generic views \ub294 GenericAPIView \ub97c \ud558\ub098 \uc774\uc0c1\uc758 minxin \ud074\ub798\uc2a4\uc640 \uacb0\ud569\ud558\uc5ec \ube4c\ub4dc\ub429\ub2c8\ub2e4.","title":"GenericAPIView"},{"location":"Generic_views/#attributes","text":"","title":"Attributes"},{"location":"Generic_views/#basic-settings","text":"\ub2e4\uc74c \uc18d\uc131\uc740 \uae30\ubcf8 \ubdf0 \ub3d9\uc791\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4. queryset : \uc774 \ubdf0\uc5d0\uc11c \uac1d\uccb4\ub97c \ubc18\ud658\ud558\ub294 \ub370 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \ucffc\ub9ac\uc14b\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uc18d\uc131\uc744 \uc124\uc815\ud558\uac70\ub098 get_queryset() \uba54\uc11c\ub4dc\ub97c \ub300\uccb4\ud574\uc57c\ud569\ub2c8\ub2e4. \ubdf0 \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\ub294 \uacbd\uc6b0, \uc774 \uc18d\uc131\uc5d0 \uc9c1\uc811 \uc561\uc11c\uc2a4\ud558\ub294 \ub300\uc2e0 get_queryset() \uc744 \ud638\ucd9c\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \ucffc\ub9ac\uc14b\uc740 \ud55c\ubc88 \ud3c9\uac00\ub418\uace0 \uadf8 \uacb0\uacfc\ub294 \ubaa8\ub4e0 \ud6c4\uc18d request\uc5d0 \ub300\ud574 \uce90\uc2dc\ub429\ub2c8\ub2e4. serializer_class : \uc785\ub825\uc758 \uac80\uc99d\uacfc serializer \ubcf5\uc6d0 \ubc0f \ucd9c\ub825 serializer\uc5d0 \uc0ac\uc6a9\ud558\ub294 serializer \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uc18d\uc131\uc744 \uc124\uc815\ud558\uac70\ub098 get_serializer_class() \uba54\uc18c\ub4dc\ub97c \ub300\uccb4\ud574\uc57c \ud569\ub2c8\ub2e4. lookup_field : \uac1c\ubcc4 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc758 object \uc870\ud68c\ub97c \uc218\ud589 \ud560 \ub54c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ubaa8\ub378 \ud544\ub4dc\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 'pk' \uc785\ub2c8\ub2e4. \ud558\uc774\ud37c\ub9c1\ud06c \ub41c API\uc5d0 custom \uac12\uc744 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 API views\uc640 serializer \ud074\ub798\uc2a4\uac00 lookup \ud544\ub4dc\ub97c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. lookup_url_kwarg : \uac1d\uccb4 \uac80\uc0c9\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 URL \ud0a4\uc6cc\ub4dc \uc778\uc218\uc785\ub2c8\ub2e4. URL conf \uc5d0\ub294 \uc774 \uac12\uc5d0 \ud574\ub2f9\ud558\ub294 \ud0a4\uc6cc\ub4dc \uc778\uc218\uac00 \ud3ec\ud568\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc124\uc815\uc744 \ud574\uc81c\ud558\uba74 lookup_field \uc640 \ub3d9\uc77c\ud55c \uac12\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.","title":"Basic settings:"},{"location":"Generic_views/#pagination","text":"\ub2e4\uc74c \uc18d\uc131\uc740 list views\uc640 \ud568\uaed8 \uc0ac\uc6a9\ub420 \ub54c pagination \uc744 \uc81c\uc5b4\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. pagination_class : \uacb0\uacfc \ubaa9\ub85d\uc744 \uc9c0\uc815\ud560 \ub54c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 pagination \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 'rest_framework.pagination.PageNumberPagination' \uc778 DEFAULT_PAGINATION_CLASS \uc124\uc815\uacfc \ub3d9\uc77c\ud55c \uac12\uc785\ub2c8\ub2e4. pagination_class=None \uc73c\ub85c \uc124\uc815\ud558\uba74 \uc774 view\uc5d0\uc11c pagination\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.","title":"Pagination:"},{"location":"Generic_views/#filtering","text":"filter_backends : \ucffc\ub9ac\uc14b\uc744 \ud544\ud130\ub9c1\ud558\ub294\ub370 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 filter backend \ud074\ub798\uc2a4\uc758 list\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 DEFAULT_FILTER_BACKENDS \uc124\uc815\uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4.","title":"Filtering:"},{"location":"Generic_views/#method","text":"","title":"Method"},{"location":"Generic_views/#base-methods","text":"get_queryset(self) list view \uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \ucffc\ub9ac\uc14b\uc744 \ub3cc\ub824\uc90d\ub2c8\ub2e4. detail view \uc548\uc758 lookup \uc758 \ubca0\uc774\uc2a4\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. queryset \uc18d\uc131\uc5d0 \uc758\ud574 \uc9c0\uc815\ub41c \ucffc\ub9ac\uc14b\uc744 \ub9ac\ud134\ud558\ub294 \uac83\uc774 \uae30\ubcf8\uac12\uc785\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 self.queryset \uc5d0 \uc9c1\uc811 \uc561\uc11c\uc2a4\ud558\ub294 \ub300\uc2e0 \ud56d\uc0c1 \uc0ac\uc6a9\ub418\uc5b4\uc57c\ud558\uba70, self.queryset \uc740 \ud55c\ubc88\ub9cc \ud3c9\uac00\ub418\uace0 \uadf8 \uacb0\uacfc\ub294 \ubaa8\ub4e0 \ud6c4\uc18d \uc694\uccad\uc5d0 \uce90\uc2dc\ub429\ub2c8\ub2e4. request\ub97c \uc791\uc131\ud558\ub294 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud2b9\uc815\ub418\ub294 \ucffc\ub9ac\uc14b \ubc18\ud658\uacfc \uac19\uc740 \ub3d9\uc801 \ub3d9\uc791\uc744 \uc81c\uacf5\ud558\ub3c4\ub85d \uc7ac\uc815\uc758 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\uc81c: def get_queryset(self): user = self.request.user return user.accounts.all() get_object(self) detail views \uc5d0 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c lookup_field parameter\ub97c \uc0ac\uc6a9\ud558\uc5ec \uae30\ubcf8 \ucffc\ub9ac\uc14b\uc744 \ud544\ud130\ub9c1\ud569\ub2c8\ub2e4. \ub458 \uc774\uc0c1\uc758 URL kwarg \ub97c \uae30\ubc18\uc73c\ub85c \ud558\ub294 object lookups \uc640 \uac19\uc774 \ubcf5\uc7a1\ud55c \ub3d9\uc791\uc744 \uc81c\uacf5\ud558\uae30 \uc704\ud574 \ubb34\uc2dc\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: def get_object(self): queryset = self.get_queryset() filter = {} for field in self.multiple_lookup_fields: filter[field] = self.kwargs[field] obj = get_object_or_404(queryset, **filter) self.check_object_permissions(self.request, obj) return obj API\uc5d0 \uac1d\uccb4 \uc218\uc900 \uad8c\ud55c\uc774 \uc5c6\uc73c\uba74 \uc120\ud0dd\uc801\uc73c\ub85c self.check_object_permissions \ub97c \uc81c\uc678\ud558\uace0 \ub2e8\uc21c\ud788 get_object_or_404 lookup\uc5d0\uc11c \uac1d\uccb4\ub97c \ubc18\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. filter_queryset(self, queryset) serializer \uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud074\ub798\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 serializer_class \uc18d\uc131\uc744 \ubc18\ud658\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc77d\uae30\uc640 \uc4f0\uae30 \uc791\uc5c5\uc5d0 \ub2e4\ub978 serializer\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 \ub2e4\ub978 \uc720\ud615\uc758 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ub2e4\ub978 serializer\ub97c \uc81c\uacf5\ud558\ub294 \ub4f1\uc758 \ub3d9\uc801 \ub3d9\uc791\uc744 \uc81c\uacf5\ud558\uae30 \uc704\ud574 \uc7ac\uc815\uc758 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608: def get_serializer_class(self): if self.request.user.is_staff: return FullAccountSerializer return BasicAccountSerializer","title":"Base methods:"},{"location":"Generic_views/#save-and-deletion-hooks","text":"\ub2e4\uc74c\uacfc \uac19\uc740 \uba54\uc11c\ub4dc\uac00 mixin \ud074\ub798\uc2a4\uc5d0\uc11c \uc81c\uacf5\ub418\uba70 object \uc800\uc7a5\uc774\ub098 \uc0ad\uc81c \ub3d9\uc791\uc744 \uc27d\uac8c \ub300\uccb4 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. perform_create(self, serializer) : \uc0c8 object \uc778\uc2a4\ud134\uc2a4\ub97c \uc800\uc7a5\ud560 \ub54c CreateModelMixin \uc5d0 \uc758\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. perform_update(self, serializer) : \uae30\uc874 object \uc778\uc2a4\ud134\uc2a4\ub97c \uc800\uc7a5\ud560 \ub54c UpdateModelMixin \uc5d0 \uc758\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. perform_destroy(self, instance) : object \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ad\uc81c\ud560 \ub54c DestroyModelMixin \uc5d0 \uc758\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c hooks \ub294 request\uc5d0 \ub0b4\ud3ec\ub418\uc5b4 \uc788\uc9c0\ub9cc, \uc694\uccad \ub370\uc774\ud130\uc758 \uc77c\ubd80\uac00 \uc544\ub2cc \uc18d\uc131\uc744 \uc124\uc815\ud558\ub294\ub370 \ud2b9\ud788 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, request \uc0ac\uc6a9\uc790\ub97c \uae30\uc900\uc73c\ub85c \ub610\ub294 URL \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \uae30\ubc18\uc73c\ub85c object\uc758 \uc18d\uc131\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. def perform_create(self, serializer): serializer.save(user=self.request.user) \ub610\ud55c \uc774\ub7ec\ud55c \uc624\ubc84\ub77c\uc774\ub4dc \ud3ec\uc778\ud2b8\ub294 \ud655\uc778 \uc774\uba54\uc77c\uc744 \ubcf4\ub0b4\uac70\ub098 \uc5c5\ub370\uc774\ud2b8\ub97c \ub85c\uae45\ud558\ub294 \uac83\uacfc \uac19\uc774 object \uc800\uc7a5 \uc804\ud6c4\uc5d0 \ubc1c\uc0dd\ud558\ub294 \ub3d9\uc791\uc744 \ucd94\uac00 \ud560 \ub54c \ud2b9\ud788 \uc720\uc6a9\ud569\ub2c8\ub2e4. \ub85c\uae45 : \uc2dc\uc2a4\ud15c\uc744 \uc791\ub3d9\ud560 \ub54c \uc2dc\uc2a4\ud15c\uc758 \uc791\ub3d9 \uc0c1\ud0dc\uc758 \uae30\ub85d,\ubcf4\uc874,\uc2dc\uc2a4\ud15c\ub3d9\uc791 \ubd84\uc11d\ub4e4\uc744 \uae30\ub85d\ud558\ub294 \uac83 def perform_update(self, serializer): instance = serializer.save() send_email_confirmation(user=self.request.user, modified=instance) ValidationError() \ub97c \ubc1c\uc0dd\uc2dc\ucf1c \ucd94\uac00 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc81c\uacf5\ud558\uae30 \uc704\ud574 \uc774\ub7ec\ud55c hooks \uc744 \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc800\uc7a5 \uc2dc\uc810\uc5d0 \uc801\uc6a9 \ud560 \uc720\ud6a8\uc131 \uac80\uc99d \ub85c\uc9c1\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 \uc720\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. def perform_create(self, serializer): queryset = SignupRequest.objects.filter(user=self.request.user) if queryset.exists(): raise ValidationError('You have already signed up') serializer.save(user=self.request.user) Note : \uc774 \uba54\uc11c\ub4dc\ub294 \uc774\uc804 \ubc84\uc804(2.x)\uc758 pre_save , post_save , pre_delete \uc640 post_delete \uba54\uc11c\ub4dc\ub97c \ub300\uccb4\ud558\uba70 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.","title":"Save and deletion hooks:"},{"location":"Generic_views/#other-methods","text":"GenericAPIView \ub97c \uc0ac\uc6a9\ud558\uc5ec custom views\ub97c \uc791\uc131\ud558\ub294 \uacbd\uc6b0, \ud638\ucd9c\ud560 \uc218\ub3c4 \uc788\uc9c0\ub9cc \uc77c\ubc18\uc801\uc73c\ub85c \ub2e4\uc74c\uc758 \uba54\uc11c\ub4dc\ub97c \ub300\uccb4\ud558\uc57c \ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. get_serializer_context(self) : serializer\uc5d0 \uc81c\uacf5\ub418\uc5b4\uc57c \ud558\ub294 \ucd94\uac00 \ucee8\ud150\uc2a4\ud2b8\uac00 \ud3ec\ud568\ub41c dict\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc5d4 request , view , format \ud0a4\uac00 \ud3ec\ud569\ub429\ub2c8\ub2e4. get_serializer(self, instance=None, data=None, many=False, partial=False) : serializer \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. get_paginated_response(self, data) : pagination \uc2a4\ud0c0\uc77c\uc758 response object\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. paginate_queryset(self, queryset) : \ud544\uc694\ud558\uba74, paginate_queryset \uc5d0 page object\ub97c \ubc18\ud658\ud558\uac70\ub098, \uc774 view\uc5d0 pagination\uc774 \uad6c\uc131\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 None\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. filter_queryset(self, queryset) : \uc8fc\uc5b4\uc9c4 \ucffc\ub9ac\uc14b\uc744 \uc0ac\uc6a9\uc911\uc778 \ud544\ud130 \ubc31\uc5d4\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0c8\ub85c\uc6b4 \ucffc\ub9ac\uc14b\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4.","title":"Other methods:"},{"location":"Generic_views/#mixins","text":"mixin \ud074\ub798\uc2a4\ub294 \uae30\ubcf8 view \ub3d9\uc791\uc744 \uc81c\uacf5\ud558\ub294\ub370 \uc0ac\uc6a9\ub418\ub294 \uc791\uc5c5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. mixin \ud074\ub798\uc2a4\ub294 .get() \uc640 .post() \uc640 \uac19\uc740 \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\ub97c \uc9c1\uc811 \uc815\uc758\ud558\ub294 \uac83\uc774 \uc544\ub2c8\ub77c \uc791\uc5c5 \uba54\uc11c\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \ubcf4\ub2e4 \uc720\uc5f0\ud55c \uc791\ub3d9 \uad6c\uc131\uc744 \uac00\ub2a5\ud558\uac8c \ud569\ub2c8\ub2e4. mixin \ud074\ub798\uc2a4\ub294 rest_framework.mixins \uc5d0\uc11c \uac00\uc838 \uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Mixins"},{"location":"Generic_views/#listmodelmixin","text":"\ucffc\ub9ac\uc14b list\ub97c \uad6c\ud604\ud558\ub294 .list(request, *args, **kwargs) \uba54\uc11c\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ucffc\ub9ac\uc14b\uc774 \ucc44\uc6cc\uc9c0\uba74 response\uc758 \ubcf8\ubb38\uc73c\ub85c \ucffc\ub9ac\uc14b\uc758 serializer \ub41c \ud45c\ud604\uacfc \ud568\uaed8 200 OK \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. response \ub370\uc774\ud130\ub294 \uc120\ud0dd\uc801\uc73c\ub85c \ud398\uc774\uc9d5 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"ListModelMixin"},{"location":"Generic_views/#createmodelmixin","text":"\uc0c8 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \ub9cc\ub4e4\uae30 \ubc0f \uc800\uc7a5\uc744 \uad6c\ud604\ud558\ub294 .create(request, *args, **kwargs) \uba54\uc11c\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uac1d\uccb4\uac00 \uc0dd\uc131\ub418\uba74 \uac1d\uccb4\uc758 serializer \ub41c \ud45c\ud604\uc744 response\uc758 \ubcf8\ubb38\uc73c\ub85c \uc0ac\uc6a9\ud558\uc5ec 201 Created \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \ud45c\ud604\uc5d0 url \uc774\ub77c\ub294 \ud0a4\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc73c\uba74 response\uc758 Location \ud5e4\ub354\uac00 \ud574\ub2f9 \uac12\uc73c\ub85c \ucc44\uc6cc\uc9d1\ub2c8\ub2e4. \uac1d\uccb4 \uc0dd\uc131\uc744 \uc704\ud574 \uc81c\uacf5\ub41c request \ub370\uc774\ud130\uac00 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 400 Bad Request \uc751\ub2f5\uc774 \ubc18\ud658\ub418\uba70, \uc624\ub958 \ub0b4\uc5ed\uc740 response \ubcf8\ubb38\uc73c\ub85c \ubc18\ud658\ub429\ub2c8\ub2e4.","title":"CreateModelMixin"},{"location":"Generic_views/#retrievemodelmixin","text":"response\uc5d0\uc11c \uae30\uc874 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud558\ub3c4\ub85d \uad6c\ud604\ud558\ub294 .retrieve(request, *args, **kwargs) \uba54\uc11c\ub4dc\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uac1d\uccb4\ub97c \uac80\uc0c9 \ud560 \uc218 \uc788\ub294 \uacbd\uc6b0 200 OK \uc751\ub2f5\uc744 \ubc18\ud658\ud558\uba70, \uac1d\uccb4\ub97c response \ubcf8\ubb38\uc73c\ub85c serializer\ud558\uc5ec \ubc18\ud658\ud569\ub2c8\ub2e4.","title":"RetrieveModelMixin"},{"location":"Generic_views/#updatemodelmixin","text":"\uae30\uc874 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uace0 \uc800\uc7a5\ud558\ub294 .update(request, *args, **kwargs) \uba54\uc11c\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub610\ud55c update \uba54\uc18c\ub4dc\uc640 \uc720\uc0ac\ud55c .partial_update(request, *args, **kwargs) \uba54\uc18c\ub4dc\ub3c4 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub2e8, \uc5c5\ub370\uc774\ud2b8\uc758 \ubaa8\ub4e0 \ud544\ub4dc\ub294 \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 HTTP PATCH request\ub97c \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac1d\uccb4\uac00 \uc5c5\ub370\uc774\ud2b8\ub418\uba74 \uac1d\uccb4\uc758 serializer \ub41c \ud45c\ud604\uc774 \uc751\ub2f5 \ubcf8\ubb38\uacfc \ud568\uaed8 200 OK \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uac1d\uccb4\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uae30 \uc704\ud574 \uc81c\uacf5\ub41c request \ub370\uc774\ud130\uac00 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 400 Bad Request \uc751\ub2f5\uc774 \ubc18\ud658\ub418\uace0 \uc624\ub958 \uc138\ubd80 \uc815\ubcf4\uac00 response \ubcf8\ubb38\uc73c\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4.","title":"UpdateModelMixin"},{"location":"Generic_views/#destroymodelmixin","text":"\uae30\uc874 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc758 \uc0ad\uc81c\ub97c \uad6c\ud604\ud558\ub294 .destroy(request, *args, **kwargs) \uba54\uc11c\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uac1d\uccb4\uac00 \uc0ad\uc81c\ub418\uba74 204 No Content \uc751\ub2f5\uc744 \ubc18\ud658\ud558\uace0, \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 404 Not Found \uc744 \ubc18\ud658\ud569\ub2c8\ub2e4.","title":"DestroyModelMixin"},{"location":"Generic_views/#concrete-view-classes","text":"\ub2e4\uc74c\uc758 \ud074\ub798\uc2a4\ub294 \uad6c\uccb4\uc801\uc778 generic views \uc785\ub2c8\ub2e4. generic views \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc77c\ubc18\uc801\uc744 \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5 \ub41c \ub3d9\uc791\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc73c\uba74 \ud560\ub9cc\ud55c \uc218\uc900\uc785\ub2c8\ub2e4. \ubdf0 \ud074\ub798\uc2a4\ub294 rest_framework.generics \uc5d0\uc11c \uac00\uc838\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Concrete View Classes"},{"location":"Generic_views/#createapiview","text":"\uc77d\uae30 \uc804\uc6a9 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. post \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , CreateModelMixin","title":"CreateAPIView"},{"location":"Generic_views/#listapiview","text":"\uc77d\uae30 \uc804\uc6a9 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc758 \ucf5c\ub809\uc158 \uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. get \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , ListModelMixin","title":"ListAPIView"},{"location":"Generic_views/#retrieveapiview","text":"\uc77d\uae30 \uc804\uc6a9 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ub2e8\uc77c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. get \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , RetrieveModelMixin","title":"RetrieveAPIView"},{"location":"Generic_views/#destroyapiview","text":"\uc0ad\uc81c \uc804\uc6a9 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ub2e8\uc77c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. delete \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , DestroyModelMixin","title":"DestroyAPIView"},{"location":"Generic_views/#updateapiview","text":"\uc5c5\ub370\uc774\ud2b8 \uc804\uc6a9 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ub2e8\uc77c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. put \uacfc patch \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , UpdateModelMixin","title":"UpdateAPIView"},{"location":"Generic_views/#listcreateapiview","text":"\uc77d\uae30-\uc4f0\uae30 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc758 \uceec\ub809\uc158 \ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. get \uacfc post \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , ListModelMixin , CreateModelMixin","title":"ListCreateAPIView"},{"location":"Generic_views/#retrieveupdateapiview","text":"\uc77d\uac70\ub098 \uc5c5\ub370\uc774\ud2b8 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ub2e8\uc77c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. get , put , patch \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , RetrieveModelMixin , UpdateModelMixin","title":"RetrieveUpdateAPIView"},{"location":"Generic_views/#retrievedestroyapiview","text":"\uc77d\uac70\ub098 \uc0ad\uc81c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ub2e8\uc77c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. get \uacfc delete \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , RetrieveModelMixin , DestroyModelMixin","title":"RetrieveDestroyAPIView"},{"location":"Generic_views/#retrieveupdatedestroyapiview","text":"\uc77d\uae30-\uc4f0\uae30-\uc0ad\uc81c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ub2e8\uc77c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. get , put , patch , delete \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Extends: GenericAPIView , RetrieveModelMixin , UpdateModelMixin , DestroyModelMixin","title":"RetrieveUpdateDestroyAPIView"},{"location":"Generic_views/#customizing-the-generic-views","text":"\uc885\uc885 \uae30\ubcf8 generic views\ub97c \uc0ac\uc6a9\ud558\uace0 \uc57d\uac04 custom \ub41c \ub3d9\uc791\uc744 \uc0ac\uc6a9\ud558\ub824\uace0 \ud569\ub2c8\ub2e4. \uc5ec\ub7ec \uc704\uce58\uc5d0\uc11c custom \ub41c \ub3d9\uc791\uc744 \uc7ac\uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, \ub3d9\uc791\uc744 \uacf5\ud1b5 \ud074\ub798\uc2a4\ub85c \ub9ac\ud329\ud1a0\ub9c1\ud558\uc5ec \ud544\uc694\ud560 \ub54c \ubaa8\ub4e0 view\ub098 viewset\uc5d0 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Customizing the generic views"},{"location":"Generic_views/#creating-custom-mixins","text":"\uc608\ub97c \ub4e4\uc5b4, URL conf \ub0b4\uc758 \ubcf5\uc218\uc758 \ud544\ub4dc\uc5d0 \uadfc\uac70\ud574 \uc624\ube0c\uc81d\ud2b8\ub97c \uac80\uc0c9 \ud560 \ud544\uc694\uac00 \uc788\ub294 \uacbd\uc6b0, \ub2e4\uc74c\uacfc \uac19\uc774 mixin \ud074\ub798\uc2a4\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class MultipleFieldLookupMixin(object): \"\"\" Apply this mixin to any view or viewset to get multiple field filtering based on a `lookup_fields` attribute, instead of the default single field filtering. \"\"\" def get_object(self): queryset = self.get_queryset() # \uae30\ubcf8 \ucffc\ub9ac\uc14b \uac00\uc838\uc624\uae30 queryset = self.filter_queryset(queryset) # backends\uc5d0\uc11c \ud544\ud130 \uc801\uc6a9 filter = {} for field in self.lookup_fields: if self.kwargs[field]: # \ube48 \ud544\ub4dc\ub294 \ubb34\uc2dc filter[field] = self.kwargs[field] return get_object_or_404(queryset, **filter) # \uac1d\uccb4\ub97c \ucc3e\ub294\ub2e4 \uadf8\ub7f0 \ub2e4\uc74c custom \ub3d9\uc791\uc744 \uc801\uc6a9\ud574\uc57c \ud560\ub54c mixin\uc744 view\ub098 viewset\uc5d0 \uac04\ub2e8\ud558\uac8c \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class RetrieveUserView(MultipleFieldLookupMixin, generics.RetrieveAPIView): queryset = User.objects.all() serializer_class = UserSerializer lookup_fields = ('account', 'username') \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 custom \ub3d9\uc791\uc774 \uc788\ub294 \uacbd\uc6b0, custom mixin\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"Creating custom mixins"},{"location":"Generic_views/#creating-custom-base-classes","text":"\uc5ec\ub7ec views\uc5d0\uc11c mixin\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, \uc774 \ub2e8\uacc4\ub97c \ub354 \uc9c4\ud589\ud558\uace0 \ud504\ub85c\uc81d\ud2b8 \uc804\uccb4\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uace0\uc720\ud55c \uae30\ubcf8 views set\uc744 \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class BaseRetrieveView(MultipleFieldLookupMixin, generics.RetrieveAPIView): pass class BaseRetrieveUpdateDestroyView(MultipleFieldLookupMixin, generics.RetrieveUpdateDestroyAPIView): pass \ud504\ub85c\uc81d\ud2b8 \uc804\ubc18\uc5d0 \uac78\uccd0 \ub9ce\uc740 \uc218\uc758 views\uc5d0\uc11c \uc77c\uad00\ub418\uac8c \ubc18\ubcf5\ud574\uc57c \ud558\ub294 custom \ub3d9\uc791\uc774 \uc788\ub294 \uacbd\uc6b0, custom \uae30\ubcf8 \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"Creating custom base classes"},{"location":"Generic_views/#put-as-create","text":"\ubc84\uc804 3.0 \uc774\uc804\uc5d0\ub294 \uac1d\uccb4\uac00 \uc774\ubbf8 \uc874\uc7ac\ud558\ub294\uc9c0 \uc5ec\ubd80\uc5d0 \ub530\ub77c REST \ud504\ub808\uc784\uc6cc\ud06c mixins\uac00 PUT \uc744 \uc5c5\ub370\uc774\ud2b8\ub098 \uc791\uc131 \uc791\uc5c5\uc73c\ub85c \ucc98\ub9ac\ud588\uc2b5\ub2c8\ub2e4. \uc0dd\uc131 \uc791\uc5c5\uc73c\ub85c PUT \uc744 \ud5c8\uc6a9\ud558\ub294 \uac83\uc740 \uac1d\uccb4\uc758 \uc874\uc7ac\ub098 \ubd80\uc7ac\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c \ubc18\ub4dc\uc2dc \ub178\ucd9c\uc2dc\ud0a4\uae30 \ub54c\ubb38\uc5d0 \ubb38\uc81c\uac00 \ub429\ub2c8\ub2e4. \ub610\ud55c \uc774\uc804\uc5d0 \uc0ad\uc81c \ub41c \uc778\uc2a4\ud134\uc2a4\ub97c \ud22c\uba85\ud558\uac8c \ub2e4\uc2dc \ub9cc\ub4e4\uc218 \uc788\ub2e4\ub294 \uac83\uc774 \ub2e8\uc21c\ud788 404 \uc751\ub2f5\uc744 \ubc18\ud658\ud558\ub294 \uac83\ubcf4\ub2e4 \ub354 \ub098\uc740 \uae30\ubcf8 \ub3d9\uc791\uc774\ub77c\uace0 \ud560 \uc218\ub9cc\uc740 \uc5c6\uc2b5\ub2c8\ub2e4. \" PUT as 404\"\uc640 \" PUT as create\"\ub294 \uc11c\ub85c \ub2e4\ub978 \uc0c1\ud669\uc5d0\uc11c \uc720\ud6a8 \ud560 \uc218 \uc788\uc9c0\ub9cc, \ubc84\uc804 3.0\ubd80\ud130\ub294 \ub354 \uac04\ub2e8\ud558\uace0 \uba85\ud655\ud55c 404 \ub3d9\uc791\uc744 \uae30\ubcf8\uac12\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc778 PUT-as-create \ub3d9\uc791\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 AllowPUTAsCreateMixin \ud074\ub798\uc2a4\ub97c views\uc5d0 mixin\uc73c\ub85c \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"PUT as create"},{"location":"Generic_views/#third-party-packages","text":"\ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub294 \ucd94\uac00 generic view \uad6c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Third party packages"},{"location":"Generic_views/#django-rest-framework-bulk","text":"django-rest-framework-bulk \ud328\ud0a4\uc9c0\ub294 API request\uc744 \ud1b5\ud574 \ub300\ub7c9 \uc791\uc5c5\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d generic views mixin \ubfd0\ub9cc \uc544\ub2c8\ub77c \uc77c\ubc18\uc801\uc778 \uad6c\uccb4\uc801 generic views\ub97c \uad6c\ud604\ud569\ub2c8\ub2e4.","title":"Django REST Framework bulk"},{"location":"Generic_views/#django-rest-multiple-models","text":"Django Rest Multiple Models \uc740 \ub2e8\uc77c API request\uc744 \ud1b5\ud574 \uc5ec\ub7ec serializer\ub41c \ubaa8\ub378 \ubc0f / \ub610\ub294 \ucffc\ub9ac\uc14b\uc744 \uc804\uc1a1\ud558\uae30 \uc704\ud55c generic views(and mixin)\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Django Rest Multiple Models"},{"location":"Metadata/","text":"Django REST Framework - Metadata \"[The OPTIONS] method allows a client to determine the options and/or requirements associated with a resource, or the capabilities of a server, without implying a resource action or initiating a resource retrieval.\" \"[OPTIONS] \uba54\uc18c\ub4dc\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc790\uc6d0 \ub3d9\uc791\uc744 \uc554\uc2dc\ud558\uac70\ub098 \uc790\uc6d0 \uac80\uc0c9\uc744 \uc2dc\uc791\ud558\uc9c0 \uc54a\uace0 \uc790\uc6d0 \ub610\ub294 \uc11c\ubc84\uc758 \uae30\ub2a5\uacfc \uad00\ub828\ub41c \uc635\uc158 \ubc0f / \ub610\ub294 \uc694\uad6c \uc0ac\ud56d\uc744 \uacb0\uc815\ud560 \uc218 \uc788\uac8c \ud569\ub2c8\ub2e4.\" \u2014 RFC7231, Section 4.3.7. Metadata REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 API\uac00 OPTIONS \uc694\uccad\uc5d0 \uc5b4\ub5bb\uac8c \uc751\ub2f5\ud574\uc57c \ud558\ub294\uc9c0\ub97c \uacb0\uc815\ud558\uae30 \uc704\ud55c \uad6c\uc131 \uac00\ub2a5\ud55c \uba54\ucee4\ub2c8\uc998\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. API \uc2a4\ud0a4\ub9c8 \ub610\ub294 \uae30\ud0c0 \ub9ac\uc18c\uc2a4 \uc815\ubcf4\ub97c \ubc18\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud604\uc7ac HTTP OPTIONS \uc694\uccad\uc5d0 \ub300\ud574 \uc5b4\ub5a4 \uc2a4\ud0c0\uc77c\uc758 response\ub97c \ubc18\ud658\ud574\uc57c\ud558\ub294\uc9c0\uc5d0 \ub300\ud574 \ub110\ub9ac \ucc44\ud0dd \ub41c \uaddc\uce59\uc774 \uc5c6\uc73c\ubbc0\ub85c \uc720\uc6a9\ud55c \uc815\ubcf4\ub97c \ubc18\ud658\ud558\ub294 \ud2b9\ubcc4 \uc2a4\ud0c0\uc77c\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \ubc18\ud658\ub418\ub294 \uc815\ubcf4\ub97c \ubcf4\uc5ec\uc8fc\ub294 \uc608\uc81c response\uc785\ub2c8\ub2e4. HTTP 200 OK Allow: GET, POST, HEAD, OPTIONS Content-Type: application/json { \"name\": \"To Do List\", \"description\": \"List existing 'To Do' items, or create a new item.\", \"renders\": [ \"application/json\", \"text/html\" ], \"parses\": [ \"application/json\", \"application/x-www-form-urlencoded\", \"multipart/form-data\" ], \"actions\": { \"POST\": { \"note\": { \"type\": \"string\", \"required\": false, \"read_only\": false, \"label\": \"title\", \"max_length\": 100 } } } } Setting the metadata scheme DEFAULT_METADATA_CLASS \uc124\uc815 \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uba54\ud0c0 \ub370\uc774\ud130 \ud074\ub798\uc2a4\ub97c \uc804\uc5ed\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_METADATA_CLASS': 'rest_framework.metadata.SimpleMetadata' } \ub610\ub294 view\uc5d0 \ub300\ud574 \uac1c\ubcc4\uc801\uc73c\ub85c \uba54\ud0c0 \ub370\uc774\ud130 \ud074\ub798\uc2a4\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class APIRoot(APIView): metadata_class = APIRootMetadata def get(self, request, format=None): return Response({ ... }) REST \ud504\ub808\uc784\uc6cc\ud06c \ud328\ud0a4\uc9c0\ub294 SimpleMetadata \ub77c\ub294 \ub2e8\uc77c \uba54\ud0c0 \ub370\uc774\ud130 \ud074\ub798\uc2a4 \uad6c\ud604\ub9cc \ud3ec\ud568\ub429\ub2c8\ub2e4. \ub2e4\ub978 \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 custom \uba54\ud0c0 \ub370\uc774\ud130 \ud074\ub798\uc2a4\ub97c \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4. Creating schema endpoints \uc77c\ubc18 GET \uc694\uccad\uc73c\ub85c \uc561\uc11c\uc2a4\ub418\ub294 schema endpoint\uc744 \ub9cc\ub4e4\uae30 \uc704\ud55c \ud2b9\uc815 \uc694\uad6c\uc0ac\ud56d\uc774 \uc788\ub294 \uacbd\uc6b0 \uadf8\ub807\uac8c \ud558\uae30 \uc704\ud574 \uba54\ud0c0 \ub370\uc774\ud130 API\ub97c \ub2e4\uc2dc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c\uacfc \uac19\uc740 \ucd94\uac00 \ub77c\uc6b0\ud2b8\ub97c vViewSet\uc5d0 \uc0ac\uc6a9\ud558\uc5ec linkable schema endpoint\uc5d0 \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. @list_route(methods=['GET']) def schema(self, request): meta = self.metadata_class() data = meta.determine_metadata(request, self) return Response(data) OPTIONS \uc751\ub2f5\uc744 \uce90\uc2f1\ud560 \uc218 \uc5c6\ub2e4\ub294 \uac83 \uc744 \ud3ec\ud568\ud558\uc5ec \uc774 \uc811\uadfc \ubc29\uc2dd\uc744 \uc120\ud0dd\ud560 \uc218 \uc788\ub294 \uba87\uac00\uc9c0 \uc774\uc720\uac00 \uc788\uc2b5\ub2c8\ub2e4. Custom metadata classes custom metadata \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud558\ub824\uba74 BaseMetadata \ub97c \ub300\uccb4\ud558\uace0 decide_metadata(self, request, view) \uba54\uc11c\ub4dc\ub97c \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4. \uc720\uc6a9\ud55c \uc815\ubcf4\ub85c\ub294 schema \uc815\ubcf4 \ub9ac\ud134, JSON schema \uc640 \uac19\uc740 \ud615\uc2dd \uc0ac\uc6a9 \ub610\ub294 \uad00\ub9ac\uc790\uc5d0\uc138 \ub514\ubc84\uadf8 \uc815\ubcf4 \ub9ac\ud134 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. Example \ub2e4\uc74c \ud074\ub798\uc2a4\ub294 OPTIONS \uc694\uccad\uc5d0 \ubc18\ud658\ub418\ub294 \uc815\ubcf4\ub97c \uc81c\ud55c\ud558\ub294\ub370 \uc0ac\uc6a9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class MinimalMetadata(BaseMetadata): \"\"\" Don't include field and other information for `OPTIONS` requests. Just return the name and description. \"\"\" def determine_metadata(self, request, view): return { 'name': view.get_view_name(), 'description': view.get_view_description() } \uadf8\ub7f0 \ub2e4\uc74c \uc774 custom \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\uc744 \uad6c\uc131\ud558\uc138\uc694. REST_FRAMEWORK = { 'DEFAULT_METADATA_CLASS': 'myproject.apps.core.MinimalMetadata' } Third party packages \ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub294 \ucd94\uac00 \uba54\ub098 \ub370\uc774\ud130 \uad6c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. DRF-schema-adapter drf-schema-adapter \ub294 \ud504\ub860\ud2b8\uc5d4\ub4dc \ud504\ub808\uc784\uc6cc\ud06c \ubc0f \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0 \uc2a4\ud0a4\ub9c8 \uc815\ubcf4\ub97c \ubcf4\ub2e4 \uc27d\uac8c \uc81c\uacf5\ud560 \uc218 \uc788\uac8c \ud574\uc8fc\ub294 \ub3c4\uad6c set\uc785\ub2c8\ub2e4. metadata mixin \ubfd0\ub9cc \uc544\ub2c8\ub77c \ub2e4\uc591\ud55c \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0 \uc758\ud574 \uc77d\uc744 \uc218 \uc788\ub294 \uc2a4\ud0a4\ub9c8 \uc815\ubcf4\ubfd0\ub9cc \uc544\ub2c8\ub77c json-schema \ub97c \uc0dd\uc131\ud558\ub294\ub370 \uc801\ud569\ud55c 2\uac1c\uc758 metadara \ud074\ub798\uc2a4\uc640 \uc5ec\ub7ec \uc5b4\ub311\ud130\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ud2b9\uc815 \ud504\ub860\ud2b8\uc5d4\ub4dc\uc5d0\uc11c \uc791\ub3d9\ud558\ub3c4\ub85d \uc5b4\ub311\ud130\ub97c \uc791\uc131\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud558\uace0 \uc2f6\ub2e4\uba74 \uc2a4\ud0a4\ub9c8 \uc815\ubcf4\ub97c json \ud30c\uc77c\ub85c \ub0b4\ubcf4\ub0bc \uc218 \uc788\ub294 \ub0b4\ubcf4\ub0b4\uae30 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Metadata"},{"location":"Metadata/#django-rest-framework-metadata","text":"\"[The OPTIONS] method allows a client to determine the options and/or requirements associated with a resource, or the capabilities of a server, without implying a resource action or initiating a resource retrieval.\" \"[OPTIONS] \uba54\uc18c\ub4dc\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc790\uc6d0 \ub3d9\uc791\uc744 \uc554\uc2dc\ud558\uac70\ub098 \uc790\uc6d0 \uac80\uc0c9\uc744 \uc2dc\uc791\ud558\uc9c0 \uc54a\uace0 \uc790\uc6d0 \ub610\ub294 \uc11c\ubc84\uc758 \uae30\ub2a5\uacfc \uad00\ub828\ub41c \uc635\uc158 \ubc0f / \ub610\ub294 \uc694\uad6c \uc0ac\ud56d\uc744 \uacb0\uc815\ud560 \uc218 \uc788\uac8c \ud569\ub2c8\ub2e4.\" \u2014 RFC7231, Section 4.3.7.","title":"Django REST Framework - Metadata"},{"location":"Metadata/#metadata","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 API\uac00 OPTIONS \uc694\uccad\uc5d0 \uc5b4\ub5bb\uac8c \uc751\ub2f5\ud574\uc57c \ud558\ub294\uc9c0\ub97c \uacb0\uc815\ud558\uae30 \uc704\ud55c \uad6c\uc131 \uac00\ub2a5\ud55c \uba54\ucee4\ub2c8\uc998\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. API \uc2a4\ud0a4\ub9c8 \ub610\ub294 \uae30\ud0c0 \ub9ac\uc18c\uc2a4 \uc815\ubcf4\ub97c \ubc18\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud604\uc7ac HTTP OPTIONS \uc694\uccad\uc5d0 \ub300\ud574 \uc5b4\ub5a4 \uc2a4\ud0c0\uc77c\uc758 response\ub97c \ubc18\ud658\ud574\uc57c\ud558\ub294\uc9c0\uc5d0 \ub300\ud574 \ub110\ub9ac \ucc44\ud0dd \ub41c \uaddc\uce59\uc774 \uc5c6\uc73c\ubbc0\ub85c \uc720\uc6a9\ud55c \uc815\ubcf4\ub97c \ubc18\ud658\ud558\ub294 \ud2b9\ubcc4 \uc2a4\ud0c0\uc77c\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \ubc18\ud658\ub418\ub294 \uc815\ubcf4\ub97c \ubcf4\uc5ec\uc8fc\ub294 \uc608\uc81c response\uc785\ub2c8\ub2e4. HTTP 200 OK Allow: GET, POST, HEAD, OPTIONS Content-Type: application/json { \"name\": \"To Do List\", \"description\": \"List existing 'To Do' items, or create a new item.\", \"renders\": [ \"application/json\", \"text/html\" ], \"parses\": [ \"application/json\", \"application/x-www-form-urlencoded\", \"multipart/form-data\" ], \"actions\": { \"POST\": { \"note\": { \"type\": \"string\", \"required\": false, \"read_only\": false, \"label\": \"title\", \"max_length\": 100 } } } }","title":"Metadata"},{"location":"Metadata/#setting-the-metadata-scheme","text":"DEFAULT_METADATA_CLASS \uc124\uc815 \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uba54\ud0c0 \ub370\uc774\ud130 \ud074\ub798\uc2a4\ub97c \uc804\uc5ed\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_METADATA_CLASS': 'rest_framework.metadata.SimpleMetadata' } \ub610\ub294 view\uc5d0 \ub300\ud574 \uac1c\ubcc4\uc801\uc73c\ub85c \uba54\ud0c0 \ub370\uc774\ud130 \ud074\ub798\uc2a4\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class APIRoot(APIView): metadata_class = APIRootMetadata def get(self, request, format=None): return Response({ ... }) REST \ud504\ub808\uc784\uc6cc\ud06c \ud328\ud0a4\uc9c0\ub294 SimpleMetadata \ub77c\ub294 \ub2e8\uc77c \uba54\ud0c0 \ub370\uc774\ud130 \ud074\ub798\uc2a4 \uad6c\ud604\ub9cc \ud3ec\ud568\ub429\ub2c8\ub2e4. \ub2e4\ub978 \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 custom \uba54\ud0c0 \ub370\uc774\ud130 \ud074\ub798\uc2a4\ub97c \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4.","title":"Setting the metadata scheme"},{"location":"Metadata/#creating-schema-endpoints","text":"\uc77c\ubc18 GET \uc694\uccad\uc73c\ub85c \uc561\uc11c\uc2a4\ub418\ub294 schema endpoint\uc744 \ub9cc\ub4e4\uae30 \uc704\ud55c \ud2b9\uc815 \uc694\uad6c\uc0ac\ud56d\uc774 \uc788\ub294 \uacbd\uc6b0 \uadf8\ub807\uac8c \ud558\uae30 \uc704\ud574 \uba54\ud0c0 \ub370\uc774\ud130 API\ub97c \ub2e4\uc2dc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c\uacfc \uac19\uc740 \ucd94\uac00 \ub77c\uc6b0\ud2b8\ub97c vViewSet\uc5d0 \uc0ac\uc6a9\ud558\uc5ec linkable schema endpoint\uc5d0 \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. @list_route(methods=['GET']) def schema(self, request): meta = self.metadata_class() data = meta.determine_metadata(request, self) return Response(data) OPTIONS \uc751\ub2f5\uc744 \uce90\uc2f1\ud560 \uc218 \uc5c6\ub2e4\ub294 \uac83 \uc744 \ud3ec\ud568\ud558\uc5ec \uc774 \uc811\uadfc \ubc29\uc2dd\uc744 \uc120\ud0dd\ud560 \uc218 \uc788\ub294 \uba87\uac00\uc9c0 \uc774\uc720\uac00 \uc788\uc2b5\ub2c8\ub2e4.","title":"Creating schema endpoints"},{"location":"Metadata/#custom-metadata-classes","text":"custom metadata \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud558\ub824\uba74 BaseMetadata \ub97c \ub300\uccb4\ud558\uace0 decide_metadata(self, request, view) \uba54\uc11c\ub4dc\ub97c \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4. \uc720\uc6a9\ud55c \uc815\ubcf4\ub85c\ub294 schema \uc815\ubcf4 \ub9ac\ud134, JSON schema \uc640 \uac19\uc740 \ud615\uc2dd \uc0ac\uc6a9 \ub610\ub294 \uad00\ub9ac\uc790\uc5d0\uc138 \ub514\ubc84\uadf8 \uc815\ubcf4 \ub9ac\ud134 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4.","title":"Custom metadata classes"},{"location":"Metadata/#example","text":"\ub2e4\uc74c \ud074\ub798\uc2a4\ub294 OPTIONS \uc694\uccad\uc5d0 \ubc18\ud658\ub418\ub294 \uc815\ubcf4\ub97c \uc81c\ud55c\ud558\ub294\ub370 \uc0ac\uc6a9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class MinimalMetadata(BaseMetadata): \"\"\" Don't include field and other information for `OPTIONS` requests. Just return the name and description. \"\"\" def determine_metadata(self, request, view): return { 'name': view.get_view_name(), 'description': view.get_view_description() } \uadf8\ub7f0 \ub2e4\uc74c \uc774 custom \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\uc744 \uad6c\uc131\ud558\uc138\uc694. REST_FRAMEWORK = { 'DEFAULT_METADATA_CLASS': 'myproject.apps.core.MinimalMetadata' }","title":"Example"},{"location":"Metadata/#third-party-packages","text":"\ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub294 \ucd94\uac00 \uba54\ub098 \ub370\uc774\ud130 \uad6c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Third party packages"},{"location":"Metadata/#drf-schema-adapter","text":"drf-schema-adapter \ub294 \ud504\ub860\ud2b8\uc5d4\ub4dc \ud504\ub808\uc784\uc6cc\ud06c \ubc0f \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0 \uc2a4\ud0a4\ub9c8 \uc815\ubcf4\ub97c \ubcf4\ub2e4 \uc27d\uac8c \uc81c\uacf5\ud560 \uc218 \uc788\uac8c \ud574\uc8fc\ub294 \ub3c4\uad6c set\uc785\ub2c8\ub2e4. metadata mixin \ubfd0\ub9cc \uc544\ub2c8\ub77c \ub2e4\uc591\ud55c \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0 \uc758\ud574 \uc77d\uc744 \uc218 \uc788\ub294 \uc2a4\ud0a4\ub9c8 \uc815\ubcf4\ubfd0\ub9cc \uc544\ub2c8\ub77c json-schema \ub97c \uc0dd\uc131\ud558\ub294\ub370 \uc801\ud569\ud55c 2\uac1c\uc758 metadara \ud074\ub798\uc2a4\uc640 \uc5ec\ub7ec \uc5b4\ub311\ud130\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ud2b9\uc815 \ud504\ub860\ud2b8\uc5d4\ub4dc\uc5d0\uc11c \uc791\ub3d9\ud558\ub3c4\ub85d \uc5b4\ub311\ud130\ub97c \uc791\uc131\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud558\uace0 \uc2f6\ub2e4\uba74 \uc2a4\ud0a4\ub9c8 \uc815\ubcf4\ub97c json \ud30c\uc77c\ub85c \ub0b4\ubcf4\ub0bc \uc218 \uc788\ub294 \ub0b4\ubcf4\ub0b4\uae30 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"DRF-schema-adapter"},{"location":"Pagination/","text":"Django REST Framework - Pagination \"Django provides a few classes that help you manage paginated data \u2013 that is, data that\u2019s split across several pages, with \u201cPrevious/Next\u201d links.\" \"Django\ub294 \ud398\uc774\uc9c0\uac00 \ub9e4\uaca8\uc9c4 \ub370\uc774\ud130, \uc989 \"\uc774\uc804 / \ub2e4\uc74c\" \ub9c1\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5ec\ub7ec \ud398\uc774\uc9c0\ub85c \ub098\ub204\uc5b4 \uc9c4 \ub370\uc774\ud130\ub97c \uad00\ub9ac\ud558\ub294\ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \uba87\uac00\uc9c0 \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.\" \u2014 Django documentation Pagination REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 custom \uac00\ub2a5\ud55c pagination \uc2a4\ud0c0\uc77c\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ud070 result sets\uc744 \uac1c\ubcc4 \ub370\uc774\ud130 \ud398\uc774\uc9c0\ub85c \ubd84\ud560\ud558\ub294 \ubc29\ubc95\uc744 \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. pagination API\ub294 \ub2e4\uc74c \uc911 \ud558\ub098\ub97c \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. resopnse \ub0b4\uc6a9\uc758 \uc77c\ubd80\ub85c \uc81c\uacf5\ub418\ub294 pagination \ub9c1\ud06c Content-Range \ub610\ub294 Link \uc640 \uac19\uc740 response header\uc5d0 \ud3ec\ud568 \ub41c pagination \ub9c1\ud06c \ub0b4\uc7a5\ub41c \uc2a4\ud0c0\uc77c\uc740 \ud604\uc7ac response \ub0b4\uc6a9\uc758 \uc77c\ubd80\ub85c \ud3ec\ud568\ub41c \ub9c1\ud06c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uc2a4\ud0c0\uc77c\uc740 browsable API\ub97c \uc0ac\uc6a9\ud560 \ub54c \ub354 \uc27d\uac8c \uc561\uc11c\uc2a4 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. pagination\uc740 generic view \ub610\ub294 viewset\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uc790\ub3d9\uc73c\ub85c \uc218\ud589\ub429\ub2c8\ub2e4. \uc77c\ubc18 APIView \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 pagination \ub41c response\ub97c \ubc18\ud658\ud558\ub3c4\ub85d pagination API\ub97c \uc9c1\uc811 \ud638\ucd9c\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, mixins.ListModelMixin \ubc0f generics.GenericAPIView \ud074\ub798\uc2a4\uc758 \uc18c\uc2a4 \ucf54\ub4dc\ub97c \ucc38\uc870\ud558\uc138\uc694. pagination \ud074\ub798\uc2a4\ub97c None \uc73c\ub85c \uc124\uc815\ud558\uba74 pagination\uc744 \ub04c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Setting the pagination style \uae30\ubcf8 pagination \uc2a4\ud0c0\uc77c\uc740 DEFAULT_PAGINATION_CLASS \ubc0f PAGE_SIZE \uc124\uc815 \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc804\uccb4\uc801\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub0b4\uc7a5 \ub41c limit / offset pagination\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \ud558\uba74 \ub429\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination', 'PAGE_SIZE': 100 } pagination \ud074\ub798\uc2a4\uc640 \uc0ac\uc6a9\ud560 \ud398\uc774\uc9c0 \ud06c\ub97c \ubaa8\ub450 \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. pagination_class \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec \uac1c\ubcc4 view\uc5d0\uc11c pagination \ud074\ub798\uc2a4\ub97c \uc124\uc815 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c API \uc804\uccb4\uc5d0\uc11c \ub3d9\uc77c\ud55c pagination \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\uace0 \uc2f6\uc9c0\ub9cc view\ub9c8\ub2e4 \uae30\ubcf8 \ud398\uc774\uc9c0 \ub610\ub294 \ucd5c\ub300 \ud398\uc774\uc9c0 \ud06c\uae30\uac00 \uac19\uc740 pagination\uc758 \uac1c\ubcc4\uc801\uc778 \uce21\uba74\uc744 \ubc14\uafc0 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Modifying the pagination style pagination \uc2a4\ud0c0\uc77c\uc758 \ud2b9\uc815 \uce21\uba74\uc744 \uc218\uc815\ud558\ub824\uba74 pagination \ud074\ub798\uc2a4 \uc911 \ud558\ub098\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uace0 \ubcc0\uacbd\ud558\ub824\ub294 \uc18d\uc131\uc744 \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. class LargeResultsSetPagination(PageNumberPagination): page_size = 1000 page_size_query_param = 'page_size' max_page_size = 10000 class StandardResultsSetPagination(PageNumberPagination): page_size = 100 page_size_query_param = 'page_size' max_page_size = 1000 \uadf8\ub7f0 \ub2e4\uc74c .pagination_class \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubdf0\uc5d0 \uc0c8 \uc2a4\ud0c0\uc77c\uc744 \uc801\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class BillingRecordsView(generics.ListAPIView): queryset = Billing.objects.all() serializer_class = BillingRecordsSerializer pagination_class = LargeResultsSetPagination \ub610\ub294 DEFAULT_PAGINATION_CLASS \uc124\uc815 \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2a4\ud0c0\uc77c\uc744 \uc804\uc5ed\uc801\uc73c\ub85c \uc801\uc6a9\ud558\uc138\uc694. \uc608: REST_FRAMEWORK = { 'DEFAULT_PAGINATION_CLASS': 'apps.core.pagination.StandardResultsSetPagination' } API Reference PageNumberPagination \uc774 pagination \uc2a4\ud0c0\uc77c\uc740 request \ucffc\ub9ac parameter\uc5d0 \ub2e8\uc77c \uc22b\uc790 \ud398\uc774\uc9c0 \ubc88\ud638\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. Request : GET https://api.example.org/accounts/?page=4 Response : HTTP 200 OK { \"count\": 1023 \"next\": \"https://api.example.org/accounts/?page=5\", \"previous\": \"https://api.example.org/accounts/?page=3\", \"results\": [ \u2026 ] } Setup PageNumberPagination \uc2a4\ud0c0\uc77c\uc744 \uc804\uc5ed\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e4\uc74c \uad6c\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec PAGE_SIZE \ub97c \uc6d0\ud558\ub294\ub300\ub85c \uc218\uc815\ud558\uc138\uc694. REST_FRAMEWORK = { 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination', 'PAGE_SIZE': 100 } GenericAPIView \uc11c\ube0c \ud074\ub798\uc2a4\uc5d0\uc11c pagination_class \uc18d\uc131\uc744 \uc124\uc815\ud558\uc5ec \ud398\uc774\uc9c0 \ub2e8\uc704\ub85c PageNumberPagination \uc744 \uc120\ud0dd\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Configuration (\uad6c\uc131) PageNumberPagination \ud074\ub798\uc2a4\ub294 pagination \uc2a4\ud0c0\uc77c\uc744 \uc218\uc815\ud558\uae30 \uc704\ud574 \uc624\ubc84\ub77c\uc774\ub4dc \ub420 \uc218 \uc788\ub294 \uc5ec\ub7ec \uc18d\uc131\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc18d\uc131\uc744 \uc124\uc815\ud558\ub824\uba74 PageNumberPagination \ud074\ub798\uc2a4\ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud55c \ub2e4\uc74c \uc704\uc640 \uac19\uc774 custom pagination \ud074\ub798\uc2a4\ub97c \ud65c\uc131\ud654\ud574\uc57c\ud569\ub2c8\ub2e4. django_paginator_class : \uc0ac\uc6a9\ud560 Django Paginator \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 django.core.paginator.Paginator \uc785\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uc0ac\uc6a9 \uc0ac\ub840\uc5d0\uc11c \uad1c\ucc2e\uc2b5\ub2c8\ub2e4. page_size : \ud398\uc774\uc9c0 \ud06c\uae30\ub97c \ub098\ud0c0\ub0b4\ub294 \uc22b\uc790 \uac12\uc785\ub2c8\ub2e4. \uc124\uc815\ub41c \uacbd\uc6b0 PAGE_SIZE \uc124\uc815\ubcf4\ub2e4 \uc6b0\uc120\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 PAGE_SIZE \uc124\uc815 \ud0a4\uc640 \ub3d9\uc77c\ud55c \uac12\uc785\ub2c8\ub2e4. page_query_param : pagination \ucee8\ud2b8\ub864\uc5d0 \uc0ac\uc6a9\ud560 \ucffc\ub9ac parameter\uc758 \uc774\ub984\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \uac12\uc785\ub2c8\ub2e4. page_size_query_param : \uc124\uc815\ub41c \uacbd\uc6b0 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 request \ubcc4\ub85c \ud398\uc774\uc9c0 \ud06c\uae30\ub97c \uc124\uc815\ud560 \uc218 \uc788\ub3c4\ub85d\ud558\ub294 \ucffc\ub9ac parameter\uc758 \uc774\ub984\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \uac12\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 None \uc73c\ub85c, \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc694\uccad \ub41c \ud398\uc774\uc9c0 \ud06c\uae30\ub97c \uc81c\uc5b4 \ud560 \uc218 \uc5c6\uc74c\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. max_page_size : \uc124\uc815\ub418\uba74 request \ub41c \ucd5c\ub300 \ud398\uc774\uc9c0 \ud06c\uae30\ub97c \ub098\ud0c0\ub0b4\ub294 \uc22b\uc790 \uac12\uc785\ub2c8\ub2e4. \uc774 \uc18d\uc131\uc740 page_size_query_param \ub3c4 \uc124\uc815\ub418\uc5b4\uc788\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uc720\ud6a8\ud569\ub2c8\ub2e4. last_page_strings : page_query_param \uacfc \ud568\uaed8 \uc0ac\uc6a9\ub418\uc5b4 \ucd5c\uc885 \ud398\uc774\uc9c0\ub97c \uc694\uccad\ud560 \uc218\uc788\ub294 \uac12\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \uac12\uc758 list \ub610\ub294 tuple \uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 ('last',) \uc785\ub2c8\ub2e4. template : browsable API\uc5d0\uc11c pagination \ucee8\ud2b8\ub864\uc744 \ub80c\ub354\ub9c1 \ud560 \ub54c \uc0ac\uc6a9\ud560 \ud15c\ud50c\ub9bf\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \ub80c\ub354\ub9c1 \uc2a4\ud0c0\uc77c\uc744 \uc218\uc815\ud558\uae30 \uc704\ud574 \uc624\ubc84\ub77c\uc774\ub4dc \ub418\uac70\ub098 HTML pagination \ucee8\ud2b8\ub864\uc744 \uc644\uc804\ud788 \ube44\ud65c\uc131\ud654\ud558\ub824\uba74 None \uc73c\ub85c \uc124\uc815 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \"rest_framework / pagination / numbers.html\" \uc785\ub2c8\ub2e4. LimitOffsetPagination \uc774 pagination \uc2a4\ud0c0\uc77c\uc740 \uc5ec\ub7ec \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ub808\ucf54\ub4dc\ub97c \ucc3e\uc744 \ub54c \uc0ac\uc6a9\ub418\ub294 \uad6c\ubb38\uc744 \ubc18\uc601\ud569\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub294 \"limit\"\uc640 \"offset\" \ucffc\ub9ac parameter\uac00 \ubaa8\ub450 \ud3ec\ud568\ub429\ub2c8\ub2e4. limit \ub294 \ubc18\ud658 \ud560 \ucd5c\ub300 \ud56d\ubaa9 \uc218\ub97c \ub098\ud0c0\ub0b4\uba70 \ub2e4\ub978 \uc2a4\ud0c0\uc77c\uc758 page_size \uc640 \uac19\uc2b5\ub2c8\ub2e4. offset \uc740 unpaginated \ub41c \ud56d\ubaa9\uc758 \uc644\uc131\ub41c set\uacfc \uad00\ub828\ud558\uc5ec \ucffc\ub9ac\uc758 \uc2dc\uc791 \uc704\uce58\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. Request : GET https://api.example.org/accounts/?limit=100&offset=400 response : HTTP 200 OK { \"count\": 1023 \"next\": \"https://api.example.org/accounts/?limit=100&offset=500\", \"previous\": \"https://api.example.org/accounts/?limit=100&offset=300\", \"results\": [ \u2026 ] } Setup LimitOffsetPagination \uc2a4\ud0c0\uc77c\uc744 \uc804\uc5ed\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e4\uc74c \uad6c\uc131\uc744 \uc0ac\uc6a9\ud558\uc138\uc694. REST_FRAMEWORK = { 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination' } \uc120\ud0dd\uc801\uc73c\ub85c PAGE_SIZE \ud0a4\ub97c \uc124\uc815 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. PAGE_SIZE parameter\ub3c4 \uc0ac\uc6a9\ub418\ub294 \uacbd\uc6b0 limit \ucffc\ub9ac parameter\ub294 \uc120\ud0dd\uc0ac\ud56d\uc774\uba70 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc0dd\ub7b5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. GenericAPIView \uc11c\ube0c \ud074\ub798\uc2a4\uc5d0\uc11c\ub294 pagination_class \uc18d\uc131\uc744 \uc124\uc815\ud558\uc5ec \uac01 \ubdf0\ubcc4\ub85c LimitOffsetPagination \uc744 \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Configuration LimitOffsetPagination \ud074\ub798\uc2a4\uc5d0\ub294pagination \uc2a4\ud0c0\uc77c\uc744 \uc218\uc815\ud558\uae30 \uc704\ud574 \uc624\ubc84\ub77c\uc774\ub4dc \ud560 \uc218 \uc788\ub294 \ub9ce\uc740 \uc18d\uc131\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc18d\uc131\uc744 \uc124\uc815\ud558\ub824\uba74 LimitOffsetPagination \ud074\ub798\uc2a4\ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud55c \ub2e4\uc74c \uc704\uc640 \uac19\uc774 custom pagination \ud074\ub798\uc2a4\ub97c \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. default_limit : \ucffc\ub9ac parameter\uc5d0\uc11c \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc744 \uacbd\uc6b0 \uc0ac\uc6a9\ud560 \uc81c\ud55c\uc744 \ub098\ud0c0\ub0b4\ub294 \uc22b\uc790 \uac12\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 PAGE_SIZE \uc124\uc815 \ud0a4\uc640 \ub3d9\uc77c\ud55c \uac12\uc785\ub2c8\ub2e4. limit_query_param : \"limit\" \ucffc\ub9ac parameter\uc758 \uc774\ub984\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \uac12\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 'limit' \uc785\ub2c8\ub2e4. offset_query_param : \"offset\" \ucffc\ub9ac parameter\uc758 \uc774\ub984\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \uac12\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 'offset' \uc785\ub2c8\ub2e4. max_limit : \uc124\uc815\ub41c \uacbd\uc6b0 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc694\uccad\ud560 \uc218\uc788\ub294 \ucd5c\ub300 \ud5c8\uc6a9 \ud55c\uacc4\ub97c \ub098\ud0c0\ub0b4\ub294 \uc22b\uc790 \uac12\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 None \uc785\ub2c8\ub2e4. template : browsable API\uc5d0\uc11c \ud398\uc774\uc9c0 \ub9e4\uae40 \ucee8\ud2b8\ub864\uc744 \ub80c\ub354\ub9c1 \ud560 \ub54c \uc0ac\uc6a9\ud560 \ud15c\ud50c\ub9bf\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \ub80c\ub354\ub9c1 \uc2a4\ud0c0\uc77c\uc744 \uc218\uc815\ud558\uae30 \uc704\ud574 \uc624\ubc84\ub77c\uc774\ub4dc \ub418\uac70\ub098 HTML pagination \ucee8\ud2b8\ub864\uc744 \uc644\uc804\ud788 \ube44\ud65c\uc131\ud654\ud558\ub824\uba74 None \uc73c\ub85c \uc124\uc815 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \"rest_framework / pagination / numbers.html\" \uc785\ub2c8\ub2e4. CursorPagination cursor \uae30\ubc18 pagination\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 result set\ub97c \ud1b5\ud574 \ud398\uc774\uc9c0 \ud560 \ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ubd88\ud22c\uba85\ud55c \"cursor\" \uc9c0\uc2dc\uc790\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 pagination \uc2a4\ud0c0\uc77c\uc740 \uc815\ubc29\ud5a5 \ubc0f \uc5ed\ubc29\ud5a5 \ucee8\ud2b8\ub864\ub9cc \uc81c\uacf5\ud558\uba70 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc784\uc758\uc758 \uc704\uce58\ub85c \uc774\ub3d9\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud569\ub2c8\ub2e4. cursor\ub97c \uae30\ubc18\uc73c\ub85c pagination\uc744 \uc218\ud589\ud558\ub824\uba74 result set\uc5d0 items\uc758 \uc21c\uc11c\uac00 \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc544\uc57c \ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uc21c\uc11c\ub294 \ub808\ucf54\ub4dc\uc5d0 \ub300\ud55c \uc0dd\uc131 timestamp \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 pagination \uc21c\uc11c\ub97c \uc77c\uad00\ub418\uac8c \uc720\uc9c0\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. cursor \uae30\ubc18 pagination\uc740 \ub2e4\ub978 \uc2a4\ud0a4\ub9c8\ubcf4\ub2e4 \ubcf5\uc7a1\ud569\ub2c8\ub2e4. \ub610\ud55c result set\uc774 \uace0\uc815 \ub41c \uc21c\uc11c\ub97c \uc81c\uacf5\ud574\uc57c\ud558\uba70 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc784\uc758\ub85c result set\uc5d0 \uc0c9\uc778\uc744 \uc791\uc131\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc57c\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ub2e4\uc74c\uacfc \uac19\uc740 \uc774\uc810\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc77c\uad00\ub41c pagination \uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc81c\ub300\ub85c \uc0ac\uc6a9\ud558\uba74 CursorPagination \uc740 pagination \uacfc\uc815\uc5d0\uc11c \ub2e4\ub978 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc0c8 \ud56d\ubaa9\uc744 \uc0bd\uc785\ud558\ub294 \uacbd\uc6b0\uc5d0\ub3c4 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ub808\ucf54\ub4dc\ub97c \ud398\uc774\uc9d5 \ud560 \ub54c \ub3d9\uc77c\ud55c item\uc744 \ub450\ubc88 \ubcf4\uc9c0 \ubabb\ud558\uac8c \ud569\ub2c8\ub2e4. \ub9e4\uc6b0 \ud070 \ub370\uc774\ud130 set \uc0ac\uc6a9\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uadf9\ub3c4\ub85c \ud070 \ub370\uc774\ud130 set\uc758 \uacbd\uc6b0 offset \uae30\ubc18 pagination \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\ub294 pagination\uc774 \ube44\ud6a8\uc728\uc801\uc774\uac70\ub098 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\uc2e0 cursor \uae30\ubc18 pagination \uc2a4\ud0a4\ub9c8\ub294 \uace0\uc815 \uc2dc\uac04 \uc18d\uc131\uc744 \uac00\uc9c0\uba70 \ub370\uc774\ud130 set \ud06c\uae30\uac00 \ucee4\uc9c8\uc218\ub85d \uc18d\ub3c4\uac00 \ub290\ub824\uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Details and limitations cursor \uae30\ubc18\uc758 pagination\uc744 \uc62c\ubc14\ub974\uac8c \uc0ac\uc6a9\ud558\ub824\uba74 \uc138\ubd80 \uc0ac\ud56d\uc5d0 \uc57d\uac04\uc758 \uc8fc\uc758\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \uacc4\ud68d\uc744 \uc801\uc6a9\ud558\uae30\ub97c \uc6d0\ud558\ub294 \uc21c\uc11c\uc5d0 \ub300\ud574 \uc0dd\uac01\ud560 \ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \"-created\" \uc785\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0 'created' timestamp \ud544\ub4dc\uac00 \uaf2d \uc788\uc5b4\uc57c\ud558\uba70 \uac00\uc7a5 \ucd5c\uadfc\uc5d0 \ucd94\uac00 \ub41c \ud56d\ubaa9\uc774 \uba3c\uc800 \ub098\uc624\ub294 \"timeline\" \uc2a4\ud0c0\uc77c pagination view\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. pagination \ud074\ub798\uc2a4\uc758 'ordering' \uc18d\uc131\uc744 \ubb34\uc2dc\ud558\uac70\ub098 OrderingFilter \ud544\ud130 \ud074\ub798\uc2a4\ub97c CursorPagination \uacfc \ud568\uaed8 \uc0ac\uc6a9\ud558\uc5ec \uc21c\uc11c\ub97c \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. OrderingFilter \uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc0ac\uc6a9\uc790\uac00 \uc8fc\ubb38 \ud560 \uc218 \uc788\ub294 \uc785\ub825\ub780\uc744 \uc81c\ud55c\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ucee4\uc11c pagination \uc744 \uc62c\ubc14\ub974\uac8c \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e4\uc74c\uc744 \ub9cc\uc871\uc2dc\ud0a4\ub294 ordering \ud544\ub4dc\uac00 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc0dd\uc131\uc2dc timestamp, slug \ub610\ub294 \ud55c\ubc88\ub9cc \uc124\uc815\ub418\ub294 \ub2e4\ub978 \ud544\ub4dc\uc640 \uac19\uc740 \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc740 \uac12\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uace0\uc720\ud558\uac70\ub098 \uac70\uc758 \uace0\uc720\ud574\uc57c\ud569\ub2c8\ub2e4. Millisecond \uc815\ubc00\ub3c4 timestamp\uac00 \uc88b\uc740 \uc608\uc785\ub2c8\ub2e4. \uc774 cursor pagination\uc758 \uad6c\ud604\uc740 \ub611\ub611\ud55c \"position plus offset\"\uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc5c4\uaca9\ud558\uac8c \uace0\uc720\ud558\uc9c0 \uc54a\uc740 \uac12\uc744 \uc21c\uc11c\ub300\ub85c \uc62c\ubc14\ub974\uac8c \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. null\uc774 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\ub294 \uac12\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4.(\ubb38\uc790\uc5f4\ub85c \uac15\uc81c \ubcc0\ud658 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.) \ud544\ub4dc\uc5d0\ub294 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc0c9\uc778\uc774 \uc788\uc5b4\uc57c\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc81c\uc57d \uc870\uac74\uc744 \ub9cc\uc871\uc2dc\ud0a4\uc9c0 \ubabb\ud558\ub294 ordering field\ub97c \uc0ac\uc6a9\ud558\uba74 \uc77c\ubc18\uc801\uc73c\ub85c \uc791\ub3d9\ud558\uc9c0\ub9cc cursor pagination\uc758 \uc774\uc810\uc744 \uc77c\ubd80 \uc0c1\uc2e4\ud558\uac8c \ub429\ub2c8\ub2e4. cursor pagination\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uad6c\ud604\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc815\ubcf4\ub294 \"Building cursors for the Disqus API\" \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c\uc5d0\uc11c \uae30\ubcf8 \uc811\uadfc \ubc29\ubc95\uc5d0 \ub300\ud55c \uac1c\uc694\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Setup CursorPagination \uc2a4\ud0c0\uc77c\uc744 \uc804\uc5ed\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e4\uc74c \uad6c\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec PAGE_SIZE \ub97c \uc6d0\ud558\ub294\ub300\ub85c \uc218\uc815\ud558\uc2ed\uc2dc\uc624. REST_FRAMEWORK = { 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.CursorPagination', 'PAGE_SIZE': 100 } GenericAPIView \uc11c\ube0c \ud074\ub798\uc2a4\uc5d0\uc11c pagination_class \uc18d\uc131\uc744 \uc124\uc815\ud558\uc5ec \ubdf0 \ub2e8\uc704\ub85c CursorPagination \uc744 \uc120\ud0dd\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Configuration CursorPagination \ud074\ub798\uc2a4\uc5d0\ub294 pagination \uc2a4\ud0c0\uc77c\uc744 \uc218\uc815\ud558\uae30 \uc704\ud574 \uc624\ubc84\ub77c\uc774\ub4dc \ub420 \uc218 \uc788\ub294 \ub9ce\uc740 \uc18d\uc131\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc18d\uc131\uc744 \uc124\uc815\ud558\ub824\uba74 CursorPagination \ud074\ub798\uc2a4\ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud55c \ub2e4\uc74c \uc704\uc640 \uac19\uc774 custom pagination \ud074\ub798\uc2a4\ub97c \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. page_size : \ud398\uc774\uc9c0 \ud06c\uae30\ub97c \ub098\ud0c0\ub0b4\ub294 \uc22b\uc790 \uac12\uc785\ub2c8\ub2e4. \uc124\uc815\ub41c \uacbd\uc6b0 PAGE_SIZE \uc124\uc815\ubcf4\ub2e4 \uc6b0\uc120\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 PAGE_SIZE \uc124\uc815 \ud0a4\uc640 \ub3d9\uc77c\ud55c \uac12\uc785\ub2c8\ub2e4 cursor_query_param : \"cursor\" \ucffc\ub9ac parameter\uc758 \uc774\ub984\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \uac12\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 'cursor' \uc785\ub2c8\ub2e4. ordering : cursor \uae30\ubc18\uc758 pagiation\uc774 \uc801\uc6a9\ub420 \ud544\ub4dc\ub97c \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \ub610\ub294 \ubb38\uc790\uc5f4 list \uc774\uc5b4\uc57c\ud569\ub2c8\ub2e4. (\uc608: ordering = 'slug' ) \uae30\ubcf8\uac12\uc740 -created \uc785\ub2c8\ub2e4. \ubdf0\uc5d0\uc11c OrderingFilter \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774 \uac12\uc744 \uc624\ubc84\ub77c\uc774\ub4dc \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. template : browsable API\uc5d0\uc11c pagination \ucee8\ud2b8\ub864\uc744 \ub80c\ub354\ub9c1 \ud560 \ub54c \uc0ac\uc6a9\ud560 \ud15c\ud50c\ub9bf\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \ub80c\ub354\ub9c1 \uc2a4\ud0c0\uc77c\uc744 \uc218\uc815\ud558\uae30 \uc704\ud574 \uc624\ubc84\ub77c\uc774\ub4dc \ub418\uac70\ub098 HTML pagination \ucee8\ud2b8\ub864\uc744 \uc644\uc804\ud788 \ube44\ud65c\uc131\ud654\ud558\ub824\uba74 None \uc73c\ub85c \uc124\uc815 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \"rest_framework/pagination/previous_and_next.html\" \uc785\ub2c8\ub2e4. Custom pagination styles Custom pagination serializer \ud074\ub798\uc2a4\ub97c \uc0dd\uc131\ud558\ub824\uba74 pagination.BasePagination \uc744 \uc11c\ube0c \ud074\ub798\uc2a4\ud654\ud558\uace0 paginate_queryset(self, queryset, request, view = None) \ubc0f get_paginated_response(self, data) \uba54\uc18c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud574\uc57c\ud569\ub2c8\ub2e4. paginate_queryset \uba54\uc18c\ub4dc\ub294 \ucd08\uae30 \ucffc\ub9ac\uc14b\uc744 \uc804\ub2ec \ubc1b\uace0 \uc694\uccad \ub41c \ud398\uc774\uc9c0\uc758 \ub370\uc774\ud130\ub9cc \ud3ec\ud568\ud558\ub294 \ubc18\ubcf5 \uac00\ub2a5\ud55c \uac1d\uccb4\ub97c \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. get_paginated_response \uba54\uc18c\ub4dc\ub294 serializer \ub41c \ud398\uc774\uc9c0 \ub370\uc774\ud130\ub97c \uc804\ub2ec \ubc1b\uace0 Response \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. paginate_queryset \uba54\uc18c\ub4dc\ub294 \ud398\uc774\uc9c0 \uc124\uc815 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc0c1\ud0dc\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc73c\uba70 \ub098\uc911\uc5d0 get_paginated_response \uba54\uc18c\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Example \uae30\ubcf8 pagination output \uc2a4\ud0c0\uc77c\uc744 \uc911\ucca9 \ub41c 'links' \ud0a4 \uc544\ub798\uc758 \ub2e4\uc74c \ub9c1\ud06c\uc640 \uc774\uc804 \ub9c1\ud06c\ub97c \ud3ec\ud568\ud558\ub294 \uc218\uc815\ub41c \ud615\uc2dd\uc73c\ub85c \ubc14\uafb8\ub824\ud55c\ub2e4\uace0 \uac00\uc815\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc774 custom pagination \ud074\ub798\uc2a4\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class CustomPagination(pagination.PageNumberPagination): def get_paginated_response(self, data): return Response({ 'links': { 'next': self.get_next_link(), 'previous': self.get_previous_link() }, 'count': self.page.paginator.count, 'results': data }) \uadf8\ub7f0 \ub2e4\uc74c \uad6c\uc131\uc5d0\uc11c custom \ud074\ub798\uc2a4\ub97c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4 REST_FRAMEWORK = { 'DEFAULT_PAGINATION_CLASS': 'my_project.apps.core.pagination.CustomPagination', 'PAGE_SIZE': 100 } browsable API\uc758 response\uc5d0\uc11c \ud0a4\uc758 \uc21c\uc11c\uac00 \uc5b4\ub5bb\uac8c \ud45c\uc2dc\ub418\ub294\uc9c0 \uc2e0\uacbd \uc4f0\uba74 pagination \ub41c response\uc758 \ubcf8\ubb38\uc744 \uad6c\uc131\ud560 \ub54c OrderedDict \ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc120\ud0dd\ud560 \uc218 \uc788\uc9c0\ub9cc \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. Header based pagination \ub0b4\uc7a5 \ub41c PageNumberPagination \uc2a4\ud0c0\uc77c\uc744 \uc218\uc815\ud558\uc5ec response \ubcf8\ubb38\uc5d0 pagination \ub9c1\ud06c\ub97c \ud3ec\ud568\ud558\ub294 \ub300\uc2e0 GitHub API\uc640 \ube44\uc2b7\ud55c \uc2a4\ud0c0\uc77c \ub85c link \ud5e4\ub354\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. class LinkHeaderPagination(pagination.PageNumberPagination): def get_paginated_response(self, data): next_url = self.get_next_link() previous_url = self.get_previous_link() if next_url is not None and previous_url is not None: link = '<{next_url}>; rel=\"next\", <{previous_url}>; rel=\"prev\"' elif next_url is not None: link = '<{next_url}>; rel=\"next\"' elif previous_url is not None: link = '<{previous_url}>; rel=\"prev\"' else: link = '' link = link.format(next_url=next_url, previous_url=previous_url) headers = {'Link': link} if link else {} return Response(data, headers=headers) Using your custom pagination class custom pagination \ud074\ub798\uc2a4\ub97c \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\ub824\uba74 DEFAULT_PAGINATION_CLASS \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc138\uc694. REST_FRAMEWORK = { 'DEFAULT_PAGINATION_CLASS': 'my_project.apps.core.pagination.LinkHeaderPagination', 'PAGE_SIZE': 100 } \uc774\uc81c endpoint\uc5d0 \ub300\ud55c API response\uc5d0\ub294 \ud398\uc774\uc9c0 \ubcf8\ubb38 \ub9c1\ud06c\ub97c response \ubcf8\ubb38\uc758 \uc77c\ubd80\ub85c \ud3ec\ud568\ud558\ub294 \ub300\uc2e0 link \ud5e4\ub354\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. Pagination & schemas \ub610\ud55c coreapi.Field \uc778\uc2a4\ud134\uc2a4\uc758 list\ub97c \ubc18\ud658\ud574\uc57c\ud558\ub294 get_schema_fields() \uba54\uc18c\ub4dc\ub97c \uad6c\ud604\ud558\uc5ec REST \ud504\ub808\uc784\uc6cc\ud06c\uac00 \uc81c\uacf5\ud558\ub294 \uc2a4\ud0a4\ub9c8 \uc790\ub3d9 \uc0dd\uc131\uc5d0\uc11c pagination \ucee8\ud2b8\ub864\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. link \ud5e4\ub354\ub97c \uc0ac\uc6a9\ud558\ub294 custom pagination \uc2a4\ud0c0\uc77c HTML pagination controls \uae30\ubcf8\uc801\uc73c\ub85c pagination \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 browsable API\uc5d0 HTML pagination \ucee8\ud2b8\ub864\uc774 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \ub450 \uac00\uc9c0 \ub0b4\uc7a5 \ub514\uc2a4\ud50c\ub808\uc774 \uc2a4\ud0c0\uc77c\uc774 \uc788\uc2b5\ub2c8\ub2e4. PageNumberPagination \ubc0f LimitOffsetPagination \ud074\ub798\uc2a4\ub294 \uc774\uc804 \ubc0f \ub2e4\uc74c \ucee8\ud2b8\ub864\uc774 \ud3ec\ud568 \ub41c \ud398\uc774\uc9c0 \ubc88\ud638 \ubaa9\ub85d\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4. CursorPagination \ud074\ub798\uc2a4\ub294 \uc774\uc804 \ubc0f \ub2e4\uc74c \ucee8\ud2b8\ub864\ub9cc \ud45c\uc2dc\ud558\ub294 \ubcf4\ub2e4 \ub2e8\uc21c\ud55c \uc2a4\ud0c0\uc77c\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4. Customizing the controls HTML pagination \ucee8\ud2b8\ub864\uc744 \ub80c\ub354\ub9c1\ud558\ub294 \ud15c\ud50c\ub9bf\uc744 \uc624\ubc84\ub77c\uc774\ub4dc \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub450 \uac00\uc9c0 \uae30\ubcf8 \uc81c\uacf5 \uc2a4\ud0c0\uc77c\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. rest_framework/pagination/numbers.html rest_framework/pagination/previous_and_next.html \uc804\uc5ed \ud15c\ud50c\ub9bf \ub514\ub809\ud1a0\ub9ac\uc5d0 \uc774\ub7ec\ud55c \uacbd\ub85c \uc911 \ud558\ub098\uac00 \uc788\ub294 \ud15c\ud50c\ub9bf\uc744 \uc81c\uacf5\ud558\uba74 \uad00\ub828 pagination \ud074\ub798\uc2a4\uc758 \uae30\ubcf8 \ub80c\ub354\ub9c1\uc774 \ubb34\uc2dc\ub429\ub2c8\ub2e4. \ub610\ub294 \uae30\uc874 \ud074\ub798\uc2a4\ub97c \ud558\uc704 \ud074\ub798\uc2a4\ub85c \ubd84\ub958\ud558\uace0 \ud074\ub798\uc2a4\uc758 \uc18d\uc131\uc73c\ub85c template = None \uc744 \uc124\uc815\ud558\uc5ec HTML pagination \ucee8\ud2b8\ub864\uc744 \uc644\uc804\ud788 \ube44\ud65c\uc131\ud654 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c custom \ud074\ub798\uc2a4\ub97c \uae30\ubcf8 pagination \uc2a4\ud0c0\uc77c\ub85c \uc0ac\uc6a9\ud558\ub824\uba74 DEFAULT_PAGINATION_CLASS \uc124\uc815 \ud0a4\ub97c \uad6c\uc131\ud574\uc57c\ud569\ub2c8\ub2e4. Low-level API pagination \ud074\ub798\uc2a4\uac00 \ucee8\ud2b8\ub864\uc744 \ud45c\uc2dc\ud560\uc9c0 \uc5b4\ub5a8\uc9c0\ub97c \uacb0\uc815\ud558\uae30 \uc704\ud55c \uc800\ub808\ubca8\uc758 API\ub294, pagination \uc778\uc2a4\ud134\uc2a4\uc758 display_page_controls \uc18d\uc131\uc73c\ub85c\uc11c \uacf5\uac1c\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. HTML pagination \ucee8\ud2b8\ub864\uc744 \ud45c\uc2dc\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 paginate_queryset \uba54\uc11c\ub4dc\uc5d0\uc11c custom pagination \ud074\ub798\uc2a4\ub97c True \ub85c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. .to_html() \ubc0f .get_html_context() \uba54\uc18c\ub4dc\ub294 \ucee8\ud2b8\ub864\uc774 \ub80c\ub354\ub9c1\ub418\ub294 \ubc29\uc2dd\uc744 \ucd94\uac00\ub85c custom\ud558\uae30 \uc704\ud574 custom pagination \ud074\ub798\uc2a4\uc5d0\uc11c \uc624\ubc84\ub77c\uc774\ub4dc \ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Third party packages \ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4. DRF-extensions DRF-extensions \ud328\ud0a4\uc9c0 \uc5d0\ub294 PaginateByMaxMixin mixin \ud074\ub798\uc2a4 \uac00 \ud3ec\ud568\ub418\uc5b4\uc788\uc5b4 API \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ud5c8\uc6a9\ub418\ub294 \ucd5c\ub300 \ud398\uc774\uc9c0 \ud06c\uae30\ub97c \uc5bb\uae30 \uc704\ud574 ?page_size=max \ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. drf-proxy-pagination drf-proxy-pagination \ud328\ud0a4\uc9c0 \ub294 \ucffc\ub9ac parameter\ub85c pagination \ud074\ub798\uc2a4\ub97c \uc120\ud0dd\ud560 \uc218 \uc788\ub294 ProxyPagination \ud074\ub798\uc2a4\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4.","title":"Pagination"},{"location":"Pagination/#django-rest-framework-pagination","text":"\"Django provides a few classes that help you manage paginated data \u2013 that is, data that\u2019s split across several pages, with \u201cPrevious/Next\u201d links.\" \"Django\ub294 \ud398\uc774\uc9c0\uac00 \ub9e4\uaca8\uc9c4 \ub370\uc774\ud130, \uc989 \"\uc774\uc804 / \ub2e4\uc74c\" \ub9c1\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5ec\ub7ec \ud398\uc774\uc9c0\ub85c \ub098\ub204\uc5b4 \uc9c4 \ub370\uc774\ud130\ub97c \uad00\ub9ac\ud558\ub294\ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \uba87\uac00\uc9c0 \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.\" \u2014 Django documentation","title":"Django REST Framework - Pagination"},{"location":"Pagination/#pagination","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 custom \uac00\ub2a5\ud55c pagination \uc2a4\ud0c0\uc77c\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ud070 result sets\uc744 \uac1c\ubcc4 \ub370\uc774\ud130 \ud398\uc774\uc9c0\ub85c \ubd84\ud560\ud558\ub294 \ubc29\ubc95\uc744 \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. pagination API\ub294 \ub2e4\uc74c \uc911 \ud558\ub098\ub97c \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. resopnse \ub0b4\uc6a9\uc758 \uc77c\ubd80\ub85c \uc81c\uacf5\ub418\ub294 pagination \ub9c1\ud06c Content-Range \ub610\ub294 Link \uc640 \uac19\uc740 response header\uc5d0 \ud3ec\ud568 \ub41c pagination \ub9c1\ud06c \ub0b4\uc7a5\ub41c \uc2a4\ud0c0\uc77c\uc740 \ud604\uc7ac response \ub0b4\uc6a9\uc758 \uc77c\ubd80\ub85c \ud3ec\ud568\ub41c \ub9c1\ud06c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uc2a4\ud0c0\uc77c\uc740 browsable API\ub97c \uc0ac\uc6a9\ud560 \ub54c \ub354 \uc27d\uac8c \uc561\uc11c\uc2a4 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. pagination\uc740 generic view \ub610\ub294 viewset\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uc790\ub3d9\uc73c\ub85c \uc218\ud589\ub429\ub2c8\ub2e4. \uc77c\ubc18 APIView \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 pagination \ub41c response\ub97c \ubc18\ud658\ud558\ub3c4\ub85d pagination API\ub97c \uc9c1\uc811 \ud638\ucd9c\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, mixins.ListModelMixin \ubc0f generics.GenericAPIView \ud074\ub798\uc2a4\uc758 \uc18c\uc2a4 \ucf54\ub4dc\ub97c \ucc38\uc870\ud558\uc138\uc694. pagination \ud074\ub798\uc2a4\ub97c None \uc73c\ub85c \uc124\uc815\ud558\uba74 pagination\uc744 \ub04c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Pagination"},{"location":"Pagination/#setting-the-pagination-style","text":"\uae30\ubcf8 pagination \uc2a4\ud0c0\uc77c\uc740 DEFAULT_PAGINATION_CLASS \ubc0f PAGE_SIZE \uc124\uc815 \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc804\uccb4\uc801\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub0b4\uc7a5 \ub41c limit / offset pagination\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \ud558\uba74 \ub429\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination', 'PAGE_SIZE': 100 } pagination \ud074\ub798\uc2a4\uc640 \uc0ac\uc6a9\ud560 \ud398\uc774\uc9c0 \ud06c\ub97c \ubaa8\ub450 \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. pagination_class \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec \uac1c\ubcc4 view\uc5d0\uc11c pagination \ud074\ub798\uc2a4\ub97c \uc124\uc815 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c API \uc804\uccb4\uc5d0\uc11c \ub3d9\uc77c\ud55c pagination \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\uace0 \uc2f6\uc9c0\ub9cc view\ub9c8\ub2e4 \uae30\ubcf8 \ud398\uc774\uc9c0 \ub610\ub294 \ucd5c\ub300 \ud398\uc774\uc9c0 \ud06c\uae30\uac00 \uac19\uc740 pagination\uc758 \uac1c\ubcc4\uc801\uc778 \uce21\uba74\uc744 \ubc14\uafc0 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"Setting the pagination style"},{"location":"Pagination/#modifying-the-pagination-style","text":"pagination \uc2a4\ud0c0\uc77c\uc758 \ud2b9\uc815 \uce21\uba74\uc744 \uc218\uc815\ud558\ub824\uba74 pagination \ud074\ub798\uc2a4 \uc911 \ud558\ub098\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uace0 \ubcc0\uacbd\ud558\ub824\ub294 \uc18d\uc131\uc744 \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. class LargeResultsSetPagination(PageNumberPagination): page_size = 1000 page_size_query_param = 'page_size' max_page_size = 10000 class StandardResultsSetPagination(PageNumberPagination): page_size = 100 page_size_query_param = 'page_size' max_page_size = 1000 \uadf8\ub7f0 \ub2e4\uc74c .pagination_class \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubdf0\uc5d0 \uc0c8 \uc2a4\ud0c0\uc77c\uc744 \uc801\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class BillingRecordsView(generics.ListAPIView): queryset = Billing.objects.all() serializer_class = BillingRecordsSerializer pagination_class = LargeResultsSetPagination \ub610\ub294 DEFAULT_PAGINATION_CLASS \uc124\uc815 \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2a4\ud0c0\uc77c\uc744 \uc804\uc5ed\uc801\uc73c\ub85c \uc801\uc6a9\ud558\uc138\uc694. \uc608: REST_FRAMEWORK = { 'DEFAULT_PAGINATION_CLASS': 'apps.core.pagination.StandardResultsSetPagination' }","title":"Modifying the pagination style"},{"location":"Pagination/#api-reference","text":"","title":"API Reference"},{"location":"Pagination/#pagenumberpagination","text":"\uc774 pagination \uc2a4\ud0c0\uc77c\uc740 request \ucffc\ub9ac parameter\uc5d0 \ub2e8\uc77c \uc22b\uc790 \ud398\uc774\uc9c0 \ubc88\ud638\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. Request : GET https://api.example.org/accounts/?page=4 Response : HTTP 200 OK { \"count\": 1023 \"next\": \"https://api.example.org/accounts/?page=5\", \"previous\": \"https://api.example.org/accounts/?page=3\", \"results\": [ \u2026 ] }","title":"PageNumberPagination"},{"location":"Pagination/#setup","text":"PageNumberPagination \uc2a4\ud0c0\uc77c\uc744 \uc804\uc5ed\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e4\uc74c \uad6c\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec PAGE_SIZE \ub97c \uc6d0\ud558\ub294\ub300\ub85c \uc218\uc815\ud558\uc138\uc694. REST_FRAMEWORK = { 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination', 'PAGE_SIZE': 100 } GenericAPIView \uc11c\ube0c \ud074\ub798\uc2a4\uc5d0\uc11c pagination_class \uc18d\uc131\uc744 \uc124\uc815\ud558\uc5ec \ud398\uc774\uc9c0 \ub2e8\uc704\ub85c PageNumberPagination \uc744 \uc120\ud0dd\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"Setup"},{"location":"Pagination/#configuration","text":"PageNumberPagination \ud074\ub798\uc2a4\ub294 pagination \uc2a4\ud0c0\uc77c\uc744 \uc218\uc815\ud558\uae30 \uc704\ud574 \uc624\ubc84\ub77c\uc774\ub4dc \ub420 \uc218 \uc788\ub294 \uc5ec\ub7ec \uc18d\uc131\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc18d\uc131\uc744 \uc124\uc815\ud558\ub824\uba74 PageNumberPagination \ud074\ub798\uc2a4\ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud55c \ub2e4\uc74c \uc704\uc640 \uac19\uc774 custom pagination \ud074\ub798\uc2a4\ub97c \ud65c\uc131\ud654\ud574\uc57c\ud569\ub2c8\ub2e4. django_paginator_class : \uc0ac\uc6a9\ud560 Django Paginator \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 django.core.paginator.Paginator \uc785\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uc0ac\uc6a9 \uc0ac\ub840\uc5d0\uc11c \uad1c\ucc2e\uc2b5\ub2c8\ub2e4. page_size : \ud398\uc774\uc9c0 \ud06c\uae30\ub97c \ub098\ud0c0\ub0b4\ub294 \uc22b\uc790 \uac12\uc785\ub2c8\ub2e4. \uc124\uc815\ub41c \uacbd\uc6b0 PAGE_SIZE \uc124\uc815\ubcf4\ub2e4 \uc6b0\uc120\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 PAGE_SIZE \uc124\uc815 \ud0a4\uc640 \ub3d9\uc77c\ud55c \uac12\uc785\ub2c8\ub2e4. page_query_param : pagination \ucee8\ud2b8\ub864\uc5d0 \uc0ac\uc6a9\ud560 \ucffc\ub9ac parameter\uc758 \uc774\ub984\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \uac12\uc785\ub2c8\ub2e4. page_size_query_param : \uc124\uc815\ub41c \uacbd\uc6b0 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 request \ubcc4\ub85c \ud398\uc774\uc9c0 \ud06c\uae30\ub97c \uc124\uc815\ud560 \uc218 \uc788\ub3c4\ub85d\ud558\ub294 \ucffc\ub9ac parameter\uc758 \uc774\ub984\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \uac12\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 None \uc73c\ub85c, \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc694\uccad \ub41c \ud398\uc774\uc9c0 \ud06c\uae30\ub97c \uc81c\uc5b4 \ud560 \uc218 \uc5c6\uc74c\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. max_page_size : \uc124\uc815\ub418\uba74 request \ub41c \ucd5c\ub300 \ud398\uc774\uc9c0 \ud06c\uae30\ub97c \ub098\ud0c0\ub0b4\ub294 \uc22b\uc790 \uac12\uc785\ub2c8\ub2e4. \uc774 \uc18d\uc131\uc740 page_size_query_param \ub3c4 \uc124\uc815\ub418\uc5b4\uc788\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uc720\ud6a8\ud569\ub2c8\ub2e4. last_page_strings : page_query_param \uacfc \ud568\uaed8 \uc0ac\uc6a9\ub418\uc5b4 \ucd5c\uc885 \ud398\uc774\uc9c0\ub97c \uc694\uccad\ud560 \uc218\uc788\ub294 \uac12\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \uac12\uc758 list \ub610\ub294 tuple \uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 ('last',) \uc785\ub2c8\ub2e4. template : browsable API\uc5d0\uc11c pagination \ucee8\ud2b8\ub864\uc744 \ub80c\ub354\ub9c1 \ud560 \ub54c \uc0ac\uc6a9\ud560 \ud15c\ud50c\ub9bf\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \ub80c\ub354\ub9c1 \uc2a4\ud0c0\uc77c\uc744 \uc218\uc815\ud558\uae30 \uc704\ud574 \uc624\ubc84\ub77c\uc774\ub4dc \ub418\uac70\ub098 HTML pagination \ucee8\ud2b8\ub864\uc744 \uc644\uc804\ud788 \ube44\ud65c\uc131\ud654\ud558\ub824\uba74 None \uc73c\ub85c \uc124\uc815 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \"rest_framework / pagination / numbers.html\" \uc785\ub2c8\ub2e4.","title":"Configuration (\uad6c\uc131)"},{"location":"Pagination/#limitoffsetpagination","text":"\uc774 pagination \uc2a4\ud0c0\uc77c\uc740 \uc5ec\ub7ec \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ub808\ucf54\ub4dc\ub97c \ucc3e\uc744 \ub54c \uc0ac\uc6a9\ub418\ub294 \uad6c\ubb38\uc744 \ubc18\uc601\ud569\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub294 \"limit\"\uc640 \"offset\" \ucffc\ub9ac parameter\uac00 \ubaa8\ub450 \ud3ec\ud568\ub429\ub2c8\ub2e4. limit \ub294 \ubc18\ud658 \ud560 \ucd5c\ub300 \ud56d\ubaa9 \uc218\ub97c \ub098\ud0c0\ub0b4\uba70 \ub2e4\ub978 \uc2a4\ud0c0\uc77c\uc758 page_size \uc640 \uac19\uc2b5\ub2c8\ub2e4. offset \uc740 unpaginated \ub41c \ud56d\ubaa9\uc758 \uc644\uc131\ub41c set\uacfc \uad00\ub828\ud558\uc5ec \ucffc\ub9ac\uc758 \uc2dc\uc791 \uc704\uce58\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. Request : GET https://api.example.org/accounts/?limit=100&offset=400 response : HTTP 200 OK { \"count\": 1023 \"next\": \"https://api.example.org/accounts/?limit=100&offset=500\", \"previous\": \"https://api.example.org/accounts/?limit=100&offset=300\", \"results\": [ \u2026 ] }","title":"LimitOffsetPagination"},{"location":"Pagination/#setup_1","text":"LimitOffsetPagination \uc2a4\ud0c0\uc77c\uc744 \uc804\uc5ed\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e4\uc74c \uad6c\uc131\uc744 \uc0ac\uc6a9\ud558\uc138\uc694. REST_FRAMEWORK = { 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination' } \uc120\ud0dd\uc801\uc73c\ub85c PAGE_SIZE \ud0a4\ub97c \uc124\uc815 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. PAGE_SIZE parameter\ub3c4 \uc0ac\uc6a9\ub418\ub294 \uacbd\uc6b0 limit \ucffc\ub9ac parameter\ub294 \uc120\ud0dd\uc0ac\ud56d\uc774\uba70 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc0dd\ub7b5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. GenericAPIView \uc11c\ube0c \ud074\ub798\uc2a4\uc5d0\uc11c\ub294 pagination_class \uc18d\uc131\uc744 \uc124\uc815\ud558\uc5ec \uac01 \ubdf0\ubcc4\ub85c LimitOffsetPagination \uc744 \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Setup"},{"location":"Pagination/#configuration_1","text":"LimitOffsetPagination \ud074\ub798\uc2a4\uc5d0\ub294pagination \uc2a4\ud0c0\uc77c\uc744 \uc218\uc815\ud558\uae30 \uc704\ud574 \uc624\ubc84\ub77c\uc774\ub4dc \ud560 \uc218 \uc788\ub294 \ub9ce\uc740 \uc18d\uc131\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc18d\uc131\uc744 \uc124\uc815\ud558\ub824\uba74 LimitOffsetPagination \ud074\ub798\uc2a4\ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud55c \ub2e4\uc74c \uc704\uc640 \uac19\uc774 custom pagination \ud074\ub798\uc2a4\ub97c \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. default_limit : \ucffc\ub9ac parameter\uc5d0\uc11c \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc744 \uacbd\uc6b0 \uc0ac\uc6a9\ud560 \uc81c\ud55c\uc744 \ub098\ud0c0\ub0b4\ub294 \uc22b\uc790 \uac12\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 PAGE_SIZE \uc124\uc815 \ud0a4\uc640 \ub3d9\uc77c\ud55c \uac12\uc785\ub2c8\ub2e4. limit_query_param : \"limit\" \ucffc\ub9ac parameter\uc758 \uc774\ub984\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \uac12\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 'limit' \uc785\ub2c8\ub2e4. offset_query_param : \"offset\" \ucffc\ub9ac parameter\uc758 \uc774\ub984\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \uac12\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 'offset' \uc785\ub2c8\ub2e4. max_limit : \uc124\uc815\ub41c \uacbd\uc6b0 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc694\uccad\ud560 \uc218\uc788\ub294 \ucd5c\ub300 \ud5c8\uc6a9 \ud55c\uacc4\ub97c \ub098\ud0c0\ub0b4\ub294 \uc22b\uc790 \uac12\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 None \uc785\ub2c8\ub2e4. template : browsable API\uc5d0\uc11c \ud398\uc774\uc9c0 \ub9e4\uae40 \ucee8\ud2b8\ub864\uc744 \ub80c\ub354\ub9c1 \ud560 \ub54c \uc0ac\uc6a9\ud560 \ud15c\ud50c\ub9bf\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \ub80c\ub354\ub9c1 \uc2a4\ud0c0\uc77c\uc744 \uc218\uc815\ud558\uae30 \uc704\ud574 \uc624\ubc84\ub77c\uc774\ub4dc \ub418\uac70\ub098 HTML pagination \ucee8\ud2b8\ub864\uc744 \uc644\uc804\ud788 \ube44\ud65c\uc131\ud654\ud558\ub824\uba74 None \uc73c\ub85c \uc124\uc815 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \"rest_framework / pagination / numbers.html\" \uc785\ub2c8\ub2e4.","title":"Configuration"},{"location":"Pagination/#cursorpagination","text":"cursor \uae30\ubc18 pagination\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 result set\ub97c \ud1b5\ud574 \ud398\uc774\uc9c0 \ud560 \ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ubd88\ud22c\uba85\ud55c \"cursor\" \uc9c0\uc2dc\uc790\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 pagination \uc2a4\ud0c0\uc77c\uc740 \uc815\ubc29\ud5a5 \ubc0f \uc5ed\ubc29\ud5a5 \ucee8\ud2b8\ub864\ub9cc \uc81c\uacf5\ud558\uba70 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc784\uc758\uc758 \uc704\uce58\ub85c \uc774\ub3d9\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud569\ub2c8\ub2e4. cursor\ub97c \uae30\ubc18\uc73c\ub85c pagination\uc744 \uc218\ud589\ud558\ub824\uba74 result set\uc5d0 items\uc758 \uc21c\uc11c\uac00 \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc544\uc57c \ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uc21c\uc11c\ub294 \ub808\ucf54\ub4dc\uc5d0 \ub300\ud55c \uc0dd\uc131 timestamp \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 pagination \uc21c\uc11c\ub97c \uc77c\uad00\ub418\uac8c \uc720\uc9c0\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. cursor \uae30\ubc18 pagination\uc740 \ub2e4\ub978 \uc2a4\ud0a4\ub9c8\ubcf4\ub2e4 \ubcf5\uc7a1\ud569\ub2c8\ub2e4. \ub610\ud55c result set\uc774 \uace0\uc815 \ub41c \uc21c\uc11c\ub97c \uc81c\uacf5\ud574\uc57c\ud558\uba70 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc784\uc758\ub85c result set\uc5d0 \uc0c9\uc778\uc744 \uc791\uc131\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc57c\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ub2e4\uc74c\uacfc \uac19\uc740 \uc774\uc810\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc77c\uad00\ub41c pagination \uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc81c\ub300\ub85c \uc0ac\uc6a9\ud558\uba74 CursorPagination \uc740 pagination \uacfc\uc815\uc5d0\uc11c \ub2e4\ub978 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc0c8 \ud56d\ubaa9\uc744 \uc0bd\uc785\ud558\ub294 \uacbd\uc6b0\uc5d0\ub3c4 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ub808\ucf54\ub4dc\ub97c \ud398\uc774\uc9d5 \ud560 \ub54c \ub3d9\uc77c\ud55c item\uc744 \ub450\ubc88 \ubcf4\uc9c0 \ubabb\ud558\uac8c \ud569\ub2c8\ub2e4. \ub9e4\uc6b0 \ud070 \ub370\uc774\ud130 set \uc0ac\uc6a9\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uadf9\ub3c4\ub85c \ud070 \ub370\uc774\ud130 set\uc758 \uacbd\uc6b0 offset \uae30\ubc18 pagination \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\ub294 pagination\uc774 \ube44\ud6a8\uc728\uc801\uc774\uac70\ub098 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\uc2e0 cursor \uae30\ubc18 pagination \uc2a4\ud0a4\ub9c8\ub294 \uace0\uc815 \uc2dc\uac04 \uc18d\uc131\uc744 \uac00\uc9c0\uba70 \ub370\uc774\ud130 set \ud06c\uae30\uac00 \ucee4\uc9c8\uc218\ub85d \uc18d\ub3c4\uac00 \ub290\ub824\uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"CursorPagination"},{"location":"Pagination/#details-and-limitations","text":"cursor \uae30\ubc18\uc758 pagination\uc744 \uc62c\ubc14\ub974\uac8c \uc0ac\uc6a9\ud558\ub824\uba74 \uc138\ubd80 \uc0ac\ud56d\uc5d0 \uc57d\uac04\uc758 \uc8fc\uc758\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \uacc4\ud68d\uc744 \uc801\uc6a9\ud558\uae30\ub97c \uc6d0\ud558\ub294 \uc21c\uc11c\uc5d0 \ub300\ud574 \uc0dd\uac01\ud560 \ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \"-created\" \uc785\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0 'created' timestamp \ud544\ub4dc\uac00 \uaf2d \uc788\uc5b4\uc57c\ud558\uba70 \uac00\uc7a5 \ucd5c\uadfc\uc5d0 \ucd94\uac00 \ub41c \ud56d\ubaa9\uc774 \uba3c\uc800 \ub098\uc624\ub294 \"timeline\" \uc2a4\ud0c0\uc77c pagination view\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. pagination \ud074\ub798\uc2a4\uc758 'ordering' \uc18d\uc131\uc744 \ubb34\uc2dc\ud558\uac70\ub098 OrderingFilter \ud544\ud130 \ud074\ub798\uc2a4\ub97c CursorPagination \uacfc \ud568\uaed8 \uc0ac\uc6a9\ud558\uc5ec \uc21c\uc11c\ub97c \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. OrderingFilter \uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc0ac\uc6a9\uc790\uac00 \uc8fc\ubb38 \ud560 \uc218 \uc788\ub294 \uc785\ub825\ub780\uc744 \uc81c\ud55c\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ucee4\uc11c pagination \uc744 \uc62c\ubc14\ub974\uac8c \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e4\uc74c\uc744 \ub9cc\uc871\uc2dc\ud0a4\ub294 ordering \ud544\ub4dc\uac00 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc0dd\uc131\uc2dc timestamp, slug \ub610\ub294 \ud55c\ubc88\ub9cc \uc124\uc815\ub418\ub294 \ub2e4\ub978 \ud544\ub4dc\uc640 \uac19\uc740 \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc740 \uac12\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uace0\uc720\ud558\uac70\ub098 \uac70\uc758 \uace0\uc720\ud574\uc57c\ud569\ub2c8\ub2e4. Millisecond \uc815\ubc00\ub3c4 timestamp\uac00 \uc88b\uc740 \uc608\uc785\ub2c8\ub2e4. \uc774 cursor pagination\uc758 \uad6c\ud604\uc740 \ub611\ub611\ud55c \"position plus offset\"\uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc5c4\uaca9\ud558\uac8c \uace0\uc720\ud558\uc9c0 \uc54a\uc740 \uac12\uc744 \uc21c\uc11c\ub300\ub85c \uc62c\ubc14\ub974\uac8c \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. null\uc774 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\ub294 \uac12\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4.(\ubb38\uc790\uc5f4\ub85c \uac15\uc81c \ubcc0\ud658 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.) \ud544\ub4dc\uc5d0\ub294 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc0c9\uc778\uc774 \uc788\uc5b4\uc57c\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc81c\uc57d \uc870\uac74\uc744 \ub9cc\uc871\uc2dc\ud0a4\uc9c0 \ubabb\ud558\ub294 ordering field\ub97c \uc0ac\uc6a9\ud558\uba74 \uc77c\ubc18\uc801\uc73c\ub85c \uc791\ub3d9\ud558\uc9c0\ub9cc cursor pagination\uc758 \uc774\uc810\uc744 \uc77c\ubd80 \uc0c1\uc2e4\ud558\uac8c \ub429\ub2c8\ub2e4. cursor pagination\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uad6c\ud604\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc815\ubcf4\ub294 \"Building cursors for the Disqus API\" \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c\uc5d0\uc11c \uae30\ubcf8 \uc811\uadfc \ubc29\ubc95\uc5d0 \ub300\ud55c \uac1c\uc694\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Details and limitations"},{"location":"Pagination/#setup_2","text":"CursorPagination \uc2a4\ud0c0\uc77c\uc744 \uc804\uc5ed\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e4\uc74c \uad6c\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec PAGE_SIZE \ub97c \uc6d0\ud558\ub294\ub300\ub85c \uc218\uc815\ud558\uc2ed\uc2dc\uc624. REST_FRAMEWORK = { 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.CursorPagination', 'PAGE_SIZE': 100 } GenericAPIView \uc11c\ube0c \ud074\ub798\uc2a4\uc5d0\uc11c pagination_class \uc18d\uc131\uc744 \uc124\uc815\ud558\uc5ec \ubdf0 \ub2e8\uc704\ub85c CursorPagination \uc744 \uc120\ud0dd\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"Setup"},{"location":"Pagination/#configuration_2","text":"CursorPagination \ud074\ub798\uc2a4\uc5d0\ub294 pagination \uc2a4\ud0c0\uc77c\uc744 \uc218\uc815\ud558\uae30 \uc704\ud574 \uc624\ubc84\ub77c\uc774\ub4dc \ub420 \uc218 \uc788\ub294 \ub9ce\uc740 \uc18d\uc131\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc18d\uc131\uc744 \uc124\uc815\ud558\ub824\uba74 CursorPagination \ud074\ub798\uc2a4\ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud55c \ub2e4\uc74c \uc704\uc640 \uac19\uc774 custom pagination \ud074\ub798\uc2a4\ub97c \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. page_size : \ud398\uc774\uc9c0 \ud06c\uae30\ub97c \ub098\ud0c0\ub0b4\ub294 \uc22b\uc790 \uac12\uc785\ub2c8\ub2e4. \uc124\uc815\ub41c \uacbd\uc6b0 PAGE_SIZE \uc124\uc815\ubcf4\ub2e4 \uc6b0\uc120\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 PAGE_SIZE \uc124\uc815 \ud0a4\uc640 \ub3d9\uc77c\ud55c \uac12\uc785\ub2c8\ub2e4 cursor_query_param : \"cursor\" \ucffc\ub9ac parameter\uc758 \uc774\ub984\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \uac12\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 'cursor' \uc785\ub2c8\ub2e4. ordering : cursor \uae30\ubc18\uc758 pagiation\uc774 \uc801\uc6a9\ub420 \ud544\ub4dc\ub97c \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \ub610\ub294 \ubb38\uc790\uc5f4 list \uc774\uc5b4\uc57c\ud569\ub2c8\ub2e4. (\uc608: ordering = 'slug' ) \uae30\ubcf8\uac12\uc740 -created \uc785\ub2c8\ub2e4. \ubdf0\uc5d0\uc11c OrderingFilter \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774 \uac12\uc744 \uc624\ubc84\ub77c\uc774\ub4dc \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. template : browsable API\uc5d0\uc11c pagination \ucee8\ud2b8\ub864\uc744 \ub80c\ub354\ub9c1 \ud560 \ub54c \uc0ac\uc6a9\ud560 \ud15c\ud50c\ub9bf\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \ub80c\ub354\ub9c1 \uc2a4\ud0c0\uc77c\uc744 \uc218\uc815\ud558\uae30 \uc704\ud574 \uc624\ubc84\ub77c\uc774\ub4dc \ub418\uac70\ub098 HTML pagination \ucee8\ud2b8\ub864\uc744 \uc644\uc804\ud788 \ube44\ud65c\uc131\ud654\ud558\ub824\uba74 None \uc73c\ub85c \uc124\uc815 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \"rest_framework/pagination/previous_and_next.html\" \uc785\ub2c8\ub2e4.","title":"Configuration"},{"location":"Pagination/#custom-pagination-styles","text":"Custom pagination serializer \ud074\ub798\uc2a4\ub97c \uc0dd\uc131\ud558\ub824\uba74 pagination.BasePagination \uc744 \uc11c\ube0c \ud074\ub798\uc2a4\ud654\ud558\uace0 paginate_queryset(self, queryset, request, view = None) \ubc0f get_paginated_response(self, data) \uba54\uc18c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud574\uc57c\ud569\ub2c8\ub2e4. paginate_queryset \uba54\uc18c\ub4dc\ub294 \ucd08\uae30 \ucffc\ub9ac\uc14b\uc744 \uc804\ub2ec \ubc1b\uace0 \uc694\uccad \ub41c \ud398\uc774\uc9c0\uc758 \ub370\uc774\ud130\ub9cc \ud3ec\ud568\ud558\ub294 \ubc18\ubcf5 \uac00\ub2a5\ud55c \uac1d\uccb4\ub97c \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. get_paginated_response \uba54\uc18c\ub4dc\ub294 serializer \ub41c \ud398\uc774\uc9c0 \ub370\uc774\ud130\ub97c \uc804\ub2ec \ubc1b\uace0 Response \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. paginate_queryset \uba54\uc18c\ub4dc\ub294 \ud398\uc774\uc9c0 \uc124\uc815 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc0c1\ud0dc\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc73c\uba70 \ub098\uc911\uc5d0 get_paginated_response \uba54\uc18c\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Custom pagination styles"},{"location":"Pagination/#example","text":"\uae30\ubcf8 pagination output \uc2a4\ud0c0\uc77c\uc744 \uc911\ucca9 \ub41c 'links' \ud0a4 \uc544\ub798\uc758 \ub2e4\uc74c \ub9c1\ud06c\uc640 \uc774\uc804 \ub9c1\ud06c\ub97c \ud3ec\ud568\ud558\ub294 \uc218\uc815\ub41c \ud615\uc2dd\uc73c\ub85c \ubc14\uafb8\ub824\ud55c\ub2e4\uace0 \uac00\uc815\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc774 custom pagination \ud074\ub798\uc2a4\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class CustomPagination(pagination.PageNumberPagination): def get_paginated_response(self, data): return Response({ 'links': { 'next': self.get_next_link(), 'previous': self.get_previous_link() }, 'count': self.page.paginator.count, 'results': data }) \uadf8\ub7f0 \ub2e4\uc74c \uad6c\uc131\uc5d0\uc11c custom \ud074\ub798\uc2a4\ub97c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4 REST_FRAMEWORK = { 'DEFAULT_PAGINATION_CLASS': 'my_project.apps.core.pagination.CustomPagination', 'PAGE_SIZE': 100 } browsable API\uc758 response\uc5d0\uc11c \ud0a4\uc758 \uc21c\uc11c\uac00 \uc5b4\ub5bb\uac8c \ud45c\uc2dc\ub418\ub294\uc9c0 \uc2e0\uacbd \uc4f0\uba74 pagination \ub41c response\uc758 \ubcf8\ubb38\uc744 \uad6c\uc131\ud560 \ub54c OrderedDict \ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc120\ud0dd\ud560 \uc218 \uc788\uc9c0\ub9cc \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4.","title":"Example"},{"location":"Pagination/#header-based-pagination","text":"\ub0b4\uc7a5 \ub41c PageNumberPagination \uc2a4\ud0c0\uc77c\uc744 \uc218\uc815\ud558\uc5ec response \ubcf8\ubb38\uc5d0 pagination \ub9c1\ud06c\ub97c \ud3ec\ud568\ud558\ub294 \ub300\uc2e0 GitHub API\uc640 \ube44\uc2b7\ud55c \uc2a4\ud0c0\uc77c \ub85c link \ud5e4\ub354\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. class LinkHeaderPagination(pagination.PageNumberPagination): def get_paginated_response(self, data): next_url = self.get_next_link() previous_url = self.get_previous_link() if next_url is not None and previous_url is not None: link = '<{next_url}>; rel=\"next\", <{previous_url}>; rel=\"prev\"' elif next_url is not None: link = '<{next_url}>; rel=\"next\"' elif previous_url is not None: link = '<{previous_url}>; rel=\"prev\"' else: link = '' link = link.format(next_url=next_url, previous_url=previous_url) headers = {'Link': link} if link else {} return Response(data, headers=headers)","title":"Header based pagination"},{"location":"Pagination/#using-your-custom-pagination-class","text":"custom pagination \ud074\ub798\uc2a4\ub97c \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\ub824\uba74 DEFAULT_PAGINATION_CLASS \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc138\uc694. REST_FRAMEWORK = { 'DEFAULT_PAGINATION_CLASS': 'my_project.apps.core.pagination.LinkHeaderPagination', 'PAGE_SIZE': 100 } \uc774\uc81c endpoint\uc5d0 \ub300\ud55c API response\uc5d0\ub294 \ud398\uc774\uc9c0 \ubcf8\ubb38 \ub9c1\ud06c\ub97c response \ubcf8\ubb38\uc758 \uc77c\ubd80\ub85c \ud3ec\ud568\ud558\ub294 \ub300\uc2e0 link \ud5e4\ub354\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4.","title":"Using your custom pagination class"},{"location":"Pagination/#pagination-schemas","text":"\ub610\ud55c coreapi.Field \uc778\uc2a4\ud134\uc2a4\uc758 list\ub97c \ubc18\ud658\ud574\uc57c\ud558\ub294 get_schema_fields() \uba54\uc18c\ub4dc\ub97c \uad6c\ud604\ud558\uc5ec REST \ud504\ub808\uc784\uc6cc\ud06c\uac00 \uc81c\uacf5\ud558\ub294 \uc2a4\ud0a4\ub9c8 \uc790\ub3d9 \uc0dd\uc131\uc5d0\uc11c pagination \ucee8\ud2b8\ub864\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. link \ud5e4\ub354\ub97c \uc0ac\uc6a9\ud558\ub294 custom pagination \uc2a4\ud0c0\uc77c","title":"Pagination &amp; schemas"},{"location":"Pagination/#html-pagination-controls","text":"\uae30\ubcf8\uc801\uc73c\ub85c pagination \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 browsable API\uc5d0 HTML pagination \ucee8\ud2b8\ub864\uc774 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \ub450 \uac00\uc9c0 \ub0b4\uc7a5 \ub514\uc2a4\ud50c\ub808\uc774 \uc2a4\ud0c0\uc77c\uc774 \uc788\uc2b5\ub2c8\ub2e4. PageNumberPagination \ubc0f LimitOffsetPagination \ud074\ub798\uc2a4\ub294 \uc774\uc804 \ubc0f \ub2e4\uc74c \ucee8\ud2b8\ub864\uc774 \ud3ec\ud568 \ub41c \ud398\uc774\uc9c0 \ubc88\ud638 \ubaa9\ub85d\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4. CursorPagination \ud074\ub798\uc2a4\ub294 \uc774\uc804 \ubc0f \ub2e4\uc74c \ucee8\ud2b8\ub864\ub9cc \ud45c\uc2dc\ud558\ub294 \ubcf4\ub2e4 \ub2e8\uc21c\ud55c \uc2a4\ud0c0\uc77c\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.","title":"HTML pagination controls"},{"location":"Pagination/#customizing-the-controls","text":"HTML pagination \ucee8\ud2b8\ub864\uc744 \ub80c\ub354\ub9c1\ud558\ub294 \ud15c\ud50c\ub9bf\uc744 \uc624\ubc84\ub77c\uc774\ub4dc \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub450 \uac00\uc9c0 \uae30\ubcf8 \uc81c\uacf5 \uc2a4\ud0c0\uc77c\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. rest_framework/pagination/numbers.html rest_framework/pagination/previous_and_next.html \uc804\uc5ed \ud15c\ud50c\ub9bf \ub514\ub809\ud1a0\ub9ac\uc5d0 \uc774\ub7ec\ud55c \uacbd\ub85c \uc911 \ud558\ub098\uac00 \uc788\ub294 \ud15c\ud50c\ub9bf\uc744 \uc81c\uacf5\ud558\uba74 \uad00\ub828 pagination \ud074\ub798\uc2a4\uc758 \uae30\ubcf8 \ub80c\ub354\ub9c1\uc774 \ubb34\uc2dc\ub429\ub2c8\ub2e4. \ub610\ub294 \uae30\uc874 \ud074\ub798\uc2a4\ub97c \ud558\uc704 \ud074\ub798\uc2a4\ub85c \ubd84\ub958\ud558\uace0 \ud074\ub798\uc2a4\uc758 \uc18d\uc131\uc73c\ub85c template = None \uc744 \uc124\uc815\ud558\uc5ec HTML pagination \ucee8\ud2b8\ub864\uc744 \uc644\uc804\ud788 \ube44\ud65c\uc131\ud654 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c custom \ud074\ub798\uc2a4\ub97c \uae30\ubcf8 pagination \uc2a4\ud0c0\uc77c\ub85c \uc0ac\uc6a9\ud558\ub824\uba74 DEFAULT_PAGINATION_CLASS \uc124\uc815 \ud0a4\ub97c \uad6c\uc131\ud574\uc57c\ud569\ub2c8\ub2e4.","title":"Customizing the controls"},{"location":"Pagination/#low-level-api","text":"pagination \ud074\ub798\uc2a4\uac00 \ucee8\ud2b8\ub864\uc744 \ud45c\uc2dc\ud560\uc9c0 \uc5b4\ub5a8\uc9c0\ub97c \uacb0\uc815\ud558\uae30 \uc704\ud55c \uc800\ub808\ubca8\uc758 API\ub294, pagination \uc778\uc2a4\ud134\uc2a4\uc758 display_page_controls \uc18d\uc131\uc73c\ub85c\uc11c \uacf5\uac1c\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. HTML pagination \ucee8\ud2b8\ub864\uc744 \ud45c\uc2dc\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 paginate_queryset \uba54\uc11c\ub4dc\uc5d0\uc11c custom pagination \ud074\ub798\uc2a4\ub97c True \ub85c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. .to_html() \ubc0f .get_html_context() \uba54\uc18c\ub4dc\ub294 \ucee8\ud2b8\ub864\uc774 \ub80c\ub354\ub9c1\ub418\ub294 \ubc29\uc2dd\uc744 \ucd94\uac00\ub85c custom\ud558\uae30 \uc704\ud574 custom pagination \ud074\ub798\uc2a4\uc5d0\uc11c \uc624\ubc84\ub77c\uc774\ub4dc \ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"Low-level API"},{"location":"Pagination/#third-party-packages","text":"\ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"Third party packages"},{"location":"Pagination/#drf-extensions","text":"DRF-extensions \ud328\ud0a4\uc9c0 \uc5d0\ub294 PaginateByMaxMixin mixin \ud074\ub798\uc2a4 \uac00 \ud3ec\ud568\ub418\uc5b4\uc788\uc5b4 API \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ud5c8\uc6a9\ub418\ub294 \ucd5c\ub300 \ud398\uc774\uc9c0 \ud06c\uae30\ub97c \uc5bb\uae30 \uc704\ud574 ?page_size=max \ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"DRF-extensions"},{"location":"Pagination/#drf-proxy-pagination","text":"drf-proxy-pagination \ud328\ud0a4\uc9c0 \ub294 \ucffc\ub9ac parameter\ub85c pagination \ud074\ub798\uc2a4\ub97c \uc120\ud0dd\ud560 \uc218 \uc788\ub294 ProxyPagination \ud074\ub798\uc2a4\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4.","title":"drf-proxy-pagination"},{"location":"Parsers/","text":"Django REST Framework - Parsers \"Machine interacting web services tend to use more structured formats for sending data than form-encoded, since they're sending more complex data than simple forms\" \"\uc6f9 \uc11c\ube44\uc2a4\ub97c \uc0c1\ud638 \uc791\uc6a9\ud558\ub294 \uae30\uacc4\ub294 \ub2e8\uc21c\ud55c \ud615\uc2dd\ubcf4\ub2e4 \ubcf5\uc7a1\ud55c \ub370\uc774\ud130\ub97c \uc804\uc1a1\ud558\uae30 \ub54c\ubb38\uc5d0 \uc591\uc2dd\uc73c\ub85c \uc778\ucf54\ub529 \ub41c \uac83\ubcf4\ub2e4 \ub370\uc774\ud130 \uc804\uc1a1\uc5d0 \ub354 \ub9ce\uc740 \uad6c\uc870\ud654 \ub41c \ud615\uc2dd\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\ud5a5\uc774 \uc788\uc2b5\ub2c8\ub2e4.\" \u2014 Malcom Tredinnick, Django developers group Parsers REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\ub294 Parser \ud074\ub798\uc2a4\uac00 \ub0b4\uc7a5\ub418\uc5b4 \uc788\uc5b4 \ub2e4\uc591\ud55c \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc73c\ub85c requests\ub97c \uc218\ub77d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c custom parser \ub97c \uc815\uc758 \ud560 \uc218 \uc788\uc5b4\uc11c API\uc5d0\uc11c \ud5c8\uc6a9\ud558\ub294 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc744 \uc720\uc5f0\ud558\uac8c \ub514\uc790\uc778 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. How the parser is determined \ubdf0\uc5d0 \ub300\ud55c \uc720\ud6a8\ud55c parser set\uc740 \ud56d\uc0c1 \ud074\ub798\uc2a4 \ubaa9\ub85d\uc73c\ub85c \uc815\uc758\ub429\ub2c8\ub2e4. request.data \uc5d0 \uc561\uc11c\uc2a4\ud558\uba74 REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ub4e4\uc5b4\uc624\ub294 request\uc758 Content-Type \ud5e4\ub354\ub97c \uac80\uc0ac\ud558\uace0 request \ub0b4\uc6a9\uc744 parse\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 parser \ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. Note : \ud074\ub77c\uc774\uc5b8\ud2b8 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc744 \uac1c\ubc1c\ud560 \ub54c\ub294 \ud56d\uc0c1 HTTP request\ub85c \ub370\uc774\ud130\ub97c \ubcf4\ub0bc\ub54c Content-Type \ud5e4\ub354\ub97c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \ucf58\ud150\ud2b8 \ud0c0\uc785\uc744 \uc124\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 \ub300\ubd80\ubd84\uc758 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 'application/x-www-form-urlencoded' \ub97c \uae30\ubcf8\uac12\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub294 \uc6d0\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, .ajax() \uba54\uc11c\ub4dc\ub85c jQuery\ub97c \uc0ac\uc6a9\ud558\uc5ec json \uc73c\ub85c \uc778\ucf54\ub529 \ub41c \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\ub294 \uacbd\uc6b0, contentType: 'application/json' \uc124\uc815\uc744 \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4. Setting the parsers parser \uc758 \uae30\ubcf8 set\uc740 DEFAULT_PARSER_CLASSES \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\uc5ed\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c \uc124\uc815\uc740 \uae30\ubcf8 JSON \uc774\ub098 formdata \ub300\uc2e0 JSON \ucee8\ud150\ud2b8\uac00 \uc788\ub294 requests\ub9cc \ud5c8\uc6a9\ud569\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_PARSER_CLASSES': ( 'rest_framework.parsers.JSONParser', ) } APIView \ud074\ub798\uc2a4\uc758 \uae30\ubcf8 views\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac1c\ubcc4 view\ub098 viewset\uc5d0 \uc0ac\uc6a9\ub418\ub294 parser \ub97c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.parsers import JSONParser from rest_framework.response import Response from rest_framework.views import APIView class ExampleView(APIView): \"\"\" A view that can accept POST requests with JSON content. \"\"\" parser_classes = (JSONParser,) def post(self, request, format=None): return Response({'received data': request.data}) \ub610\ub294 FBV\uc640 \ud568\uaed8 @api_view \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0. from rest_framework.decorators import api_view from rest_framework.decorators import parser_classes @api_view(['POST']) @parser_classes((JSONParser,)) def example_view(request, format=None): \"\"\" A view that can accept POST requests with JSON content. \"\"\" return Response({'received data': request.data}) API Reference JSONParser JSON request content\ub97c \ud30c\uc2f1\ud569\ub2c8\ub2e4. .media_type : application/json FormParser HTMl form content\ub97c \ud30c\uc2f1\ud569\ub2c8\ub2e4. request.data \ub294 \ub370\uc774\ud130\uc758 QueryDict \ub85c \ucc44\uc6cc\uc9d1\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c HTML form data\ub97c \uc644\ubcbd\ud558\uac8c \uc9c0\uc6d0\ud558\uae30 \uc704\ud574 FormParser \uc640 MultiPartParser \ub97c \ud568\uaed8 \uc0ac\uc6a9\ud558\ub824\uace0 \ud569\ub2c8\ub2e4. .media_type : application/x-www-form-urlencoded MultiPartParser \ud30c\uc77c \uc5c5\ub85c\ub4dc\ub97c \uc9c0\uc6d0\ud558\ub294 Multi form content \ub97c \ud30c\uc2f1\ud569\ub2c8\ub2e4. \ub450 request.data \ubaa8\ub450 QueryDict \ub85c \ucc44\uc6cc\uc9d1\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c HTML form data\ub97c \uc644\ubcbd\ud558\uac8c \uc9c0\uc6d0\ud558\uae30 \uc704\ud574 FormParser \uc640 MultiPartParser \ub97c \ud568\uaed8 \uc0ac\uc6a9\ud558\ub824\uace0 \ud569\ub2c8\ub2e4. .media_type : multipart/form-data FileUploadParser \uac00\uacf5\ub418\uc9c0 \uc54a\uc740 file upload content\ub97c \ud30c\uc2f1\ud568\ub2c8\ub2e4. request.data \uc18d\uc131\uc740 \uc5c5\ub85c\ub4dc \ub41c \ud30c\uc77c\uc744 \ud3ec\ud568\ud558\ub294 \ub2e8\uc77c \ud0a4 'file' \uc774 \ud3ec\ud568\ub41c dict\uc785\ub2c8\ub2e4. FileUploadParser \uc640 \ud568\uaed8 \uc0ac\uc6a9 \ub41c view\uac00 \ud30c\uc77c \uc774\ub984 URL \ud0a4\uc6cc\ub4dc \uc778\uc218\ub85c \ud638\ucd9c\ub418\uba74 \ud574\ub2f9 \uc778\uc218\uac00 filename \uc73c\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. filename URL \ud0a4\uc6cc\ub4dc \uc778\uc218\uc5c6\uc774 \ud638\ucd9c\ub418\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 Content-Disposition HTTP \ud5e4\ub354\uc5d0 filename\uc744 \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74, Content-disposition: attachment; filename=upload.jpg .media_type : */* notes: FileUploadParser \ub294 \ud30c\uc77c\uc744 \uac00\uacf5\ub418\uc9c0 \uc54a\uc740 \ub370\uc774\ud130 request\uc73c\ub85c \uc5c5\ub85c\ub4dc \ud560 \uc218 \uc788\ub294 \uae30\ubcf8 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c \uac83\uc785\ub2c8\ub2e4. \uc6f9 \uae30\ubc18 \uc5c5\ub85c\ub4dc \ub610\ub294 \uba40\ud2f0 \ud30c\ud2b8 \uc5c5\ub85c\ub4dc\uac00 \uc9c0\uc6d0\ub418\ub294 \uae30\ubcf8 \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 \uacbd\uc6b0 MultiPartParser \ud30c\uc11c\ub97c \ub300\uc2e0 \uc0ac\uc6a9\ud574\uc57c\ud569\ub2c8\ub2e4. \uc774 \ud30c\uc11c\uc758 media_type \uc740 \ubaa8\ub4e0 \ucf58\ud150\ud2b8 \ud0c0\uc785\uacfc \uc77c\uce58\ud558\ubbc0\ub85c FileuploadParser \ub294 \uc77c\ubc18\uc801\uc73c\ub85c API view\uc5d0 \uc124\uc815\ub41c \uc720\uc77c\ud55c parser \uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. FileUploadParser \ub294 Django\uc758 \ud45c\uc900 FILE_UPLOAD_HANDLERS \uc124\uc815\uacfc request.upload_handlers \uc18d\uc131\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Django \ubb38\uc11c \ub97c \ucc38\uc870\ud558\uc138\uc694. Basic usage example: # views.py class FileUploadView(views.APIView): parser_classes = (FileUploadParser,) def put(self, request, filename, format=None): file_obj = request.data['file'] # ... # do some stuff with uploaded file # ... return Response(status=204) # urls.py urlpatterns = [ # ... url(r'^upload/(?P<filename>[^/]+)$', FileUploadView.as_view()) ] Custom parsers custom parser \ub97c \uad6c\ud604\ud558\ub824\uba74 BaseParser \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uace0 .media_type \uc18d\uc131\uc744 \uc124\uc815\ud558\uace0 .parse(self, stream, media_type, parser_context) \uba54\uc18c\ub4dc\ub97c \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4. \uba54\uc11c\ub4dc\ub294 request.data \uc18d\uc131\uc744 \ucc44\uc6b0\ub294\ub370 \uc0ac\uc6a9\ud560 \ub370\uc774\ud130\ub97c \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. .parse() \uc5d0 \uc804\ub2ec\ub41c \uc778\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. stream request\uc758 \ubcf8\ubb38\uc744 \ub098\ud0c0\ub0b4\ub294 \uc2a4\ud2b8\ub9bc\uacfc \uac19\uc740 \uac1d\uccb4\uc785\ub2c8\ub2e4. media_type \uc120\ud0dd\uc0ac\ud56d. \uc81c\uacf5\ub418\ub294 \uacbd\uc6b0 \ub4e4\uc5b4\uc624\ub294 request content\uc758 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc785\ub2c8\ub2e4. request\uc758 Content-Type: \ud5e4\ub354\uc5d0 \ub530\ub77c \ub80c\ub354\ub7ec\uc758 media_type \uc18d\uc131\ubcf4\ub2e4 \ub354 \uad6c\uccb4\uc801\uc77c \uc218 \uc788\uc73c\uba70, \ubbf8\ub514\uc5b4 \ud0c0\uc785 parameter\uac00 \ud3ec\ud568 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608: \"text/plain; charset=utf-8\" parser_context \uc120\ud0dd\uc0ac\ud56d. \uc774 \uc778\uc218\uac00 \uc81c\uacf5\ub418\uba74 request content\uc744 \ud30c\uc2f1\ud558\ub294\ub370 \ud544\uc694\ud560 \uc218 \uc788\ub294 \ucd94\uac00 context\ub97c \ud3ec\ud568\ud558\ub294 dict\uac00 \ub429\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c view , request , args , kwargs \ud0a4\ub4e4\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. Example \ub2e4\uc74c\uc740 request content\ub97c \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\ub85c request.data \uc18d\uc131\uc744 \ucc44\uc6b0\ub294 \uc77c\ubc18 \ud14d\uc2a4\ud2b8 \ud30c\uc11c\uc758 \uc608\uc785\ub2c8\ub2e4. class PlainTextParser(BaseParser): \"\"\" Plain text parser. \"\"\" media_type = 'text/plain' def parse(self, stream, media_type=None, parser_context=None): \"\"\" Simply return a string representing the body of the request. \"\"\" return stream.read() Third party packages \ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4. YAML REST \ud504\ub808\uc784 \uc6cc\ud06c YAML \uc740 YAML \ud30c\uc2f1 \ubc0f \ub80c\ub354\ub9c1 \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\uc804\uc5d0 REST \ud504\ub808\uc784\uc6cc\ud06c \ud328\ud0a4\uc9c0\uc5d0 \uc9c1\uc811 \ud3ec\ud568\ub418\uc5b4 \uc788\uc5c8\uc73c\uba70 \uc774\uc81c\ub294 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub85c \ub300\uc2e0 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \uc124\uce58 \ubc0f \uad6c\uc131 pip\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uce58\ud569\ub2c8\ub2e4. $ pip install djangorestframework-yaml REST \ud504\ub808\uc784\uc6cc\ud06c \uc124\uc815\uc744 \uc218\uc815\ud558\uc138\uc694. REST_FRAMEWORK = { 'DEFAULT_PARSER_CLASSES': ( 'rest_framework_yaml.parsers.YAMLParser', ), 'DEFAULT_RENDERER_CLASSES': ( 'rest_framework_yaml.renderers.YAMLRenderer', ), } XML REST \ud504\ub808\uc784\uc6cc\ud06c XML \uc740 \uac04\ub2e8\ud55c \ube44\uacf5\uc2dd XML \ud615\uc2dd\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\uc804\uc5d0 REST \ud504\ub808\uc784 \uc6cc\ud06c \ud328\ud0a4\uc9c0\uc5d0 \uc9c1\uc811 \ud3ec\ud568\ub418\uc5b4 \uc788\uc5c8\uc73c\uba70 \uc774\uc81c\ub294 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub85c \ub300\uc2e0 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \uc124\uce58 \ubc0f \uad6c\uc131 pip\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uce58\ud569\ub2c8\ub2e4. $ pip install djangorestframework-xml REST \ud504\ub808\uc784\uc6cc\ud06c \uc124\uc815\uc744 \uc218\uc815\ud558\uc138\uc694. REST_FRAMEWORK = { 'DEFAULT_PARSER_CLASSES': ( 'rest_framework_xml.parsers.XMLParser', ), 'DEFAULT_RENDERER_CLASSES': ( 'rest_framework_xml.renderers.XMLRenderer', ), } MessagePack MessagePack \uc740 \ube60\ub974\uace0 \ud6a8\uc728\uc801\uc778 \ubc14\uc774\ub108\ub9ac serializer \ud615\uc2dd\uc785\ub2c8\ub2e4. Juan Riaza \ub294 MessagePack \ub80c\ub354\ub7ec\uc640 REST \ud504\ub808\uc784 \uc6cc\ud06c\uc5d0 \ub300\ud55c \ud30c\uc11c \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\ub294 djangorestframework-msgpack \ud328\ud0a4\uc9c0 \ub97c \uc720\uc9c0 \uad00\ub9ac\ud569\ub2c8\ub2e4. CamelCase JSON djangorestframework-camel-case \ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc704\ud55c parser \uc640 camel-case JSON \ub80c\ub354\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 serializer\ub294 \ud30c\uc774\uc36c \uc2a4\ud0c0\uc77c\uc758 underscored \ud544\ub4dc \uc774\ub984\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc, \uc790\ubc14 \uc2a4\ud06c\ub9bd\ud2b8 \uc2a4\ud0c0\uc77c\uc758 camel case field names\uc73c\ub85c API\uc5d0 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uadf8\uac83\uc740 Vitaly Babiy \uc5d0 \uc758\ud574 \uad00\ub9ac\ub429\ub2c8\ub2e4.","title":"Parsers"},{"location":"Parsers/#django-rest-framework-parsers","text":"\"Machine interacting web services tend to use more structured formats for sending data than form-encoded, since they're sending more complex data than simple forms\" \"\uc6f9 \uc11c\ube44\uc2a4\ub97c \uc0c1\ud638 \uc791\uc6a9\ud558\ub294 \uae30\uacc4\ub294 \ub2e8\uc21c\ud55c \ud615\uc2dd\ubcf4\ub2e4 \ubcf5\uc7a1\ud55c \ub370\uc774\ud130\ub97c \uc804\uc1a1\ud558\uae30 \ub54c\ubb38\uc5d0 \uc591\uc2dd\uc73c\ub85c \uc778\ucf54\ub529 \ub41c \uac83\ubcf4\ub2e4 \ub370\uc774\ud130 \uc804\uc1a1\uc5d0 \ub354 \ub9ce\uc740 \uad6c\uc870\ud654 \ub41c \ud615\uc2dd\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\ud5a5\uc774 \uc788\uc2b5\ub2c8\ub2e4.\" \u2014 Malcom Tredinnick, Django developers group","title":"Django REST Framework -  Parsers"},{"location":"Parsers/#parsers","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\ub294 Parser \ud074\ub798\uc2a4\uac00 \ub0b4\uc7a5\ub418\uc5b4 \uc788\uc5b4 \ub2e4\uc591\ud55c \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc73c\ub85c requests\ub97c \uc218\ub77d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c custom parser \ub97c \uc815\uc758 \ud560 \uc218 \uc788\uc5b4\uc11c API\uc5d0\uc11c \ud5c8\uc6a9\ud558\ub294 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc744 \uc720\uc5f0\ud558\uac8c \ub514\uc790\uc778 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Parsers"},{"location":"Parsers/#how-the-parser-is-determined","text":"\ubdf0\uc5d0 \ub300\ud55c \uc720\ud6a8\ud55c parser set\uc740 \ud56d\uc0c1 \ud074\ub798\uc2a4 \ubaa9\ub85d\uc73c\ub85c \uc815\uc758\ub429\ub2c8\ub2e4. request.data \uc5d0 \uc561\uc11c\uc2a4\ud558\uba74 REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ub4e4\uc5b4\uc624\ub294 request\uc758 Content-Type \ud5e4\ub354\ub97c \uac80\uc0ac\ud558\uace0 request \ub0b4\uc6a9\uc744 parse\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 parser \ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. Note : \ud074\ub77c\uc774\uc5b8\ud2b8 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc744 \uac1c\ubc1c\ud560 \ub54c\ub294 \ud56d\uc0c1 HTTP request\ub85c \ub370\uc774\ud130\ub97c \ubcf4\ub0bc\ub54c Content-Type \ud5e4\ub354\ub97c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \ucf58\ud150\ud2b8 \ud0c0\uc785\uc744 \uc124\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 \ub300\ubd80\ubd84\uc758 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 'application/x-www-form-urlencoded' \ub97c \uae30\ubcf8\uac12\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub294 \uc6d0\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, .ajax() \uba54\uc11c\ub4dc\ub85c jQuery\ub97c \uc0ac\uc6a9\ud558\uc5ec json \uc73c\ub85c \uc778\ucf54\ub529 \ub41c \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\ub294 \uacbd\uc6b0, contentType: 'application/json' \uc124\uc815\uc744 \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"How the parser is determined"},{"location":"Parsers/#setting-the-parsers","text":"parser \uc758 \uae30\ubcf8 set\uc740 DEFAULT_PARSER_CLASSES \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\uc5ed\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c \uc124\uc815\uc740 \uae30\ubcf8 JSON \uc774\ub098 formdata \ub300\uc2e0 JSON \ucee8\ud150\ud2b8\uac00 \uc788\ub294 requests\ub9cc \ud5c8\uc6a9\ud569\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_PARSER_CLASSES': ( 'rest_framework.parsers.JSONParser', ) } APIView \ud074\ub798\uc2a4\uc758 \uae30\ubcf8 views\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac1c\ubcc4 view\ub098 viewset\uc5d0 \uc0ac\uc6a9\ub418\ub294 parser \ub97c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.parsers import JSONParser from rest_framework.response import Response from rest_framework.views import APIView class ExampleView(APIView): \"\"\" A view that can accept POST requests with JSON content. \"\"\" parser_classes = (JSONParser,) def post(self, request, format=None): return Response({'received data': request.data}) \ub610\ub294 FBV\uc640 \ud568\uaed8 @api_view \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0. from rest_framework.decorators import api_view from rest_framework.decorators import parser_classes @api_view(['POST']) @parser_classes((JSONParser,)) def example_view(request, format=None): \"\"\" A view that can accept POST requests with JSON content. \"\"\" return Response({'received data': request.data})","title":"Setting the parsers"},{"location":"Parsers/#api-reference","text":"","title":"API Reference"},{"location":"Parsers/#jsonparser","text":"JSON request content\ub97c \ud30c\uc2f1\ud569\ub2c8\ub2e4. .media_type : application/json","title":"JSONParser"},{"location":"Parsers/#formparser","text":"HTMl form content\ub97c \ud30c\uc2f1\ud569\ub2c8\ub2e4. request.data \ub294 \ub370\uc774\ud130\uc758 QueryDict \ub85c \ucc44\uc6cc\uc9d1\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c HTML form data\ub97c \uc644\ubcbd\ud558\uac8c \uc9c0\uc6d0\ud558\uae30 \uc704\ud574 FormParser \uc640 MultiPartParser \ub97c \ud568\uaed8 \uc0ac\uc6a9\ud558\ub824\uace0 \ud569\ub2c8\ub2e4. .media_type : application/x-www-form-urlencoded","title":"FormParser"},{"location":"Parsers/#multipartparser","text":"\ud30c\uc77c \uc5c5\ub85c\ub4dc\ub97c \uc9c0\uc6d0\ud558\ub294 Multi form content \ub97c \ud30c\uc2f1\ud569\ub2c8\ub2e4. \ub450 request.data \ubaa8\ub450 QueryDict \ub85c \ucc44\uc6cc\uc9d1\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c HTML form data\ub97c \uc644\ubcbd\ud558\uac8c \uc9c0\uc6d0\ud558\uae30 \uc704\ud574 FormParser \uc640 MultiPartParser \ub97c \ud568\uaed8 \uc0ac\uc6a9\ud558\ub824\uace0 \ud569\ub2c8\ub2e4. .media_type : multipart/form-data","title":"MultiPartParser"},{"location":"Parsers/#fileuploadparser","text":"\uac00\uacf5\ub418\uc9c0 \uc54a\uc740 file upload content\ub97c \ud30c\uc2f1\ud568\ub2c8\ub2e4. request.data \uc18d\uc131\uc740 \uc5c5\ub85c\ub4dc \ub41c \ud30c\uc77c\uc744 \ud3ec\ud568\ud558\ub294 \ub2e8\uc77c \ud0a4 'file' \uc774 \ud3ec\ud568\ub41c dict\uc785\ub2c8\ub2e4. FileUploadParser \uc640 \ud568\uaed8 \uc0ac\uc6a9 \ub41c view\uac00 \ud30c\uc77c \uc774\ub984 URL \ud0a4\uc6cc\ub4dc \uc778\uc218\ub85c \ud638\ucd9c\ub418\uba74 \ud574\ub2f9 \uc778\uc218\uac00 filename \uc73c\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. filename URL \ud0a4\uc6cc\ub4dc \uc778\uc218\uc5c6\uc774 \ud638\ucd9c\ub418\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 Content-Disposition HTTP \ud5e4\ub354\uc5d0 filename\uc744 \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74, Content-disposition: attachment; filename=upload.jpg .media_type : */*","title":"FileUploadParser"},{"location":"Parsers/#notes","text":"FileUploadParser \ub294 \ud30c\uc77c\uc744 \uac00\uacf5\ub418\uc9c0 \uc54a\uc740 \ub370\uc774\ud130 request\uc73c\ub85c \uc5c5\ub85c\ub4dc \ud560 \uc218 \uc788\ub294 \uae30\ubcf8 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c \uac83\uc785\ub2c8\ub2e4. \uc6f9 \uae30\ubc18 \uc5c5\ub85c\ub4dc \ub610\ub294 \uba40\ud2f0 \ud30c\ud2b8 \uc5c5\ub85c\ub4dc\uac00 \uc9c0\uc6d0\ub418\ub294 \uae30\ubcf8 \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 \uacbd\uc6b0 MultiPartParser \ud30c\uc11c\ub97c \ub300\uc2e0 \uc0ac\uc6a9\ud574\uc57c\ud569\ub2c8\ub2e4. \uc774 \ud30c\uc11c\uc758 media_type \uc740 \ubaa8\ub4e0 \ucf58\ud150\ud2b8 \ud0c0\uc785\uacfc \uc77c\uce58\ud558\ubbc0\ub85c FileuploadParser \ub294 \uc77c\ubc18\uc801\uc73c\ub85c API view\uc5d0 \uc124\uc815\ub41c \uc720\uc77c\ud55c parser \uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. FileUploadParser \ub294 Django\uc758 \ud45c\uc900 FILE_UPLOAD_HANDLERS \uc124\uc815\uacfc request.upload_handlers \uc18d\uc131\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Django \ubb38\uc11c \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"notes:"},{"location":"Parsers/#basic-usage-example","text":"# views.py class FileUploadView(views.APIView): parser_classes = (FileUploadParser,) def put(self, request, filename, format=None): file_obj = request.data['file'] # ... # do some stuff with uploaded file # ... return Response(status=204) # urls.py urlpatterns = [ # ... url(r'^upload/(?P<filename>[^/]+)$', FileUploadView.as_view()) ]","title":"Basic usage example:"},{"location":"Parsers/#custom-parsers","text":"custom parser \ub97c \uad6c\ud604\ud558\ub824\uba74 BaseParser \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uace0 .media_type \uc18d\uc131\uc744 \uc124\uc815\ud558\uace0 .parse(self, stream, media_type, parser_context) \uba54\uc18c\ub4dc\ub97c \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4. \uba54\uc11c\ub4dc\ub294 request.data \uc18d\uc131\uc744 \ucc44\uc6b0\ub294\ub370 \uc0ac\uc6a9\ud560 \ub370\uc774\ud130\ub97c \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. .parse() \uc5d0 \uc804\ub2ec\ub41c \uc778\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.","title":"Custom parsers"},{"location":"Parsers/#stream","text":"request\uc758 \ubcf8\ubb38\uc744 \ub098\ud0c0\ub0b4\ub294 \uc2a4\ud2b8\ub9bc\uacfc \uac19\uc740 \uac1d\uccb4\uc785\ub2c8\ub2e4.","title":"stream"},{"location":"Parsers/#media_type","text":"\uc120\ud0dd\uc0ac\ud56d. \uc81c\uacf5\ub418\ub294 \uacbd\uc6b0 \ub4e4\uc5b4\uc624\ub294 request content\uc758 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc785\ub2c8\ub2e4. request\uc758 Content-Type: \ud5e4\ub354\uc5d0 \ub530\ub77c \ub80c\ub354\ub7ec\uc758 media_type \uc18d\uc131\ubcf4\ub2e4 \ub354 \uad6c\uccb4\uc801\uc77c \uc218 \uc788\uc73c\uba70, \ubbf8\ub514\uc5b4 \ud0c0\uc785 parameter\uac00 \ud3ec\ud568 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608: \"text/plain; charset=utf-8\"","title":"media_type"},{"location":"Parsers/#parser_context","text":"\uc120\ud0dd\uc0ac\ud56d. \uc774 \uc778\uc218\uac00 \uc81c\uacf5\ub418\uba74 request content\uc744 \ud30c\uc2f1\ud558\ub294\ub370 \ud544\uc694\ud560 \uc218 \uc788\ub294 \ucd94\uac00 context\ub97c \ud3ec\ud568\ud558\ub294 dict\uac00 \ub429\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c view , request , args , kwargs \ud0a4\ub4e4\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4.","title":"parser_context"},{"location":"Parsers/#example","text":"\ub2e4\uc74c\uc740 request content\ub97c \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\ub85c request.data \uc18d\uc131\uc744 \ucc44\uc6b0\ub294 \uc77c\ubc18 \ud14d\uc2a4\ud2b8 \ud30c\uc11c\uc758 \uc608\uc785\ub2c8\ub2e4. class PlainTextParser(BaseParser): \"\"\" Plain text parser. \"\"\" media_type = 'text/plain' def parse(self, stream, media_type=None, parser_context=None): \"\"\" Simply return a string representing the body of the request. \"\"\" return stream.read()","title":"Example"},{"location":"Parsers/#third-party-packages","text":"\ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"Third party packages"},{"location":"Parsers/#yaml","text":"REST \ud504\ub808\uc784 \uc6cc\ud06c YAML \uc740 YAML \ud30c\uc2f1 \ubc0f \ub80c\ub354\ub9c1 \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\uc804\uc5d0 REST \ud504\ub808\uc784\uc6cc\ud06c \ud328\ud0a4\uc9c0\uc5d0 \uc9c1\uc811 \ud3ec\ud568\ub418\uc5b4 \uc788\uc5c8\uc73c\uba70 \uc774\uc81c\ub294 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub85c \ub300\uc2e0 \uc9c0\uc6d0\ub429\ub2c8\ub2e4.","title":"YAML"},{"location":"Parsers/#_1","text":"pip\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uce58\ud569\ub2c8\ub2e4. $ pip install djangorestframework-yaml REST \ud504\ub808\uc784\uc6cc\ud06c \uc124\uc815\uc744 \uc218\uc815\ud558\uc138\uc694. REST_FRAMEWORK = { 'DEFAULT_PARSER_CLASSES': ( 'rest_framework_yaml.parsers.YAMLParser', ), 'DEFAULT_RENDERER_CLASSES': ( 'rest_framework_yaml.renderers.YAMLRenderer', ), }","title":"\uc124\uce58 \ubc0f \uad6c\uc131"},{"location":"Parsers/#xml","text":"REST \ud504\ub808\uc784\uc6cc\ud06c XML \uc740 \uac04\ub2e8\ud55c \ube44\uacf5\uc2dd XML \ud615\uc2dd\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\uc804\uc5d0 REST \ud504\ub808\uc784 \uc6cc\ud06c \ud328\ud0a4\uc9c0\uc5d0 \uc9c1\uc811 \ud3ec\ud568\ub418\uc5b4 \uc788\uc5c8\uc73c\uba70 \uc774\uc81c\ub294 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub85c \ub300\uc2e0 \uc9c0\uc6d0\ub429\ub2c8\ub2e4.","title":"XML"},{"location":"Parsers/#_2","text":"pip\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uce58\ud569\ub2c8\ub2e4. $ pip install djangorestframework-xml REST \ud504\ub808\uc784\uc6cc\ud06c \uc124\uc815\uc744 \uc218\uc815\ud558\uc138\uc694. REST_FRAMEWORK = { 'DEFAULT_PARSER_CLASSES': ( 'rest_framework_xml.parsers.XMLParser', ), 'DEFAULT_RENDERER_CLASSES': ( 'rest_framework_xml.renderers.XMLRenderer', ), }","title":"\uc124\uce58 \ubc0f \uad6c\uc131"},{"location":"Parsers/#messagepack","text":"MessagePack \uc740 \ube60\ub974\uace0 \ud6a8\uc728\uc801\uc778 \ubc14\uc774\ub108\ub9ac serializer \ud615\uc2dd\uc785\ub2c8\ub2e4. Juan Riaza \ub294 MessagePack \ub80c\ub354\ub7ec\uc640 REST \ud504\ub808\uc784 \uc6cc\ud06c\uc5d0 \ub300\ud55c \ud30c\uc11c \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\ub294 djangorestframework-msgpack \ud328\ud0a4\uc9c0 \ub97c \uc720\uc9c0 \uad00\ub9ac\ud569\ub2c8\ub2e4.","title":"MessagePack"},{"location":"Parsers/#camelcase-json","text":"djangorestframework-camel-case \ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc704\ud55c parser \uc640 camel-case JSON \ub80c\ub354\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 serializer\ub294 \ud30c\uc774\uc36c \uc2a4\ud0c0\uc77c\uc758 underscored \ud544\ub4dc \uc774\ub984\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc, \uc790\ubc14 \uc2a4\ud06c\ub9bd\ud2b8 \uc2a4\ud0c0\uc77c\uc758 camel case field names\uc73c\ub85c API\uc5d0 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uadf8\uac83\uc740 Vitaly Babiy \uc5d0 \uc758\ud574 \uad00\ub9ac\ub429\ub2c8\ub2e4.","title":"CamelCase JSON"},{"location":"Permissions/","text":"Django REST Framework - Permissions \"Authentication or identification by itself is not usually sufficient to gain access to information or code. For that, the entity requesting access must have authorization.\" \"\uc815\ubcf4 \ub610\ub294 \ucf54\ub4dc\uc5d0 \ub300\ud55c \uc561\uc11c\uc2a4 \uad8c\ud55c\uc744 \uc5bb\uc73c\ub824\uba74 \uc77c\ubc18\uc801\uc73c\ub85c \uc778\uc99d\uc774\ub098 \uc2dd\ubcc4\ub9cc\uc73c\ub85c\ub294 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574\uc11c\ub294 \uc561\uc11c\uc2a4\ub97c \uc694\uccad\ud558\ub294 \uac1c\uccb4\uc5d0 \uad8c\ud55c\uc774 \uc788\uc5b4\uc57c\ud569\ub2c8\ub2e4.\" \u2014 Apple Developer Documentation Permissions \uc778\uc99d \ubc0f \uc81c\ud55c \uacfc \ud568\uaed8 \uc0ac\uc6a9 \uad8c\ud55c\uc740 request\uc5d0 \uc561\uc11c\uc2a4\ub97c \ud5c8\uc6a9\ud560\uc9c0 \ub610\ub294 \uac70\ubd80 \ud560\uc9c0\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \uad8c\ud55c \uac80\uc0ac\ub294 \ub2e4\ub978 \ucf54\ub4dc\uac00 \uc9c4\ud589\ub418\uae30 \uc804\uc5d0 view\uc758 \ub9e8 \ucc98\uc74c\uc5d0 \ud56d\uc0c1 \uc2e4\ud589\ub429\ub2c8\ub2e4. \uad8c\ud55c \uac80\uc0ac\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ub4e4\uc5b4\uc624\ub294 request\ub97c \ud5c8\uc6a9\ud574\uc57c \ud558\ub294\uc9c0\ub97c \uacb0\uc815\ud558\uae30 \uc704\ud574 request.user \ubc0f request.auth \ub4f1\ub85d \uc815\ubcf4\uc758 \uc778\uc99d \uc815\ubcf4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uad8c\ud55c\uc740 \ub2e4\ub978 \ud074\ub798\uc2a4\uc758 \uc0ac\uc6a9\uc790\uac00 API\uc758 \ub2e4\ub978 \ubd80\ubd84\uc5d0 \uc561\uc11c\uc2a4 \ud558\ub294 \uac83\uc744 \ud5c8\uc6a9\ud558\uac70\ub098 \uac70\ubd80\ud558\ub294\uac8c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uac00\uc7a5 \uac04\ub2e8\ud55c \uc0ac\uc6a9 \uad8c\ud55c \uc2a4\ud0c0\uc77c\uc740 \uc778\uc99d \ub41c \uc0ac\uc6a9\uc790\uc5d0\uac8c \uba55\uc11c\uc2a4\ub97c \ud5c8\uc6a9\ud558\uace0 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \uc5d1\uc11c\uc2a4\ub97c \uac70\ubd80\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\uac83\uc740 REST\ud504\ub808\uc784\uc6cc\ud06c\uc758 IsAuthenticated \ud074\ub798\uc2a4\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. \uc57d\uac04 \ub35c \uc5c4\uaca9\ud55c \uad8c\ud55c \uc2a4\ud0c0\uc77c\uc740 \uc778\uc99d \ub41c \uc0ac\uc6a9\uc790\uc5d0\uac8c \ubaa8\ub4e0 \uad8c\ud55c\uc744 \ud5c8\uc6a9\ud558\uc9c0\ub9cc \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790\uc5d0\uac8c\ub294 \uc77d\uae30\uc804\uc6a9 \uad8c\ud55c\uc744 \ud5c8\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\uac83\uc740 REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 IsAuthenticatedOrReadOnly \ud074\ub798\uc2a4\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. How permissions are determined REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \uad8c\ud55c\uc740 \ud56d\uc0c1 \ud074\ub798\uc2a4 list\ub85c \uc815\uc758\ub429\ub2c8\ub2e4. \ubdf0\uc758 \ubcf8\ubb38\uc744 \uc2e4\ud589\ud558\uae30 \uc804\uc5d0 list\uc758 \uac01 \uad8c\ud55c\uc774 \uac80\uc0ac\ub429\ub2c8\ub2e4. \uad8c\ud55c \ud655\uc778\uc5d0 \uc2e4\ud328\ud558\uba74 exceptions.PermissionDenied \ub610\ub294 exceptions.NotAuthenticated \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uace0 view \ubcf8\ubb38\uc774 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uad8c\ud55c \uac80\uc0ac\uac00 \uc2e4\ud328\ud558\uba74 \ub2e4\uc74c \uaddc\uce59\uc5d0 \ub530\ub77c \"403 Forbidden\"\ub610\ub294 \"401 Unauthorized\"\uc751\ub2f5\uc774 \ubc18\ud658\ub429\ub2c8\ub2e4. \uc694\uccad\uc774 \uc131\uacf5\uc801\uc73c\ub85c \uc778\uc99d\ub418\uc5c8\uc9c0\ub9cc \uad8c\ud55c\uc774 \uac70\ubd80\ub418\uc5c8\uc2b5\ub2c8\ub2e4. - HTTP 403 Forbidden \uc751\ub2f5\uc774 \ub9ac\ud134\ub429\ub2c8\ub2e4. \uc694\uccad\uc774 \uc131\uacf5\uc801\uc73c\ub85c \uc778\uc99d\ub418\uc9c0 \uc54a\uc558\uace0 \ucd5c\uc0c1\uc704 \uc6b0\uc120 \uc21c\uc704 \uc778\uc99d \ud074\ub798\uc2a4\ub294 WWW-Authenticate \ud5e4\ub354\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. - HTTP 403 Forbidden \uc751\ub2f5\uc774 \ub9ac\ud134\ub429\ub2c8\ub2e4. \uc694\uccad\uc774 \uc131\uacf5\uc801\uc73c\ub85c \uc778\uc99d\ub418\uc9c0 \uc54a\uc558\uace0 \ucd5c\uc0c1\uc704 \uc6b0\uc120 \uc21c\uc704 \uc778\uc99d \ud074\ub798\uc2a4\ub294 WWW-Authenticate \ud5e4\ub354\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. - \uc801\uc808\ud55c WWW-Authenticate \ud5e4\ub354\uac00 \uc788\ub294 HTTP 401 Unauthorized \uc751\ub2f5\uc774 \ubc18\ud658\ub429\ub2c8\ub2e4. Object level permissions REST \ud504\ub808\uc784\uc6cc\ud06c \uad8c\ud55c\uc740 \ub610\ud55c \uc624\ube0c\uc81d\ud2b8 \ub808\ubca8 \uad8c\ud55c \ubd80\uc5ec\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uac1c\uccb4 \uc218\uc900 \uad8c\ud55c\uc740 \uc0ac\uc6a9\uc790\uac00 \ud2b9\uc815 \uac1c\uccb4(\uc77c\ubc18\uc801\uc73c\ub85c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4)\uc5d0 \ub300\ud55c \uc791\uc5c5\uc744 \ud5c8\uc6a9\ud574\uc57c\ud558\ub294\uc9c0 \uc5ec\ubd80\ub97c \uacb0\uc815\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uac1d\uccb4 \ub808\ubca8 \uad8c\ud55c\uc740 .get_object() \uac00 \ud638\ucd9c \ub420 \ub54c REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 generic view\uc5d0 \uc758\ud574 \uc2e4\ud589\ub429\ub2c8\ub2e4. \ubdf0 \uc218\uc900 \uad8c\ud55c\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c, \uc0ac\uc6a9\uc790\uac00 \uc9c0\uc815\ub41c \uac1d\uccb4\ub97c \ucc98\ub9ac\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 exceptions.PermissionDenied \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc790\uc2e0 \ub9cc\uc758 \ubdf0\ub97c \uc791\uc131\ud558\uace0 \uc624\ube0c\uc81d\ud2b8 \ub808\ubca8 \uad8c\ud55c\uc744 \uc801\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0 \ub610\ub294 generic \ubdf0\uc5d0\uc11c get_object \uba54\uc18c\ub4dc\ub97c \uacb9\uccd0 \uc4f0\ub294 \uacbd\uc6b0\uc5d0\ub294, \uac1c\uccb4\ub97c \uac80\uc0c9 \ud55c \uc2dc\uc810\uc5d0\uc11c \ubdf0\uc5d0\uc11c .check_object_permissions(request, obj) \uba54\uc18c\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \ud638\ucd9c\ud574\uc57c\ud569\ub2c8\ub2e4. PermissionDenied \ub610\ub294 NotAuthenticated \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uac70\ub098 view\uc5d0 \uc801\uc808\ud55c \uad8c\ud55c\uc774 \uc788\ub294 \uacbd\uc6b0 \ubc18\ud658\ub429\ub2c8\ub2e4. \uc608: def get_object(self): obj = get_object_or_404(self.get_queryset()) self.check_object_permissions(self.request, obj) return obj Limitations of object level permissions(\uac1c\uccb4 \uc218\uc900 \uc0ac\uc6a9 \uad8c\ud55c\uc758 \uc81c\ud55c \uc0ac\ud56d) \uc131\ub2a5 \uc0c1\uc758 \uc774\uc720\ub85c generic view\ub294 \uc624\ube0c\uc81d\ud2b8 \ubaa9\ub85d\uc744 \ub9ac\ud134 \ud560 \ub54c queryset\uc758 \uac01 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc624\ube0c\uc81d\ud2b8 \ub808\ubca8 \uad8c\ud55c\uc744 \uc790\ub3d9\uc73c\ub85c \uc801\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uac1d\uccb4 \ub808\ubca8 \uad8c\ud55c\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc885\uc885 \ucffc\ub9ac \uc138\ud2b8\ub97c \uc801\uc808\ud788 \ud544\ud130\ub9c1 \ud558\uc5ec \uc0ac\uc6a9\uc790\uac00 \ubcfc \uc218\uc788\ub294 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud55c \uac00\uc2dc\uc131\ub9cc \ud655\ubcf4\ud558\ub3c4\ub85d \ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Setting the permission policy \uae30\ubcf8 \uad8c\ud55c \uc815\ucc45\uc740 DEFAULT_PERMISSION_CLASSES \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\uc5ed\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74. REST_FRAMEWORK = { 'DEFAULT_PERMISSION_CLASSES': ( 'rest_framework.permissions.IsAuthenticated', ) } \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74\uc774 \uc124\uc815\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \ubb34\uc81c\ud55c \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. 'DEFAULT_PERMISSION_CLASSES': ( 'rest_framework.permissions.AllowAny', ) \ub610\ud55c APIView CBV\ub97c \uc0ac\uc6a9\ud558\uc5ec view \ubcc4 \ub610\ub294 view \ubcc4 \uae30\uc900\ubcc4\ub85c \uc778\uc99d \uc815\ucc45\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.permissions import IsAuthenticated from rest_framework.response import Response from rest_framework.views import APIView class ExampleView(APIView): permission_classes = (IsAuthenticated,) def get(self, request, format=None): content = { 'status': 'request was permitted' } return Response(content) \ub610\ub294 FBV\uc640 \ud568\uaed8 @api_view` \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0. from rest_framework.decorators import api_view, permission_classes from rest_framework.permissions import IsAuthenticated from rest_framework.response import Response @api_view(['GET']) @permission_classes((IsAuthenticated, )) def example_view(request, format=None): content = { 'status': 'request was permitted' } return Response(content) Note : \ud074\ub798\uc2a4 \uc18d\uc131\uc774\ub098 \ub370\ucf54\ub808\uc774\ud130\ub97c \ud1b5\ud574 \uc0c8 \uad8c\ud55c \ud074\ub798\uc2a4\ub97c \uc124\uc815\ud558\uba74 settings.py \ud30c\uc77c\uc744 \ud1b5\ud574 \uc124\uc815\ub41c \uae30\ubcf8 \ubaa9\ub85d\uc744 \ubb34\uc2dc\ud558\ub3c4\ub85d \ubdf0\uc5d0 \uc9c0\uc2dc\ud569\ub2c8\ub2e4. API Reference AllowAny AllowAny \uad8c\ud55c \ud074\ub798\uc2a4\ub294 \uc694\uccad\uc774 \uc778\uc99d\ub418\uc5c8\uac70\ub098 \uc778\uc99d\ub418\uc9c0 \uc54a\uc558\ub294\uc9c0 \uc5ec\ubd80\uc5d0 \uad00\uacc4\uc5c6\uc774 \uc81c\ud55c\ub418\uc9c0 \uc54a\uc740 \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uc0ac\uc6a9 \uad8c\ud55c \uc124\uc815\uc5d0 \ube48 \ubaa9\ub85d\uc774\ub098 \ud29c\ud50c\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub3d9\uc77c\ud55c \uacb0\uacfc\ub97c \uc5bb\uc744 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc774 \uc0ac\uc6a9 \uad8c\ud55c\uc740 \ubc18\ub4dc\uc2dc \ud544\uc694\ud55c \uac83\uc740 \uc544\ub2c8\uc9c0\ub9cc \uc758\ub3c4\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud558\uae30 \ub54c\ubb38\uc5d0 \uc774 \ud074\ub798\uc2a4\ub97c \uc9c0\uc815\ud558\ub294 \uac83\uc774 \uc720\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IsAuthenticated IsAuthenticated \uad8c\ud55c \ud074\ub798\uc2a4\ub294 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uad8c\ud55c\uc744 \uac70\ubd80\ud558\uace0 \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uc5d0\ub294 \uad8c\ud55c\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uad8c\ud55c\uc740 \ub4f1\ub85d \ub41c \uc0ac\uc6a9\uc790\ub9cc API\uc5d0 \uc561\uc138\uc2a4 \ud560 \uc218 \uc788\uac8c \ud558\ub824\ub294 \uacbd\uc6b0 \uc801\ud569\ud569\ub2c8\ub2e4. IsAdminUser IsAdminUser \uad8c\ud55c \ud074\ub798\uc2a4\ub294 user.is_staff \uac00 True \uc778 \uacbd\uc6b0\ub97c \uc81c\uc678\ud558\uace0 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \uc0ac\uc6a9 \uad8c\ud55c\uc744 \uac70\ubd80\ud569\ub2c8\ub2e4. \uc774 \uad8c\ud55c\uc740 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \uad00\ub9ac\uc790\uc758 \ud558\uc704 \uc9d1\ud569\uc5d0\uc11c\ub9cc API\uc5d0 \uc561\uc138\uc2a4 \ud560 \uc218 \uc788\uac8c \ud558\ub824\ub294 \uacbd\uc6b0 \uc801\ud569\ud569\ub2c8\ub2e4. IsAuthenticatedOrReadOnly IsAuthenticatedOrReadOnly \ub97c \uc0ac\uc6a9\ud558\uba74 \uc778\uc99d \ub41c \uc0ac\uc6a9\uc790\uac00 \ubaa8\ub4e0 \uc694\uccad\uc744 \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad8c\ud55c\uc774 \uc5c6\ub294 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \uc694\uccad\uc740 \uc694\uccad \ubc29\ubc95\uc774 \"\uc548\uc804\ud55c\" \ubc29\ubc95 \uc911 \ud558\ub098\uc77c \uacbd\uc6b0\uc5d0\ub9cc \ud5c8\uc6a9\ub429\ub2c8\ub2e4. GET , HEAD \ub610\ub294 OPTIONS . \uc774 \uad8c\ud55c\uc740 API\uc5d0\uc11c \uc775\uba85 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc77d\uae30 \uad8c\ud55c\uc744 \ud5c8\uc6a9\ud558\uace0 \uc778\uc99d \ub41c \uc0ac\uc6a9\uc790\uc5d0\uac8c\ub9cc \uc4f0\uae30 \uad8c\ud55c\uc744 \ud5c8\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. DjangoModelPermissions \uc774 \ud37c\ubbf8\uc158 \ud074\ub798\uc2a4\ub294 Django\uc758 \ud45c\uc900 django.contrib.auth \ubaa8\ub378 \ud37c\ubbf8\uc158 \uacfc \uad00\ub828\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uad8c\ud55c\uc740 .queryset \uc18d\uc131\uc774 \uc124\uc815\ub41c view\uc5d0\ub9cc \uc801\uc6a9\ud574\uc57c\ud569\ub2c8\ub2e4. \uad8c\ud55c \ubd80\uc5ec\ub294 \uc0ac\uc6a9\uc790\uac00 \uc778\uc99d\ub418\uace0 \uad00\ub828 \ubaa8\ub378 \uad8c\ud55c\uc774 \ud560\ub2f9 \ub41c \uacbd\uc6b0\uc5d0\ub9cc \ubd80\uc5ec\ub429\ub2c8\ub2e4. POST request\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ubaa8\ub378\uc5d0 \ub300\ud55c add \uad8c\ud55c\uc774 \uc788\uc5b4\uc57c\ud569\ub2c8\ub2e4. PUT \ubc0f PATCH request\ub294 \uc0ac\uc6a9\uc790\uac00 \ubaa8\ub378\uc5d0 \ub300\ud55c \ubcc0\uacbd \uad8c\ud55c\uc744 \uc694\uad6c\ud569\ub2c8\ub2e4. DELETE request\ub294 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ubaa8\ub378\uc5d0 \ub300\ud55c \uc0ad\uc81c \uad8c\ud55c\uc774 \uc788\uc5b4\uc57c\ud569\ub2c8\ub2e4. \uae30\ubcf8 \ub3d9\uc791\uc744 \uc7ac\uc815\uc758\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ubaa8\ub378 \uad8c\ud55c\uc744 \uc9c0\uc6d0\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 GET \uc694\uccad\uc5d0 \ub300\ud55c view \ubaa8\ub378 \uad8c\ud55c\uc744 \ud3ec\ud568 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. custom \ubaa8\ub378 \uad8c\ud55c\uc744 DjangoModelPermissions \uc744 \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uace0 .perms_map property\ub97c \uc124\uc815\ud558\uc5ec \uc0ac\uc6a9\ud569\ub2c8\ub2e4. Using with views that do not include a queryset attribute. (queryset \uc18d\uc131\uc744 \ud3ec\ud568\ud558\uc9c0 \uc54a\ub294 \ubdf0\ub97c \uc0ac\uc6a9\ud560 \ub54c) \uc7ac\uc815\uc758 \ub41c get_queryset() \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \ubdf0\uc5d0\uc11c \uc774 \uad8c\ud55c\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ubdf0\uc5d0 queryset \uc18d\uc131\uc774 \uc5c6\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0\uc5d0\ub294 sentinel queryset\uc73c\ub85c \ubdf0\ub97c \ud45c\uc2dc\ud558\uc5ec \uc774 \ud074\ub798\uc2a4\uac00 \ud544\uc694\ud55c \uad8c\ud55c\uc744 \uacb0\uc815\ud560 \uc218 \uc788\ub3c4\ub85d\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc608 : queryset = User.objects.none() # Required for DjangoModelPermissions DjangoModelPermissionsOrAnonReadOnly DjangoModelPermissions \uc640 \uc720\uc0ac\ud558\uc9c0\ub9cc \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790\ub294 API\uc5d0 \ub300\ud55c \uc77d\uae30 \uc804\uc6a9 \uc561\uc138\uc2a4\ub9cc \ud5c8\uc6a9\ud569\ub2c8\ub2e4. DjangoObjectPermissions \uc774 \ud37c\ubbf8\uc158 \ud074\ub798\uc2a4\ub294 \ubaa8\ub378\uc5d0 \ub300\ud55c \uac1d\uccb4 \ubcc4 \uad8c\ud55c\uc744 \ud5c8\uc6a9\ud558\ub294 Django\uc758 \ud45c\uc900 \uac1d\uccb4 \uad8c\ud55c \ud504\ub808\uc784\uc6cc\ud06c \uc640 \uad00\ub828\uc774\uc788\ub2e4. \uc774 \uad8c\ud55c \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 django-guardian \uacfc \uac19\uc740 \uac1d\uccb4 \uc218\uc900 \uad8c\ud55c\uc744 \uc9c0\uc6d0\ud558\ub294 \uad8c\ud55c \ubc31\uc5d4\ub4dc\ub97c \ucd94\uac00\ud574\uc57c\ud569\ub2c8\ub2e4. DjangoModelPermissions \uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc774 \uad8c\ud55c\uc740 .queryset \uc18d\uc131\uc774\ub098 .get_queryset() \uba54\uc18c\ub4dc\uac00 \uc788\ub294 \ubdf0\uc5d0\ub9cc \uc801\uc6a9\ub418\uc5b4\uc57c\ud569\ub2c8\ub2e4. \uad8c\ud55c \ubd80\uc5ec\ub294 \uc0ac\uc6a9\uc790\uac00 \uc778\uc99d\ub418\uace0 \uad00\ub828 \uac1d\uccb4 \ubcc4 \uad8c\ud55c \ubc0f \uad00\ub828 \ubaa8\ub378 \uad8c\ud55c\uc774 \ud560\ub2f9 \ub41c \uacbd\uc6b0\uc5d0\ub9cc \ubd80\uc5ec\ub429\ub2c8\ub2e4. POST request\ub294 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud55c \ucd94\uac00 \uad8c\ud55c\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. PUT \ubc0f PATCH request\ub294 \uc0ac\uc6a9\uc790\uac00 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud55c \ubcc0\uacbd \uad8c\ud55c\uc744 \uc694\uad6c\ud569\ub2c8\ub2e4. DELETE \uc694\uccad\uc740 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud55c \uc0ad\uc81c \uad8c\ud55c\uc774 \uc788\uc5b4\uc57c\ud569\ub2c8\ub2e4. DjangoObjectPermissions \ub294 django-guardian \ud328\ud0a4\uc9c0\ub97c \ud544\uc694\ub85c \ud558\uc9c0 \uc54a\uc73c\uba70 \ub2e4\ub978 \uac1d\uccb4 \ub808\ubca8 \ubc31\uc5d4\ub4dc\ub3c4 \ub611\uac19\uc774 \uc798 \uc9c0\uc6d0\ud574\uc57c\ud569\ub2c8\ub2e4. DjangoModelPermissions \uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c DjangoObjectPermissions \ub97c \uc7ac\uc815\uc758\ud558\uace0 .perms_map \uc18d\uc131\uc744 \uc124\uc815\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc815\uc758 \ubaa8\ub378 \uad8c\ud55c\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc18c\uc2a4 \ucf54\ub4dc\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. Note : GET , HEAD \ubc0f OPTIONS request\uc5d0 \ub300\ud55c \uac1d\uccb4 \uc218\uc900 view \uad8c\ud55c\uc774 \ud544\uc694\ud558\uba74 DjangoObjectPermissionsFilter \ud074\ub798\uc2a4\ub97c \ucd94\uac00\ud558\uc5ec \ubaa9\ub85d \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc801\uc808\ud55c \ubdf0 \uad8c\ud55c\uc774 \uc788\ub294 \uac1d\uccb4\ub97c \ud3ec\ud568\ud558\uc5ec \uacb0\uacfc\ub9cc \ubc18\ud658\ud558\ub3c4\ub85d \ud574\uc57c\ud569\ub2c8\ub2e4. Custom permissions Custom \uad8c\ud55c\uc744 \uad6c\ud604\ud558\ub824\uba74, BasePermission \ub97c \ubb34\uc2dc\ud558\uace0 \ub2e4\uc74c \uc911 \ud558\ub098 \ub610\ub294 \ub450\uac00\uc9c0 \ubc29\ubc95\uc744 \uad6c\ud604\ud569\ub2c8\ub2e4. .has_permission(self, request, view) .has_object_permission(self, request, view, obj) request\uc5d0 \uc561\uc138\uc2a4 \uad8c\ud55c\uc774 \ubd80\uc5ec\ub418\uba74 \uba54\uc11c\ub4dc\ub294 True \ub97c \ubc18\ud658\ud558\uace0 \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 False \ub97c \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. request\uac00 \uc77d\uae30 \uc791\uc5c5\uc778\uc9c0 \uc4f0\uae30 \uc791\uc5c5\uc778\uc9c0 \ud14c\uc2a4\ud2b8\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 'GET' , 'OPTIONS' \ubc0f 'HEAD' \uac00 \ud3ec\ud568 \ub41c \ud29c\ud50c \uc778 SAFE_METHODS \uc0c1\uc218\uc640 \ube44\uad50\ud558\uc5ec request \uba54\uc18c\ub4dc\ub97c \ud655\uc778\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: if request.method in permissions.SAFE_METHODS: # \uc77d\uae30 \uc804\uc6a9 \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \ud655\uc778\ud558\ub824\uba74 else: # \uc4f0\uae30 \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \ud655\uc778\ud558\ub824\uba74 Note : \ubdf0 \uc218\uc900 has_permission \uac80\uc0ac\uac00 \uc774\ubbf8 \ud1b5\uacfc \ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc778\uc2a4\ud134\uc2a4 \uc218\uc900\uc758 has_object_permission \uba54\uc18c\ub4dc\uac00 \ud638\ucd9c\ub429\ub2c8\ub2e4. \ub610\ud55c \uc778\uc2a4\ud134\uc2a4 \uc218\uc900 \uac80\uc0ac\ub97c \uc2e4\ud589\ud558\ub824\uba74 view \ucf54\ub4dc\uc5d0\uc11c .check_object_permissions(request, obj) \ub97c \uba85\uc2dc\uc801\uc73c\ub85c \ud638\ucd9c\ud574\uc57c \ud569\ub2c8\ub2e4. generic view\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc635\uc158\uc774 \ucc98\ub9ac\ub429\ub2c8\ub2e4. \ud14c\uc2a4\ud2b8\uac00 \uc2e4\ud328 \ud560 \uacbd\uc6b0 custom \uad8c\ud55c\uc740 PermissionDenied \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b5\ub2c8\ub2e4. \uc608\uc678\uc640 \uad00\ub828\ub41c \uc624\ub958 \uba54\uc2dc\uc9c0\ub97c \ubcc0\uacbd\ud558\ub824\uba74 custom \uad8c\ud55c\uc5d0 \uc9c1\uc811 massege \uc18d\uc131\uc744 \uad6c\ud604\ud558\uc2ed\uc2dc\uc624. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 PermissionDenied \uc758 default_detail \uc18d\uc131\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. from rest_framework import permissions class CustomerAccessPermission(permissions.BasePermission): message = 'Adding customers not allowed.' def has_permission(self, request, view): ... Examples \ub2e4\uc74c\uc740 \ub4e4\uc5b4\uc624\ub294 request\uc758 IP \uc8fc\uc18c\ub97c \ube14\ub799\ub9ac\uc2a4\ud2b8\uc640 \ub300\uc870\ud558\uc5ec IP\uac00 \ube14\ub799\ub9ac\uc2a4\ud2b8\uc5d0 \uc62c\ub790\uc73c\uba74 request\ub97c \uac70\ubd80\ud558\ub294 \uad8c\ud55c \ud074\ub798\uc2a4\uc758 \uc608\uc785\ub2c8\ub2e4. from rest_framework import permissions class BlacklistPermission(permissions.BasePermission): \"\"\" Global permission check for blacklisted IPs. \"\"\" def has_permission(self, request, view): ip_addr = request.META['REMOTE_ADDR'] blacklisted = Blacklist.objects.filter(ip_addr=ip_addr).exists() return not blacklisted \ub4e4\uc5b4\uc624\ub294 \ubaa8\ub4e0 request\uc5d0 \u200b\u200b\ub300\ud574 \uc2e4\ud589\ub418\ub294 \uc804\uc5ed \uad8c\ud55c\ubfd0 \uc544\ub2c8\ub77c \ud2b9\uc815 \uac1c\uccb4 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc601\ud5a5\uc744 \uc8fc\ub294 \uc791\uc5c5\uc5d0 \ub300\ud574\uc11c\ub9cc \uc2e4\ud589\ub418\ub294 \uac1c\uccb4 \uc218\uc900 \uc0ac\uc6a9 \uad8c\ud55c\uc744 \ub9cc\ub4e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc608 : class IsOwnerOrReadOnly(permissions.BasePermission): \"\"\" Object-level permission to only allow owners of an object to edit it. Assumes the model instance has an `owner` attribute. \"\"\" def has_object_permission(self, request, view, obj): # \uc77d\uae30 \uad8c\ud55c\uc740 \ubaa8\ub4e0 \uc694\uccad\uc5d0 \u200b\u200b\ud5c8\uc6a9\ub418\uba70, # \uadf8\ub798\uc11c GET, HEAD, OPTIONS \uc694\uccad\uc744 \ud5c8\uc6a9 \ud560 \uac83\uc785\ub2c8\ub2e4. if request.method in permissions.SAFE_METHODS: return True # \uc778\uc2a4\ud134\uc2a4\uc5d0\ub294`owner`\ub77c\ub294 \uc18d\uc131\uc774 \uc788\uc5b4\uc57c\ud569\ub2c8\ub2e4. return obj.owner == request.user generic view\ub294 \uc801\uc808\ud55c \uac1c\uccb4 \uc218\uc900 \uc0ac\uc6a9 \uad8c\ud55c\uc744 \uac80\uc0ac\ud558\uc9c0\ub9cc custom view\ub97c \uc791\uc131\ud558\ub294 \uacbd\uc6b0 \uac1c\uccb4 \uc218\uc900 \uc0ac\uc6a9 \uad8c\ud55c \uac80\uc0ac\ub97c \uc9c1\uc811 \ud655\uc778\ud574\uc57c\ud569\ub2c8\ub2e4. \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\uac00 \uc788\uc73c\uba74 \ubdf0\uc5d0\uc11c self.check_object_permissions(request, obj) \ub97c \ud638\ucd9c\ud558\uc5ec \uadf8\ub807\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac1c\uccb4 \uc218\uc900\uc758 \uad8c\ud55c \uccb4\ud06c\uac00 \uc2e4\ud328\ud588\uc744 \uacbd\uc6b0,\uc774 \ud638\ucd9c\uc740 \uc801\uc808\ud55c APIException \uc744 \uc1a1\ucd9c\ud558\uace0, \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0\ub294 \ub2e8\uc21c\ud788 \ubc18\ud658\ub429\ub2c8\ub2e4. \ub610\ud55c generic view\ub294 \ub2e8\uc77c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\ub97c \uac80\uc0c9\ud558\ub294 \ubdf0\uc758 \uc624\ube0c\uc81d\ud2b8 \ub808\ubca8\uc758 \uad8c\ud55c\ub9cc\uc744 \uccb4\ud06c\ud569\ub2c8\ub2e4. \ubaa9\ub85d \ubdf0\uc758 \uac1c\uccb4 \uc218\uc900 \ud544\ud130\ub9c1\uc774 \ud544\uc694\ud55c \uacbd\uc6b0\ub294 \ubcc4\ub3c4\ub85c \ucffc\ub9ac \uc138\ud2b8\ub97c \ud544\ud130\ub9c1\ud574\uc57c\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 filtering documentation \ucc38\uc870 Third party packages \ub2e4\uc74c \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4. Composed Permissions Composed Permissions \ud328\ud0a4\uc9c0\ub294 \uc791\uace0 \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \uad6c\uc131 \uc694\uc18c\ub97c \uc0ac\uc6a9\ud558\uc5ec (\ub17c\ub9ac \uc5f0\uc0b0\uc790\ub97c \uc0ac\uc6a9\ud558\uc5ec) \ubcf5\uc7a1\ud55c \uba40\ud2f0 \uc2ec\ub3c4 \uad8c\ud55c \uac1d\uccb4\ub97c \uc27d\uac8c \uc815\uc758\ud558\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. REST Condition REST Condition \ud328\ud0a4\uc9c0\ub294 \ubcf5\uc7a1\ud55c \uad8c\ud55c\uc744 \uc27d\uace0 \ud3b8\ub9ac\ud558\uac8c \uad6c\ucd95\ud558\uae30 \uc704\ud55c \ub610 \ub2e4\ub978 \ud655\uc7a5 \uae30\ub2a5\uc785\ub2c8\ub2e4. \ud655\uc7a5 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uba74 \uad8c\ud55c\uc744 \ub17c\ub9ac \uc5f0\uc0b0\uc790\uc640 \uacb0\ud569 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DRY Rest Permissions DRY Rest Permissions \ud328\ud0a4\uc9c0\ub294 \uac1c\ubcc4 \uae30\ubcf8 \ubc0f custom \uc561\uc158\uc5d0 \ub300\ud574 \uc11c\ub85c \ub2e4\ub978 \uad8c\ud55c\uc744 \uc815\uc758\ud558\ub294 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 \ud328\ud0a4\uc9c0\ub294 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc758 \ub370\uc774\ud130 \ubaa8\ub378\uc5d0 \uc815\uc758 \ub41c \uad00\uacc4\uc5d0\uc11c \ud30c\uc0dd \ub41c \uad8c\ud55c\uc744 \uac00\uc9c4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc6a9\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c API serializer\ub97c \ud1b5\ud574 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ubc18\ud658\ub418\ub294 \uad8c\ud55c \uac80\uc0ac\ub3c4 \uc9c0\uc6d0\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc0ac\uc6a9\uc790\ub9c8\ub2e4 \ucde8\ub4dd\ud558\ub294 \ub370\uc774\ud130\ub97c \uc81c\ud55c\ud558\uae30 \uc704\ud574 \uae30\ubcf8 \ubc0f custom \ubaa9\ub85d \uc561\uc158\uc5d0 \uad8c\ud55c\uc744 \ucd94\uac00\ub3c4 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Django Rest Framework Roles Django Rest Framework Roles \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud558\uba74 \uc5ec\ub7ec \uc720\ud615\uc758 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud574 API\ub97c \uc27d\uac8c \ub9e4\uac1c \ubcc0\uc218\ud654 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Django Rest Framework API Key Django Rest Framework API Key \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud558\uba74 \uc11c\ubc84\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc694\uccad\uc5d0 \u200b\u200bAPI \ud0a4 \ud5e4\ub354\uac00 \ud544\uc694\ud568\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2f9\uc2e0\uc740 django \uad00\ub9ac \uc778\ud130\ud398\uc774\uc2a4\uc5d0\uc11c \uc0dd\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Permissions"},{"location":"Permissions/#django-rest-framework-permissions","text":"\"Authentication or identification by itself is not usually sufficient to gain access to information or code. For that, the entity requesting access must have authorization.\" \"\uc815\ubcf4 \ub610\ub294 \ucf54\ub4dc\uc5d0 \ub300\ud55c \uc561\uc11c\uc2a4 \uad8c\ud55c\uc744 \uc5bb\uc73c\ub824\uba74 \uc77c\ubc18\uc801\uc73c\ub85c \uc778\uc99d\uc774\ub098 \uc2dd\ubcc4\ub9cc\uc73c\ub85c\ub294 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574\uc11c\ub294 \uc561\uc11c\uc2a4\ub97c \uc694\uccad\ud558\ub294 \uac1c\uccb4\uc5d0 \uad8c\ud55c\uc774 \uc788\uc5b4\uc57c\ud569\ub2c8\ub2e4.\" \u2014 Apple Developer Documentation","title":"Django REST Framework - Permissions"},{"location":"Permissions/#permissions","text":"\uc778\uc99d \ubc0f \uc81c\ud55c \uacfc \ud568\uaed8 \uc0ac\uc6a9 \uad8c\ud55c\uc740 request\uc5d0 \uc561\uc11c\uc2a4\ub97c \ud5c8\uc6a9\ud560\uc9c0 \ub610\ub294 \uac70\ubd80 \ud560\uc9c0\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \uad8c\ud55c \uac80\uc0ac\ub294 \ub2e4\ub978 \ucf54\ub4dc\uac00 \uc9c4\ud589\ub418\uae30 \uc804\uc5d0 view\uc758 \ub9e8 \ucc98\uc74c\uc5d0 \ud56d\uc0c1 \uc2e4\ud589\ub429\ub2c8\ub2e4. \uad8c\ud55c \uac80\uc0ac\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ub4e4\uc5b4\uc624\ub294 request\ub97c \ud5c8\uc6a9\ud574\uc57c \ud558\ub294\uc9c0\ub97c \uacb0\uc815\ud558\uae30 \uc704\ud574 request.user \ubc0f request.auth \ub4f1\ub85d \uc815\ubcf4\uc758 \uc778\uc99d \uc815\ubcf4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uad8c\ud55c\uc740 \ub2e4\ub978 \ud074\ub798\uc2a4\uc758 \uc0ac\uc6a9\uc790\uac00 API\uc758 \ub2e4\ub978 \ubd80\ubd84\uc5d0 \uc561\uc11c\uc2a4 \ud558\ub294 \uac83\uc744 \ud5c8\uc6a9\ud558\uac70\ub098 \uac70\ubd80\ud558\ub294\uac8c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uac00\uc7a5 \uac04\ub2e8\ud55c \uc0ac\uc6a9 \uad8c\ud55c \uc2a4\ud0c0\uc77c\uc740 \uc778\uc99d \ub41c \uc0ac\uc6a9\uc790\uc5d0\uac8c \uba55\uc11c\uc2a4\ub97c \ud5c8\uc6a9\ud558\uace0 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \uc5d1\uc11c\uc2a4\ub97c \uac70\ubd80\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\uac83\uc740 REST\ud504\ub808\uc784\uc6cc\ud06c\uc758 IsAuthenticated \ud074\ub798\uc2a4\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. \uc57d\uac04 \ub35c \uc5c4\uaca9\ud55c \uad8c\ud55c \uc2a4\ud0c0\uc77c\uc740 \uc778\uc99d \ub41c \uc0ac\uc6a9\uc790\uc5d0\uac8c \ubaa8\ub4e0 \uad8c\ud55c\uc744 \ud5c8\uc6a9\ud558\uc9c0\ub9cc \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790\uc5d0\uac8c\ub294 \uc77d\uae30\uc804\uc6a9 \uad8c\ud55c\uc744 \ud5c8\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\uac83\uc740 REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 IsAuthenticatedOrReadOnly \ud074\ub798\uc2a4\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4.","title":"Permissions"},{"location":"Permissions/#how-permissions-are-determined","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \uad8c\ud55c\uc740 \ud56d\uc0c1 \ud074\ub798\uc2a4 list\ub85c \uc815\uc758\ub429\ub2c8\ub2e4. \ubdf0\uc758 \ubcf8\ubb38\uc744 \uc2e4\ud589\ud558\uae30 \uc804\uc5d0 list\uc758 \uac01 \uad8c\ud55c\uc774 \uac80\uc0ac\ub429\ub2c8\ub2e4. \uad8c\ud55c \ud655\uc778\uc5d0 \uc2e4\ud328\ud558\uba74 exceptions.PermissionDenied \ub610\ub294 exceptions.NotAuthenticated \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uace0 view \ubcf8\ubb38\uc774 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uad8c\ud55c \uac80\uc0ac\uac00 \uc2e4\ud328\ud558\uba74 \ub2e4\uc74c \uaddc\uce59\uc5d0 \ub530\ub77c \"403 Forbidden\"\ub610\ub294 \"401 Unauthorized\"\uc751\ub2f5\uc774 \ubc18\ud658\ub429\ub2c8\ub2e4. \uc694\uccad\uc774 \uc131\uacf5\uc801\uc73c\ub85c \uc778\uc99d\ub418\uc5c8\uc9c0\ub9cc \uad8c\ud55c\uc774 \uac70\ubd80\ub418\uc5c8\uc2b5\ub2c8\ub2e4. - HTTP 403 Forbidden \uc751\ub2f5\uc774 \ub9ac\ud134\ub429\ub2c8\ub2e4. \uc694\uccad\uc774 \uc131\uacf5\uc801\uc73c\ub85c \uc778\uc99d\ub418\uc9c0 \uc54a\uc558\uace0 \ucd5c\uc0c1\uc704 \uc6b0\uc120 \uc21c\uc704 \uc778\uc99d \ud074\ub798\uc2a4\ub294 WWW-Authenticate \ud5e4\ub354\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. - HTTP 403 Forbidden \uc751\ub2f5\uc774 \ub9ac\ud134\ub429\ub2c8\ub2e4. \uc694\uccad\uc774 \uc131\uacf5\uc801\uc73c\ub85c \uc778\uc99d\ub418\uc9c0 \uc54a\uc558\uace0 \ucd5c\uc0c1\uc704 \uc6b0\uc120 \uc21c\uc704 \uc778\uc99d \ud074\ub798\uc2a4\ub294 WWW-Authenticate \ud5e4\ub354\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. - \uc801\uc808\ud55c WWW-Authenticate \ud5e4\ub354\uac00 \uc788\ub294 HTTP 401 Unauthorized \uc751\ub2f5\uc774 \ubc18\ud658\ub429\ub2c8\ub2e4.","title":"How permissions are determined"},{"location":"Permissions/#object-level-permissions","text":"REST \ud504\ub808\uc784\uc6cc\ud06c \uad8c\ud55c\uc740 \ub610\ud55c \uc624\ube0c\uc81d\ud2b8 \ub808\ubca8 \uad8c\ud55c \ubd80\uc5ec\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uac1c\uccb4 \uc218\uc900 \uad8c\ud55c\uc740 \uc0ac\uc6a9\uc790\uac00 \ud2b9\uc815 \uac1c\uccb4(\uc77c\ubc18\uc801\uc73c\ub85c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4)\uc5d0 \ub300\ud55c \uc791\uc5c5\uc744 \ud5c8\uc6a9\ud574\uc57c\ud558\ub294\uc9c0 \uc5ec\ubd80\ub97c \uacb0\uc815\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uac1d\uccb4 \ub808\ubca8 \uad8c\ud55c\uc740 .get_object() \uac00 \ud638\ucd9c \ub420 \ub54c REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 generic view\uc5d0 \uc758\ud574 \uc2e4\ud589\ub429\ub2c8\ub2e4. \ubdf0 \uc218\uc900 \uad8c\ud55c\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c, \uc0ac\uc6a9\uc790\uac00 \uc9c0\uc815\ub41c \uac1d\uccb4\ub97c \ucc98\ub9ac\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 exceptions.PermissionDenied \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc790\uc2e0 \ub9cc\uc758 \ubdf0\ub97c \uc791\uc131\ud558\uace0 \uc624\ube0c\uc81d\ud2b8 \ub808\ubca8 \uad8c\ud55c\uc744 \uc801\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0 \ub610\ub294 generic \ubdf0\uc5d0\uc11c get_object \uba54\uc18c\ub4dc\ub97c \uacb9\uccd0 \uc4f0\ub294 \uacbd\uc6b0\uc5d0\ub294, \uac1c\uccb4\ub97c \uac80\uc0c9 \ud55c \uc2dc\uc810\uc5d0\uc11c \ubdf0\uc5d0\uc11c .check_object_permissions(request, obj) \uba54\uc18c\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \ud638\ucd9c\ud574\uc57c\ud569\ub2c8\ub2e4. PermissionDenied \ub610\ub294 NotAuthenticated \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uac70\ub098 view\uc5d0 \uc801\uc808\ud55c \uad8c\ud55c\uc774 \uc788\ub294 \uacbd\uc6b0 \ubc18\ud658\ub429\ub2c8\ub2e4. \uc608: def get_object(self): obj = get_object_or_404(self.get_queryset()) self.check_object_permissions(self.request, obj) return obj","title":"Object level permissions"},{"location":"Permissions/#limitations-of-object-level-permissions","text":"\uc131\ub2a5 \uc0c1\uc758 \uc774\uc720\ub85c generic view\ub294 \uc624\ube0c\uc81d\ud2b8 \ubaa9\ub85d\uc744 \ub9ac\ud134 \ud560 \ub54c queryset\uc758 \uac01 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc624\ube0c\uc81d\ud2b8 \ub808\ubca8 \uad8c\ud55c\uc744 \uc790\ub3d9\uc73c\ub85c \uc801\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uac1d\uccb4 \ub808\ubca8 \uad8c\ud55c\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc885\uc885 \ucffc\ub9ac \uc138\ud2b8\ub97c \uc801\uc808\ud788 \ud544\ud130\ub9c1 \ud558\uc5ec \uc0ac\uc6a9\uc790\uac00 \ubcfc \uc218\uc788\ub294 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud55c \uac00\uc2dc\uc131\ub9cc \ud655\ubcf4\ud558\ub3c4\ub85d \ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"Limitations of object level permissions(\uac1c\uccb4 \uc218\uc900 \uc0ac\uc6a9 \uad8c\ud55c\uc758 \uc81c\ud55c \uc0ac\ud56d)"},{"location":"Permissions/#setting-the-permission-policy","text":"\uae30\ubcf8 \uad8c\ud55c \uc815\ucc45\uc740 DEFAULT_PERMISSION_CLASSES \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\uc5ed\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74. REST_FRAMEWORK = { 'DEFAULT_PERMISSION_CLASSES': ( 'rest_framework.permissions.IsAuthenticated', ) } \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74\uc774 \uc124\uc815\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \ubb34\uc81c\ud55c \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. 'DEFAULT_PERMISSION_CLASSES': ( 'rest_framework.permissions.AllowAny', ) \ub610\ud55c APIView CBV\ub97c \uc0ac\uc6a9\ud558\uc5ec view \ubcc4 \ub610\ub294 view \ubcc4 \uae30\uc900\ubcc4\ub85c \uc778\uc99d \uc815\ucc45\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.permissions import IsAuthenticated from rest_framework.response import Response from rest_framework.views import APIView class ExampleView(APIView): permission_classes = (IsAuthenticated,) def get(self, request, format=None): content = { 'status': 'request was permitted' } return Response(content) \ub610\ub294 FBV\uc640 \ud568\uaed8 @api_view` \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0. from rest_framework.decorators import api_view, permission_classes from rest_framework.permissions import IsAuthenticated from rest_framework.response import Response @api_view(['GET']) @permission_classes((IsAuthenticated, )) def example_view(request, format=None): content = { 'status': 'request was permitted' } return Response(content) Note : \ud074\ub798\uc2a4 \uc18d\uc131\uc774\ub098 \ub370\ucf54\ub808\uc774\ud130\ub97c \ud1b5\ud574 \uc0c8 \uad8c\ud55c \ud074\ub798\uc2a4\ub97c \uc124\uc815\ud558\uba74 settings.py \ud30c\uc77c\uc744 \ud1b5\ud574 \uc124\uc815\ub41c \uae30\ubcf8 \ubaa9\ub85d\uc744 \ubb34\uc2dc\ud558\ub3c4\ub85d \ubdf0\uc5d0 \uc9c0\uc2dc\ud569\ub2c8\ub2e4.","title":"Setting the permission policy"},{"location":"Permissions/#api-reference","text":"","title":"API Reference"},{"location":"Permissions/#allowany","text":"AllowAny \uad8c\ud55c \ud074\ub798\uc2a4\ub294 \uc694\uccad\uc774 \uc778\uc99d\ub418\uc5c8\uac70\ub098 \uc778\uc99d\ub418\uc9c0 \uc54a\uc558\ub294\uc9c0 \uc5ec\ubd80\uc5d0 \uad00\uacc4\uc5c6\uc774 \uc81c\ud55c\ub418\uc9c0 \uc54a\uc740 \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uc0ac\uc6a9 \uad8c\ud55c \uc124\uc815\uc5d0 \ube48 \ubaa9\ub85d\uc774\ub098 \ud29c\ud50c\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub3d9\uc77c\ud55c \uacb0\uacfc\ub97c \uc5bb\uc744 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc774 \uc0ac\uc6a9 \uad8c\ud55c\uc740 \ubc18\ub4dc\uc2dc \ud544\uc694\ud55c \uac83\uc740 \uc544\ub2c8\uc9c0\ub9cc \uc758\ub3c4\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud558\uae30 \ub54c\ubb38\uc5d0 \uc774 \ud074\ub798\uc2a4\ub97c \uc9c0\uc815\ud558\ub294 \uac83\uc774 \uc720\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"AllowAny"},{"location":"Permissions/#isauthenticated","text":"IsAuthenticated \uad8c\ud55c \ud074\ub798\uc2a4\ub294 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uad8c\ud55c\uc744 \uac70\ubd80\ud558\uace0 \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uc5d0\ub294 \uad8c\ud55c\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uad8c\ud55c\uc740 \ub4f1\ub85d \ub41c \uc0ac\uc6a9\uc790\ub9cc API\uc5d0 \uc561\uc138\uc2a4 \ud560 \uc218 \uc788\uac8c \ud558\ub824\ub294 \uacbd\uc6b0 \uc801\ud569\ud569\ub2c8\ub2e4.","title":"IsAuthenticated"},{"location":"Permissions/#isadminuser","text":"IsAdminUser \uad8c\ud55c \ud074\ub798\uc2a4\ub294 user.is_staff \uac00 True \uc778 \uacbd\uc6b0\ub97c \uc81c\uc678\ud558\uace0 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \uc0ac\uc6a9 \uad8c\ud55c\uc744 \uac70\ubd80\ud569\ub2c8\ub2e4. \uc774 \uad8c\ud55c\uc740 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \uad00\ub9ac\uc790\uc758 \ud558\uc704 \uc9d1\ud569\uc5d0\uc11c\ub9cc API\uc5d0 \uc561\uc138\uc2a4 \ud560 \uc218 \uc788\uac8c \ud558\ub824\ub294 \uacbd\uc6b0 \uc801\ud569\ud569\ub2c8\ub2e4.","title":"IsAdminUser"},{"location":"Permissions/#isauthenticatedorreadonly","text":"IsAuthenticatedOrReadOnly \ub97c \uc0ac\uc6a9\ud558\uba74 \uc778\uc99d \ub41c \uc0ac\uc6a9\uc790\uac00 \ubaa8\ub4e0 \uc694\uccad\uc744 \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad8c\ud55c\uc774 \uc5c6\ub294 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \uc694\uccad\uc740 \uc694\uccad \ubc29\ubc95\uc774 \"\uc548\uc804\ud55c\" \ubc29\ubc95 \uc911 \ud558\ub098\uc77c \uacbd\uc6b0\uc5d0\ub9cc \ud5c8\uc6a9\ub429\ub2c8\ub2e4. GET , HEAD \ub610\ub294 OPTIONS . \uc774 \uad8c\ud55c\uc740 API\uc5d0\uc11c \uc775\uba85 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc77d\uae30 \uad8c\ud55c\uc744 \ud5c8\uc6a9\ud558\uace0 \uc778\uc99d \ub41c \uc0ac\uc6a9\uc790\uc5d0\uac8c\ub9cc \uc4f0\uae30 \uad8c\ud55c\uc744 \ud5c8\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4.","title":"IsAuthenticatedOrReadOnly"},{"location":"Permissions/#djangomodelpermissions","text":"\uc774 \ud37c\ubbf8\uc158 \ud074\ub798\uc2a4\ub294 Django\uc758 \ud45c\uc900 django.contrib.auth \ubaa8\ub378 \ud37c\ubbf8\uc158 \uacfc \uad00\ub828\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uad8c\ud55c\uc740 .queryset \uc18d\uc131\uc774 \uc124\uc815\ub41c view\uc5d0\ub9cc \uc801\uc6a9\ud574\uc57c\ud569\ub2c8\ub2e4. \uad8c\ud55c \ubd80\uc5ec\ub294 \uc0ac\uc6a9\uc790\uac00 \uc778\uc99d\ub418\uace0 \uad00\ub828 \ubaa8\ub378 \uad8c\ud55c\uc774 \ud560\ub2f9 \ub41c \uacbd\uc6b0\uc5d0\ub9cc \ubd80\uc5ec\ub429\ub2c8\ub2e4. POST request\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ubaa8\ub378\uc5d0 \ub300\ud55c add \uad8c\ud55c\uc774 \uc788\uc5b4\uc57c\ud569\ub2c8\ub2e4. PUT \ubc0f PATCH request\ub294 \uc0ac\uc6a9\uc790\uac00 \ubaa8\ub378\uc5d0 \ub300\ud55c \ubcc0\uacbd \uad8c\ud55c\uc744 \uc694\uad6c\ud569\ub2c8\ub2e4. DELETE request\ub294 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ubaa8\ub378\uc5d0 \ub300\ud55c \uc0ad\uc81c \uad8c\ud55c\uc774 \uc788\uc5b4\uc57c\ud569\ub2c8\ub2e4. \uae30\ubcf8 \ub3d9\uc791\uc744 \uc7ac\uc815\uc758\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ubaa8\ub378 \uad8c\ud55c\uc744 \uc9c0\uc6d0\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 GET \uc694\uccad\uc5d0 \ub300\ud55c view \ubaa8\ub378 \uad8c\ud55c\uc744 \ud3ec\ud568 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. custom \ubaa8\ub378 \uad8c\ud55c\uc744 DjangoModelPermissions \uc744 \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uace0 .perms_map property\ub97c \uc124\uc815\ud558\uc5ec \uc0ac\uc6a9\ud569\ub2c8\ub2e4.","title":"DjangoModelPermissions"},{"location":"Permissions/#using-with-views-that-do-not-include-a-queryset-attribute-queryset","text":"\uc7ac\uc815\uc758 \ub41c get_queryset() \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \ubdf0\uc5d0\uc11c \uc774 \uad8c\ud55c\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ubdf0\uc5d0 queryset \uc18d\uc131\uc774 \uc5c6\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0\uc5d0\ub294 sentinel queryset\uc73c\ub85c \ubdf0\ub97c \ud45c\uc2dc\ud558\uc5ec \uc774 \ud074\ub798\uc2a4\uac00 \ud544\uc694\ud55c \uad8c\ud55c\uc744 \uacb0\uc815\ud560 \uc218 \uc788\ub3c4\ub85d\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc608 : queryset = User.objects.none() # Required for DjangoModelPermissions","title":"Using with views that do not include a queryset attribute. (queryset \uc18d\uc131\uc744 \ud3ec\ud568\ud558\uc9c0 \uc54a\ub294 \ubdf0\ub97c \uc0ac\uc6a9\ud560 \ub54c)"},{"location":"Permissions/#djangomodelpermissionsoranonreadonly","text":"DjangoModelPermissions \uc640 \uc720\uc0ac\ud558\uc9c0\ub9cc \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790\ub294 API\uc5d0 \ub300\ud55c \uc77d\uae30 \uc804\uc6a9 \uc561\uc138\uc2a4\ub9cc \ud5c8\uc6a9\ud569\ub2c8\ub2e4.","title":"DjangoModelPermissionsOrAnonReadOnly"},{"location":"Permissions/#djangoobjectpermissions","text":"\uc774 \ud37c\ubbf8\uc158 \ud074\ub798\uc2a4\ub294 \ubaa8\ub378\uc5d0 \ub300\ud55c \uac1d\uccb4 \ubcc4 \uad8c\ud55c\uc744 \ud5c8\uc6a9\ud558\ub294 Django\uc758 \ud45c\uc900 \uac1d\uccb4 \uad8c\ud55c \ud504\ub808\uc784\uc6cc\ud06c \uc640 \uad00\ub828\uc774\uc788\ub2e4. \uc774 \uad8c\ud55c \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 django-guardian \uacfc \uac19\uc740 \uac1d\uccb4 \uc218\uc900 \uad8c\ud55c\uc744 \uc9c0\uc6d0\ud558\ub294 \uad8c\ud55c \ubc31\uc5d4\ub4dc\ub97c \ucd94\uac00\ud574\uc57c\ud569\ub2c8\ub2e4. DjangoModelPermissions \uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc774 \uad8c\ud55c\uc740 .queryset \uc18d\uc131\uc774\ub098 .get_queryset() \uba54\uc18c\ub4dc\uac00 \uc788\ub294 \ubdf0\uc5d0\ub9cc \uc801\uc6a9\ub418\uc5b4\uc57c\ud569\ub2c8\ub2e4. \uad8c\ud55c \ubd80\uc5ec\ub294 \uc0ac\uc6a9\uc790\uac00 \uc778\uc99d\ub418\uace0 \uad00\ub828 \uac1d\uccb4 \ubcc4 \uad8c\ud55c \ubc0f \uad00\ub828 \ubaa8\ub378 \uad8c\ud55c\uc774 \ud560\ub2f9 \ub41c \uacbd\uc6b0\uc5d0\ub9cc \ubd80\uc5ec\ub429\ub2c8\ub2e4. POST request\ub294 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud55c \ucd94\uac00 \uad8c\ud55c\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. PUT \ubc0f PATCH request\ub294 \uc0ac\uc6a9\uc790\uac00 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud55c \ubcc0\uacbd \uad8c\ud55c\uc744 \uc694\uad6c\ud569\ub2c8\ub2e4. DELETE \uc694\uccad\uc740 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud55c \uc0ad\uc81c \uad8c\ud55c\uc774 \uc788\uc5b4\uc57c\ud569\ub2c8\ub2e4. DjangoObjectPermissions \ub294 django-guardian \ud328\ud0a4\uc9c0\ub97c \ud544\uc694\ub85c \ud558\uc9c0 \uc54a\uc73c\uba70 \ub2e4\ub978 \uac1d\uccb4 \ub808\ubca8 \ubc31\uc5d4\ub4dc\ub3c4 \ub611\uac19\uc774 \uc798 \uc9c0\uc6d0\ud574\uc57c\ud569\ub2c8\ub2e4. DjangoModelPermissions \uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c DjangoObjectPermissions \ub97c \uc7ac\uc815\uc758\ud558\uace0 .perms_map \uc18d\uc131\uc744 \uc124\uc815\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc815\uc758 \ubaa8\ub378 \uad8c\ud55c\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc18c\uc2a4 \ucf54\ub4dc\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. Note : GET , HEAD \ubc0f OPTIONS request\uc5d0 \ub300\ud55c \uac1d\uccb4 \uc218\uc900 view \uad8c\ud55c\uc774 \ud544\uc694\ud558\uba74 DjangoObjectPermissionsFilter \ud074\ub798\uc2a4\ub97c \ucd94\uac00\ud558\uc5ec \ubaa9\ub85d \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc801\uc808\ud55c \ubdf0 \uad8c\ud55c\uc774 \uc788\ub294 \uac1d\uccb4\ub97c \ud3ec\ud568\ud558\uc5ec \uacb0\uacfc\ub9cc \ubc18\ud658\ud558\ub3c4\ub85d \ud574\uc57c\ud569\ub2c8\ub2e4.","title":"DjangoObjectPermissions"},{"location":"Permissions/#custom-permissions","text":"Custom \uad8c\ud55c\uc744 \uad6c\ud604\ud558\ub824\uba74, BasePermission \ub97c \ubb34\uc2dc\ud558\uace0 \ub2e4\uc74c \uc911 \ud558\ub098 \ub610\ub294 \ub450\uac00\uc9c0 \ubc29\ubc95\uc744 \uad6c\ud604\ud569\ub2c8\ub2e4. .has_permission(self, request, view) .has_object_permission(self, request, view, obj) request\uc5d0 \uc561\uc138\uc2a4 \uad8c\ud55c\uc774 \ubd80\uc5ec\ub418\uba74 \uba54\uc11c\ub4dc\ub294 True \ub97c \ubc18\ud658\ud558\uace0 \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 False \ub97c \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. request\uac00 \uc77d\uae30 \uc791\uc5c5\uc778\uc9c0 \uc4f0\uae30 \uc791\uc5c5\uc778\uc9c0 \ud14c\uc2a4\ud2b8\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 'GET' , 'OPTIONS' \ubc0f 'HEAD' \uac00 \ud3ec\ud568 \ub41c \ud29c\ud50c \uc778 SAFE_METHODS \uc0c1\uc218\uc640 \ube44\uad50\ud558\uc5ec request \uba54\uc18c\ub4dc\ub97c \ud655\uc778\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: if request.method in permissions.SAFE_METHODS: # \uc77d\uae30 \uc804\uc6a9 \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \ud655\uc778\ud558\ub824\uba74 else: # \uc4f0\uae30 \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \ud655\uc778\ud558\ub824\uba74 Note : \ubdf0 \uc218\uc900 has_permission \uac80\uc0ac\uac00 \uc774\ubbf8 \ud1b5\uacfc \ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc778\uc2a4\ud134\uc2a4 \uc218\uc900\uc758 has_object_permission \uba54\uc18c\ub4dc\uac00 \ud638\ucd9c\ub429\ub2c8\ub2e4. \ub610\ud55c \uc778\uc2a4\ud134\uc2a4 \uc218\uc900 \uac80\uc0ac\ub97c \uc2e4\ud589\ud558\ub824\uba74 view \ucf54\ub4dc\uc5d0\uc11c .check_object_permissions(request, obj) \ub97c \uba85\uc2dc\uc801\uc73c\ub85c \ud638\ucd9c\ud574\uc57c \ud569\ub2c8\ub2e4. generic view\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uc635\uc158\uc774 \ucc98\ub9ac\ub429\ub2c8\ub2e4. \ud14c\uc2a4\ud2b8\uac00 \uc2e4\ud328 \ud560 \uacbd\uc6b0 custom \uad8c\ud55c\uc740 PermissionDenied \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b5\ub2c8\ub2e4. \uc608\uc678\uc640 \uad00\ub828\ub41c \uc624\ub958 \uba54\uc2dc\uc9c0\ub97c \ubcc0\uacbd\ud558\ub824\uba74 custom \uad8c\ud55c\uc5d0 \uc9c1\uc811 massege \uc18d\uc131\uc744 \uad6c\ud604\ud558\uc2ed\uc2dc\uc624. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 PermissionDenied \uc758 default_detail \uc18d\uc131\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. from rest_framework import permissions class CustomerAccessPermission(permissions.BasePermission): message = 'Adding customers not allowed.' def has_permission(self, request, view): ...","title":"Custom permissions"},{"location":"Permissions/#examples","text":"\ub2e4\uc74c\uc740 \ub4e4\uc5b4\uc624\ub294 request\uc758 IP \uc8fc\uc18c\ub97c \ube14\ub799\ub9ac\uc2a4\ud2b8\uc640 \ub300\uc870\ud558\uc5ec IP\uac00 \ube14\ub799\ub9ac\uc2a4\ud2b8\uc5d0 \uc62c\ub790\uc73c\uba74 request\ub97c \uac70\ubd80\ud558\ub294 \uad8c\ud55c \ud074\ub798\uc2a4\uc758 \uc608\uc785\ub2c8\ub2e4. from rest_framework import permissions class BlacklistPermission(permissions.BasePermission): \"\"\" Global permission check for blacklisted IPs. \"\"\" def has_permission(self, request, view): ip_addr = request.META['REMOTE_ADDR'] blacklisted = Blacklist.objects.filter(ip_addr=ip_addr).exists() return not blacklisted \ub4e4\uc5b4\uc624\ub294 \ubaa8\ub4e0 request\uc5d0 \u200b\u200b\ub300\ud574 \uc2e4\ud589\ub418\ub294 \uc804\uc5ed \uad8c\ud55c\ubfd0 \uc544\ub2c8\ub77c \ud2b9\uc815 \uac1c\uccb4 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc601\ud5a5\uc744 \uc8fc\ub294 \uc791\uc5c5\uc5d0 \ub300\ud574\uc11c\ub9cc \uc2e4\ud589\ub418\ub294 \uac1c\uccb4 \uc218\uc900 \uc0ac\uc6a9 \uad8c\ud55c\uc744 \ub9cc\ub4e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc608 : class IsOwnerOrReadOnly(permissions.BasePermission): \"\"\" Object-level permission to only allow owners of an object to edit it. Assumes the model instance has an `owner` attribute. \"\"\" def has_object_permission(self, request, view, obj): # \uc77d\uae30 \uad8c\ud55c\uc740 \ubaa8\ub4e0 \uc694\uccad\uc5d0 \u200b\u200b\ud5c8\uc6a9\ub418\uba70, # \uadf8\ub798\uc11c GET, HEAD, OPTIONS \uc694\uccad\uc744 \ud5c8\uc6a9 \ud560 \uac83\uc785\ub2c8\ub2e4. if request.method in permissions.SAFE_METHODS: return True # \uc778\uc2a4\ud134\uc2a4\uc5d0\ub294`owner`\ub77c\ub294 \uc18d\uc131\uc774 \uc788\uc5b4\uc57c\ud569\ub2c8\ub2e4. return obj.owner == request.user generic view\ub294 \uc801\uc808\ud55c \uac1c\uccb4 \uc218\uc900 \uc0ac\uc6a9 \uad8c\ud55c\uc744 \uac80\uc0ac\ud558\uc9c0\ub9cc custom view\ub97c \uc791\uc131\ud558\ub294 \uacbd\uc6b0 \uac1c\uccb4 \uc218\uc900 \uc0ac\uc6a9 \uad8c\ud55c \uac80\uc0ac\ub97c \uc9c1\uc811 \ud655\uc778\ud574\uc57c\ud569\ub2c8\ub2e4. \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\uac00 \uc788\uc73c\uba74 \ubdf0\uc5d0\uc11c self.check_object_permissions(request, obj) \ub97c \ud638\ucd9c\ud558\uc5ec \uadf8\ub807\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac1c\uccb4 \uc218\uc900\uc758 \uad8c\ud55c \uccb4\ud06c\uac00 \uc2e4\ud328\ud588\uc744 \uacbd\uc6b0,\uc774 \ud638\ucd9c\uc740 \uc801\uc808\ud55c APIException \uc744 \uc1a1\ucd9c\ud558\uace0, \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0\ub294 \ub2e8\uc21c\ud788 \ubc18\ud658\ub429\ub2c8\ub2e4. \ub610\ud55c generic view\ub294 \ub2e8\uc77c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\ub97c \uac80\uc0c9\ud558\ub294 \ubdf0\uc758 \uc624\ube0c\uc81d\ud2b8 \ub808\ubca8\uc758 \uad8c\ud55c\ub9cc\uc744 \uccb4\ud06c\ud569\ub2c8\ub2e4. \ubaa9\ub85d \ubdf0\uc758 \uac1c\uccb4 \uc218\uc900 \ud544\ud130\ub9c1\uc774 \ud544\uc694\ud55c \uacbd\uc6b0\ub294 \ubcc4\ub3c4\ub85c \ucffc\ub9ac \uc138\ud2b8\ub97c \ud544\ud130\ub9c1\ud574\uc57c\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 filtering documentation \ucc38\uc870","title":"Examples"},{"location":"Permissions/#third-party-packages","text":"\ub2e4\uc74c \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"Third party packages"},{"location":"Permissions/#composed-permissions","text":"Composed Permissions \ud328\ud0a4\uc9c0\ub294 \uc791\uace0 \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \uad6c\uc131 \uc694\uc18c\ub97c \uc0ac\uc6a9\ud558\uc5ec (\ub17c\ub9ac \uc5f0\uc0b0\uc790\ub97c \uc0ac\uc6a9\ud558\uc5ec) \ubcf5\uc7a1\ud55c \uba40\ud2f0 \uc2ec\ub3c4 \uad8c\ud55c \uac1d\uccb4\ub97c \uc27d\uac8c \uc815\uc758\ud558\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Composed Permissions"},{"location":"Permissions/#rest-condition","text":"REST Condition \ud328\ud0a4\uc9c0\ub294 \ubcf5\uc7a1\ud55c \uad8c\ud55c\uc744 \uc27d\uace0 \ud3b8\ub9ac\ud558\uac8c \uad6c\ucd95\ud558\uae30 \uc704\ud55c \ub610 \ub2e4\ub978 \ud655\uc7a5 \uae30\ub2a5\uc785\ub2c8\ub2e4. \ud655\uc7a5 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uba74 \uad8c\ud55c\uc744 \ub17c\ub9ac \uc5f0\uc0b0\uc790\uc640 \uacb0\ud569 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"REST Condition"},{"location":"Permissions/#dry-rest-permissions","text":"DRY Rest Permissions \ud328\ud0a4\uc9c0\ub294 \uac1c\ubcc4 \uae30\ubcf8 \ubc0f custom \uc561\uc158\uc5d0 \ub300\ud574 \uc11c\ub85c \ub2e4\ub978 \uad8c\ud55c\uc744 \uc815\uc758\ud558\ub294 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 \ud328\ud0a4\uc9c0\ub294 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc758 \ub370\uc774\ud130 \ubaa8\ub378\uc5d0 \uc815\uc758 \ub41c \uad00\uacc4\uc5d0\uc11c \ud30c\uc0dd \ub41c \uad8c\ud55c\uc744 \uac00\uc9c4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc6a9\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c API serializer\ub97c \ud1b5\ud574 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ubc18\ud658\ub418\ub294 \uad8c\ud55c \uac80\uc0ac\ub3c4 \uc9c0\uc6d0\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc0ac\uc6a9\uc790\ub9c8\ub2e4 \ucde8\ub4dd\ud558\ub294 \ub370\uc774\ud130\ub97c \uc81c\ud55c\ud558\uae30 \uc704\ud574 \uae30\ubcf8 \ubc0f custom \ubaa9\ub85d \uc561\uc158\uc5d0 \uad8c\ud55c\uc744 \ucd94\uac00\ub3c4 \uc9c0\uc6d0\ud569\ub2c8\ub2e4.","title":"DRY Rest Permissions"},{"location":"Permissions/#django-rest-framework-roles","text":"Django Rest Framework Roles \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud558\uba74 \uc5ec\ub7ec \uc720\ud615\uc758 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud574 API\ub97c \uc27d\uac8c \ub9e4\uac1c \ubcc0\uc218\ud654 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Django Rest Framework Roles"},{"location":"Permissions/#django-rest-framework-api-key","text":"Django Rest Framework API Key \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud558\uba74 \uc11c\ubc84\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc694\uccad\uc5d0 \u200b\u200bAPI \ud0a4 \ud5e4\ub354\uac00 \ud544\uc694\ud568\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2f9\uc2e0\uc740 django \uad00\ub9ac \uc778\ud130\ud398\uc774\uc2a4\uc5d0\uc11c \uc0dd\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Django Rest Framework API Key"},{"location":"Renderers/","text":"Django REST Framework - Renderers \"Before a TemplateResponse instance can be returned to the client, it must be rendered. The rendering process takes the intermediate representation of template and context, and turns it into the final byte stream that can be served to the client.\" \"TemplateResponse \uc778\uc2a4\ud134\uc2a4\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ubc18\ud658\ub418\uae30 \uc804\uc5d0 \ub80c\ub354\ub9c1 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub80c\ub354\ub9c1 \ud504\ub85c\uc138\uc2a4\ub294 \ud15c\ud50c\ub9bf\uacfc \ucee8\ud14d\uc2a4\ud2b8\uc758 \uc911\uac04 \ud45c\ud604\uc744 \uac00\uc838 \uc640\uc11c \ud074\ub798\uc774\uc5b8\ud2b8\uc5d0 \uc81c\uacf5 \ud560 \uc218 \uc788\ub294 \ucd5c\uc885 \ubc14\uc774\ud2b8 \uc2a4\ud2b8\ub9bc\uc73c\ub85c \ubc14\uafc9\ub2c8\ub2e4.\" \u2014 Django documentation Renderers REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\ub294 \ub2e4\uc591\ud55c \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc758 response\ub97c \ubc18\ud658\ud560 \uc218 \uc788\ub294 \uc5ec\ub7ec\uac00\uc9c0 Renderer \ud074\ub798\uc2a4\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c custom renderer\ub97c \uc815\uc758\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \uc790\uc2e0\uc758 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc744 \uc720\uc5f0\ud558\uac8c \ub514\uc790\uc778 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. How the renderer is determined \ubdf0\uc5d0 \ub300\ud55c \uc720\ud600\ud55c renderer set\uc740 \ud56d\uc0c1 \ud074\ub798\uc2a4\uc758 list\ub85c \uc815\uc758\ub429\ub2c8\ub2e4. \ubdf0\uac00 \uc785\ub825\ub418\uba74 REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ub4e4\uc5b4\uc624\ub294 request\uc5d0 \ub300\ud55c \ub0b4\uc6a9 \ud611\uc0c1\uc744 \uc218\ud589\ud558\uace0, request\ub97c \ub9cc\uc871\uc2dc\ud0a4\ub294\ub370 \uac00\uc7a5 \uc801\ud569\ud55c renderer\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \ucf58\ud150\uce20 \ud611\uc0c1\uc758 \uae30\ubcf8 \ud504\ub85c\uc138\uc2a4\ub294 request\uc758 Accept \ud5e4\ub354\ub97c \uc870\uc0ac\ud558\uc5ec response\uc5d0\uc11c \uc608\uc0c1\ud558\ub294 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc744 \ud310\ubcc4\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc120\ud0dd\uc801\uc73c\ub85c, URL\uc758 form suffixes\ub97c \uc0ac\uc6a9\ud558\uc5ec \uba85\uc2dc\uc801\uc73c\ub85c \ud2b9\uc815 \ud45c\ud604\uc744 \uc694\uccad\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 URL http://example.com/api/users_count.json \uc740 \ud56d\uc0c1 JSON \ub370\uc774\ud130\ub97c \ubc18\ud658\ud558\ub294 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 content negotiation \uc744 \ucc38\uc870\ud558\uc138\uc694. Setting the renderers \uae30\ubcf8 renderer set\uc740 DEFAULT_RENDERER_CLASSES \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\uc5ed\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c \uc124\uc815\uc740 JSON \uc744 \uae30\ubcf8 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc73c\ub85c \uc0ac\uc6a9\ud558\uba70 \uc790\uccb4 \uae30\uc220 API\ub3c4 \ud3ec\ud568\ub429\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_RENDERER_CLASSES': ( 'rest_framework.renderers.JSONRenderer', 'rest_framework.renderers.BrowsableAPIRenderer', ) } APIView CBV\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac1c\ubcc4 view\ub098 viewset\uc5d0 \uc0ac\uc6a9\ub418\ub294 renderer\ub97c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. from django.contrib.auth.models import User from rest_framework.renderers import JSONRenderer from rest_framework.response import Response from rest_framework.views import APIView class UserCountView(APIView): \"\"\" A view that returns the count of active users in JSON. \"\"\" renderer_classes = (JSONRenderer, ) def get(self, request, format=None): user_count = User.objects.filter(active=True).count() content = {'user_count': user_count} return Response(content) \ub610\ub294 FBV\uc758 \ubdf0\uc640 \ud568\uaed8 @aip_view \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 @api_view(['GET']) @renderer_classes((JSONRenderer,)) def user_count_view(request, format=None): \"\"\" A view that returns the count of active users in JSON. \"\"\" user_count = User.objects.filter(active=True).count() content = {'user_count': user_count} return Response(content) Ordering of renderer classes API\uc758 Renderer \ud074\ub798\uc2a4\ub97c \uc9c0\uc815\ud558\uc5ec \uac01 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc5d0 \ud560\ub2f9 \ud560 \uc6b0\uc120 \uc21c\uc704\ub97c \uc0dd\uac01\ud560 \ub54c \uc911\uc694\ud569\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 Accept: */* \ud5e4\ub354\ub97c \ubcf4\ub0b4\ub294 \uac83\uacfc Accept \ud5e4\ub354\ub97c \ud3ec\ud568\ud558\uc9c0 \uc54a\ub294 \uac83\uacfc \uac19\uc774 \ubc1b\uc544 \ub4e4\uc77c \uc218 \uc788\ub294 \ud45c\ud604\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uba85\uc2dc\ud558\uc9c0 \uc54a\uc73c\uba74 REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 list\uc5d0\uc11c response\uc5d0 \uc0ac\uc6a9\ud560 \uccab\ubc88\uc9f8 renderer\ub97c \uc120\ud0dd\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 API\uac00 JSON response\uacfc HTML browsable API\ub97c \uc81c\uacf5\ud558\ub294 \uacbd\uc6b0, Accept \ud5e4\ub354\ub97c \uc9c0\uc815\ud558\uc9c0 \uc54a\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 JSON \uc751\ub2f5\uc744 \ubcf4\ub0b4\ub824\uba74 JSONRenderer \ub97c \uae30\ubcf8 renderer\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. API\uc5d0 \uc694\uccad\uc5d0 \ub530\ub77c \uc77c\ubc18 \uc6f9 \ud398\uc774\uc9c0\uc640 API \uc751\ub2f5\uc744 \ubaa8\ub450 \uc81c\uacf5 \ud560 \uc218\uc788\ub294 view\uac00 \ud3ec\ud568\ub418\uc5b4\uc788\ub294 \uacbd\uc6b0, \uae68\uc9c4 \uc2b9\uc778 \ud5e4\ub354 \ub97c \ubcf4\ub0b4\ub294 \uc624\ub798\ub41c \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \uc81c\ub300\ub85c \uc791\ub3d9\ud558\ub824\uba74 TemplateHTMLRenderer \ub97c \uae30\ubcf8 \ub80c\ub354\ub7ec\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. API Reference JSONRenderer utf-8 \uc778\ucf54\ub529\uc744 \uc0ac\uc6a9\ud558\uc5ec request \ub370\uc774\ud130\ub97c JSON \uc73c\ub85c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. \uae30\ubcf8 \uc2a4\ud0c0\uc77c\uc740 \uc720\ub2c8\ucf54\ub4dc \ubb38\uc790\ub97c \ud3ec\ud568\ud558\uace0 \ubd88\ud544\uc694\ud55c \uacf5\ubc31 \uc5c6\uc774 \ucf64\ud329\ud2b8 \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec response\ub97c \ub80c\ub354\ub9c1\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. {\"unicode black star\":\"\u2605\",\"value\":999} \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 indent \ubbf8\ub514\uc5b4 \ud0c0\uc785 parameter\ub97c \ucd94\uac00\ub85c \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \ubc18\ud658 \ub41c JSON\uc740 \ub4e4\uc5ec\uc4f0\uae30 \ub429\ub2c8\ub2e4. \uc608: Accept: application/json; indent=4 { \"unicode black star\": \"\u2605\", \"value\": 999 } \uae30\ubcf8 JSON \uc778\ucf54\ub529 \uc2a4\ud0c0\uc77c\uc740 UNICODE_JSON \uacfc COMPACT_JSON \uc124\uc815 \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. .media_type : application/json .format : '.json' charset : None TemplateHTMLRenderer Django\uc758 \ud45c\uc900 \ud15c\ud50c\ub9bf \ub80c\ub354\ub9c1\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130\ub97c HTML\uc73c\ub85c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. \ub2e4\ub978 renderer\uc640 \ub2ec\ub9ac Response \uc5d0 \uc804\ub2ec \ub41c \ub370\uc774\ud130\ub294 serializer \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \ub610\ud55c \ub2e4\ub978 renderer\uc640 \ub2ec\ub9ac Response \ub97c \ub9cc\ub4e4 \ub54c template_name \uc778\uc218\ub97c \ud3ec\ud568 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. TemplateHTMLRenderer\ub294 response,data \ub97c \ucee8\ud14d\uc2a4\ud2b8 dict\ub85c \uc0ac\uc6a9\ud558\uc5ec RequestContext \ub97c \ub9cc\ub4e4\uace0 \ucee8\ud14d\uc2a4\ud2b8\ub97c \ub80c\ub354\ub9c1\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \ud15c\ud50c\ub9bf \uc774\ub984\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. \ud15c\ud50c\ub9bf \uc774\ub984\uc740 (\uc6b0\uc120 \uc21c\uc704\uc5d0 \ub530\ub77c) \ub2e4\uc74c\uacfc \uac19\uc774 \uacb0\uc815\ub429\ub2c8\ub2e4: 1. \uba85\uc2dc\uc801\uc73c\ub85c template_name \uc778\uc218\ub294 response\uc5d0 \uc804\ub2ec\ub429\ub2c8\ub2e4. 2. \uc774 \ud074\ub798\uc2a4\ub294 \uba85\uc2dc\uc801\uc778 .template_name \uc18d\uc131\uc774 \uc124\uc815\ub429\ub2c8\ub2e4. 3. view.get_template_names() \ub97c \ud638\ucd9c \ud55c \uacb0\uacfc\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. TemplateHTMLRenderer \ub97c \uc0ac\uc6a9\ud558\ub294 view\uc758 \uc608: class UserDetail(generics.RetrieveAPIView): \"\"\" A view that returns a templated HTML representation of a given user. \"\"\" queryset = User.objects.all() renderer_classes = (TemplateHTMLRenderer,) def get(self, request, *args, **kwargs): self.object = self.get_object() return Response({'user': self.object}, template_name='user_detail.html') TemplateHTMLRenderer \uc73c\ub85c REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc77c\ubc18 HTML \ud398\uc774\uc9c0\ub97c \ub9ac\ud134\ud558\uac70\ub098 HTML \ubc0f API \uc751\ub2f5\uc744 \ub2e8\uc77c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \ub9ac\ud134\ud558\ub3c4\ub85d \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. TemplateHTMLRenderer \ub97c \uc0ac\uc6a9\ud558\ub294 \uc6f9 \uc0ac\uc774\ud2b8\ub97c \uad6c\ucd95\ud558\ub294 \uacbd\uc6b0 TemplateHTMLRenderer \ub97c renderer_classes \ubaa9\ub85d\uc758 \uccab \ubc88\uc9f8 \ud074\ub798\uc2a4\ub85c \ub098\uc5f4\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c\ud558\uba74 \uc798\ubabb \ud615\uc131\ub41c ACCEPT: \ud5e4\ub354\ub97c \ubcf4\ub0b4\ub294 \ube0c\ub77c\uc6b0\uc800\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc6b0\uc120 \uc21c\uc704\uac00 \uc9c0\uc815\ub429\ub2c8\ub2e4. TemplateHTMLRenderer \uc0ac\uc6a9\uc5d0 \ub300\ud55c \ucd94\uac00 \uc608\uc81c\ub294 HTML & Forms Topic Page \ub97c \ucc38\uc870\ud558\uc138\uc694. .media_type : text/html .format : '.html' .charset : utf-8 \ucc38\uc870 : StaticHTMLRenderer StaticHTMLRenderer \ub2e8\uc21c\ud788 \ubbf8\ub9ac \ub80c\ub354\ub9c1 \ub41c HTML\uc744 \ubc18\ud658\ud558\ub294 \ub2e8\uc21c\ud55c renderer\uc785\ub2c8\ub2e4. \ub2e4\ub978 \ub80c\ub354\ub7ec\uc640 \ub2ec\ub9ac response \uac1d\uccb4\uc5d0 \uc804\ub2ec \ub41c \ub370\uc774\ud130\ub294 \ubc18\ud658 \ud560 \ub0b4\uc6a9\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. StaticHTMLRenderer \ub97c \uc0ac\uc6a9\ud558\ub294 view\uc758 \uc608: @api_view(('GET',)) @renderer_classes((StaticHTMLRenderer,)) def simple_html_view(request): data = '<html><body><h1>Hello, world</h1></body></html>' return Response(data) StaticHTMLRenderer \ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc77c\ubc18 HTML\ud398\uc774\uc9c0\ub97c \ub9ac\ud134\ud558\uac70\ub098 HTML\ubc0f API \uc751\ub2f5\uc744 \ub2e8\uc77c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \ub9ac\ud134\ud558\ub3c4\ub85d \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. .media_type : text/html .format : '.html' .charset : utf-8 \ucc38\uc870 : TemplateHTMLRenderer BrowsableAPIRenderer Browsable API\ub97c \uc704\ud574 \ub370\uc774\ud130\ub97c HTML\uc73c\ub85c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. \uc774 renderer\ub294 \uac00\uc7a5 \uc6b0\uc120\uc21c\uc704\uac00 \ub192\uc740 \ub2e4\ub978 renderer\ub97c \uc15c\uc815\ud558\uace0 \uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec HTML \ud398\uc774\uc9c0 \ub0b4\uc5d0 API \uc2a4\ud0c0\uc77c response\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4. .media_type : text/html .format : '.api' .charset : utf-8 .template : 'rest_framework/api.html' Customizing BrowsableAPIRenderer \uae30\ubcf8\uc801\uc73c\ub85c response content\ub294 BrowsableAPIRenderer \uc640 \ubcc4\ub3c4\ub85c \uc6b0\uc120 \uc21c\uc704\uac00 \uac00\uc7a5 \ub192\uc740 renderer\ub85c \ub80c\ub354\ub9c1 \ub429\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc744 custom \ud574\uc57c\ud558\ub294 \uacbd\uc6b0 (ex: HTML\uc744 \uae30\ubcf8 \ub9ac\ud134 \ud615\uc2dd\uc73c\ub85c \uc0ac\uc6a9\ud558\uace0 browsable API\uc5d0\uc11c JSON\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0) get_default_renderer() \uba54\uc11c\ub4dc\ub97c \ub300\uccb4\ud558\uc11c \uc774\ub97c \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608: class CustomBrowsableAPIRenderer(BrowsableAPIRenderer): def get_default_renderer(self, view): return JSONRenderer() AdminRenderer \uad00\ub9ac\uc790\uc640 \uac19\uc740 \ub514\uc2a4\ud50c\ub808\uc774\ub97c \uc704\ud574 \ub370\uc774\ud130\ub97c HTML\uc73c\ub85c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. \uc774 renderer\ub294 \ub370\uc774\ud130 \uad00\ub9ac\ub97c \uc704\ud55c \uc0ac\uc6a9\uc790\uc5d0\uac8c \uce5c\uc219\ud55c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc81c\uacf5\ud574\uc57c\ud558\ub294 CRUD \uc2a4\ud0c0\uc77c \uc6f9 API\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. CRUD : Create(\uc0dd\uc131), Read(\uc77d\uae30), Update(\uac31\uc2e0), Delete(\uc0ad\uc81c) HTML \ud3fc\uc774 \uc81c\ub300\ub85c \uc9c0\uc6d0\ud558\uc9c0 \ubabb\ud558\uae30 \ub54c\ubb38\uc5d0 \uc911\ucca9 \ub41c \ubdf0 \ub610\ub294 \uc785\ub825\uc744 \uc704\ud574 serializer\ub97c \ub098\uc5f4\ud55c \ubdf0\ub294 AdminREnderer \uc640 \uc798 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Note : AdminRenderer \ub294 \uc62c\ubc14\ub974\uac8c \uad6c\uc131\ub41c URL_FIELD_NAME (\uae30\ubcf8\uc801\uc73c\ub85c url)\uc18d\uc131\uc774 \ub370\uc774\ud130\uc5d0 \uc788\ub294 \uacbd\uc6b0\uc5d0\ub9cc detail \ud398\uc774\uc9c0\uc5d0 \ub300\ud55c \ub9c1\ud06c\ub97c \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. HyperlinkedModelSerializer \uc758 \uacbd\uc6b0\uc9c0\ub9cc, ModelSerializer \ub610\ub294 \uc77c\ubc18 Serializer \ud074\ub798\uc2a4\uc758 \uacbd\uc6b0 \ud544\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \ud3ec\ud568\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc5ec\uae30\uc11c\ub294 get_absolute_url \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. class AccountSerializer(serializers.ModelSerializer): url = serializers.CharField(source='get_absolute_url', read_only=True) class Meta: model = Account .media_type : text/html .format : '.admin' .charset : utf-8 .template : 'rest_framework/admin.html' HTMLFormRenderer serializer\uc5d0\uc11c \ubc18\ud658\ub41c \ub370\uc774\ud130\ub97c HTML from\uc73c\ub85c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. \uc774 renderer\uc758 \ucd9c\ub825\uc5d0\ub294 \ud3ec\ud568\ub41c <form> \ud0dc\ud06c, \uc228\uaca8\uc9c4 CSRF \uc785\ub825\uc774\ub098 submit \ubc84\ud2bc\uc774 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774 renderer\ub294 \uc9c1\uc811 \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c \uac83\uc774 \uc544\ub2c8\uba70, serializer \uc778\uc2a4\ud134\uc2a4\ub97c renderer_form \ud15c\ud50c\ub9bf \ud0dc\uadf8\uc5d0 \uc804\ub2ec\ud558\uc5ec \ud15c\ud50c\ub9bf\uc5d0\uc11c \ub300\uc2e0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. {% load rest_framework %} <form action=\"/submit-report/\" method=\"post\"> {% csrf_token %} {% render_form serializer %} <input type=\"submit\" value=\"Save\" /> </form> \ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 HTML & Forms \ub97c \ucc38\uc870\ud558\uc138\uc694. .media_type : text/html .format : '.form' .charset : utf-8 .template : 'rest_framework/horizontal/form.html' MultiPartRenderer \uc774 renderer\ub294 HTML \ub2e4\uc911 \ud30c\ud2b8 form \ub370\uc774\ud130\ub97c \ub80c\ub354\ub9c1\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. response renderer\ub85c\ub294 \uc801\ud569\ud558\uc9c0 \uc54a\uc9c0\ub9cc \ub300\uc2e0 REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \ud14c\uc2a4\ud2b8 \ud074\ub77c\uc774\uc5b8\ud2b8 \ubc0f \ud14c\uc2a4\ud2b8 request \ud329\ud1a0\ub9ac \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud14c\uc2a4\ud2b8 request\ub97c \ub9cc\ub4dc\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. .media_type : multipart/form-data; boundary=BoUnDaRyStRiNg .format : '.multipart' .charset : utf-8 Custom renderers custom renderer\ub97c \uad6c\ud604\ud558\ub824\uba74 BaseRenderer \ub97c \uc7ac\uc815\uc758\ud558\uace0, .media_type \uc640 .format \uc18d\uc131\uc744 \uc124\uc815\ud558\uace0 .render(self, data, media_type=None, renderer_context=None) \uba54\uc11c\ub4dc\ub97c \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4. \uba54\uc11c\ub4dc\ub294 HTTP response\uc758 \ubcf8\ubb38\uc73c\ub85c \uc0ac\uc6a9\ub420 \ubc14\uc774\ud2b8 \ud14c\uc2a4\ud2b8\ub97c \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. render() \uba54\uc11c\ub4dc\uc5d0 \uc804\ub2ec \ub41c \uc778\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. date response() \uc778\uc2a4\ud134\uc2a4\ud654\uc5d0 \uc758\ud574 \uc124\uc815\ub41c \uc694\uccad \ub370\uc774\ud130\uc785\ub2c8\ub2e4. media_type=None \uc120\ud0dd\uc0ac\ud56d. \uc81c\uacf5\ub418\ub294 \uacbd\uc6b0 \ucf58\ud150\uce20 \ud611\uc0c1 \ub2e8\uacc4\uc5d0\uc11c \uacb0\uc815\ud55c\ub300\ub85c \ud5c8\uc6a9\ub418\ub294 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc785\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 Accept: \ud5e4\ub354\uc5d0 \ub530\ub77c renderer\uc758 media_type \uc18d\uc131\ubcf4\ub2e4 \ub354 \uad6c\uccb4\uc801 \uc77c \uc218 \uc788\uc73c\uba70, \ubbf8\ub514\uc5b4 \ud0c0\uc785 parameter\uac00 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \"application/json; neated=true\" \uc640 \uac19\uc2b5\ub2c8\ub2e4. renderer_context=None \uc120\ud0dd\uc0ac\ud56d. \uc81c\uacf5\ub41c \uacbd\uc6b0, \uc774\ub294 \ubdf0\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc0c1\ud669\ubcc4 \uc815\ubcf4\uc758 dict\uc785\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \ud0a4\uc5d0\ub294 view , request , response , args , kwargs \uc640 \uac19\uc740 \ud0a4\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. Example \ub2e4\uc74c\uc740 data parameter\uac00 \ud3ec\ud568\ub41c response\ub97c \uc751\ub2f5\ub0b4\uc6a9\uc73c\ub85c \ubc18\ud658\ud558\ub294 \uc77c\ubc18\ud14d\uc2a4\ud2b8 \ub80c\ub354\ub7ec\uc758 \uc608\uc785\ub2c8\ub2e4. from django.utils.encoding import smart_unicode from rest_framework import renderers class PlainTextRenderer(renderers.BaseRenderer): media_type = 'text/plain' format = 'txt' def render(self, data, media_type=None, renderer_context=None): return data.encode(self.charset) Setting the character set \uae30\ubcf8\uc801\uc73c\ub85c renderer \ud074\ub798\uc2a4\ub294 UTF-8 \uc778\ucf54\ub529\uc744 \uc0ac\uc6a9\ud55c\ub2e4\uace0 \uac00\uc815\ud569\ub2c8\ub2e4. \ub2e4\ub978 \uc778\ucf54\ub529\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 renderer\uc5d0\uc11c charset \uc18d\uc131\uc744 \uc124\uc815\ud558\uc138\uc694. class PlainTextRenderer(renderers.BaseRenderer): media_type = 'text/plain' format = 'txt' charset = 'iso-8859-1' def render(self, data, media_type=None, renderer_context=None): return data.encode(self.charset) renderer \ud074\ub798\uc2a4\uac00 \uc720\ub2c8\ucf54\ub4dc \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud558\uba74 \uc778\ucf54\ub529\uc744 \uacb0\uc815\ud558\ub294\ub370 \uc0ac\uc6a9\ub418\ub294 renderer\uc758 charset \uc18d\uc131\uc774 \uc124\uc815 \ub41c Response \ud074\ub798\uc2a4\uc5d0 \uc758\ud574 \uc751\ub2f5 \ub0b4\uc6a9\uc774 bytestring\uc73c\ub85c \uac15\uc81c \ubcc0\ud658\ub429\ub2c8\ub2e4. renderer\uac00 \uae30\uc874 \uc774\uc9c4 \ub0b4\uc6a9\uc744 \ub098\ud0c0\ub0b4\ub294 \ubc14\uc774\ud2b8 \ud14c\uc2a4\ud2b8\ub97c \ubc18\ud658\ud558\ub294 \uacbd\uc6b0 response\uc758 charset \uac12\uc744 None \uc73c\ub85c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4.(response\uc758 Content-Type \ud5e4\ub354\uc5d0 charset \uac12\uc774 \uc124\uc815\ub418\uc9c0 \uc54a\ub3c4\ub85d \ubcf4\uc7a5\ud569\ub2c8\ub2e4.) \uacbd\uc6b0\uc5d0 \ub530\ub77c renderer_style \uc18d\uc131\uc744 binary \ub85c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud558\uba74 browsable API\uac00 \uc774\uc9c4 \ucee8\ud150\uce20\ub97c \ubb38\uc790\uc5f4\ub85c \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ub429\ub2c8\ub2e4. class JPEGRenderer(renderers.BaseRenderer): media_type = 'image/jpeg' format = 'jpg' charset = None render_style = 'binary' def render(self, data, media_type=None, renderer_context=None): return data Advanced renderer usage REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 renderer\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9e4\uc6b0 \uc720\uc5f0\ud55c \uc791\uc5c5\uc744 \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba87\uac00\uc9c0 \uc608... \uc694\uccad\ud55c \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc5d0 \ub530\ub77c \uac19\uc740 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \ud50c\ub7ab \ub610\ub294 \uc911\ucca9\ub41c \ud45c\ud604\uc744 \uc81c\uacf5\ud558\uc138\uc694. \uc77c\ubc18 HTML \uc6f9 \ud398\uc774\uc9c0\uc640 JSON \uae30\ubc18\uc758 API\uc751\ub2f5\uc744 \ub3d9\uc77c\ud55c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \uc81c\uacf5\ud558\uc138\uc694. \uc0ac\uc6a9\ud560 API \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ub300\ud574 \uc5ec\ub7ec \ud0c0\uc785\uc758 HTML \ud45c\ud604\uc744 \uc9c0\uc815\ud558\uc138\uc694. media_type = 'image/*' \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uacfc \uac19\uc774 renderer\uc758 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc744 \uc9c0\uc815\ud558\uace0 Accept \ud5e4\ub354\ub97c \uc0ac\uc6a9\ud558\uc5ec response\uc758 \uc778\ucf54\ub529\uc744 \ubcc0\uacbd\ud569\ub2c8\ub2e4. Varying behaviour by media type \uacbd\uc6b0\uc5d0 \ub530\ub77c view\uc5d0\uc11c \ud5c8\uc6a9\ub418\ub294 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc5d0 \ub530\ub77c \ub2e4\ub978 serializer \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 request.accepted_renderer \uc5d0 \uc561\uc11c\uc2a4\ud558\uc5ec response\uc5d0 \uc0ac\uc6a9\ub420 \ud611\uc0c1 \ub41c renderer\ub97c \uacb0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608: @api_view(('GET',)) @renderer_classes((TemplateHTMLRenderer, JSONRenderer)) def list_users(request): \"\"\" A view that can return JSON or HTML representations of the users in the system. \"\"\" queryset = Users.objects.filter(active=True) if request.accepted_renderer.format == 'html': # TemplateHTMLRenderer takes a context dict, # and additionally requires a 'template_name'. # It does not require serialization. data = {'users': queryset} return Response(data, template_name='list_users.html') # JSONRenderer requires serialized data as normal. serializer = UserSerializer(instance=queryset) data = serializer.data return Response(data) Underspecifying the media type (\ubbf8\ub514\uc5b4 \ud0c0\uc785\uc744 \uc9c0\uc815\ud558\uc9c0 \uc54a\uc74c) \uacbd\uc6b0\uc5d0 \ub530\ub77c renderer\uac00 \ub2e4\uc591\ud55c \ubbf8\ub514\uc5b4\ud0c0\uc785\uc744 \uc81c\uacf5\ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 image/* \uc774\ub098 */* \uacfc \uac19\uc740 media_type \uac12\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc744 \uba85\ud655\ud558\uac8c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. renderer\uc758 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc744 \uba85\uc2dc\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 content_type \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec response\uc744 \ubc18\ud658 \ud560 \ub54c \uba85\uc2dc\uc801\uc73c\ub85c \ubbf8\ub514\uc5b4\ud0c0\uc785\uc744 \uc9c0\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: return Response(data, content_type='image/png') Designing your media types \ub9ce\uc740 \uc6f9 API\ub97c \uc704\ud574, \ud558\uc774\ud37c\ub9c1\ud06c \uad00\uacc4\ub97c \uac16\ub294 \ub2e8\uc21c JSON \uc751\ub2f5\uc740 \ucda9\ubd84\ud560 \uc218 \uc788\ub2e4. RESTful \ub514\uc790\uc778\uacfc HATEOAS \ub97c \uc644\uc804\ud788 \ud3ec\uc6a9\ud558\ub824\uba74 \ubbf8\ub514\uc5b4\ud0c0\uc785\uc758 \ub514\uc790\uc778\uacfc \uc0ac\uc6a9\ubc95\uc744 \ub354 \uc790\uc138\ud788 \uace0\ub824\ud574\uc57c\ud569\ub2c8\ub2e4. the words of Roy Fielding \uc5d0\uc11c\ub294 \"REST API\ub294 \ub9ac\uc18c\uc2a4\ub97c \ud45c\ud604\ud558\uace0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc0c1\ud0dc\ub97c \uc720\ub3c4\ud558\uac70\ub098 \uae30\uc874 \ud45c\uc900 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc5d0 \ub300\ud55c \ud655\uc7a5 \uad00\uacc4 \uc774\ub984 \ubc0f / \ub610\ub294 \ud558\uc774\ud37c \ud14d\uc2a4\ud2b8 \uc0ac\uc6a9 \uac00\ub2a5 \ub9c8\ud06c \uc5c5\uc744 \uc815\uc758\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \ubbf8\ub514\uc5b4 \uc720\ud615\uc744 \uc815\uc758\ud558\ub294\ub370 \ud544\uc694\ud55c \ubaa8\ub4e0 \ub178\ub825\uc744 \uae30\uc6b8\uc5ec\uc57c\ud569\ub2c8\ub2e4.\" custom \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc758 \uc88b\uc740 \uc608\ub294 GitHub\uc758 custom application/vnd.github+json \ubbf8\ub514\uc5b4 \ud0c0\uc785 \uc0ac\uc6a9\uacfc Mike Amundsen\uc758 IANA \uc2b9\uc778 application/vnd.collection+json \uae30\ubc18 \ud558\uc774\ud37c \ubbf8\ub514\uc5b4\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. HTML error views \uc77c\ubc18\uc801\uc73c\ub85c, renderer\ub294 Http404 \ub098 PermissionDenied \uc608\uc678 \ub610\ub294 APIException \uc758 \uc11c\ube0c \ud074\ub798\uc2a4\uc640 \uac19\uc774 \uc77c\ubc18 response\ub97c \ucc98\ub9ac\ud558\ub294\uc9c0 \ub610\ub294 \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uc5ec response\uac00 \ubc1c\uc0dd\ud558\ub294\uc9c0\uc5d0 \uad00\uacc4\uc5c6\uc774 \ub3d9\uc77c\ud558\uac8c \ub3d9\uc791\ud569\ub2c8\ub2e4. TemplateHTMLRenderer \ub610\ub294 StaticHTMLRenderer \ub97c \uc0ac\uc6a9\uc911\uc774\uace0 \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uba74 \ub3d9\uc791\uc774 \uc57d\uac04 \ub2e4\ub974\uba70 Django's default handling of error views \uac00 \uadf8\ub300\ub85c \ubc18\uc601\ub429\ub2c8\ub2e4. HTML renderer\uc5d0 \uc758\ud574 \ubc1c\uc0dd\ub418\uace0 \ucc98\ub9ac\ub418\ub294 \uc608\uc678\ub294 \uc6b0\uc120 \uc21c\uc704\uc5d0 \ub530\ub77c \ub2e4\uc74c \ubc29\ubc95 \uc911 \ud558\ub098\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub80c\ub354\ub9c1\uc744 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. {status_code}.html \uc774\ub77c\ub294 \ud15c\ud50c\ub9bf\uc744 \ub85c\ub4dc\ud558\uace0 \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. api_exception.html \uc774\ub77c\ub294 \ud15c\ud50c\ub9bf\uc744 \ub85c\ub4dc\ud558\uace0 \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. HTTP \uc0c1\ud0dc \ucf54\ub4dc\uc640 \ud14d\uc2a4\ud2b8\ub97c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4.(ex. \"404 Not Found\" ) \ud15c\ud50c\ub9bf\uc740 status_code \uc640 detail \ud0a4\ub97c \ud3ec\ud568\ud558\ub294 RequestContext \ub85c \ub80c\ub354\ub9c1\ub429\ub2c8\ub2e4. Note : DEBUG=True \uc774\uba74 Django\uc758 \ud45c\uc900 \ucd94\uc801 \uc624\ub958 \ud398\uc774\uc9c0\uac00 HTTP \uc0c1\ud0dc \ucf54\ub4dc\uc640 \ud14d\uc2a4\ud2b8\ub97c \ub80c\ub354\ub9c1\ud558\ub294 \ub300\uc2e0 \ud45c\uc2dc\ub429\ub2c8\ub2e4. Third party packages \ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4. YAML REST framework YAML \uc740 YAML \ud30c\uc2f1 \ubc0f \ub80c\ub354\ub9c1 \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\uc804\uc5d0 REST \ud504\ub808\uc784 \uc6cc\ud06c \ud328\ud0a4\uc9c0\uc5d0 \uc9c1\uc811 \ud3ec\ud568\ub418\uc5b4 \uc788\uc5c8\uc73c\uba70 \uc774\uc81c\ub294 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub85c \ub300\uc2e0 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \uc124\uce58 \ubc0f \uad6c\uc131 pip\uc744 \uc0ac\uc6a9\ud574 \uc124\uce58\ud569\ub2c8\ub2e4. $ pip install djangorestframework-yaml REST \ud504\ub808\uc784\uc6cc\ud06c \uc124\uc815\uc744 \uc218\uc815\ud569\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_PARSER_CLASSES': ( 'rest_framework_yaml.parsers.YAMLParser', ), 'DEFAULT_RENDERER_CLASSES': ( 'rest_framework_yaml.renderers.YAMLRenderer', ), } XML REST Framework XML \uc740 \uac04\ub2e8\ud55c \ube44\uacf5\uc2dd XML \ud615\uc2dd\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\uc804\uc5d0 REST \ud504\ub808\uc784 \uc6cc\ud06c \ud328\ud0a4\uc9c0\uc5d0 \uc9c1\uc811 \ud3ec\ud568\ub418\uc5b4 \uc788\uc5c8\uc73c\uba70 \uc774\uc81c\ub294 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub85c \ub300\uc2e0 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \uc124\uce58\uc640 \uad6c\uc131 pip\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uce58\ud569\ub2c8\ub2e4. $ pip install djangorestframework-xml REST \ud504\ub808\uc784\uc6cc\ud06c \uc124\uc815\uc744 \uc218\uc815\ud569\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_PARSER_CLASSES': ( 'rest_framework_xml.parsers.XMLParser', ), 'DEFAULT_RENDERER_CLASSES': ( 'rest_framework_xml.renderers.XMLRenderer', ), } JSONP REST framework JSONP \ub294 JSONP \ub80c\ub354\ub9c1\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774\uc804\uc5d0 REST \ud504\ub808\uc784\uc6cc\ud06c \ud328\ud0a4\uc9c0\uc5d0 \uc9c1\uc811 \ud3ec\ud568\ub418\uc5b4 \uc788\uc5c8\uc73c\uba70 \uc774\uc81c\ub294 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub85c \ub300\uc2e0 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. Warning : \ub3c4\uba54\uc778 \uac04 AJAX \uc694\uccad\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 \uc77c\ubc18\uc801\uc73c\ub85c JSONP \ub300\uc2e0 CORS\uc758 \ucd5c\uc2e0 \uc811\uadfc \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud574\uc57c\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 CORS \uc124\uba85\uc11c \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. jsonp \uc811\uadfc\ubc95\uc740 \ubcf8\uc9c8\uc801\uc73c\ub85c \ube0c\ub77c\uc6b0\uc800 \ud574\ud0b9\uc774\uba70 GET \uc694\uccad\uc774 \uc778\uc99d\ub418\uc9c0 \uc54a\uace0 \uc0ac\uc6a9\uc790 \uad8c\ud55c\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uc804 \uc138\uacc4\uc801\uc73c\ub85c \uc77d\uc744 \uc218 \uc788\ub294 API \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc5d0\ub9cc \uc801\ud569\ud569\ub2c8\ub2e4. \uc124\uce58\uc640 \uad6c\uc131 pip\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uce58\ud569\ub2c8\ub2e4. $ pip install djangorestframework-jsonp REST \ud504\ub808\uc784\uc6cc\ud06c \uc124\uc815\uc744 \uc218\uc815\ud569\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_RENDERER_CLASSES': ( 'rest_framework_jsonp.renderers.JSONPRenderer', ), } MessagePack MessagePack \uc740 \ube60\ub974\uace0 \ud6a8\uc728\uc801\uc778 \ubc14\uc774\ub108\ub9ac serializer \ud615\uc2dd\uc785\ub2c8\ub2e4. Juan Riaza \ub294 MessagePack \ub80c\ub354\ub7ec\uc640 REST \ud504\ub808\uc784 \uc6cc\ud06c\uc5d0 \ub300\ud55c \ud30c\uc11c \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\ub294 djangorestframework-msgpack \ud328\ud0a4\uc9c0 \ub97c \uc720\uc9c0 \uad00\ub9ac\ud569\ub2c8\ub2e4. CSV \uc27c\ud45c\ub85c \uad6c\ubd84 \ub41c \uac12\uc740 \uc2a4\ud504\ub808\ub4dc \uc2dc\ud2b8 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc73c\ub85c \uc27d\uac8c \uac00\uc838\uc62c \uc218 \uc788\ub294 \uc77c\ubc18 \ud14d\uc2a4\ud2b8 \ud615\uc2dd\uc758 \ub370\uc774\ud130 \ud615\uc2dd\uc785\ub2c8\ub2e4. Mjumbe Poe \ub294 REST \ud504\ub808\uc784 \uc6cc\ud06c\uc5d0 \ub300\ud55c CSV \ub80c\ub354\ub7ec \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\ub294 djangorestframework-csv \ud328\ud0a4\uc9c0\ub97c \uc720\uc9c0 \uad00\ub9ac\ud569\ub2c8\ub2e4. UltraJSON UltraJSON \uc740 \uc0c1\ub2f9\ud788 \ube60\ub978 JSON \ub80c\ub354\ub9c1\uc744 \uc81c\uacf5 \ud560 \uc218 \uc788\ub294 \ucd5c\uc801\ud654 \ub41c C JSON \uc778\ucf54\ub354\uc785\ub2c8\ub2e4. Jacob Haslehurst \ub294 UJSON \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud558\uc5ec JSON \ub80c\ub354\ub9c1\uc744 \uad6c\ud604\ud558\ub294 drf-ujson-renderer \ud328\ud0a4\uc9c0\ub97c \uc720\uc9c0 \uad00\ub9ac\ud569\ub2c8\ub2e4. CamelCase JSON djangorestframework-camel-case \ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc704\ud55c parser\uc640 camel-case JSON \ub80c\ub354\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 serializer\ub294 \ud30c\uc774\uc36c \uc2a4\ud0c0\uc77c\uc758 underscored \ud544\ub4dc \uc774\ub984\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc, \uc790\ubc14 \uc2a4\ud06c\ub9bd\ud2b8 \uc2a4\ud0c0\uc77c\uc758 camel case field names\uc73c\ub85c API\uc5d0 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uadf8\uac83\uc740 Vitaly Babiy \uc5d0 \uc758\ud574 \uad00\ub9ac\ub429\ub2c8\ub2e4. Pandas (CSV, Excel, PNG) Django REST Pandas \ub294 Pandas DataFrame API\ub97c \ud1b5\ud574 \ucd94\uac00 \ub370\uc774\ud130 \ucc98\ub9ac \ubc0f \ucd9c\ub825\uc744 \uc9c0\uc6d0\ud558\ub294 serializer \ubc0f \ub80c\ub354\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Django REST Pandas\uc5d0\ub294 \ud310\ub2e4 \uc2a4\ud0c0\uc77c CSV \ud30c\uc77c, Excel \ud1b5\ud569 \ubb38\uc11c ( .xls \ubc0f .xlsx ) \ubc0f \uae30\ud0c0 \ub2e4\uc591\ud55c \ud615\uc2dd \uc758 \ub80c\ub354\ub7ec\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. wq \ud504\ub85c\uc81d\ud2b8 \uc758 \uc77c\ud658\uc73c\ub85c S. Andrew Sheppard \uc5d0 \uc758\ud574 \uc720\uc9c0 \uad00\ub9ac\ub429\ub2c8\ub2e4. LaTeX Rest Framework Latex\ub294 Laulatex \ub97c \uc0ac\uc6a9\ud558\uc5ec PDF\ub97c \ucd9c\ub825\ud558\ub294 \ub80c\ub354\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 Pebble (S/F Software) \uc5d0\uc11c \uad00\ub9ac\ud569\ub2c8\ub2e4.","title":"Renderers"},{"location":"Renderers/#django-rest-framework-renderers","text":"\"Before a TemplateResponse instance can be returned to the client, it must be rendered. The rendering process takes the intermediate representation of template and context, and turns it into the final byte stream that can be served to the client.\" \"TemplateResponse \uc778\uc2a4\ud134\uc2a4\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ubc18\ud658\ub418\uae30 \uc804\uc5d0 \ub80c\ub354\ub9c1 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub80c\ub354\ub9c1 \ud504\ub85c\uc138\uc2a4\ub294 \ud15c\ud50c\ub9bf\uacfc \ucee8\ud14d\uc2a4\ud2b8\uc758 \uc911\uac04 \ud45c\ud604\uc744 \uac00\uc838 \uc640\uc11c \ud074\ub798\uc774\uc5b8\ud2b8\uc5d0 \uc81c\uacf5 \ud560 \uc218 \uc788\ub294 \ucd5c\uc885 \ubc14\uc774\ud2b8 \uc2a4\ud2b8\ub9bc\uc73c\ub85c \ubc14\uafc9\ub2c8\ub2e4.\" \u2014 Django documentation","title":"Django REST Framework - Renderers"},{"location":"Renderers/#renderers","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\ub294 \ub2e4\uc591\ud55c \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc758 response\ub97c \ubc18\ud658\ud560 \uc218 \uc788\ub294 \uc5ec\ub7ec\uac00\uc9c0 Renderer \ud074\ub798\uc2a4\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c custom renderer\ub97c \uc815\uc758\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \uc790\uc2e0\uc758 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc744 \uc720\uc5f0\ud558\uac8c \ub514\uc790\uc778 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Renderers"},{"location":"Renderers/#how-the-renderer-is-determined","text":"\ubdf0\uc5d0 \ub300\ud55c \uc720\ud600\ud55c renderer set\uc740 \ud56d\uc0c1 \ud074\ub798\uc2a4\uc758 list\ub85c \uc815\uc758\ub429\ub2c8\ub2e4. \ubdf0\uac00 \uc785\ub825\ub418\uba74 REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ub4e4\uc5b4\uc624\ub294 request\uc5d0 \ub300\ud55c \ub0b4\uc6a9 \ud611\uc0c1\uc744 \uc218\ud589\ud558\uace0, request\ub97c \ub9cc\uc871\uc2dc\ud0a4\ub294\ub370 \uac00\uc7a5 \uc801\ud569\ud55c renderer\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \ucf58\ud150\uce20 \ud611\uc0c1\uc758 \uae30\ubcf8 \ud504\ub85c\uc138\uc2a4\ub294 request\uc758 Accept \ud5e4\ub354\ub97c \uc870\uc0ac\ud558\uc5ec response\uc5d0\uc11c \uc608\uc0c1\ud558\ub294 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc744 \ud310\ubcc4\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc120\ud0dd\uc801\uc73c\ub85c, URL\uc758 form suffixes\ub97c \uc0ac\uc6a9\ud558\uc5ec \uba85\uc2dc\uc801\uc73c\ub85c \ud2b9\uc815 \ud45c\ud604\uc744 \uc694\uccad\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 URL http://example.com/api/users_count.json \uc740 \ud56d\uc0c1 JSON \ub370\uc774\ud130\ub97c \ubc18\ud658\ud558\ub294 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 content negotiation \uc744 \ucc38\uc870\ud558\uc138\uc694.","title":"How the renderer is determined"},{"location":"Renderers/#setting-the-renderers","text":"\uae30\ubcf8 renderer set\uc740 DEFAULT_RENDERER_CLASSES \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\uc5ed\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c \uc124\uc815\uc740 JSON \uc744 \uae30\ubcf8 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc73c\ub85c \uc0ac\uc6a9\ud558\uba70 \uc790\uccb4 \uae30\uc220 API\ub3c4 \ud3ec\ud568\ub429\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_RENDERER_CLASSES': ( 'rest_framework.renderers.JSONRenderer', 'rest_framework.renderers.BrowsableAPIRenderer', ) } APIView CBV\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac1c\ubcc4 view\ub098 viewset\uc5d0 \uc0ac\uc6a9\ub418\ub294 renderer\ub97c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. from django.contrib.auth.models import User from rest_framework.renderers import JSONRenderer from rest_framework.response import Response from rest_framework.views import APIView class UserCountView(APIView): \"\"\" A view that returns the count of active users in JSON. \"\"\" renderer_classes = (JSONRenderer, ) def get(self, request, format=None): user_count = User.objects.filter(active=True).count() content = {'user_count': user_count} return Response(content) \ub610\ub294 FBV\uc758 \ubdf0\uc640 \ud568\uaed8 @aip_view \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 @api_view(['GET']) @renderer_classes((JSONRenderer,)) def user_count_view(request, format=None): \"\"\" A view that returns the count of active users in JSON. \"\"\" user_count = User.objects.filter(active=True).count() content = {'user_count': user_count} return Response(content)","title":"Setting the renderers"},{"location":"Renderers/#ordering-of-renderer-classes","text":"API\uc758 Renderer \ud074\ub798\uc2a4\ub97c \uc9c0\uc815\ud558\uc5ec \uac01 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc5d0 \ud560\ub2f9 \ud560 \uc6b0\uc120 \uc21c\uc704\ub97c \uc0dd\uac01\ud560 \ub54c \uc911\uc694\ud569\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 Accept: */* \ud5e4\ub354\ub97c \ubcf4\ub0b4\ub294 \uac83\uacfc Accept \ud5e4\ub354\ub97c \ud3ec\ud568\ud558\uc9c0 \uc54a\ub294 \uac83\uacfc \uac19\uc774 \ubc1b\uc544 \ub4e4\uc77c \uc218 \uc788\ub294 \ud45c\ud604\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uba85\uc2dc\ud558\uc9c0 \uc54a\uc73c\uba74 REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 list\uc5d0\uc11c response\uc5d0 \uc0ac\uc6a9\ud560 \uccab\ubc88\uc9f8 renderer\ub97c \uc120\ud0dd\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 API\uac00 JSON response\uacfc HTML browsable API\ub97c \uc81c\uacf5\ud558\ub294 \uacbd\uc6b0, Accept \ud5e4\ub354\ub97c \uc9c0\uc815\ud558\uc9c0 \uc54a\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 JSON \uc751\ub2f5\uc744 \ubcf4\ub0b4\ub824\uba74 JSONRenderer \ub97c \uae30\ubcf8 renderer\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. API\uc5d0 \uc694\uccad\uc5d0 \ub530\ub77c \uc77c\ubc18 \uc6f9 \ud398\uc774\uc9c0\uc640 API \uc751\ub2f5\uc744 \ubaa8\ub450 \uc81c\uacf5 \ud560 \uc218\uc788\ub294 view\uac00 \ud3ec\ud568\ub418\uc5b4\uc788\ub294 \uacbd\uc6b0, \uae68\uc9c4 \uc2b9\uc778 \ud5e4\ub354 \ub97c \ubcf4\ub0b4\ub294 \uc624\ub798\ub41c \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \uc81c\ub300\ub85c \uc791\ub3d9\ud558\ub824\uba74 TemplateHTMLRenderer \ub97c \uae30\ubcf8 \ub80c\ub354\ub7ec\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"Ordering of renderer classes"},{"location":"Renderers/#api-reference","text":"","title":"API Reference"},{"location":"Renderers/#jsonrenderer","text":"utf-8 \uc778\ucf54\ub529\uc744 \uc0ac\uc6a9\ud558\uc5ec request \ub370\uc774\ud130\ub97c JSON \uc73c\ub85c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. \uae30\ubcf8 \uc2a4\ud0c0\uc77c\uc740 \uc720\ub2c8\ucf54\ub4dc \ubb38\uc790\ub97c \ud3ec\ud568\ud558\uace0 \ubd88\ud544\uc694\ud55c \uacf5\ubc31 \uc5c6\uc774 \ucf64\ud329\ud2b8 \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec response\ub97c \ub80c\ub354\ub9c1\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. {\"unicode black star\":\"\u2605\",\"value\":999} \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 indent \ubbf8\ub514\uc5b4 \ud0c0\uc785 parameter\ub97c \ucd94\uac00\ub85c \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \ubc18\ud658 \ub41c JSON\uc740 \ub4e4\uc5ec\uc4f0\uae30 \ub429\ub2c8\ub2e4. \uc608: Accept: application/json; indent=4 { \"unicode black star\": \"\u2605\", \"value\": 999 } \uae30\ubcf8 JSON \uc778\ucf54\ub529 \uc2a4\ud0c0\uc77c\uc740 UNICODE_JSON \uacfc COMPACT_JSON \uc124\uc815 \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. .media_type : application/json .format : '.json' charset : None","title":"JSONRenderer"},{"location":"Renderers/#templatehtmlrenderer","text":"Django\uc758 \ud45c\uc900 \ud15c\ud50c\ub9bf \ub80c\ub354\ub9c1\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130\ub97c HTML\uc73c\ub85c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. \ub2e4\ub978 renderer\uc640 \ub2ec\ub9ac Response \uc5d0 \uc804\ub2ec \ub41c \ub370\uc774\ud130\ub294 serializer \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \ub610\ud55c \ub2e4\ub978 renderer\uc640 \ub2ec\ub9ac Response \ub97c \ub9cc\ub4e4 \ub54c template_name \uc778\uc218\ub97c \ud3ec\ud568 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. TemplateHTMLRenderer\ub294 response,data \ub97c \ucee8\ud14d\uc2a4\ud2b8 dict\ub85c \uc0ac\uc6a9\ud558\uc5ec RequestContext \ub97c \ub9cc\ub4e4\uace0 \ucee8\ud14d\uc2a4\ud2b8\ub97c \ub80c\ub354\ub9c1\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \ud15c\ud50c\ub9bf \uc774\ub984\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. \ud15c\ud50c\ub9bf \uc774\ub984\uc740 (\uc6b0\uc120 \uc21c\uc704\uc5d0 \ub530\ub77c) \ub2e4\uc74c\uacfc \uac19\uc774 \uacb0\uc815\ub429\ub2c8\ub2e4: 1. \uba85\uc2dc\uc801\uc73c\ub85c template_name \uc778\uc218\ub294 response\uc5d0 \uc804\ub2ec\ub429\ub2c8\ub2e4. 2. \uc774 \ud074\ub798\uc2a4\ub294 \uba85\uc2dc\uc801\uc778 .template_name \uc18d\uc131\uc774 \uc124\uc815\ub429\ub2c8\ub2e4. 3. view.get_template_names() \ub97c \ud638\ucd9c \ud55c \uacb0\uacfc\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. TemplateHTMLRenderer \ub97c \uc0ac\uc6a9\ud558\ub294 view\uc758 \uc608: class UserDetail(generics.RetrieveAPIView): \"\"\" A view that returns a templated HTML representation of a given user. \"\"\" queryset = User.objects.all() renderer_classes = (TemplateHTMLRenderer,) def get(self, request, *args, **kwargs): self.object = self.get_object() return Response({'user': self.object}, template_name='user_detail.html') TemplateHTMLRenderer \uc73c\ub85c REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc77c\ubc18 HTML \ud398\uc774\uc9c0\ub97c \ub9ac\ud134\ud558\uac70\ub098 HTML \ubc0f API \uc751\ub2f5\uc744 \ub2e8\uc77c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \ub9ac\ud134\ud558\ub3c4\ub85d \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. TemplateHTMLRenderer \ub97c \uc0ac\uc6a9\ud558\ub294 \uc6f9 \uc0ac\uc774\ud2b8\ub97c \uad6c\ucd95\ud558\ub294 \uacbd\uc6b0 TemplateHTMLRenderer \ub97c renderer_classes \ubaa9\ub85d\uc758 \uccab \ubc88\uc9f8 \ud074\ub798\uc2a4\ub85c \ub098\uc5f4\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c\ud558\uba74 \uc798\ubabb \ud615\uc131\ub41c ACCEPT: \ud5e4\ub354\ub97c \ubcf4\ub0b4\ub294 \ube0c\ub77c\uc6b0\uc800\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc6b0\uc120 \uc21c\uc704\uac00 \uc9c0\uc815\ub429\ub2c8\ub2e4. TemplateHTMLRenderer \uc0ac\uc6a9\uc5d0 \ub300\ud55c \ucd94\uac00 \uc608\uc81c\ub294 HTML & Forms Topic Page \ub97c \ucc38\uc870\ud558\uc138\uc694. .media_type : text/html .format : '.html' .charset : utf-8 \ucc38\uc870 : StaticHTMLRenderer","title":"TemplateHTMLRenderer"},{"location":"Renderers/#statichtmlrenderer","text":"\ub2e8\uc21c\ud788 \ubbf8\ub9ac \ub80c\ub354\ub9c1 \ub41c HTML\uc744 \ubc18\ud658\ud558\ub294 \ub2e8\uc21c\ud55c renderer\uc785\ub2c8\ub2e4. \ub2e4\ub978 \ub80c\ub354\ub7ec\uc640 \ub2ec\ub9ac response \uac1d\uccb4\uc5d0 \uc804\ub2ec \ub41c \ub370\uc774\ud130\ub294 \ubc18\ud658 \ud560 \ub0b4\uc6a9\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. StaticHTMLRenderer \ub97c \uc0ac\uc6a9\ud558\ub294 view\uc758 \uc608: @api_view(('GET',)) @renderer_classes((StaticHTMLRenderer,)) def simple_html_view(request): data = '<html><body><h1>Hello, world</h1></body></html>' return Response(data) StaticHTMLRenderer \ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc77c\ubc18 HTML\ud398\uc774\uc9c0\ub97c \ub9ac\ud134\ud558\uac70\ub098 HTML\ubc0f API \uc751\ub2f5\uc744 \ub2e8\uc77c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \ub9ac\ud134\ud558\ub3c4\ub85d \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. .media_type : text/html .format : '.html' .charset : utf-8 \ucc38\uc870 : TemplateHTMLRenderer","title":"StaticHTMLRenderer"},{"location":"Renderers/#browsableapirenderer","text":"Browsable API\ub97c \uc704\ud574 \ub370\uc774\ud130\ub97c HTML\uc73c\ub85c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. \uc774 renderer\ub294 \uac00\uc7a5 \uc6b0\uc120\uc21c\uc704\uac00 \ub192\uc740 \ub2e4\ub978 renderer\ub97c \uc15c\uc815\ud558\uace0 \uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec HTML \ud398\uc774\uc9c0 \ub0b4\uc5d0 API \uc2a4\ud0c0\uc77c response\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4. .media_type : text/html .format : '.api' .charset : utf-8 .template : 'rest_framework/api.html'","title":"BrowsableAPIRenderer"},{"location":"Renderers/#customizing-browsableapirenderer","text":"\uae30\ubcf8\uc801\uc73c\ub85c response content\ub294 BrowsableAPIRenderer \uc640 \ubcc4\ub3c4\ub85c \uc6b0\uc120 \uc21c\uc704\uac00 \uac00\uc7a5 \ub192\uc740 renderer\ub85c \ub80c\ub354\ub9c1 \ub429\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc744 custom \ud574\uc57c\ud558\ub294 \uacbd\uc6b0 (ex: HTML\uc744 \uae30\ubcf8 \ub9ac\ud134 \ud615\uc2dd\uc73c\ub85c \uc0ac\uc6a9\ud558\uace0 browsable API\uc5d0\uc11c JSON\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0) get_default_renderer() \uba54\uc11c\ub4dc\ub97c \ub300\uccb4\ud558\uc11c \uc774\ub97c \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608: class CustomBrowsableAPIRenderer(BrowsableAPIRenderer): def get_default_renderer(self, view): return JSONRenderer()","title":"Customizing BrowsableAPIRenderer"},{"location":"Renderers/#adminrenderer","text":"\uad00\ub9ac\uc790\uc640 \uac19\uc740 \ub514\uc2a4\ud50c\ub808\uc774\ub97c \uc704\ud574 \ub370\uc774\ud130\ub97c HTML\uc73c\ub85c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. \uc774 renderer\ub294 \ub370\uc774\ud130 \uad00\ub9ac\ub97c \uc704\ud55c \uc0ac\uc6a9\uc790\uc5d0\uac8c \uce5c\uc219\ud55c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc81c\uacf5\ud574\uc57c\ud558\ub294 CRUD \uc2a4\ud0c0\uc77c \uc6f9 API\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. CRUD : Create(\uc0dd\uc131), Read(\uc77d\uae30), Update(\uac31\uc2e0), Delete(\uc0ad\uc81c) HTML \ud3fc\uc774 \uc81c\ub300\ub85c \uc9c0\uc6d0\ud558\uc9c0 \ubabb\ud558\uae30 \ub54c\ubb38\uc5d0 \uc911\ucca9 \ub41c \ubdf0 \ub610\ub294 \uc785\ub825\uc744 \uc704\ud574 serializer\ub97c \ub098\uc5f4\ud55c \ubdf0\ub294 AdminREnderer \uc640 \uc798 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Note : AdminRenderer \ub294 \uc62c\ubc14\ub974\uac8c \uad6c\uc131\ub41c URL_FIELD_NAME (\uae30\ubcf8\uc801\uc73c\ub85c url)\uc18d\uc131\uc774 \ub370\uc774\ud130\uc5d0 \uc788\ub294 \uacbd\uc6b0\uc5d0\ub9cc detail \ud398\uc774\uc9c0\uc5d0 \ub300\ud55c \ub9c1\ud06c\ub97c \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. HyperlinkedModelSerializer \uc758 \uacbd\uc6b0\uc9c0\ub9cc, ModelSerializer \ub610\ub294 \uc77c\ubc18 Serializer \ud074\ub798\uc2a4\uc758 \uacbd\uc6b0 \ud544\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \ud3ec\ud568\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc5ec\uae30\uc11c\ub294 get_absolute_url \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. class AccountSerializer(serializers.ModelSerializer): url = serializers.CharField(source='get_absolute_url', read_only=True) class Meta: model = Account .media_type : text/html .format : '.admin' .charset : utf-8 .template : 'rest_framework/admin.html'","title":"AdminRenderer"},{"location":"Renderers/#htmlformrenderer","text":"serializer\uc5d0\uc11c \ubc18\ud658\ub41c \ub370\uc774\ud130\ub97c HTML from\uc73c\ub85c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. \uc774 renderer\uc758 \ucd9c\ub825\uc5d0\ub294 \ud3ec\ud568\ub41c <form> \ud0dc\ud06c, \uc228\uaca8\uc9c4 CSRF \uc785\ub825\uc774\ub098 submit \ubc84\ud2bc\uc774 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774 renderer\ub294 \uc9c1\uc811 \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c \uac83\uc774 \uc544\ub2c8\uba70, serializer \uc778\uc2a4\ud134\uc2a4\ub97c renderer_form \ud15c\ud50c\ub9bf \ud0dc\uadf8\uc5d0 \uc804\ub2ec\ud558\uc5ec \ud15c\ud50c\ub9bf\uc5d0\uc11c \ub300\uc2e0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. {% load rest_framework %} <form action=\"/submit-report/\" method=\"post\"> {% csrf_token %} {% render_form serializer %} <input type=\"submit\" value=\"Save\" /> </form> \ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 HTML & Forms \ub97c \ucc38\uc870\ud558\uc138\uc694. .media_type : text/html .format : '.form' .charset : utf-8 .template : 'rest_framework/horizontal/form.html'","title":"HTMLFormRenderer"},{"location":"Renderers/#multipartrenderer","text":"\uc774 renderer\ub294 HTML \ub2e4\uc911 \ud30c\ud2b8 form \ub370\uc774\ud130\ub97c \ub80c\ub354\ub9c1\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. response renderer\ub85c\ub294 \uc801\ud569\ud558\uc9c0 \uc54a\uc9c0\ub9cc \ub300\uc2e0 REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \ud14c\uc2a4\ud2b8 \ud074\ub77c\uc774\uc5b8\ud2b8 \ubc0f \ud14c\uc2a4\ud2b8 request \ud329\ud1a0\ub9ac \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud14c\uc2a4\ud2b8 request\ub97c \ub9cc\ub4dc\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. .media_type : multipart/form-data; boundary=BoUnDaRyStRiNg .format : '.multipart' .charset : utf-8","title":"MultiPartRenderer"},{"location":"Renderers/#custom-renderers","text":"custom renderer\ub97c \uad6c\ud604\ud558\ub824\uba74 BaseRenderer \ub97c \uc7ac\uc815\uc758\ud558\uace0, .media_type \uc640 .format \uc18d\uc131\uc744 \uc124\uc815\ud558\uace0 .render(self, data, media_type=None, renderer_context=None) \uba54\uc11c\ub4dc\ub97c \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4. \uba54\uc11c\ub4dc\ub294 HTTP response\uc758 \ubcf8\ubb38\uc73c\ub85c \uc0ac\uc6a9\ub420 \ubc14\uc774\ud2b8 \ud14c\uc2a4\ud2b8\ub97c \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. render() \uba54\uc11c\ub4dc\uc5d0 \uc804\ub2ec \ub41c \uc778\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. date response() \uc778\uc2a4\ud134\uc2a4\ud654\uc5d0 \uc758\ud574 \uc124\uc815\ub41c \uc694\uccad \ub370\uc774\ud130\uc785\ub2c8\ub2e4. media_type=None \uc120\ud0dd\uc0ac\ud56d. \uc81c\uacf5\ub418\ub294 \uacbd\uc6b0 \ucf58\ud150\uce20 \ud611\uc0c1 \ub2e8\uacc4\uc5d0\uc11c \uacb0\uc815\ud55c\ub300\ub85c \ud5c8\uc6a9\ub418\ub294 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc785\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 Accept: \ud5e4\ub354\uc5d0 \ub530\ub77c renderer\uc758 media_type \uc18d\uc131\ubcf4\ub2e4 \ub354 \uad6c\uccb4\uc801 \uc77c \uc218 \uc788\uc73c\uba70, \ubbf8\ub514\uc5b4 \ud0c0\uc785 parameter\uac00 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \"application/json; neated=true\" \uc640 \uac19\uc2b5\ub2c8\ub2e4. renderer_context=None \uc120\ud0dd\uc0ac\ud56d. \uc81c\uacf5\ub41c \uacbd\uc6b0, \uc774\ub294 \ubdf0\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc0c1\ud669\ubcc4 \uc815\ubcf4\uc758 dict\uc785\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \ud0a4\uc5d0\ub294 view , request , response , args , kwargs \uc640 \uac19\uc740 \ud0a4\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4.","title":"Custom renderers"},{"location":"Renderers/#example","text":"\ub2e4\uc74c\uc740 data parameter\uac00 \ud3ec\ud568\ub41c response\ub97c \uc751\ub2f5\ub0b4\uc6a9\uc73c\ub85c \ubc18\ud658\ud558\ub294 \uc77c\ubc18\ud14d\uc2a4\ud2b8 \ub80c\ub354\ub7ec\uc758 \uc608\uc785\ub2c8\ub2e4. from django.utils.encoding import smart_unicode from rest_framework import renderers class PlainTextRenderer(renderers.BaseRenderer): media_type = 'text/plain' format = 'txt' def render(self, data, media_type=None, renderer_context=None): return data.encode(self.charset)","title":"Example"},{"location":"Renderers/#setting-the-character-set","text":"\uae30\ubcf8\uc801\uc73c\ub85c renderer \ud074\ub798\uc2a4\ub294 UTF-8 \uc778\ucf54\ub529\uc744 \uc0ac\uc6a9\ud55c\ub2e4\uace0 \uac00\uc815\ud569\ub2c8\ub2e4. \ub2e4\ub978 \uc778\ucf54\ub529\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 renderer\uc5d0\uc11c charset \uc18d\uc131\uc744 \uc124\uc815\ud558\uc138\uc694. class PlainTextRenderer(renderers.BaseRenderer): media_type = 'text/plain' format = 'txt' charset = 'iso-8859-1' def render(self, data, media_type=None, renderer_context=None): return data.encode(self.charset) renderer \ud074\ub798\uc2a4\uac00 \uc720\ub2c8\ucf54\ub4dc \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud558\uba74 \uc778\ucf54\ub529\uc744 \uacb0\uc815\ud558\ub294\ub370 \uc0ac\uc6a9\ub418\ub294 renderer\uc758 charset \uc18d\uc131\uc774 \uc124\uc815 \ub41c Response \ud074\ub798\uc2a4\uc5d0 \uc758\ud574 \uc751\ub2f5 \ub0b4\uc6a9\uc774 bytestring\uc73c\ub85c \uac15\uc81c \ubcc0\ud658\ub429\ub2c8\ub2e4. renderer\uac00 \uae30\uc874 \uc774\uc9c4 \ub0b4\uc6a9\uc744 \ub098\ud0c0\ub0b4\ub294 \ubc14\uc774\ud2b8 \ud14c\uc2a4\ud2b8\ub97c \ubc18\ud658\ud558\ub294 \uacbd\uc6b0 response\uc758 charset \uac12\uc744 None \uc73c\ub85c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4.(response\uc758 Content-Type \ud5e4\ub354\uc5d0 charset \uac12\uc774 \uc124\uc815\ub418\uc9c0 \uc54a\ub3c4\ub85d \ubcf4\uc7a5\ud569\ub2c8\ub2e4.) \uacbd\uc6b0\uc5d0 \ub530\ub77c renderer_style \uc18d\uc131\uc744 binary \ub85c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud558\uba74 browsable API\uac00 \uc774\uc9c4 \ucee8\ud150\uce20\ub97c \ubb38\uc790\uc5f4\ub85c \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ub429\ub2c8\ub2e4. class JPEGRenderer(renderers.BaseRenderer): media_type = 'image/jpeg' format = 'jpg' charset = None render_style = 'binary' def render(self, data, media_type=None, renderer_context=None): return data","title":"Setting the character set"},{"location":"Renderers/#advanced-renderer-usage","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 renderer\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9e4\uc6b0 \uc720\uc5f0\ud55c \uc791\uc5c5\uc744 \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba87\uac00\uc9c0 \uc608... \uc694\uccad\ud55c \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc5d0 \ub530\ub77c \uac19\uc740 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \ud50c\ub7ab \ub610\ub294 \uc911\ucca9\ub41c \ud45c\ud604\uc744 \uc81c\uacf5\ud558\uc138\uc694. \uc77c\ubc18 HTML \uc6f9 \ud398\uc774\uc9c0\uc640 JSON \uae30\ubc18\uc758 API\uc751\ub2f5\uc744 \ub3d9\uc77c\ud55c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \uc81c\uacf5\ud558\uc138\uc694. \uc0ac\uc6a9\ud560 API \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ub300\ud574 \uc5ec\ub7ec \ud0c0\uc785\uc758 HTML \ud45c\ud604\uc744 \uc9c0\uc815\ud558\uc138\uc694. media_type = 'image/*' \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uacfc \uac19\uc774 renderer\uc758 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc744 \uc9c0\uc815\ud558\uace0 Accept \ud5e4\ub354\ub97c \uc0ac\uc6a9\ud558\uc5ec response\uc758 \uc778\ucf54\ub529\uc744 \ubcc0\uacbd\ud569\ub2c8\ub2e4.","title":"Advanced renderer usage"},{"location":"Renderers/#varying-behaviour-by-media-type","text":"\uacbd\uc6b0\uc5d0 \ub530\ub77c view\uc5d0\uc11c \ud5c8\uc6a9\ub418\ub294 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc5d0 \ub530\ub77c \ub2e4\ub978 serializer \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 request.accepted_renderer \uc5d0 \uc561\uc11c\uc2a4\ud558\uc5ec response\uc5d0 \uc0ac\uc6a9\ub420 \ud611\uc0c1 \ub41c renderer\ub97c \uacb0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608: @api_view(('GET',)) @renderer_classes((TemplateHTMLRenderer, JSONRenderer)) def list_users(request): \"\"\" A view that can return JSON or HTML representations of the users in the system. \"\"\" queryset = Users.objects.filter(active=True) if request.accepted_renderer.format == 'html': # TemplateHTMLRenderer takes a context dict, # and additionally requires a 'template_name'. # It does not require serialization. data = {'users': queryset} return Response(data, template_name='list_users.html') # JSONRenderer requires serialized data as normal. serializer = UserSerializer(instance=queryset) data = serializer.data return Response(data)","title":"Varying behaviour by media type"},{"location":"Renderers/#underspecifying-the-media-type","text":"\uacbd\uc6b0\uc5d0 \ub530\ub77c renderer\uac00 \ub2e4\uc591\ud55c \ubbf8\ub514\uc5b4\ud0c0\uc785\uc744 \uc81c\uacf5\ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 image/* \uc774\ub098 */* \uacfc \uac19\uc740 media_type \uac12\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc744 \uba85\ud655\ud558\uac8c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. renderer\uc758 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc744 \uba85\uc2dc\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 content_type \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec response\uc744 \ubc18\ud658 \ud560 \ub54c \uba85\uc2dc\uc801\uc73c\ub85c \ubbf8\ub514\uc5b4\ud0c0\uc785\uc744 \uc9c0\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: return Response(data, content_type='image/png')","title":"Underspecifying the media type (\ubbf8\ub514\uc5b4 \ud0c0\uc785\uc744 \uc9c0\uc815\ud558\uc9c0 \uc54a\uc74c)"},{"location":"Renderers/#designing-your-media-types","text":"\ub9ce\uc740 \uc6f9 API\ub97c \uc704\ud574, \ud558\uc774\ud37c\ub9c1\ud06c \uad00\uacc4\ub97c \uac16\ub294 \ub2e8\uc21c JSON \uc751\ub2f5\uc740 \ucda9\ubd84\ud560 \uc218 \uc788\ub2e4. RESTful \ub514\uc790\uc778\uacfc HATEOAS \ub97c \uc644\uc804\ud788 \ud3ec\uc6a9\ud558\ub824\uba74 \ubbf8\ub514\uc5b4\ud0c0\uc785\uc758 \ub514\uc790\uc778\uacfc \uc0ac\uc6a9\ubc95\uc744 \ub354 \uc790\uc138\ud788 \uace0\ub824\ud574\uc57c\ud569\ub2c8\ub2e4. the words of Roy Fielding \uc5d0\uc11c\ub294 \"REST API\ub294 \ub9ac\uc18c\uc2a4\ub97c \ud45c\ud604\ud558\uace0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc0c1\ud0dc\ub97c \uc720\ub3c4\ud558\uac70\ub098 \uae30\uc874 \ud45c\uc900 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc5d0 \ub300\ud55c \ud655\uc7a5 \uad00\uacc4 \uc774\ub984 \ubc0f / \ub610\ub294 \ud558\uc774\ud37c \ud14d\uc2a4\ud2b8 \uc0ac\uc6a9 \uac00\ub2a5 \ub9c8\ud06c \uc5c5\uc744 \uc815\uc758\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \ubbf8\ub514\uc5b4 \uc720\ud615\uc744 \uc815\uc758\ud558\ub294\ub370 \ud544\uc694\ud55c \ubaa8\ub4e0 \ub178\ub825\uc744 \uae30\uc6b8\uc5ec\uc57c\ud569\ub2c8\ub2e4.\" custom \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc758 \uc88b\uc740 \uc608\ub294 GitHub\uc758 custom application/vnd.github+json \ubbf8\ub514\uc5b4 \ud0c0\uc785 \uc0ac\uc6a9\uacfc Mike Amundsen\uc758 IANA \uc2b9\uc778 application/vnd.collection+json \uae30\ubc18 \ud558\uc774\ud37c \ubbf8\ub514\uc5b4\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"Designing your media types"},{"location":"Renderers/#html-error-views","text":"\uc77c\ubc18\uc801\uc73c\ub85c, renderer\ub294 Http404 \ub098 PermissionDenied \uc608\uc678 \ub610\ub294 APIException \uc758 \uc11c\ube0c \ud074\ub798\uc2a4\uc640 \uac19\uc774 \uc77c\ubc18 response\ub97c \ucc98\ub9ac\ud558\ub294\uc9c0 \ub610\ub294 \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uc5ec response\uac00 \ubc1c\uc0dd\ud558\ub294\uc9c0\uc5d0 \uad00\uacc4\uc5c6\uc774 \ub3d9\uc77c\ud558\uac8c \ub3d9\uc791\ud569\ub2c8\ub2e4. TemplateHTMLRenderer \ub610\ub294 StaticHTMLRenderer \ub97c \uc0ac\uc6a9\uc911\uc774\uace0 \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uba74 \ub3d9\uc791\uc774 \uc57d\uac04 \ub2e4\ub974\uba70 Django's default handling of error views \uac00 \uadf8\ub300\ub85c \ubc18\uc601\ub429\ub2c8\ub2e4. HTML renderer\uc5d0 \uc758\ud574 \ubc1c\uc0dd\ub418\uace0 \ucc98\ub9ac\ub418\ub294 \uc608\uc678\ub294 \uc6b0\uc120 \uc21c\uc704\uc5d0 \ub530\ub77c \ub2e4\uc74c \ubc29\ubc95 \uc911 \ud558\ub098\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub80c\ub354\ub9c1\uc744 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. {status_code}.html \uc774\ub77c\ub294 \ud15c\ud50c\ub9bf\uc744 \ub85c\ub4dc\ud558\uace0 \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. api_exception.html \uc774\ub77c\ub294 \ud15c\ud50c\ub9bf\uc744 \ub85c\ub4dc\ud558\uace0 \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. HTTP \uc0c1\ud0dc \ucf54\ub4dc\uc640 \ud14d\uc2a4\ud2b8\ub97c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4.(ex. \"404 Not Found\" ) \ud15c\ud50c\ub9bf\uc740 status_code \uc640 detail \ud0a4\ub97c \ud3ec\ud568\ud558\ub294 RequestContext \ub85c \ub80c\ub354\ub9c1\ub429\ub2c8\ub2e4. Note : DEBUG=True \uc774\uba74 Django\uc758 \ud45c\uc900 \ucd94\uc801 \uc624\ub958 \ud398\uc774\uc9c0\uac00 HTTP \uc0c1\ud0dc \ucf54\ub4dc\uc640 \ud14d\uc2a4\ud2b8\ub97c \ub80c\ub354\ub9c1\ud558\ub294 \ub300\uc2e0 \ud45c\uc2dc\ub429\ub2c8\ub2e4.","title":"HTML error views"},{"location":"Renderers/#third-party-packages","text":"\ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"Third party packages"},{"location":"Renderers/#yaml","text":"REST framework YAML \uc740 YAML \ud30c\uc2f1 \ubc0f \ub80c\ub354\ub9c1 \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\uc804\uc5d0 REST \ud504\ub808\uc784 \uc6cc\ud06c \ud328\ud0a4\uc9c0\uc5d0 \uc9c1\uc811 \ud3ec\ud568\ub418\uc5b4 \uc788\uc5c8\uc73c\uba70 \uc774\uc81c\ub294 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub85c \ub300\uc2e0 \uc9c0\uc6d0\ub429\ub2c8\ub2e4.","title":"YAML"},{"location":"Renderers/#_1","text":"pip\uc744 \uc0ac\uc6a9\ud574 \uc124\uce58\ud569\ub2c8\ub2e4. $ pip install djangorestframework-yaml REST \ud504\ub808\uc784\uc6cc\ud06c \uc124\uc815\uc744 \uc218\uc815\ud569\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_PARSER_CLASSES': ( 'rest_framework_yaml.parsers.YAMLParser', ), 'DEFAULT_RENDERER_CLASSES': ( 'rest_framework_yaml.renderers.YAMLRenderer', ), }","title":"\uc124\uce58 \ubc0f \uad6c\uc131"},{"location":"Renderers/#xml","text":"REST Framework XML \uc740 \uac04\ub2e8\ud55c \ube44\uacf5\uc2dd XML \ud615\uc2dd\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\uc804\uc5d0 REST \ud504\ub808\uc784 \uc6cc\ud06c \ud328\ud0a4\uc9c0\uc5d0 \uc9c1\uc811 \ud3ec\ud568\ub418\uc5b4 \uc788\uc5c8\uc73c\uba70 \uc774\uc81c\ub294 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub85c \ub300\uc2e0 \uc9c0\uc6d0\ub429\ub2c8\ub2e4.","title":"XML"},{"location":"Renderers/#_2","text":"pip\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uce58\ud569\ub2c8\ub2e4. $ pip install djangorestframework-xml REST \ud504\ub808\uc784\uc6cc\ud06c \uc124\uc815\uc744 \uc218\uc815\ud569\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_PARSER_CLASSES': ( 'rest_framework_xml.parsers.XMLParser', ), 'DEFAULT_RENDERER_CLASSES': ( 'rest_framework_xml.renderers.XMLRenderer', ), }","title":"\uc124\uce58\uc640 \uad6c\uc131"},{"location":"Renderers/#jsonp","text":"REST framework JSONP \ub294 JSONP \ub80c\ub354\ub9c1\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774\uc804\uc5d0 REST \ud504\ub808\uc784\uc6cc\ud06c \ud328\ud0a4\uc9c0\uc5d0 \uc9c1\uc811 \ud3ec\ud568\ub418\uc5b4 \uc788\uc5c8\uc73c\uba70 \uc774\uc81c\ub294 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub85c \ub300\uc2e0 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. Warning : \ub3c4\uba54\uc778 \uac04 AJAX \uc694\uccad\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 \uc77c\ubc18\uc801\uc73c\ub85c JSONP \ub300\uc2e0 CORS\uc758 \ucd5c\uc2e0 \uc811\uadfc \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud574\uc57c\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 CORS \uc124\uba85\uc11c \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. jsonp \uc811\uadfc\ubc95\uc740 \ubcf8\uc9c8\uc801\uc73c\ub85c \ube0c\ub77c\uc6b0\uc800 \ud574\ud0b9\uc774\uba70 GET \uc694\uccad\uc774 \uc778\uc99d\ub418\uc9c0 \uc54a\uace0 \uc0ac\uc6a9\uc790 \uad8c\ud55c\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uc804 \uc138\uacc4\uc801\uc73c\ub85c \uc77d\uc744 \uc218 \uc788\ub294 API \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc5d0\ub9cc \uc801\ud569\ud569\ub2c8\ub2e4.","title":"JSONP"},{"location":"Renderers/#_3","text":"pip\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uce58\ud569\ub2c8\ub2e4. $ pip install djangorestframework-jsonp REST \ud504\ub808\uc784\uc6cc\ud06c \uc124\uc815\uc744 \uc218\uc815\ud569\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_RENDERER_CLASSES': ( 'rest_framework_jsonp.renderers.JSONPRenderer', ), }","title":"\uc124\uce58\uc640 \uad6c\uc131"},{"location":"Renderers/#messagepack","text":"MessagePack \uc740 \ube60\ub974\uace0 \ud6a8\uc728\uc801\uc778 \ubc14\uc774\ub108\ub9ac serializer \ud615\uc2dd\uc785\ub2c8\ub2e4. Juan Riaza \ub294 MessagePack \ub80c\ub354\ub7ec\uc640 REST \ud504\ub808\uc784 \uc6cc\ud06c\uc5d0 \ub300\ud55c \ud30c\uc11c \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\ub294 djangorestframework-msgpack \ud328\ud0a4\uc9c0 \ub97c \uc720\uc9c0 \uad00\ub9ac\ud569\ub2c8\ub2e4.","title":"MessagePack"},{"location":"Renderers/#csv","text":"\uc27c\ud45c\ub85c \uad6c\ubd84 \ub41c \uac12\uc740 \uc2a4\ud504\ub808\ub4dc \uc2dc\ud2b8 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc73c\ub85c \uc27d\uac8c \uac00\uc838\uc62c \uc218 \uc788\ub294 \uc77c\ubc18 \ud14d\uc2a4\ud2b8 \ud615\uc2dd\uc758 \ub370\uc774\ud130 \ud615\uc2dd\uc785\ub2c8\ub2e4. Mjumbe Poe \ub294 REST \ud504\ub808\uc784 \uc6cc\ud06c\uc5d0 \ub300\ud55c CSV \ub80c\ub354\ub7ec \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\ub294 djangorestframework-csv \ud328\ud0a4\uc9c0\ub97c \uc720\uc9c0 \uad00\ub9ac\ud569\ub2c8\ub2e4.","title":"CSV"},{"location":"Renderers/#ultrajson","text":"UltraJSON \uc740 \uc0c1\ub2f9\ud788 \ube60\ub978 JSON \ub80c\ub354\ub9c1\uc744 \uc81c\uacf5 \ud560 \uc218 \uc788\ub294 \ucd5c\uc801\ud654 \ub41c C JSON \uc778\ucf54\ub354\uc785\ub2c8\ub2e4. Jacob Haslehurst \ub294 UJSON \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud558\uc5ec JSON \ub80c\ub354\ub9c1\uc744 \uad6c\ud604\ud558\ub294 drf-ujson-renderer \ud328\ud0a4\uc9c0\ub97c \uc720\uc9c0 \uad00\ub9ac\ud569\ub2c8\ub2e4.","title":"UltraJSON"},{"location":"Renderers/#camelcase-json","text":"djangorestframework-camel-case \ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc704\ud55c parser\uc640 camel-case JSON \ub80c\ub354\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 serializer\ub294 \ud30c\uc774\uc36c \uc2a4\ud0c0\uc77c\uc758 underscored \ud544\ub4dc \uc774\ub984\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc, \uc790\ubc14 \uc2a4\ud06c\ub9bd\ud2b8 \uc2a4\ud0c0\uc77c\uc758 camel case field names\uc73c\ub85c API\uc5d0 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uadf8\uac83\uc740 Vitaly Babiy \uc5d0 \uc758\ud574 \uad00\ub9ac\ub429\ub2c8\ub2e4.","title":"CamelCase JSON"},{"location":"Renderers/#pandas-csv-excel-png","text":"Django REST Pandas \ub294 Pandas DataFrame API\ub97c \ud1b5\ud574 \ucd94\uac00 \ub370\uc774\ud130 \ucc98\ub9ac \ubc0f \ucd9c\ub825\uc744 \uc9c0\uc6d0\ud558\ub294 serializer \ubc0f \ub80c\ub354\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Django REST Pandas\uc5d0\ub294 \ud310\ub2e4 \uc2a4\ud0c0\uc77c CSV \ud30c\uc77c, Excel \ud1b5\ud569 \ubb38\uc11c ( .xls \ubc0f .xlsx ) \ubc0f \uae30\ud0c0 \ub2e4\uc591\ud55c \ud615\uc2dd \uc758 \ub80c\ub354\ub7ec\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. wq \ud504\ub85c\uc81d\ud2b8 \uc758 \uc77c\ud658\uc73c\ub85c S. Andrew Sheppard \uc5d0 \uc758\ud574 \uc720\uc9c0 \uad00\ub9ac\ub429\ub2c8\ub2e4.","title":"Pandas (CSV, Excel, PNG)"},{"location":"Renderers/#latex","text":"Rest Framework Latex\ub294 Laulatex \ub97c \uc0ac\uc6a9\ud558\uc5ec PDF\ub97c \ucd9c\ub825\ud558\ub294 \ub80c\ub354\ub7ec\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 Pebble (S/F Software) \uc5d0\uc11c \uad00\ub9ac\ud569\ub2c8\ub2e4.","title":"LaTeX"},{"location":"Requests/","text":"Django REST Framework - Requests \"If you're doing REST-based web service stuff ... you should ignore request.POST.\" \"REST \uae30\ubc18 \uc6f9 \uc11c\ube44\uc2a4 \uc791\uc5c5\uc744 \ud558\uace0\uc788\ub2e4\uba74 ... POST \uc694\uccad\uc744 \ubb34\uc2dc\ud574\uc57c\ud55c\ub2e4.\" \u2014 Malcom Tredinnick Requests REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 Request \ud074\ub798\uc2a4\ub294 \ud45c\uc900 HttpRequest \ub97c \ud655\uc7a5\ud558\uc5ec REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \uc720\uc5f0\ud55c request \uad6c\ubb38 \ubd84\uc11d \ubc0f \uc694\uccad \uc778\uc99d\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Request parsing REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 Request \uac1d\uccb4\ub294 \uc720\uc5f0\ud55c request \uad6c\ubb38 \ubd84\uc11d \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ubbc0\ub85c \uc0ac\uc6a9\uc790\uac00 \uc77c\ubc18\uc801\uc73c\ub85c form \ub370\uc774\ud130\ub97c \ucc98\ub9ac\ud558\ub294 \uac83\uacfc \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c JSON \ub370\uc774\ud130 \ub610\ub294 \ub2e4\ub978 \ubbf8\ub514\uc5b4 \uc720\ud615\uc73c\ub85c \uc694\uccad\uc744 \ucc98\ub9ac \ud560 \uc218 \u200b\u200b\uc788\uc2b5\ub2c8\ub2e4. .data request.data \ub294 \uc694\uccad \ubcf8\ubb38\uc758 \uad6c\ubb38 \ubd84\uc11d \ub41c \ub0b4\uc6a9\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774\ub294 \ub2e4\uc74c\uc744 \uc81c\uc678\ud558\uace0 \ud45c\uc900 request.POST \ubc0f request.FILES \uc18d\uc131\uacfc \uc720\uc0ac\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 \ud30c\uc77c\uacfc \ud30c\uc77c\uc774 \uc544\ub2cc \uc785\ub825\uc744 \ud3ec\ud568\ud558\uc5ec \ud30c\uc2f1 \ub41c \ubaa8\ub4e0 \ub0b4\uc6a9\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. POST \uac00 \uc544\ub2cc HTTP \uba54\uc18c\ub4dc\uc758 \ucee8\ud150\uce20 \ubd84\uc11d\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc989, PUT \uacfc PATCH \uc694\uccad\uc758 \ucee8\ud150\uce20\uc5d0 \uc561\uc11c\uc2a4 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 form \ud14c\uc774\ud130\ub97c \uc9c0\uc6d0\ud558\ub294 \uac83\ubcf4\ub2e4 REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \uc720\uc5f0\ud55c request \uad6c\ubb38 \ubd84\uc11d\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub4e4\uc5b4\uc624\ub294 form \ub370\uc774\ud130\ub97c \ucc98\ub9ac\ud558\ub294 \uac83\uacfc \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \ub4e4\uc5b4\uc624\ub294 JSON \ub370\uc774\ud130\ub97c \ucc98\ub9ac \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 parsers documentation \uc744 \ucc38\uc870\ud558\uc138\uc694. .query_params request.query_params \ub294 request.GET \uc5d0 \ub300\ud574 \ubcf4\ub2e4 \uc815\ud655\ud558\uac8c \uba85\uba85 \ub41c \ub3d9\uc758\uc5b4\uc785\ub2c8\ub2e4. \ucf54\ub4dc \ub0b4\uc5d0\uc11c \uba85\ud655\uc131\uc744 \uc704\ud574 Django\uc758 \ud45c\uc900 request.GET \ub300\uc2e0 request.query_params \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ucf54\ub4dc\ubca0\uc774\uc2a4\ub97c \ubcf4\ub2e4 \uc815\ud655\ud558\uace0 \uba85\ud655\ud558\uac8c \uc720\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 HTTP \uba54\uc18c\ub4dc \uc720\ud615\uc5d0\ub294 GET request \ubfd0\ub9cc \uc544\ub2c8\ub77c \ucffc\ub9ac parameter\uac00 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. .parsers APIView \ud074\ub798\uc2a4\ub098 @api_view \ub370\ucf54\ub808\uc774\ud130\ub294 \ubdf0\uc5d0 \uc124\uc815 \ub41c parser_classes \ub098 DEFAULT_PARSER_CLASSES \uc124\uc815\uc5d0 \ub530\ub77c \uc18d\uc131\uc774 \uc790\ub3d9\uc73c\ub85c Parser \uc778\uc2a4\ud134\uc2a4 \ubaa9\ub85d\uc73c\ub85c \uc124\uc815\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uc18d\uc131\uc5d0 \uc561\uc11c\uc2a4 \ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. NOTE : \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc870\uc791 \ub41c \ucf58\ud150\uce20\ub97c \ubcf4\ub0b8 \uacbd\uc6b0 request.data \uc5d0 \uc561\uc11c\uc2a4\ud558\uba74 ParserError \uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 APIView \ud074\ub798\uc2a4\ub098 @api_view \ub370\ucf54\ub808\uc774\ud130\ub294 \uc624\ub958\ub97c \ud3ec\ucc29\ud558\uace0, 400 Bad Request \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ud30c\uc2f1 \ud560 \uc218 \uc5c6\ub294 content-type\uc744 \uac00\uc9c4 request\ub97c \ubcf4\ub0b4\uba74 UnsuppoertedMediaType \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774 \uc608\uc678\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud3ec\ucc29\ub418\uc5b4 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\ub294 \ubbf8\ub514\uc5b4 \uc720\ud615 \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. Content negotiation request\ub294 \ucf58\ud150\uce20 \ud611\uc0c1 \ub2e8\uacc4\uc758 \uacb0\uacfc\ub97c \uacb0\uc815\ud560 \uc218 \uc788\ub294 \uba87\uac00\uc9c0 \uc18d\uc131\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ub2e4\uc591\ud55c \ubbf8\ub514\uc5b4 \uc720\ud615\uc5d0 \ub300\ud574 \ub2e4\ub978 serializer \uc2a4\ud0a4\ub9c8\ub97c \uc120\ud0dd\ud558\ub294 \uac83\uacfc \uac19\uc740 \ub3d9\uc791\uc744 \uad6c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. .accepted_renderer renderer \uc778\uc2a4\ud134\uc2a4\ub294 \ucee8\ud150\uce20 \ud611\uc0c1 \ub2e8\uacc4\uc5d0\uc11c \uc120\ud0dd \ub41c \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4. .accepted_media_type \ub0b4\uc6a9 \ud611\uc0c1 \ub2e8\uacc4\uc5d0\uc11c \uc218\ub77d \ud55c \ubbf8\ub514\uc5b4 \uc720\ud615\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. Authentication (\uc785\uc99d) REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 \uc720\uc5f0\ud55c request \ubcc4 \uc778\uc99d\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. API\uc758 \ub2e4\ub978 \ubd80\ubd84\uc5d0 \ub300\ud574 \uc11c\ub85c \ub2e4\ub978 \uc778\uc99d \uc815\ucc45\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub2e4\uc911 \uc778\uc99d \uc815\ucc45\uc758 \uc0ac\uc6a9\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ub4e4\uc5b4\uc624\ub294 request\uc640 \uad00\ub828\ub41c \uc0ac\uc6a9\uc790\uc640 \ud1a0\ud070 \uc815\ubcf4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. .user request.user \ub294 \uc77c\ubc18\uc801\uc73c\ub85c django.contrib.auth.models.User \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud558\uc9c0\ub9cc \ub3d9\uc791\uc740 \uc0ac\uc6a9\ub418\ub294 \uc778\uc99d \uc815\ucc45\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. request\uc774 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 request.user\uc758 \uae30\ubcf8\uac12\uc740 django.contrib.auth.models.AnonymousUser \uc758 \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 authentication documentation \uc744 \ucc38\uc870\ud558\uc138\uc694. .auth request.auth \ub294 \ucd94\uac00 \uc778\uc99d \ucee8\ud14d\uc2a4\ud2b8\ub97c \ub9ac\ud134\ud569\ub2c8\ub2e4. request.auth \uc758 \uc815\ud655\ud55c \uc791\ub3d9\uc740 \uc0ac\uc6a9\ub418\ub294 \uc778\uc99d \uc815\ucc45\uc5d0 \ub530\ub77c \ub2e4\ub974\uc9c0\ub9cc \ub300\uac1c request\uac00 \uc778\uc99d \ub41c \ud1a0\ud070\uc758 \uc778\uc2a4\ud134\uc2a4 \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. request\uac00 \uc778\uc99d\ub418\uc9c0 \uc54a\uc558\uac70\ub098 \ucd94\uac00 \ucee8\ud14d\uc2a4\ud2b8\uac00 \uc5c6\ub294 \uacbd\uc6b0, request.auth \uc758 \uae30\ubcf8\uac12\uc740 \uc5c6\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 authentication documentation \uc744 \ucc38\uc870\ud558\uc138\uc694. .authenticators APIView \ud074\ub798\uc2a4\ub098 @api_view \ub370\ucf54\ub808\uc774\ud130\ub294 \ubdf0\uc5d0 \uc124\uc815\ub41c authentication_classes \ub098 DEFAULT_AUTHENTICATORS \uc124\uc815\uc5d0 \ub530\ub77c \uc18d\uc131\uc774 \uc790\ub3d9\uc73c\ub85c Authentication \uc778\uc2a4\ud134\uc2a4 \ubaa9\ub85d\uc73c\ub85c \uc124\uc815\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uc18d\uc131\uc5d0 \uc561\uc11c\uc2a4 \ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. Browser enhancements REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ube0c\ub77c\uc6b0\uc800 \uae30\ubc18\uc758 PUT , PATCH , DELETE form\uacfc \uac19\uc740 \uba87 \uac00\uc9c0 \ube0c\ub77c\uc6b0\uc800 \uac1c\uc120 \uc0ac\ud56d\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. .method request.method \ub294 request\uc758 HTTP \uba54\uc18c\ub4dc\uc758 uppercased (\ub300\ubb38\uc790)\ub85c \ub41c \ubb38\uc790\uc5f4 \ud45c\ud604\uc744 \ub9ac\ud134\ud569\ub2c8\ub2e4. \ube0c\ub77c\uc6b0\uc800 \uae30\ubc18\uc758 PUT , PATCH \ubc0f DELETE form\uc774 \ud22c\uba85\ud558\uac8c \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 browser enhancements documentation \uc744 \ucc38\uc870\ud558\uc138\uc694. .content_type request.content_type \uc740 HTTP request \ubcf8\ubb38\uc758 \ubbf8\ub514\uc5b4 \uc720\ud615\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \uac1d\uccb4\ub97c \ubc18\ud658\ud558\uac70\ub098 \ubbf8\ub514\uc5b4 \uc720\ud615\uc774 \uc81c\uacf5\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \ube48 \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \uae30\ubcf8 request \uad6c\ubb38 \ubd84\uc11d \ub3d9\uc791\uc5d0 \uc758\uc874\ud558\ubbc0\ub85c \uc77c\ubc18\uc801\uc73c\ub85c request\uc758 \ucf58\ud150\uce20 \ud615\uc2dd\uc5d0 \uc9c1\uc811 \uc561\uc11c\uc2a4 \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. request\uc758 \ucf58\ud150\uce20 \ud615\uc2dd\uc5d0 \uc561\uc11c\uc2a4\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 \ube0c\ub77c\uc6b0\uc800 \uae30\ubc18 non-form \ucf58\ud150\uce20\uc5d0 \ub300\ud55c \ud22c\uba85\ud55c \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\ubbc0\ub85c request.META.get('HTTP_CONTENT_TYPE') \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\ubcf4\ub2e4 .content_type \uc18d\uc131\uc744 \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 browser enhancements documentation \uc744 \ucc38\uc870\ud558\uc138\uc694. .stream request.stream \uc740 request \ubcf8\ubb38\uc758 \ub0b4\uc6a9\uc744 \ub098\ud0c0\ub0b4\ub294 \uc2a4\ud2b8\ub9bc\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \uae30\ubcf8 request \uad6c\ubb38 \ubd84\uc11d \ub3d9\uc791\uc5d0 \uc758\uc874\ud558\ubbc0\ub85c \ub300\uac1c request\uc758 \ucf58\ud150\uce20\uc5d0 \uc9c1\uc811 \uc561\uc138\uc2a4 \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. Standard HttpRequest attributes REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 request \ub294 Django\uc758 HttpRequest \ub97c \ud655\uc7a5\ud558\ubbc0\ub85c \ub2e4\ub978 \ubaa8\ub4e0 \ud45c\uc900 \uc18d\uc131\uacfc \uba54\uc18c\ub4dc\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, request.META \uc640 request.session dict\ub294 \uc815\uc0c1\uc801\uc73c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4. \uad6c\ud604 \uc774\uc720\ub85c \uc778\ud574 Request \ud074\ub798\uc2a4\ub294 HttpRequest \ud074\ub798\uc2a4\uc5d0 \uc0c1\uc18d\ud558\uc9c0 \uc54a\uace0 \ub300\uc2e0 composition \uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub798\uc2a4\ub97c \ud655\uc7a5\ud569\ub2c8\ub2e4.","title":"Requests"},{"location":"Requests/#django-rest-framework-requests","text":"\"If you're doing REST-based web service stuff ... you should ignore request.POST.\" \"REST \uae30\ubc18 \uc6f9 \uc11c\ube44\uc2a4 \uc791\uc5c5\uc744 \ud558\uace0\uc788\ub2e4\uba74 ... POST \uc694\uccad\uc744 \ubb34\uc2dc\ud574\uc57c\ud55c\ub2e4.\" \u2014 Malcom Tredinnick","title":"Django REST Framework - Requests"},{"location":"Requests/#requests","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 Request \ud074\ub798\uc2a4\ub294 \ud45c\uc900 HttpRequest \ub97c \ud655\uc7a5\ud558\uc5ec REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \uc720\uc5f0\ud55c request \uad6c\ubb38 \ubd84\uc11d \ubc0f \uc694\uccad \uc778\uc99d\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4.","title":"Requests"},{"location":"Requests/#request-parsing","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 Request \uac1d\uccb4\ub294 \uc720\uc5f0\ud55c request \uad6c\ubb38 \ubd84\uc11d \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ubbc0\ub85c \uc0ac\uc6a9\uc790\uac00 \uc77c\ubc18\uc801\uc73c\ub85c form \ub370\uc774\ud130\ub97c \ucc98\ub9ac\ud558\ub294 \uac83\uacfc \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c JSON \ub370\uc774\ud130 \ub610\ub294 \ub2e4\ub978 \ubbf8\ub514\uc5b4 \uc720\ud615\uc73c\ub85c \uc694\uccad\uc744 \ucc98\ub9ac \ud560 \uc218 \u200b\u200b\uc788\uc2b5\ub2c8\ub2e4.","title":"Request parsing"},{"location":"Requests/#data","text":"request.data \ub294 \uc694\uccad \ubcf8\ubb38\uc758 \uad6c\ubb38 \ubd84\uc11d \ub41c \ub0b4\uc6a9\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774\ub294 \ub2e4\uc74c\uc744 \uc81c\uc678\ud558\uace0 \ud45c\uc900 request.POST \ubc0f request.FILES \uc18d\uc131\uacfc \uc720\uc0ac\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 \ud30c\uc77c\uacfc \ud30c\uc77c\uc774 \uc544\ub2cc \uc785\ub825\uc744 \ud3ec\ud568\ud558\uc5ec \ud30c\uc2f1 \ub41c \ubaa8\ub4e0 \ub0b4\uc6a9\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. POST \uac00 \uc544\ub2cc HTTP \uba54\uc18c\ub4dc\uc758 \ucee8\ud150\uce20 \ubd84\uc11d\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc989, PUT \uacfc PATCH \uc694\uccad\uc758 \ucee8\ud150\uce20\uc5d0 \uc561\uc11c\uc2a4 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 form \ud14c\uc774\ud130\ub97c \uc9c0\uc6d0\ud558\ub294 \uac83\ubcf4\ub2e4 REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \uc720\uc5f0\ud55c request \uad6c\ubb38 \ubd84\uc11d\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub4e4\uc5b4\uc624\ub294 form \ub370\uc774\ud130\ub97c \ucc98\ub9ac\ud558\ub294 \uac83\uacfc \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \ub4e4\uc5b4\uc624\ub294 JSON \ub370\uc774\ud130\ub97c \ucc98\ub9ac \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 parsers documentation \uc744 \ucc38\uc870\ud558\uc138\uc694.","title":".data"},{"location":"Requests/#query_params","text":"request.query_params \ub294 request.GET \uc5d0 \ub300\ud574 \ubcf4\ub2e4 \uc815\ud655\ud558\uac8c \uba85\uba85 \ub41c \ub3d9\uc758\uc5b4\uc785\ub2c8\ub2e4. \ucf54\ub4dc \ub0b4\uc5d0\uc11c \uba85\ud655\uc131\uc744 \uc704\ud574 Django\uc758 \ud45c\uc900 request.GET \ub300\uc2e0 request.query_params \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ucf54\ub4dc\ubca0\uc774\uc2a4\ub97c \ubcf4\ub2e4 \uc815\ud655\ud558\uace0 \uba85\ud655\ud558\uac8c \uc720\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 HTTP \uba54\uc18c\ub4dc \uc720\ud615\uc5d0\ub294 GET request \ubfd0\ub9cc \uc544\ub2c8\ub77c \ucffc\ub9ac parameter\uac00 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":".query_params"},{"location":"Requests/#parsers","text":"APIView \ud074\ub798\uc2a4\ub098 @api_view \ub370\ucf54\ub808\uc774\ud130\ub294 \ubdf0\uc5d0 \uc124\uc815 \ub41c parser_classes \ub098 DEFAULT_PARSER_CLASSES \uc124\uc815\uc5d0 \ub530\ub77c \uc18d\uc131\uc774 \uc790\ub3d9\uc73c\ub85c Parser \uc778\uc2a4\ud134\uc2a4 \ubaa9\ub85d\uc73c\ub85c \uc124\uc815\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uc18d\uc131\uc5d0 \uc561\uc11c\uc2a4 \ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. NOTE : \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc870\uc791 \ub41c \ucf58\ud150\uce20\ub97c \ubcf4\ub0b8 \uacbd\uc6b0 request.data \uc5d0 \uc561\uc11c\uc2a4\ud558\uba74 ParserError \uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 APIView \ud074\ub798\uc2a4\ub098 @api_view \ub370\ucf54\ub808\uc774\ud130\ub294 \uc624\ub958\ub97c \ud3ec\ucc29\ud558\uace0, 400 Bad Request \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ud30c\uc2f1 \ud560 \uc218 \uc5c6\ub294 content-type\uc744 \uac00\uc9c4 request\ub97c \ubcf4\ub0b4\uba74 UnsuppoertedMediaType \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774 \uc608\uc678\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud3ec\ucc29\ub418\uc5b4 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\ub294 \ubbf8\ub514\uc5b4 \uc720\ud615 \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4.","title":".parsers"},{"location":"Requests/#content-negotiation","text":"request\ub294 \ucf58\ud150\uce20 \ud611\uc0c1 \ub2e8\uacc4\uc758 \uacb0\uacfc\ub97c \uacb0\uc815\ud560 \uc218 \uc788\ub294 \uba87\uac00\uc9c0 \uc18d\uc131\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ub2e4\uc591\ud55c \ubbf8\ub514\uc5b4 \uc720\ud615\uc5d0 \ub300\ud574 \ub2e4\ub978 serializer \uc2a4\ud0a4\ub9c8\ub97c \uc120\ud0dd\ud558\ub294 \uac83\uacfc \uac19\uc740 \ub3d9\uc791\uc744 \uad6c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Content negotiation"},{"location":"Requests/#accepted_renderer","text":"renderer \uc778\uc2a4\ud134\uc2a4\ub294 \ucee8\ud150\uce20 \ud611\uc0c1 \ub2e8\uacc4\uc5d0\uc11c \uc120\ud0dd \ub41c \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4.","title":".accepted_renderer"},{"location":"Requests/#accepted_media_type","text":"\ub0b4\uc6a9 \ud611\uc0c1 \ub2e8\uacc4\uc5d0\uc11c \uc218\ub77d \ud55c \ubbf8\ub514\uc5b4 \uc720\ud615\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4.","title":".accepted_media_type"},{"location":"Requests/#authentication","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 \uc720\uc5f0\ud55c request \ubcc4 \uc778\uc99d\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. API\uc758 \ub2e4\ub978 \ubd80\ubd84\uc5d0 \ub300\ud574 \uc11c\ub85c \ub2e4\ub978 \uc778\uc99d \uc815\ucc45\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub2e4\uc911 \uc778\uc99d \uc815\ucc45\uc758 \uc0ac\uc6a9\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ub4e4\uc5b4\uc624\ub294 request\uc640 \uad00\ub828\ub41c \uc0ac\uc6a9\uc790\uc640 \ud1a0\ud070 \uc815\ubcf4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Authentication (\uc785\uc99d)"},{"location":"Requests/#user","text":"request.user \ub294 \uc77c\ubc18\uc801\uc73c\ub85c django.contrib.auth.models.User \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud558\uc9c0\ub9cc \ub3d9\uc791\uc740 \uc0ac\uc6a9\ub418\ub294 \uc778\uc99d \uc815\ucc45\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. request\uc774 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 request.user\uc758 \uae30\ubcf8\uac12\uc740 django.contrib.auth.models.AnonymousUser \uc758 \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 authentication documentation \uc744 \ucc38\uc870\ud558\uc138\uc694.","title":".user"},{"location":"Requests/#auth","text":"request.auth \ub294 \ucd94\uac00 \uc778\uc99d \ucee8\ud14d\uc2a4\ud2b8\ub97c \ub9ac\ud134\ud569\ub2c8\ub2e4. request.auth \uc758 \uc815\ud655\ud55c \uc791\ub3d9\uc740 \uc0ac\uc6a9\ub418\ub294 \uc778\uc99d \uc815\ucc45\uc5d0 \ub530\ub77c \ub2e4\ub974\uc9c0\ub9cc \ub300\uac1c request\uac00 \uc778\uc99d \ub41c \ud1a0\ud070\uc758 \uc778\uc2a4\ud134\uc2a4 \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. request\uac00 \uc778\uc99d\ub418\uc9c0 \uc54a\uc558\uac70\ub098 \ucd94\uac00 \ucee8\ud14d\uc2a4\ud2b8\uac00 \uc5c6\ub294 \uacbd\uc6b0, request.auth \uc758 \uae30\ubcf8\uac12\uc740 \uc5c6\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 authentication documentation \uc744 \ucc38\uc870\ud558\uc138\uc694.","title":".auth"},{"location":"Requests/#authenticators","text":"APIView \ud074\ub798\uc2a4\ub098 @api_view \ub370\ucf54\ub808\uc774\ud130\ub294 \ubdf0\uc5d0 \uc124\uc815\ub41c authentication_classes \ub098 DEFAULT_AUTHENTICATORS \uc124\uc815\uc5d0 \ub530\ub77c \uc18d\uc131\uc774 \uc790\ub3d9\uc73c\ub85c Authentication \uc778\uc2a4\ud134\uc2a4 \ubaa9\ub85d\uc73c\ub85c \uc124\uc815\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uc18d\uc131\uc5d0 \uc561\uc11c\uc2a4 \ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4.","title":".authenticators"},{"location":"Requests/#browser-enhancements","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ube0c\ub77c\uc6b0\uc800 \uae30\ubc18\uc758 PUT , PATCH , DELETE form\uacfc \uac19\uc740 \uba87 \uac00\uc9c0 \ube0c\ub77c\uc6b0\uc800 \uac1c\uc120 \uc0ac\ud56d\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4.","title":"Browser enhancements"},{"location":"Requests/#method","text":"request.method \ub294 request\uc758 HTTP \uba54\uc18c\ub4dc\uc758 uppercased (\ub300\ubb38\uc790)\ub85c \ub41c \ubb38\uc790\uc5f4 \ud45c\ud604\uc744 \ub9ac\ud134\ud569\ub2c8\ub2e4. \ube0c\ub77c\uc6b0\uc800 \uae30\ubc18\uc758 PUT , PATCH \ubc0f DELETE form\uc774 \ud22c\uba85\ud558\uac8c \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 browser enhancements documentation \uc744 \ucc38\uc870\ud558\uc138\uc694.","title":".method"},{"location":"Requests/#content_type","text":"request.content_type \uc740 HTTP request \ubcf8\ubb38\uc758 \ubbf8\ub514\uc5b4 \uc720\ud615\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \uac1d\uccb4\ub97c \ubc18\ud658\ud558\uac70\ub098 \ubbf8\ub514\uc5b4 \uc720\ud615\uc774 \uc81c\uacf5\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \ube48 \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \uae30\ubcf8 request \uad6c\ubb38 \ubd84\uc11d \ub3d9\uc791\uc5d0 \uc758\uc874\ud558\ubbc0\ub85c \uc77c\ubc18\uc801\uc73c\ub85c request\uc758 \ucf58\ud150\uce20 \ud615\uc2dd\uc5d0 \uc9c1\uc811 \uc561\uc11c\uc2a4 \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. request\uc758 \ucf58\ud150\uce20 \ud615\uc2dd\uc5d0 \uc561\uc11c\uc2a4\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 \ube0c\ub77c\uc6b0\uc800 \uae30\ubc18 non-form \ucf58\ud150\uce20\uc5d0 \ub300\ud55c \ud22c\uba85\ud55c \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\ubbc0\ub85c request.META.get('HTTP_CONTENT_TYPE') \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\ubcf4\ub2e4 .content_type \uc18d\uc131\uc744 \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 browser enhancements documentation \uc744 \ucc38\uc870\ud558\uc138\uc694.","title":".content_type"},{"location":"Requests/#stream","text":"request.stream \uc740 request \ubcf8\ubb38\uc758 \ub0b4\uc6a9\uc744 \ub098\ud0c0\ub0b4\ub294 \uc2a4\ud2b8\ub9bc\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \uae30\ubcf8 request \uad6c\ubb38 \ubd84\uc11d \ub3d9\uc791\uc5d0 \uc758\uc874\ud558\ubbc0\ub85c \ub300\uac1c request\uc758 \ucf58\ud150\uce20\uc5d0 \uc9c1\uc811 \uc561\uc138\uc2a4 \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.","title":".stream"},{"location":"Requests/#standard-httprequest-attributes","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 request \ub294 Django\uc758 HttpRequest \ub97c \ud655\uc7a5\ud558\ubbc0\ub85c \ub2e4\ub978 \ubaa8\ub4e0 \ud45c\uc900 \uc18d\uc131\uacfc \uba54\uc18c\ub4dc\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, request.META \uc640 request.session dict\ub294 \uc815\uc0c1\uc801\uc73c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4. \uad6c\ud604 \uc774\uc720\ub85c \uc778\ud574 Request \ud074\ub798\uc2a4\ub294 HttpRequest \ud074\ub798\uc2a4\uc5d0 \uc0c1\uc18d\ud558\uc9c0 \uc54a\uace0 \ub300\uc2e0 composition \uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub798\uc2a4\ub97c \ud655\uc7a5\ud569\ub2c8\ub2e4.","title":"Standard HttpRequest attributes"},{"location":"Responses/","text":"Django REST Framework - Responses \"Unlike basic HttpResponse objects, TemplateResponse objects retain the details of the context that was provided by the view to compute the response. The final output of the response is not computed until it is needed, later in the response process.\" \"\uae30\ubcf8 HttpResponse \uac1d\uccb4\uc640 \ub2ec\ub9ac TemplateResponse \uac1d\uccb4\ub294 \uc751\ub2f5\uc744 \uacc4\uc0b0\ud558\uae30 \uc704\ud574 \ubdf0\uc5d0\uc11c \uc81c\uacf5\ud55c \ucee8\ud14d\uc2a4\ud2b8\uc758 \uc138\ubd80 \uc815\ubcf4\ub97c \uc720\uc9c0\ud569\ub2c8\ub2e4. response\uc758 \ucd5c\uc885 \ucd9c\ub825\uc740 \ub098\uc911\uc5d0 \uc751\ub2f5 \ud504\ub85c\uc138\uc2a4\uc5d0\uc11c \ud544\uc694\ud560 \ub54c\uae4c\uc9c0 \uacc4\uc0b0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\" \u2014 Django documentation Responses REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc694\uccad\uc5d0 \ub530\ub77c \uc5ec\ub7ec \ucf58\ud150\uce20 \ud615\uc2dd\uc73c\ub85c \ub80c\ub354\ub9c1 \ud560 \uc218 \uc788\ub294 \ucf58\ud150\uce20\ub97c \ubc18\ud658\ud560 \uc218 \uc788\ub294 Response \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud558\uc5ec HTTP \ucf58\ud150\uce20 \ud611\uc0c1\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. response \ud074\ub798\uc2a4\ub294 Django\uc758 SimpleTemplateResponse \ud558\uc704 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. response \uac1d\uccb4\ub294 Python \uae30\ubcf8 \uc694\uc18c\ub85c \uad6c\uc131\ub418\uc5b4\uc57c \ud558\ub294 \ub370\uc774\ud130\ub85c \ucd08\uae30\ud654\ub429\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ud45c\uc900 HTTP \ub0b4\uc6a9 \ud611\uc0c1\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucd5c\uc885 \uc751\ub2f5 \ub0b4\uc6a9\uc744 \ub80c\ub354\ub9c1\ud558\ub294 \ubc29\ubc95\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. Response \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud560 \ud544\uc694\ub294 \uc5c6\uc73c\uba70, \ud544\uc694\ud55c \uacbd\uc6b0 \uc77c\ubc18 HttpResponse \ub098 StreamingHttpResponse \uac1d\uccb4\ub97c \ubdf0\uc5d0\uc11c \ubc18\ud658 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Response \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc5ec\ub7ec\uac00\uc9c0 \ud615\uc2dd\uc73c\ub85c \ub80c\ub354\ub9c1 \ud560 \uc218 \uc788\ub294 \ucee8\ud150\uce20 \ud611\uc0c1 \uc6f9 API \uc751\ub2f5\uc744 \ubc18\ud658\ud558\uae30\uc5d0 \ub354 \uc88b\uc740 \uc778\ud130\ud398\uc774\uc2a4\ub9cc \uc81c\uacf5\ub429\ub2c8\ub2e4. \uc5b4\ub5a4 \uc774\uc720\ub85c\ub4e0 REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \ub9ce\uc774 \uc0ac\uc6a9\uc790 \uc815\uc758\ud558\uc9c0 \uc54a\uc73c\ub824\uba74 Response \uac1d\uccb4\ub97c \ubc18\ud658\ud558\ub294 \ubdf0\uc5d0 \ud56d\uc0c1 APIView \ud074\ub798\uc2a4\ub098 @api_view \ud568\uc218\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c\ud558\uba74 \ubdf0\uc5d0\uc11c \ub0b4\uc6a9\ud611\uc0c1\uc744 \uc218\ud589\ud558\uace0 \uc751\ub2f5\uc5d0 \uc801\ud569\ud55c \ub80c\ub354\ub7ec\ub97c \uc120\ud0dd\ud558\uc5ec \ubdf0\uc5d0 \ubc18\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Creating responses Response() Signature : Response(data, status=None, template_name=None, headers=None, content_type=None) \uc77c\ubc18 HttpResponse \uac1c\uccb4\uc640 \ub2ec\ub9ac \ub80c\ub354\ub9c1 \ub41c \ucf58\ud150\uce20\ub85c Response \uac1c\uccb4\ub97c \uc778\uc2a4\ud134\uc2a4\ud654\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub300\uc2e0 \uae30\uc874\uc758 \ud30c\uc774\uc36c\uc73c\ub85c \uad6c\uc131\ub41c \ub80c\ub354\ub9c1\ub418\uc9c0 \uc54a\uc740 \ub370\uc774\ud130\ub97c \uc804\ub2ec\ud569\ub2c8\ub2e4. Response \ud074\ub798\uc2a4\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ub80c\ub354\ub7ec\ub294 Django\ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc640 \uac19\uc740 \ubcf5\uc7a1\ud55c \ub370\uc774\ud130 \uc720\ud615\uc744 \uae30\ubcf8\uc801\uc73c\ub85c \ucc98\ub9ac \ud560 \uc218 \uc5c6\uc73c\ubbc0\ub85c Response \uac1d\uccb4\ub97c \ub9cc\ub4e4\uae30 \uc804\uc5d0 \ub370\uc774\ud130\ub97c \uae30\ubcf8 \ub370\uc774\ud130 \uc720\ud615\uc73c\ub85c serializer\ud574\uc57c \ud569\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 Serializer \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130\ub97c serializer\ub97c \uc218\ud589\ud558\uac70\ub098 custom serializer\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Arguments: data : response\uc758 serializer \ub41c \ub370\uc774\ud130\uc785\ub2c8\ub2e4. status : response\uc758 \uc0c1\ud0dc \ucf54\ub4dc\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 200\uc785\ub2c8\ub2e4. status codes \ucc38\uc870 template_name : HTMLRenderer \uac00 \uc120\ud0dd\ub41c \uacbd\uc6b0 \uc0ac\uc6a9\ud560 \ud15c\ud50c\ub9bf \uc774\ub984\uc785\ub2c8\ub2e4. headers : \uc751\ub2f5\uc5d0 \uc0ac\uc6a9\ud560 HTTP \ud5e4\ub354 dict\uc785\ub2c8\ub2e4. content_type : \uc751\ub2f5\uc758 \ub0b4\uc6a9 \uc720\ud615\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ucf58\ud150\uce20 \ud611\uc0c1\uc5d0 \ub530\ub77c \ub80c\ub354\ub7ec\uc5d0\uc11c \uc790\ub3d9\uc73c\ub85c \uc124\uc815\ub418\uc9c0\ub9cc \ucf58\ud150\uce20 \uc720\ud615\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud574\uc57c\ud558\ub294 \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4. Attributes .data Request \uac1d\uccb4\uc758 \ub80c\ub354\ub9c1\ub418\uc9c0 \uc54a\uc740 \ub0b4\uc6a9\uc785\ub2c8\ub2e4. .status_code HTTP \uc751\ub2f5\uc758 \uc22b\uc790 \uc0c1\ud0dc \ucf54\ub4dc\uc785\ub2c8\ub2e4. .content response \uc758 \ub80c\ub354\ub9c1 \ub41c \ub0b4\uc6a9\uc785\ub2c8\ub2e4. .content \uc5d0 \uc561\uc11c\uc2a4\ud558\ub824\uba74 \uba3c\uc800 .render() \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud574\uc57c \ud569\ub2c8\ub2e4. .template_name template_name \uc774 \uc81c\uacf5\ub41c \uacbd\uc6b0. HTTPRenderer \ub098 \ub2e4\ub978 custom \ud15c\ud50c\ub9bf \ub80c\ub354\ub7ec\uac00 \uc751\ub2f5\uc5d0 \ub300\ud574 \ud5c8\uc6a9\ub41c \ub80c\ub354\ub7ec\uc778 \uacbd\uc6b0\uc5d0\ub9cc \ud544\uc694\ud569\ub2c8\ub2e4. .accepted_renderer \uc751\ub2f5\uc744 \ub80c\ub354\ub9c1\ud558\ub294\ub370 \uc0ac\uc6a9\ub418\ub294 \ub80c\ub354\ub7ec \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4. \ubdf0\uc5d0\uc11c \uc751\ub2f5\uc774 \ubc18\ud658\ub418\uae30 \uc9c1\uc804\uc5d0 APIView \ub098 @api_view \uc5d0 \uc758\ud574 \uc790\ub3d9\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. .accepted_media_type \ucf58\ud150\uce20 \ud611\uc0c1 \ub2e8\uacc4\uc5d0\uc11c \uc120\ud0dd\ud55c \ubbf8\ub514\uc5b4 \uc720\ud615\uc785\ub2c8\ub2e4. \ubdf0\uc5d0\uc11c \uc751\ub2f5\uc774 \ubc18\ud658\ub418\uae30 \uc9c1\uc804\uc5d0 APIView \ub098 @api_view \uc5d0 \uc758\ud574 \uc790\ub3d9\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. .renderer_context \ub80c\ub354\ub7ec\uc758 .render() \uba54\uc18c\ub4dc\uc5d0 \uc804\ub2ec \ub420 \ucd94\uac00 \ucee8\ud14d\uc2a4\ud2b8 \uc815\ubcf4\uc758 dict\uc785\ub2c8\ub2e4. \ubdf0\uc5d0\uc11c \uc751\ub2f5\uc774 \ubc18\ud658\ub418\uae30 \uc9c1\uc804\uc5d0 APIView \ub098 @api_view \uc5d0 \uc758\ud574 \uc790\ub3d9\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. Standard HttpResponse attributes Response \ud074\ub798\uc2a4\ub294 SimpleTemplateResponse \ub97c \ud655\uc7a5\ud558\uace0 \ubaa8\ub4e0 \uc77c\ubc18\uc801\uc774\ub2c8 \ud2b9\uc131\uacfc \uba54\uc11c\ub4dc\ub97c response\uc5d0\uc11c\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ud45c\uc900\ubc29\uc2dd\uc73c\ub85c response\uc5d0 \ud5e4\ub354\ub97c \uc124\uc815 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. response = Response() response['Cache-Control'] = 'no-cache' .render() Signature : .render() \ub2e4\ub978 TemplateResponse \uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc774 \uba54\uc18c\ub4dc\ub294 \uc751\ub2f5\uc758 serializer \ub41c \ub370\uc774\ud130\ub97c \ucd5c\uc885 response \ucee8\ud150\uce20\ub85c \ub80c\ub354\ub9c1\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. .render() \uac00 \ud638\ucd9c\ub418\uba74 accept_renderer \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c .render (data, accepted_media_type, renderer_context) \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c \ud55c \uacb0\uacfc\ub85c response \ub0b4\uc6a9\uc774 \uc124\uc815\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c Django\uc758 \ud45c\uc900 \uc751\ub2f5\uc8fc\uae30\uc5d0 \uc758\ud574 \ucc98\ub9ac\ub418\ubbc0\ub85c .render() \ub97c \uc9c1\uc811 \ud638\ucd9c \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.","title":"Responses"},{"location":"Responses/#django-rest-framework-responses","text":"\"Unlike basic HttpResponse objects, TemplateResponse objects retain the details of the context that was provided by the view to compute the response. The final output of the response is not computed until it is needed, later in the response process.\" \"\uae30\ubcf8 HttpResponse \uac1d\uccb4\uc640 \ub2ec\ub9ac TemplateResponse \uac1d\uccb4\ub294 \uc751\ub2f5\uc744 \uacc4\uc0b0\ud558\uae30 \uc704\ud574 \ubdf0\uc5d0\uc11c \uc81c\uacf5\ud55c \ucee8\ud14d\uc2a4\ud2b8\uc758 \uc138\ubd80 \uc815\ubcf4\ub97c \uc720\uc9c0\ud569\ub2c8\ub2e4. response\uc758 \ucd5c\uc885 \ucd9c\ub825\uc740 \ub098\uc911\uc5d0 \uc751\ub2f5 \ud504\ub85c\uc138\uc2a4\uc5d0\uc11c \ud544\uc694\ud560 \ub54c\uae4c\uc9c0 \uacc4\uc0b0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\" \u2014 Django documentation","title":"Django REST Framework - Responses"},{"location":"Responses/#responses","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc694\uccad\uc5d0 \ub530\ub77c \uc5ec\ub7ec \ucf58\ud150\uce20 \ud615\uc2dd\uc73c\ub85c \ub80c\ub354\ub9c1 \ud560 \uc218 \uc788\ub294 \ucf58\ud150\uce20\ub97c \ubc18\ud658\ud560 \uc218 \uc788\ub294 Response \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud558\uc5ec HTTP \ucf58\ud150\uce20 \ud611\uc0c1\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. response \ud074\ub798\uc2a4\ub294 Django\uc758 SimpleTemplateResponse \ud558\uc704 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. response \uac1d\uccb4\ub294 Python \uae30\ubcf8 \uc694\uc18c\ub85c \uad6c\uc131\ub418\uc5b4\uc57c \ud558\ub294 \ub370\uc774\ud130\ub85c \ucd08\uae30\ud654\ub429\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ud45c\uc900 HTTP \ub0b4\uc6a9 \ud611\uc0c1\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucd5c\uc885 \uc751\ub2f5 \ub0b4\uc6a9\uc744 \ub80c\ub354\ub9c1\ud558\ub294 \ubc29\ubc95\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. Response \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud560 \ud544\uc694\ub294 \uc5c6\uc73c\uba70, \ud544\uc694\ud55c \uacbd\uc6b0 \uc77c\ubc18 HttpResponse \ub098 StreamingHttpResponse \uac1d\uccb4\ub97c \ubdf0\uc5d0\uc11c \ubc18\ud658 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Response \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc5ec\ub7ec\uac00\uc9c0 \ud615\uc2dd\uc73c\ub85c \ub80c\ub354\ub9c1 \ud560 \uc218 \uc788\ub294 \ucee8\ud150\uce20 \ud611\uc0c1 \uc6f9 API \uc751\ub2f5\uc744 \ubc18\ud658\ud558\uae30\uc5d0 \ub354 \uc88b\uc740 \uc778\ud130\ud398\uc774\uc2a4\ub9cc \uc81c\uacf5\ub429\ub2c8\ub2e4. \uc5b4\ub5a4 \uc774\uc720\ub85c\ub4e0 REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \ub9ce\uc774 \uc0ac\uc6a9\uc790 \uc815\uc758\ud558\uc9c0 \uc54a\uc73c\ub824\uba74 Response \uac1d\uccb4\ub97c \ubc18\ud658\ud558\ub294 \ubdf0\uc5d0 \ud56d\uc0c1 APIView \ud074\ub798\uc2a4\ub098 @api_view \ud568\uc218\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c\ud558\uba74 \ubdf0\uc5d0\uc11c \ub0b4\uc6a9\ud611\uc0c1\uc744 \uc218\ud589\ud558\uace0 \uc751\ub2f5\uc5d0 \uc801\ud569\ud55c \ub80c\ub354\ub7ec\ub97c \uc120\ud0dd\ud558\uc5ec \ubdf0\uc5d0 \ubc18\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Responses"},{"location":"Responses/#creating-responses","text":"","title":"Creating responses"},{"location":"Responses/#response","text":"Signature : Response(data, status=None, template_name=None, headers=None, content_type=None) \uc77c\ubc18 HttpResponse \uac1c\uccb4\uc640 \ub2ec\ub9ac \ub80c\ub354\ub9c1 \ub41c \ucf58\ud150\uce20\ub85c Response \uac1c\uccb4\ub97c \uc778\uc2a4\ud134\uc2a4\ud654\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub300\uc2e0 \uae30\uc874\uc758 \ud30c\uc774\uc36c\uc73c\ub85c \uad6c\uc131\ub41c \ub80c\ub354\ub9c1\ub418\uc9c0 \uc54a\uc740 \ub370\uc774\ud130\ub97c \uc804\ub2ec\ud569\ub2c8\ub2e4. Response \ud074\ub798\uc2a4\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ub80c\ub354\ub7ec\ub294 Django\ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc640 \uac19\uc740 \ubcf5\uc7a1\ud55c \ub370\uc774\ud130 \uc720\ud615\uc744 \uae30\ubcf8\uc801\uc73c\ub85c \ucc98\ub9ac \ud560 \uc218 \uc5c6\uc73c\ubbc0\ub85c Response \uac1d\uccb4\ub97c \ub9cc\ub4e4\uae30 \uc804\uc5d0 \ub370\uc774\ud130\ub97c \uae30\ubcf8 \ub370\uc774\ud130 \uc720\ud615\uc73c\ub85c serializer\ud574\uc57c \ud569\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 Serializer \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130\ub97c serializer\ub97c \uc218\ud589\ud558\uac70\ub098 custom serializer\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Arguments: data : response\uc758 serializer \ub41c \ub370\uc774\ud130\uc785\ub2c8\ub2e4. status : response\uc758 \uc0c1\ud0dc \ucf54\ub4dc\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 200\uc785\ub2c8\ub2e4. status codes \ucc38\uc870 template_name : HTMLRenderer \uac00 \uc120\ud0dd\ub41c \uacbd\uc6b0 \uc0ac\uc6a9\ud560 \ud15c\ud50c\ub9bf \uc774\ub984\uc785\ub2c8\ub2e4. headers : \uc751\ub2f5\uc5d0 \uc0ac\uc6a9\ud560 HTTP \ud5e4\ub354 dict\uc785\ub2c8\ub2e4. content_type : \uc751\ub2f5\uc758 \ub0b4\uc6a9 \uc720\ud615\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ucf58\ud150\uce20 \ud611\uc0c1\uc5d0 \ub530\ub77c \ub80c\ub354\ub7ec\uc5d0\uc11c \uc790\ub3d9\uc73c\ub85c \uc124\uc815\ub418\uc9c0\ub9cc \ucf58\ud150\uce20 \uc720\ud615\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud574\uc57c\ud558\ub294 \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4.","title":"Response()"},{"location":"Responses/#attributes","text":"","title":"Attributes"},{"location":"Responses/#data","text":"Request \uac1d\uccb4\uc758 \ub80c\ub354\ub9c1\ub418\uc9c0 \uc54a\uc740 \ub0b4\uc6a9\uc785\ub2c8\ub2e4.","title":".data"},{"location":"Responses/#status_code","text":"HTTP \uc751\ub2f5\uc758 \uc22b\uc790 \uc0c1\ud0dc \ucf54\ub4dc\uc785\ub2c8\ub2e4.","title":".status_code"},{"location":"Responses/#content","text":"response \uc758 \ub80c\ub354\ub9c1 \ub41c \ub0b4\uc6a9\uc785\ub2c8\ub2e4. .content \uc5d0 \uc561\uc11c\uc2a4\ud558\ub824\uba74 \uba3c\uc800 .render() \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud574\uc57c \ud569\ub2c8\ub2e4.","title":".content"},{"location":"Responses/#template_name","text":"template_name \uc774 \uc81c\uacf5\ub41c \uacbd\uc6b0. HTTPRenderer \ub098 \ub2e4\ub978 custom \ud15c\ud50c\ub9bf \ub80c\ub354\ub7ec\uac00 \uc751\ub2f5\uc5d0 \ub300\ud574 \ud5c8\uc6a9\ub41c \ub80c\ub354\ub7ec\uc778 \uacbd\uc6b0\uc5d0\ub9cc \ud544\uc694\ud569\ub2c8\ub2e4.","title":".template_name"},{"location":"Responses/#accepted_renderer","text":"\uc751\ub2f5\uc744 \ub80c\ub354\ub9c1\ud558\ub294\ub370 \uc0ac\uc6a9\ub418\ub294 \ub80c\ub354\ub7ec \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4. \ubdf0\uc5d0\uc11c \uc751\ub2f5\uc774 \ubc18\ud658\ub418\uae30 \uc9c1\uc804\uc5d0 APIView \ub098 @api_view \uc5d0 \uc758\ud574 \uc790\ub3d9\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4.","title":".accepted_renderer"},{"location":"Responses/#accepted_media_type","text":"\ucf58\ud150\uce20 \ud611\uc0c1 \ub2e8\uacc4\uc5d0\uc11c \uc120\ud0dd\ud55c \ubbf8\ub514\uc5b4 \uc720\ud615\uc785\ub2c8\ub2e4. \ubdf0\uc5d0\uc11c \uc751\ub2f5\uc774 \ubc18\ud658\ub418\uae30 \uc9c1\uc804\uc5d0 APIView \ub098 @api_view \uc5d0 \uc758\ud574 \uc790\ub3d9\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4.","title":".accepted_media_type"},{"location":"Responses/#renderer_context","text":"\ub80c\ub354\ub7ec\uc758 .render() \uba54\uc18c\ub4dc\uc5d0 \uc804\ub2ec \ub420 \ucd94\uac00 \ucee8\ud14d\uc2a4\ud2b8 \uc815\ubcf4\uc758 dict\uc785\ub2c8\ub2e4. \ubdf0\uc5d0\uc11c \uc751\ub2f5\uc774 \ubc18\ud658\ub418\uae30 \uc9c1\uc804\uc5d0 APIView \ub098 @api_view \uc5d0 \uc758\ud574 \uc790\ub3d9\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4.","title":".renderer_context"},{"location":"Responses/#standard-httpresponse-attributes","text":"Response \ud074\ub798\uc2a4\ub294 SimpleTemplateResponse \ub97c \ud655\uc7a5\ud558\uace0 \ubaa8\ub4e0 \uc77c\ubc18\uc801\uc774\ub2c8 \ud2b9\uc131\uacfc \uba54\uc11c\ub4dc\ub97c response\uc5d0\uc11c\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ud45c\uc900\ubc29\uc2dd\uc73c\ub85c response\uc5d0 \ud5e4\ub354\ub97c \uc124\uc815 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. response = Response() response['Cache-Control'] = 'no-cache'","title":"Standard HttpResponse attributes"},{"location":"Responses/#render","text":"Signature : .render() \ub2e4\ub978 TemplateResponse \uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc774 \uba54\uc18c\ub4dc\ub294 \uc751\ub2f5\uc758 serializer \ub41c \ub370\uc774\ud130\ub97c \ucd5c\uc885 response \ucee8\ud150\uce20\ub85c \ub80c\ub354\ub9c1\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. .render() \uac00 \ud638\ucd9c\ub418\uba74 accept_renderer \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c .render (data, accepted_media_type, renderer_context) \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c \ud55c \uacb0\uacfc\ub85c response \ub0b4\uc6a9\uc774 \uc124\uc815\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c Django\uc758 \ud45c\uc900 \uc751\ub2f5\uc8fc\uae30\uc5d0 \uc758\ud574 \ucc98\ub9ac\ub418\ubbc0\ub85c .render() \ub97c \uc9c1\uc811 \ud638\ucd9c \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.","title":".render()"},{"location":"Returning_URLs/","text":"Django REST Framework - Returning URLs \"The central feature that distinguishes the REST architectural style from other network-based styles is its emphasis on a uniform interface between components.\" \"REST \uc544\ud0a4\ud14d\ucc98 \uc2a4\ud0c0\uc77c\uc744 \ub2e4\ub978 \ub124\ud2b8\uc6cc\ud06c \uae30\ubc18 \uc2a4\ud0c0\uc77c\uacfc \uad6c\ubcc4\ud558\ub294 \ud575\uc2ec \uae30\ub2a5\uc740 \uad6c\uc131 \uc694\uc18c \uac04\uc758 \uade0\uc77c\ud55c \uc778\ud130\ud398\ub9ac\uc2a4\uc5d0 \uc911\uc810\uc744 \ub461\ub2c8\ub2e4.\" \u2014 Roy Fielding, Architectural Styles and the Design of Network-based Software Architectures Returning URLs \uc77c\ubc18\uc801\uc73c\ub85c /foobar \uc640 \uac19\uc740 \uc0c1\ub300URL\ub97c \ubc18\ud658\ud558\ub294 \uac83\uc774 \uc544\ub2c8\ub77c http://example.com/foobar \uc640 \uac19\uc774 \uc6f9 API\uc5d0\uc11c \uc808\ub300 URI\ub97c \ubc18\ud658\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\ub294 \uc774\uc810\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc774 \ub354 \uba85\uc2dc\uc801\uc785\ub2c8\ub2e4. \ub2f9\uc2e0\uc758 API \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ub300\ud55c \uc791\uc5c5\uc744 \uc801\uac8c \ub0a8\uaca8\ub461\ub2c8\ub2e4. \ub124\uc774\ud2f0\ube0c URI \uc720\ud615\uc774 \uc5c6\ub294 JSON\uacfc \uac19\uc740 \ud45c\ud604\uc5d0\uc11c \ubb38\uc790\uc5f4\uc758 \uc758\ubbf8\uc5d0 \ub300\ud55c \ubaa8\ud638\uc131\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \ud558\uc774\ud37c\ub9c1\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9c8\ud06c\uc5c5 HTML \ud45c\ud604\uacfc \uac19\uc740 \uc791\uc5c5\uc744 \uc27d\uac8c \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc6f9 API\uc5d0\uc11c \uc808\ub300 URI\ub97c \ub9ac\ud134\ud558\ub294 \uac83\uc744 \ubcf4\ub2e4 \uac04\ub2e8\ud558\uac8c \ud574\uc8fc\ub294 \ub450\uac00\uc9c0 \uc720\ud2f8\ub9ac\ud2f0 \ud568\uc218\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790\uac00 \uc9c1\uc811 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc694\uad6c\ud560 \ud544\uc694\ub294 \uc5c6\uc9c0\ub9cc \uc0ac\uc6a9\uc790\uac00 \uc9c1\uc811 \uc785\ub825\ud558\uba74 \uc790\uccb4 \uc124\uba85 API\uac00 \ucd9c\ub825\uc744 \uc790\ub3d9\uc73c\ub85c \ud558\uc774\ud37c\ub9c1\ud06c\ub85c \uc5f0\uacb0\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c API\ub97c \ud6e8\uc52c \uc27d\uac8c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. reverse Signature : reverse(viewname, *args, **kwargs) django.urls.reverse \uc640 \ub3d9\uc77c\ud55c \ub3d9\uc791\uc744 \ud558\uc9c0\ub9cc \ud638\uc2a4\ud2b8\uc640 \ud3ec\ud2b8\ub97c \uacb0\uc815\ud558\uae30 \uc704\ud55c \uc694\uccad\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc815\uaddc\ud654 \ub41c URL\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \ud568\uc218\uc5d0 \ub300\ud55c \ud0a4\uc6cc\ub4dc \uc778\uc218\ub85c request\uc744 \ud3ec\ud568 \ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: from rest_framework.reverse import reverse from rest_framework.views import APIView from django.utils.timezone import now class APIRootView(APIView): def get(self, request): year = now().year data = { ... 'year-summary-url': reverse('year-summary', args=[year], request=request) } return Response(data) reverse_lazy Signature : reverse_lazy(viewname, *args, **kwargs) django.urls.reverse_lazy \uc640 \ub3d9\uc77c\ud55c \ub3d9\uc791\uc744 \ud558\uc9c0\ub9cc \ud638\uc2a4\ud2b8\uc640 \ud3ec\ud2b8\ub97c \uacb0\uc815\ud558\uae30\uc704\ud55c \uc694\uccad\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc815\uaddc\ud654 \ub41c URL\uc744 \ubc18\ud658\ud55c\ub2e4\ub294 \uc810\ub9cc \ub2e4\ub985\ub2c8\ub2e4. reverse \ud568\uc218\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud568\uc218\uc5d0 \ub300\ud55c \ud0a4\uc6cc\ub4dc \uc778\uc218\ub85c request\ub97c \ud3ec\ud568 \ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: api_root = reverse_lazy('api-root', request=request)","title":"Returning URLs"},{"location":"Returning_URLs/#django-rest-framework-returning-urls","text":"\"The central feature that distinguishes the REST architectural style from other network-based styles is its emphasis on a uniform interface between components.\" \"REST \uc544\ud0a4\ud14d\ucc98 \uc2a4\ud0c0\uc77c\uc744 \ub2e4\ub978 \ub124\ud2b8\uc6cc\ud06c \uae30\ubc18 \uc2a4\ud0c0\uc77c\uacfc \uad6c\ubcc4\ud558\ub294 \ud575\uc2ec \uae30\ub2a5\uc740 \uad6c\uc131 \uc694\uc18c \uac04\uc758 \uade0\uc77c\ud55c \uc778\ud130\ud398\ub9ac\uc2a4\uc5d0 \uc911\uc810\uc744 \ub461\ub2c8\ub2e4.\" \u2014 Roy Fielding, Architectural Styles and the Design of Network-based Software Architectures","title":"Django REST Framework - Returning URLs"},{"location":"Returning_URLs/#returning-urls","text":"\uc77c\ubc18\uc801\uc73c\ub85c /foobar \uc640 \uac19\uc740 \uc0c1\ub300URL\ub97c \ubc18\ud658\ud558\ub294 \uac83\uc774 \uc544\ub2c8\ub77c http://example.com/foobar \uc640 \uac19\uc774 \uc6f9 API\uc5d0\uc11c \uc808\ub300 URI\ub97c \ubc18\ud658\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\ub294 \uc774\uc810\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc774 \ub354 \uba85\uc2dc\uc801\uc785\ub2c8\ub2e4. \ub2f9\uc2e0\uc758 API \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ub300\ud55c \uc791\uc5c5\uc744 \uc801\uac8c \ub0a8\uaca8\ub461\ub2c8\ub2e4. \ub124\uc774\ud2f0\ube0c URI \uc720\ud615\uc774 \uc5c6\ub294 JSON\uacfc \uac19\uc740 \ud45c\ud604\uc5d0\uc11c \ubb38\uc790\uc5f4\uc758 \uc758\ubbf8\uc5d0 \ub300\ud55c \ubaa8\ud638\uc131\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \ud558\uc774\ud37c\ub9c1\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9c8\ud06c\uc5c5 HTML \ud45c\ud604\uacfc \uac19\uc740 \uc791\uc5c5\uc744 \uc27d\uac8c \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc6f9 API\uc5d0\uc11c \uc808\ub300 URI\ub97c \ub9ac\ud134\ud558\ub294 \uac83\uc744 \ubcf4\ub2e4 \uac04\ub2e8\ud558\uac8c \ud574\uc8fc\ub294 \ub450\uac00\uc9c0 \uc720\ud2f8\ub9ac\ud2f0 \ud568\uc218\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790\uac00 \uc9c1\uc811 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc694\uad6c\ud560 \ud544\uc694\ub294 \uc5c6\uc9c0\ub9cc \uc0ac\uc6a9\uc790\uac00 \uc9c1\uc811 \uc785\ub825\ud558\uba74 \uc790\uccb4 \uc124\uba85 API\uac00 \ucd9c\ub825\uc744 \uc790\ub3d9\uc73c\ub85c \ud558\uc774\ud37c\ub9c1\ud06c\ub85c \uc5f0\uacb0\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c API\ub97c \ud6e8\uc52c \uc27d\uac8c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Returning URLs"},{"location":"Returning_URLs/#reverse","text":"Signature : reverse(viewname, *args, **kwargs) django.urls.reverse \uc640 \ub3d9\uc77c\ud55c \ub3d9\uc791\uc744 \ud558\uc9c0\ub9cc \ud638\uc2a4\ud2b8\uc640 \ud3ec\ud2b8\ub97c \uacb0\uc815\ud558\uae30 \uc704\ud55c \uc694\uccad\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc815\uaddc\ud654 \ub41c URL\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \ud568\uc218\uc5d0 \ub300\ud55c \ud0a4\uc6cc\ub4dc \uc778\uc218\ub85c request\uc744 \ud3ec\ud568 \ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: from rest_framework.reverse import reverse from rest_framework.views import APIView from django.utils.timezone import now class APIRootView(APIView): def get(self, request): year = now().year data = { ... 'year-summary-url': reverse('year-summary', args=[year], request=request) } return Response(data)","title":"reverse"},{"location":"Returning_URLs/#reverse_lazy","text":"Signature : reverse_lazy(viewname, *args, **kwargs) django.urls.reverse_lazy \uc640 \ub3d9\uc77c\ud55c \ub3d9\uc791\uc744 \ud558\uc9c0\ub9cc \ud638\uc2a4\ud2b8\uc640 \ud3ec\ud2b8\ub97c \uacb0\uc815\ud558\uae30\uc704\ud55c \uc694\uccad\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc815\uaddc\ud654 \ub41c URL\uc744 \ubc18\ud658\ud55c\ub2e4\ub294 \uc810\ub9cc \ub2e4\ub985\ub2c8\ub2e4. reverse \ud568\uc218\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud568\uc218\uc5d0 \ub300\ud55c \ud0a4\uc6cc\ub4dc \uc778\uc218\ub85c request\ub97c \ud3ec\ud568 \ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: api_root = reverse_lazy('api-root', request=request)","title":"reverse_lazy"},{"location":"Routers/","text":"Django REST Framework - Routers \"Resource routing allows you to quickly declare all of the common routes for a given resourceful controller. Instead of declaring separate routes for your index... a resourceful route declares them in a single line of code.\" \"\ub9ac\uc18c\uc2a4 \ub77c\uc6b0\ud305\uc744 \uc0ac\uc6a9\ud558\uba74 \uc8fc\uc5b4\uc9c4 \ub9ac\uc18c\uc2a4\uac00 \ub9ce\uc740 \ucee8\ud2b8\ub864\ub7ec\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc77c\ubc18 \uacbd\ub85c\ub97c \ube60\ub974\uac8c \uc120\uc5b8 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc778\ub371\uc2a4\uc5d0 \ub300\ud574 \ubcc4\ub3c4\uc758 \uacbd\ub85c\ub97c \uc120\uc5b8\ud558\ub294 \ub300\uc2e0... \uc720\uc6a9\ud55c \ub8e8\ud2b8\ub294 \ucf54\ub4dc \ud55c \uc904\ub85c \uc120\uc5b8\ud569\ub2c8\ub2e4.\" \u2014 Ruby on Rails Documentation Routers Rails \uc640 \uac19\uc740 \uc77c\ubd80 \uc6f9 \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc758 URL\uc744 \ub4e4\uc5b4\uc624\ub294 \uc694\uccad\uc744 \ucc98\ub9ac\ud558\ub294 \ub17c\ub9ac\uc5d0 \ub9e4\ud551\ud558\ub294 \ubc29\ubc95\uc744 \uc790\ub3d9\uc73c\ub85c \uacb0\uc815\ud558\ub294 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 Django\uc5d0 \ub300\ud55c \uc790\ub3d9 URL\ub77c\uc6b0\ud305\uc744 \uc9c0\uc6d0\uc744 \ucd94\uac00\ud558\uace0 \ubdf0 \ub85c\uc9c1\uc744 URL set\uc5d0 \uac04\ub2e8\ud558\uace0 \ube60\ub974\uac8c \uc5f0\uad00\ub418\uac8c \uc5f0\uacb0\ud558\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Usage \ub2e4\uc74c\uc740 SimpleRouter \ub97c \uc0ac\uc6a9\ud558\ub294 \uac04\ub2e8\ud55c URL \uad6c\uc131\uc758 \uc608\uc785\ub2c8\ub2e4. from rest_framework import routers router = routers.SimpleRouter() router.register(r'users', UserViewSet) router.register(r'accounts', AccountViewSet) urlpatterns = router.urls register() \uba54\uc11c\ub4dc\ub294 \ub450 \uac00\uc9c0 \ud544\uc218 \uc778\uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4. prefix : router\uc758 set\uc5d0 \uc0ac\uc6a9\ud560 URL\uc811\ub450\uc5b4 \uc785\ub2c8\ub2e4. viewset : viewset \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uc120\ud0dd\uc801\uc73c\ub85c \ucd94\uac00 \uc778\uc218\ub97c \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Base_name : \uc791\uc131\ub41c URL \uc774\ub984\uc5d0 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc124\uc815\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uae30\ubcf8\uc774\ub984\uc740 viewset\uc758 \ucffc\ub9ac\uc14b \uc18d\uc131\uc744 \uae30\ubc18\uc73c\ub85c \uc790\ub3d9 \uc0dd\uc131\ub429\ub2c8\ub2e4. viewset\uc5d0 \ucffc\ub9ac\uc14b \ud2b9\uc131\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc73c\uba74 viewset\uc744 \ub4f1\ub85d\ud560 \ub54c base_name \uc744 \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uc704\uc758 \uc608\ub294 \ub2e4\uc74c URL\ud328\ud134\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. URL pattern: ^users/$ Name: 'user-list' URL pattern: ^users/{pk}/$ Name: 'user-detail' URL pattern: ^accounts/$ Name: 'account-list' URL pattern: ^accounts/{pk}/$ Name: 'account-detail' Note : base_name \uc778\uc218\ub294 \ubdf0 \uc774\ub984 \ud328\ud134\uc758 \ucd08\uae30 \ubd80\ubd84\uc744 \uc9c0\uc815\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc704\uc758 \uc608\uc5d0\uc11c\ub294 \uc0ac\uc6a9\uc790\ub098 \uacc4\uc815 \ubd80\ubd84\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c base_name \uc778\uc218\ub97c \uc9c0\uc815\ud560 \ud544\uc694\ub294 \uc5c6\uc9c0\ub9cc, custom get_queryset \uba54\uc11c\ub4dc\ub97c \uc815\uc758\ud55c viewset\uc774 \uc788\ub294 \uacbd\uc6b0, viewset\uc5d0\ub294 .queryset \uc18d\uc131 set\uc774 \uc5c6\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud574\ub2f9 viewset\uc744 \ub4f1\ub85d\ud558\ub824\uace0\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uc624\ub958\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. 'base_name' argument not specified, and could not automatically determine the name from the viewset, as it does not have a '.queryset' attribute. \uc989, \ubaa8\ub378 \uc774\ub984\uc5d0\uc11c \uc790\ub3d9\uc73c\ub85c \uacb0\uc815\ud560 \uc218 \uc5c6\uc73c\ubbc0\ub85c viewset\uc744 \ub4f1\ub85d\ud560 \ub54c base_name \uc778\uc218\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. Using include with routers \ub77c\uc6b0\ud130 \uc778\uc2a4\ud134\uc2a4\uc758 .urls \uc18d\uc131\uc740 URL \ud328\ud134\uc758 \ud45c\uc900 list\uc77c \ubfd0\uc785\ub2c8\ub2e4. \uc774\ub7ec\ud55c URL\uc744 \ud3ec\ud568\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc5d0\ub294 \uc5ec\ub7ec \uc2a4\ud0c0\uc77c\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 router.urls \ub97c views \ubaa9\ub85d\uc5d0 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. router = routers.SimpleRouter() router.register(r'users', UserViewSet) router.register(r'accounts', AccountViewSet) urlpatterns = [ url(r'^forgot-password/$', ForgotPasswordFormView.as_view()), ] urlpatterns += router.urls \ub610\ub294 Django\uc758 include \ud568\uc218\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. urlpatterns = [ url(r'^forgot-password/$', ForgotPasswordFormView.as_view()), url(r'^', include(router.urls)), ] \ub77c\uc6b0\ud130 URL \ud328\ud134\ub3c4 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uac00 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. urlpatterns = [ url(r'^forgot-password/$', ForgotPasswordFormView.as_view()), url(r'^api/', include(router.urls, namespace='api')), ] \ud558\uc774\ud37c\ub9c1\ud06c\uac00 \uc788\ub294 serializer\uc640 \ud568\uaed8 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 serializer\uc758 view_name parameter\uac00 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub97c \uc62c\ubc14\ub974\uac8c \ubc18\uc601\ud558\ub294\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4. \uc704\uc758 \uc608\uc81c\uc5d0\uc11c \uc0ac\uc6a9\uc790 detail view\uc5d0 \ud558\uc774\ud37c\ub9c1\ud06c \ub41c serializer \ud544\ub4dc\uc5d0 \ub300\ud574 view_name='api:user-detail' \uacfc \uac19\uc740 parameter\ub97c \ud3ec\ud568\ud574\uc57c\ud569\ub2c8\ub2e4. Extra link and actions @detail_route \ub098 @list_route \ub85c \uc7a5\uc2dd \ub41c viewset\uc758 \ubaa8\ub4e0 \uba54\uc11c\ub4dc\ub3c4 \ub77c\uc6b0\ud2b8\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, UserViewSet \ud074\ub798\uc2a4\uc5d0\uc11c \ub2e4\uc74c\uacfc \uac19\uc740 \uba54\uc11c\ub4dc\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. from myapp.permissions import IsAdminOrIsSelf from rest_framework.decorators import detail_route class UserViewSet(ModelViewSet): ... @detail_route(methods=['post'], permission_classes=[IsAdminOrIsSelf]) def set_password(self, request, pk=None): ... \ub2e4\uc74c URL\ud328\ud134\uc774 \ucd94\uac00\ub85c \uc0dd\uc131\ub429\ub2c8\ub2e4. URL pattern: ^users/{pk}/set_password/$ Name: 'user-set-password' custom \uc791\uc5c5\uc5d0 \ub300\ud574 \uc0dd\uc131 \ub41c \uae30\ubcf8 URL\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc73c\ub824\uba74 \ub300\uc2e0 url_path parameter\ub97c \uc0ac\uc6a9\ud558\uc5ec custom \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 custom \uc561\uc158\uc758 URL\uc744 ^users/{pk}/change-password/$ \uc73c\ub85c \ubcc0\uacbd\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \uc791\uc131\ud558\uc138\uc694. from myapp.permissions import IsAdminOrIsSelf from rest_framework.decorators import detail_route class UserViewSet(ModelViewSet): ... @detail_route(methods=['post'], permission_classes=[IsAdminOrIsSelf], url_path='change-password') def set_password(self, request, pk=None): ... \uc704\uc758 \uc608\uc81c\ub294 \uc774\uc81c \ub2e4\uc74c URL\ud328\ud134\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. URL pattern: ^users/{pk}/change-password/$ Name: 'user-change-password' custom \uc561\uc158\uc5d0 \ub300\ud574 \uc0dd\uc131\ub41c \uae30\ubcf8 \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc73c\ub824\ub294 \uacbd\uc6b0 url_name parameter\ub97c \uc0ac\uc6a9\ud558\uc5ec custom \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, custo,\uc561\uc158\uc758 \uc774\ub984\uc744 'user-change-password' \ub85c \ubcc0\uacbd\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from myapp.permissions import IsAdminOrIsSelf from rest_framework.decorators import detail_route class UserViewSet(ModelViewSet): ... @detail_route(methods=['post'], permission_classes=[IsAdminOrIsSelf], url_name='change-password') def set_password(self, request, pk=None): ... \uc704\uc758 \uc608\uc81c\ub294 \uc774\uc81c \ub2e4\uc74c URL\ud328\ud134\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. URL pattern: ^users/{pk}/set_password/$ Name: 'user-change-password' \ub610\ud55c url_path \uc640 url_name parameter\ub97c \ud568\uaed8 \uc0ac\uc6a9\ud558\uc5ec custom view\uc5d0 \ub300\ud55c URL\uc0dd\uc131\uc744 \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 marking extra actions for routing \ucc38\uc870\ud558\uc138\uc694. API Guide SimpleRouter \uc774 \ub77c\uc6b0\ud130\uc5d0\ub294 list , create , retrieve , update , partial_update , destroy \ud45c\uc900 set \uc791\uc5c5\uc5d0 \ub300\ud55c \uacbd\ub85c\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. viewset\uc740 @detail_route \ub098 @list_route \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub77c\uc6b0\ud2b8 \ub420 \ucd94\uac00 \uba54\uc11c\ub4dc\ub97c \ud45c\uc2dc \ud560 \uc218\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c SimpleRouter \ub85c \ub9cc\ub4e0 URL \ub4a4\uc5d0\ub294 \uc2ac\ub798\uc2dc\uac00 \ucd94\uac00\ub429\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc740 \ub77c\uc6b0\ud130\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560\ub54c trailing_slash \uc778\uc218\ub97c False \ub85c \uc124\uc815\ud558\uc5ec \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608: router = SimpleRouter(trailing_slash=False) \ub4a4\uc5d0 \uc624\ub294 \uc2ac\ub798\uc2dc\ub294 Django\uc5d0\uc11c\ub294 \uc77c\ubc18\uc801\uc774\uc9c0\ub9cc \ub808\uc77c\uc2a4\uc640 \uac19\uc740 \ub2e4\ub978 \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc5b4\ub5a4 \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\uac00 \ud2b9\uc815 \ub77c\uc6b0\ud305 \uc2a4\ud0c0\uc77c\uc744 \uae30\ub300\ud560\uc9c0\ub77c\ub3c4, \uc5b4\ub5a4 \uc2a4\ud0c0\uc77c\uc744 \uc120\ud0e3 \ud558\ub290\ub0d0\ub294 \ub300\ubd80\ubd84 \ud658\uacbd \uc124\uc815\uc758 \ubb38\uc81c\uc785\ub2c8\ub2e4. \ub77c\uc6b0\ud130\ub294 \uc2ac\ub798\uc2dc\uc640 \ub9c8\uce68\ud45c\ub97c \uc81c\uc678\ud55c \ubb38\uc790\uac00 \ud3ec\ud568 \ub41c \uc870\ud68c\uac12\uc744 \ub9e4\uce58\uc2dc\ud0b5\ub2c8\ub2e4. \ubcf4\ub2e4 \uc81c\ud55c\uc801\uc778(\ud639\uc740 \uad00\ub300\ud55c) \uac80\uc0c9 \ud328\ud134\uc758 \uacbd\uc6b0, viewset\uc5d0 lookup_value_regex \uc18d\uc131\uc744 \uc124\uc815\ud558\uc138\uc694. \uc608\ub97c \ub4e4\uc5b4, \uc870\ud68c\ub97c \uc720\ud6a8\ud55c UUID \ub85c \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class MyModelViewSet(mixins.RetrieveModelMixin, viewsets.GenericViewSet): lookup_field = 'my_model_id' lookup_value_regex = '[0-9a-f]{32}' DefaultRouter \uc774 \ub77c\uc6b0\ud130\ub294 \uc704\uc640 \uac19\uc774 SimpleRouter \uc640 \ube44\uc2b7\ud558\uc9c0\ub9cc \ubaa8\ub4e0 list views\uc5d0 \ub300\ud55c \ud558\uc774\ud37c\ub9c1\ud06c\uac00 \ud3ec\ud568 \ub41c response\uc744 \ubc18\ud658\ud558\ub294 \uae30\ubcf8 API root view\ub97c \ucd94\uac00\ub85c \ud3ec\ud568\ud569\ub2c8\ub2e4. \uc120\ud0dd\uc801 .json \uc2a4\ud0c0\uc77c \ud615\uc2dd \uc811\ubbf8\uc0ac\uc5d0 \ub300\ud55c \uacbd\ub85c\ub3c4 \uc0dd\uc131\ud569\ub2c8\ub2e4. SimpleRouter \uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c \ub77c\uc6b0\ud130\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560\ub54c trailing_slash \uc778\uc218\ub97c False \ub85c \uc124\uc815\ud558\uba74 URL \uacbd\ub85c\uc5d0 \ub530\ub77c\uc624\ub294 \uc2ac\ub798\uc2dc\ub97c \uc81c\uac70\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. router = DefaultRouter(trailing_slash=False) Custom Routers custom router \ub97c \uad6c\ud604\ud558\ub294 \uac83\uc740 \uc790\uc8fc\ud574\uc57c \ud560 \uc77c\uc740 \uc544\ub2c8\uc9c0\ub9cc API URL \uc774 \uc5b4\ub5bb\uac8c \uad6c\uc131\ub418\ub294\uc9c0\uc5d0 \ub300\ud55c \uc694\uad6c\uc0ac\ud56d\uc774 \uc788\ub294 \uacbd\uc6b0 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc7ac\uc0ac\uc6a9 \ud560 \uc218 \uc788\ub294 \ubc29\uc2dd\uc73c\ub85c URL\uad6c\uc870\ub97c \ucea1\uc290\ud654 \ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \uac01 \uc0c8\ub85c\uc6b4 view\uc5d0 \ub300\ud574 \uba85\uc2dc\uc801\uc73c\ub85c URL \ud328\ud134\uc744 \uc791\uc131 \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. custom router \ub97c \uad6c\ud604\ud558\ub294 \uac00\uc7a5 \uac04\ub2e8\ud55c \ubc29\ubc95\uc740 \uae30\ubcf8 \ub77c\uc6b0\ud130 \ud074\ub798\uc2a4 \uc911 \ud558\ub098\ub97c \uc11c\ube0c \ud074\ub798\uc2a4\ub85c \ub9cc\ub4dc\ub294 \uac83\uc785\ub2c8\ub2e4. .routes \uc18d\uc131\uc740 \uac01 viewset\uc5d0 \ub9f5\ud551 \ub420 URL \ud328\ud134\uc744 template\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. .routes \uc18d\uc131\uc740 \uacbd\ub85c\uc9c0\uc815 \ud29c\ud50c\uc758 list\uc785\ub2c8\ub2e4. Route \ub77c\ub294 \ud29c\ud50c\uc5d0 \ub300\ud55c \uc778\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. url : \ub77c\uc6b0\ud2b8 \ub420 URL\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4. \ub2e4\uc74c \ud0c0\uc785\uc758 \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. {prefix} : \uc774 \uacbd\ub85c \uc9d1\ud569\uc5d0 \uc0ac\uc6a9\ud560 URL \uc811\ub450\uc0ac\uc785\ub2c8\ub2e4. {lookup} : \ub2e8\uc77c \uc778\uc2a4\ud134\uc2a4\uc640 \ub9e4\uce58\uc2dc\ud0a4\ub294\ub370 \uc0ac\uc6a9\ub418\ub294 \uc870\ud68c \ud544\ub4dc\uc785\ub2c8\ub2e4. {trailing_slash} : trailing_slash \uc778\uc218\uc5d0 \ub530\ub77c '/' \ub098 \ube48 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. mapping : HTTP \uba54\uc11c\ub4dc \uc774\ub984\uc744 \ubdf0 \uba54\uc11c\ub4dc\uc5d0 \ub9e4\ud551. name : reverse \ud638\ucd9c\uc5d0 \uc0ac\uc6a9\ub418\ub294 URL\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \ub2e4\uc74c \ud0c0\uc785\uc758 \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568 \ud560 \uc218 \uc788\uc501\ub2c8\ub2e4. {basename} : \uc0dd\uc131\ub41c URL \uc774\ub984\uc5d0 \uc0ac\uc6a9\ud560 \uae30\uc900\uc785\ub2c8\ub2e4. initkwargs : view\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c \uc804\ub2ec\ub418\uc5b4\uc57c\ud558\ub294 \ucd94\uac00 \uc778\uc218\uc758 dict. suffix \uc778\uc218\ub294 \ubdf0 \uc774\ub984\uacfc \ud0d0\uc0c9 \uacbd\ub85c \ub9c1\ud06c\ub97c \uc0dd\uc131 \ud560 \ub584 \uc0ac\uc6a9\ub418\ub294 viewset \uc720\ud615\uc744 \uc2dd\ubcc4\ud558\uae30 \uc704\ud574 \uc608\uc57d\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. Customizing dynamic routes @list_route \uc640 @detail_route \ub370\ucf54\ub808\uc774\ud130\uac00 \ub77c\uc6b0\ud305\ub418\ub294 \ubc29\ubc95\uc744 custom \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub370\ucf54\ub808\uc774\ud130 \uc911 \ud558\ub098\ub098 \ubaa8\ub450\ub97c \ub77c\uc6b0\ud2b8\ud558\ub824\uba74 .routes \ubaa9\ub85d\uc5d0 DynamicListRoute \uc640 / \uc774\ub098 DynamicDetailRoute \ub77c\ub294 \uc774\ub984\uc758 \ud29c\ud50c\uc744 \ud3ec\ud568\ud558\uc138\uc694. DynamicListRoute \uc640 DynamicDetailRoute \uc758 \uc778\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. url : \ub77c\uc6b0\ud2b8 \ub420 URL\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4. Route \uc640 \ub3d9\uc77c\ud55c \ud0c0\uc785\uc758 \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568\ud560 \uc218 \uc788\uc73c\uba70, {methodname} \uacfc {methodnamehyphen} \ud615\uc2dd \ubb38\uc790\uc5f4\uc744 \ucd94\uac00\ub85c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. name : reverse \ud638\ucd9c\uc5d0 \uc0ac\uc6a9\ub418\ub294 URL\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. {basename} , {methodname} \ubc0f {methodnamehyphen} \uacfc \uac19\uc740 \ud615\uc2dd \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. initkwargs : \ubdf0\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c \uc804\ub2ec\ub418\uc5b4\uc57c \ud558\ub294 \ucd94\uac00 \uc778\uc218\uc758 dict Example \ub2e4\uc74c \uc608\ub294 'list'\uc640 'retrieve`\uc758 \uc561\uc158\uc5d0\ub9cc \ub77c\uc6b0\ud305\ud558\uba70, \ud6c4\ud589 \uc2ac\ub798\uc2dc \uaddc\uce59\uc740 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. from rest_framework.routers import Route, DynamicDetailRoute, SimpleRouter class CustomReadOnlyRouter(SimpleRouter): \"\"\" A router for read-only APIs, which doesn't use trailing slashes. \"\"\" routes = [ Route( url=r'^{prefix}$', mapping={'get': 'list'}, name='{basename}-list', initkwargs={'suffix': 'List'} ), Route( url=r'^{prefix}/{lookup}$', mapping={'get': 'retrieve'}, name='{basename}-detail', initkwargs={'suffix': 'Detail'} ), DynamicDetailRoute( url=r'^{prefix}/{lookup}/{methodnamehyphen}$', name='{basename}-{methodnamehyphen}', initkwargs={} ) ] CustomReadOnlyRouter \uac00 \uac04\ub2e8\ud55c viewset\uc744 \uc704\ud574 \uc0dd\uc131 \ud560 \ub77c\uc6b0\ud2b8\ub97c \uc0b4\ud3b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. views.py : class UserViewSet(viewsets.ReadOnlyModelViewSet): \"\"\" A viewset that provides the standard actions \"\"\" queryset = User.objects.all() serializer_class = UserSerializer lookup_field = 'username' @detail_route() def group_names(self, request): \"\"\" Returns a list of all the group names that the given user belongs to. \"\"\" user = self.get_object() groups = user.groups.all() return Response([group.name for group in groups]) urls.py : router = CustomReadOnlyRouter() router.register('users', UserViewSet) urlpatterns = router.urls \ub2e4\uc74c\uacfc \uac19\uc740 \ub9e4\uce6d\uc774 \uc0dd\uc131\ub429\ub2c8\ub2e4... URL HTTP Method Action URL Name /users GET list user-list /users/{username} GET retrieve user-detail /users/{username}/group-names GET group_names user-group-names .routes \uc18d\uc131\uc744 \uc124\uc815\ud558\ub294 \ub2e4\ub978 \uc608\uc81c\ub294 SimpleRouter \ud074\ub798\uc2a4\uc758 \uc18c\uc2a4 \ucf54\ub4dc\ub97c \ucc38\uc870\ud558\uc138\uc694. Advanced custom routers \uc644\uc804\ud788 custom\ub41c \ub3d9\uc791\uc744 \uc81c\uacf5\ud558\ub824\uba74 BaseRouter \ub97c \ub300\uccb4\ud558\uace0 get_urls(self) \uba54\uc11c\ub4dc\ub97c \ub300\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 \ub4f1\ub85d \ub41c viewset\uc744 \uac80\uc0ac\ud558\uace0, URL \ud328\ud134 list\ub97c \ub9ac\ud134\ud574\uc57c\ud569\ub2c8\ub2e4. \ub4f1\ub85d\ub41c prefix, viewset, basename \ud29c\ud50c\uc740 self.registry \uc18d\uc131\uc5d0 \uc561\uc11c\uc2a4\ud558\uc5ec \uac80\uc0ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. get_default_base_name(self, viewset) \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uac70\ub098, viewset\uc744 \ub77c\uc6b0\ud130\uc5d0 \ub4f1\ub85d \ud560 \ub54c \ud56d\uc0c1 base_name \uc778\uc218\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Third Party Packages \ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4. DRF Nested Routers drf-nested-routers \ud328\ud0a4\uc9c0 \ub294 \uc911\ucca9\ub41c \ub9ac\uc18c\uc2a4\ub85c \uc791\uc5c5\ud558\uae30 \uc704\ud55c \ub77c\uc6b0\ud130\uc640 \uad00\uacc4 \ud544\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. ModelRouter (wq.db.rest) wq.db \ud328\ud0a4\uc9c0 \ub294 register_model() API\ub85c DefaultRouter \ub97c \ud655\uc7a5\ud558\ub294 \uace0\uae09 ModelRouter \ud074\ub798\uc2a4(\ubc0f \uc2f1\uae00 \ud1a4 \uc778\uc2a4\ud134\uc2a4)\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Django\uc758 admin.site.register \uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c rest.router.register_model \uc5d0 \ud544\uc694\ud55c \uc720\uc77c\ud55c \uc778\uc218\ub294 \ubaa8\ub378 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. url prefix, serializer, viewset\uc5d0 \ub300\ud55c \ud569\ub9ac\uc801\uc778 \uae30\ubcf8\uac12\uc740 \ubaa8\ub378\uacfc \uc804\uc5ed\uad6c\uc131\uc5d0\uc11c \uc720\ucd94\ub429\ub2c8\ub2e4. from wq.db import rest from myapp.models import MyModel rest.router.register_model(MyModel) DRF-extensions DRF-extensions package \ub294 \uc911\ucca9\ub41c viewset , custom\uac00 \uac00\ub2a5\ud55c \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc774\ub984 \uc744 \uac00\uc9c4 \ucf5c\ub809\uc158 \ub808\ubca8 \ucee8\ud2b8\ub864\ub7ec \ub97c \uc791\uc131\ud558\uae30 \uc704\ud55c \ub77c\uc6b0\ud130 \ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Routers"},{"location":"Routers/#django-rest-framework-routers","text":"\"Resource routing allows you to quickly declare all of the common routes for a given resourceful controller. Instead of declaring separate routes for your index... a resourceful route declares them in a single line of code.\" \"\ub9ac\uc18c\uc2a4 \ub77c\uc6b0\ud305\uc744 \uc0ac\uc6a9\ud558\uba74 \uc8fc\uc5b4\uc9c4 \ub9ac\uc18c\uc2a4\uac00 \ub9ce\uc740 \ucee8\ud2b8\ub864\ub7ec\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc77c\ubc18 \uacbd\ub85c\ub97c \ube60\ub974\uac8c \uc120\uc5b8 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc778\ub371\uc2a4\uc5d0 \ub300\ud574 \ubcc4\ub3c4\uc758 \uacbd\ub85c\ub97c \uc120\uc5b8\ud558\ub294 \ub300\uc2e0... \uc720\uc6a9\ud55c \ub8e8\ud2b8\ub294 \ucf54\ub4dc \ud55c \uc904\ub85c \uc120\uc5b8\ud569\ub2c8\ub2e4.\" \u2014 Ruby on Rails Documentation","title":"Django REST Framework - Routers"},{"location":"Routers/#routers","text":"Rails \uc640 \uac19\uc740 \uc77c\ubd80 \uc6f9 \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc758 URL\uc744 \ub4e4\uc5b4\uc624\ub294 \uc694\uccad\uc744 \ucc98\ub9ac\ud558\ub294 \ub17c\ub9ac\uc5d0 \ub9e4\ud551\ud558\ub294 \ubc29\ubc95\uc744 \uc790\ub3d9\uc73c\ub85c \uacb0\uc815\ud558\ub294 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 Django\uc5d0 \ub300\ud55c \uc790\ub3d9 URL\ub77c\uc6b0\ud305\uc744 \uc9c0\uc6d0\uc744 \ucd94\uac00\ud558\uace0 \ubdf0 \ub85c\uc9c1\uc744 URL set\uc5d0 \uac04\ub2e8\ud558\uace0 \ube60\ub974\uac8c \uc5f0\uad00\ub418\uac8c \uc5f0\uacb0\ud558\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Routers"},{"location":"Routers/#usage","text":"\ub2e4\uc74c\uc740 SimpleRouter \ub97c \uc0ac\uc6a9\ud558\ub294 \uac04\ub2e8\ud55c URL \uad6c\uc131\uc758 \uc608\uc785\ub2c8\ub2e4. from rest_framework import routers router = routers.SimpleRouter() router.register(r'users', UserViewSet) router.register(r'accounts', AccountViewSet) urlpatterns = router.urls register() \uba54\uc11c\ub4dc\ub294 \ub450 \uac00\uc9c0 \ud544\uc218 \uc778\uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4. prefix : router\uc758 set\uc5d0 \uc0ac\uc6a9\ud560 URL\uc811\ub450\uc5b4 \uc785\ub2c8\ub2e4. viewset : viewset \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uc120\ud0dd\uc801\uc73c\ub85c \ucd94\uac00 \uc778\uc218\ub97c \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Base_name : \uc791\uc131\ub41c URL \uc774\ub984\uc5d0 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc124\uc815\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uae30\ubcf8\uc774\ub984\uc740 viewset\uc758 \ucffc\ub9ac\uc14b \uc18d\uc131\uc744 \uae30\ubc18\uc73c\ub85c \uc790\ub3d9 \uc0dd\uc131\ub429\ub2c8\ub2e4. viewset\uc5d0 \ucffc\ub9ac\uc14b \ud2b9\uc131\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc73c\uba74 viewset\uc744 \ub4f1\ub85d\ud560 \ub54c base_name \uc744 \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uc704\uc758 \uc608\ub294 \ub2e4\uc74c URL\ud328\ud134\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. URL pattern: ^users/$ Name: 'user-list' URL pattern: ^users/{pk}/$ Name: 'user-detail' URL pattern: ^accounts/$ Name: 'account-list' URL pattern: ^accounts/{pk}/$ Name: 'account-detail' Note : base_name \uc778\uc218\ub294 \ubdf0 \uc774\ub984 \ud328\ud134\uc758 \ucd08\uae30 \ubd80\ubd84\uc744 \uc9c0\uc815\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc704\uc758 \uc608\uc5d0\uc11c\ub294 \uc0ac\uc6a9\uc790\ub098 \uacc4\uc815 \ubd80\ubd84\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c base_name \uc778\uc218\ub97c \uc9c0\uc815\ud560 \ud544\uc694\ub294 \uc5c6\uc9c0\ub9cc, custom get_queryset \uba54\uc11c\ub4dc\ub97c \uc815\uc758\ud55c viewset\uc774 \uc788\ub294 \uacbd\uc6b0, viewset\uc5d0\ub294 .queryset \uc18d\uc131 set\uc774 \uc5c6\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud574\ub2f9 viewset\uc744 \ub4f1\ub85d\ud558\ub824\uace0\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uc624\ub958\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. 'base_name' argument not specified, and could not automatically determine the name from the viewset, as it does not have a '.queryset' attribute. \uc989, \ubaa8\ub378 \uc774\ub984\uc5d0\uc11c \uc790\ub3d9\uc73c\ub85c \uacb0\uc815\ud560 \uc218 \uc5c6\uc73c\ubbc0\ub85c viewset\uc744 \ub4f1\ub85d\ud560 \ub54c base_name \uc778\uc218\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"Usage"},{"location":"Routers/#using-include-with-routers","text":"\ub77c\uc6b0\ud130 \uc778\uc2a4\ud134\uc2a4\uc758 .urls \uc18d\uc131\uc740 URL \ud328\ud134\uc758 \ud45c\uc900 list\uc77c \ubfd0\uc785\ub2c8\ub2e4. \uc774\ub7ec\ud55c URL\uc744 \ud3ec\ud568\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc5d0\ub294 \uc5ec\ub7ec \uc2a4\ud0c0\uc77c\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 router.urls \ub97c views \ubaa9\ub85d\uc5d0 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. router = routers.SimpleRouter() router.register(r'users', UserViewSet) router.register(r'accounts', AccountViewSet) urlpatterns = [ url(r'^forgot-password/$', ForgotPasswordFormView.as_view()), ] urlpatterns += router.urls \ub610\ub294 Django\uc758 include \ud568\uc218\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. urlpatterns = [ url(r'^forgot-password/$', ForgotPasswordFormView.as_view()), url(r'^', include(router.urls)), ] \ub77c\uc6b0\ud130 URL \ud328\ud134\ub3c4 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uac00 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. urlpatterns = [ url(r'^forgot-password/$', ForgotPasswordFormView.as_view()), url(r'^api/', include(router.urls, namespace='api')), ] \ud558\uc774\ud37c\ub9c1\ud06c\uac00 \uc788\ub294 serializer\uc640 \ud568\uaed8 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 serializer\uc758 view_name parameter\uac00 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub97c \uc62c\ubc14\ub974\uac8c \ubc18\uc601\ud558\ub294\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4. \uc704\uc758 \uc608\uc81c\uc5d0\uc11c \uc0ac\uc6a9\uc790 detail view\uc5d0 \ud558\uc774\ud37c\ub9c1\ud06c \ub41c serializer \ud544\ub4dc\uc5d0 \ub300\ud574 view_name='api:user-detail' \uacfc \uac19\uc740 parameter\ub97c \ud3ec\ud568\ud574\uc57c\ud569\ub2c8\ub2e4.","title":"Using include with routers"},{"location":"Routers/#extra-link-and-actions","text":"@detail_route \ub098 @list_route \ub85c \uc7a5\uc2dd \ub41c viewset\uc758 \ubaa8\ub4e0 \uba54\uc11c\ub4dc\ub3c4 \ub77c\uc6b0\ud2b8\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, UserViewSet \ud074\ub798\uc2a4\uc5d0\uc11c \ub2e4\uc74c\uacfc \uac19\uc740 \uba54\uc11c\ub4dc\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. from myapp.permissions import IsAdminOrIsSelf from rest_framework.decorators import detail_route class UserViewSet(ModelViewSet): ... @detail_route(methods=['post'], permission_classes=[IsAdminOrIsSelf]) def set_password(self, request, pk=None): ... \ub2e4\uc74c URL\ud328\ud134\uc774 \ucd94\uac00\ub85c \uc0dd\uc131\ub429\ub2c8\ub2e4. URL pattern: ^users/{pk}/set_password/$ Name: 'user-set-password' custom \uc791\uc5c5\uc5d0 \ub300\ud574 \uc0dd\uc131 \ub41c \uae30\ubcf8 URL\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc73c\ub824\uba74 \ub300\uc2e0 url_path parameter\ub97c \uc0ac\uc6a9\ud558\uc5ec custom \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 custom \uc561\uc158\uc758 URL\uc744 ^users/{pk}/change-password/$ \uc73c\ub85c \ubcc0\uacbd\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \uc791\uc131\ud558\uc138\uc694. from myapp.permissions import IsAdminOrIsSelf from rest_framework.decorators import detail_route class UserViewSet(ModelViewSet): ... @detail_route(methods=['post'], permission_classes=[IsAdminOrIsSelf], url_path='change-password') def set_password(self, request, pk=None): ... \uc704\uc758 \uc608\uc81c\ub294 \uc774\uc81c \ub2e4\uc74c URL\ud328\ud134\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. URL pattern: ^users/{pk}/change-password/$ Name: 'user-change-password' custom \uc561\uc158\uc5d0 \ub300\ud574 \uc0dd\uc131\ub41c \uae30\ubcf8 \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc73c\ub824\ub294 \uacbd\uc6b0 url_name parameter\ub97c \uc0ac\uc6a9\ud558\uc5ec custom \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, custo,\uc561\uc158\uc758 \uc774\ub984\uc744 'user-change-password' \ub85c \ubcc0\uacbd\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from myapp.permissions import IsAdminOrIsSelf from rest_framework.decorators import detail_route class UserViewSet(ModelViewSet): ... @detail_route(methods=['post'], permission_classes=[IsAdminOrIsSelf], url_name='change-password') def set_password(self, request, pk=None): ... \uc704\uc758 \uc608\uc81c\ub294 \uc774\uc81c \ub2e4\uc74c URL\ud328\ud134\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. URL pattern: ^users/{pk}/set_password/$ Name: 'user-change-password' \ub610\ud55c url_path \uc640 url_name parameter\ub97c \ud568\uaed8 \uc0ac\uc6a9\ud558\uc5ec custom view\uc5d0 \ub300\ud55c URL\uc0dd\uc131\uc744 \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 marking extra actions for routing \ucc38\uc870\ud558\uc138\uc694.","title":"Extra link and actions"},{"location":"Routers/#api-guide","text":"","title":"API Guide"},{"location":"Routers/#simplerouter","text":"\uc774 \ub77c\uc6b0\ud130\uc5d0\ub294 list , create , retrieve , update , partial_update , destroy \ud45c\uc900 set \uc791\uc5c5\uc5d0 \ub300\ud55c \uacbd\ub85c\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. viewset\uc740 @detail_route \ub098 @list_route \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub77c\uc6b0\ud2b8 \ub420 \ucd94\uac00 \uba54\uc11c\ub4dc\ub97c \ud45c\uc2dc \ud560 \uc218\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c SimpleRouter \ub85c \ub9cc\ub4e0 URL \ub4a4\uc5d0\ub294 \uc2ac\ub798\uc2dc\uac00 \ucd94\uac00\ub429\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc740 \ub77c\uc6b0\ud130\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560\ub54c trailing_slash \uc778\uc218\ub97c False \ub85c \uc124\uc815\ud558\uc5ec \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608: router = SimpleRouter(trailing_slash=False) \ub4a4\uc5d0 \uc624\ub294 \uc2ac\ub798\uc2dc\ub294 Django\uc5d0\uc11c\ub294 \uc77c\ubc18\uc801\uc774\uc9c0\ub9cc \ub808\uc77c\uc2a4\uc640 \uac19\uc740 \ub2e4\ub978 \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc5b4\ub5a4 \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\uac00 \ud2b9\uc815 \ub77c\uc6b0\ud305 \uc2a4\ud0c0\uc77c\uc744 \uae30\ub300\ud560\uc9c0\ub77c\ub3c4, \uc5b4\ub5a4 \uc2a4\ud0c0\uc77c\uc744 \uc120\ud0e3 \ud558\ub290\ub0d0\ub294 \ub300\ubd80\ubd84 \ud658\uacbd \uc124\uc815\uc758 \ubb38\uc81c\uc785\ub2c8\ub2e4. \ub77c\uc6b0\ud130\ub294 \uc2ac\ub798\uc2dc\uc640 \ub9c8\uce68\ud45c\ub97c \uc81c\uc678\ud55c \ubb38\uc790\uac00 \ud3ec\ud568 \ub41c \uc870\ud68c\uac12\uc744 \ub9e4\uce58\uc2dc\ud0b5\ub2c8\ub2e4. \ubcf4\ub2e4 \uc81c\ud55c\uc801\uc778(\ud639\uc740 \uad00\ub300\ud55c) \uac80\uc0c9 \ud328\ud134\uc758 \uacbd\uc6b0, viewset\uc5d0 lookup_value_regex \uc18d\uc131\uc744 \uc124\uc815\ud558\uc138\uc694. \uc608\ub97c \ub4e4\uc5b4, \uc870\ud68c\ub97c \uc720\ud6a8\ud55c UUID \ub85c \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class MyModelViewSet(mixins.RetrieveModelMixin, viewsets.GenericViewSet): lookup_field = 'my_model_id' lookup_value_regex = '[0-9a-f]{32}'","title":"SimpleRouter"},{"location":"Routers/#defaultrouter","text":"\uc774 \ub77c\uc6b0\ud130\ub294 \uc704\uc640 \uac19\uc774 SimpleRouter \uc640 \ube44\uc2b7\ud558\uc9c0\ub9cc \ubaa8\ub4e0 list views\uc5d0 \ub300\ud55c \ud558\uc774\ud37c\ub9c1\ud06c\uac00 \ud3ec\ud568 \ub41c response\uc744 \ubc18\ud658\ud558\ub294 \uae30\ubcf8 API root view\ub97c \ucd94\uac00\ub85c \ud3ec\ud568\ud569\ub2c8\ub2e4. \uc120\ud0dd\uc801 .json \uc2a4\ud0c0\uc77c \ud615\uc2dd \uc811\ubbf8\uc0ac\uc5d0 \ub300\ud55c \uacbd\ub85c\ub3c4 \uc0dd\uc131\ud569\ub2c8\ub2e4. SimpleRouter \uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c \ub77c\uc6b0\ud130\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560\ub54c trailing_slash \uc778\uc218\ub97c False \ub85c \uc124\uc815\ud558\uba74 URL \uacbd\ub85c\uc5d0 \ub530\ub77c\uc624\ub294 \uc2ac\ub798\uc2dc\ub97c \uc81c\uac70\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. router = DefaultRouter(trailing_slash=False)","title":"DefaultRouter"},{"location":"Routers/#custom-routers","text":"custom router \ub97c \uad6c\ud604\ud558\ub294 \uac83\uc740 \uc790\uc8fc\ud574\uc57c \ud560 \uc77c\uc740 \uc544\ub2c8\uc9c0\ub9cc API URL \uc774 \uc5b4\ub5bb\uac8c \uad6c\uc131\ub418\ub294\uc9c0\uc5d0 \ub300\ud55c \uc694\uad6c\uc0ac\ud56d\uc774 \uc788\ub294 \uacbd\uc6b0 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc7ac\uc0ac\uc6a9 \ud560 \uc218 \uc788\ub294 \ubc29\uc2dd\uc73c\ub85c URL\uad6c\uc870\ub97c \ucea1\uc290\ud654 \ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \uac01 \uc0c8\ub85c\uc6b4 view\uc5d0 \ub300\ud574 \uba85\uc2dc\uc801\uc73c\ub85c URL \ud328\ud134\uc744 \uc791\uc131 \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. custom router \ub97c \uad6c\ud604\ud558\ub294 \uac00\uc7a5 \uac04\ub2e8\ud55c \ubc29\ubc95\uc740 \uae30\ubcf8 \ub77c\uc6b0\ud130 \ud074\ub798\uc2a4 \uc911 \ud558\ub098\ub97c \uc11c\ube0c \ud074\ub798\uc2a4\ub85c \ub9cc\ub4dc\ub294 \uac83\uc785\ub2c8\ub2e4. .routes \uc18d\uc131\uc740 \uac01 viewset\uc5d0 \ub9f5\ud551 \ub420 URL \ud328\ud134\uc744 template\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. .routes \uc18d\uc131\uc740 \uacbd\ub85c\uc9c0\uc815 \ud29c\ud50c\uc758 list\uc785\ub2c8\ub2e4. Route \ub77c\ub294 \ud29c\ud50c\uc5d0 \ub300\ud55c \uc778\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. url : \ub77c\uc6b0\ud2b8 \ub420 URL\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4. \ub2e4\uc74c \ud0c0\uc785\uc758 \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. {prefix} : \uc774 \uacbd\ub85c \uc9d1\ud569\uc5d0 \uc0ac\uc6a9\ud560 URL \uc811\ub450\uc0ac\uc785\ub2c8\ub2e4. {lookup} : \ub2e8\uc77c \uc778\uc2a4\ud134\uc2a4\uc640 \ub9e4\uce58\uc2dc\ud0a4\ub294\ub370 \uc0ac\uc6a9\ub418\ub294 \uc870\ud68c \ud544\ub4dc\uc785\ub2c8\ub2e4. {trailing_slash} : trailing_slash \uc778\uc218\uc5d0 \ub530\ub77c '/' \ub098 \ube48 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. mapping : HTTP \uba54\uc11c\ub4dc \uc774\ub984\uc744 \ubdf0 \uba54\uc11c\ub4dc\uc5d0 \ub9e4\ud551. name : reverse \ud638\ucd9c\uc5d0 \uc0ac\uc6a9\ub418\ub294 URL\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \ub2e4\uc74c \ud0c0\uc785\uc758 \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568 \ud560 \uc218 \uc788\uc501\ub2c8\ub2e4. {basename} : \uc0dd\uc131\ub41c URL \uc774\ub984\uc5d0 \uc0ac\uc6a9\ud560 \uae30\uc900\uc785\ub2c8\ub2e4. initkwargs : view\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c \uc804\ub2ec\ub418\uc5b4\uc57c\ud558\ub294 \ucd94\uac00 \uc778\uc218\uc758 dict. suffix \uc778\uc218\ub294 \ubdf0 \uc774\ub984\uacfc \ud0d0\uc0c9 \uacbd\ub85c \ub9c1\ud06c\ub97c \uc0dd\uc131 \ud560 \ub584 \uc0ac\uc6a9\ub418\ub294 viewset \uc720\ud615\uc744 \uc2dd\ubcc4\ud558\uae30 \uc704\ud574 \uc608\uc57d\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.","title":"Custom Routers"},{"location":"Routers/#customizing-dynamic-routes","text":"@list_route \uc640 @detail_route \ub370\ucf54\ub808\uc774\ud130\uac00 \ub77c\uc6b0\ud305\ub418\ub294 \ubc29\ubc95\uc744 custom \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub370\ucf54\ub808\uc774\ud130 \uc911 \ud558\ub098\ub098 \ubaa8\ub450\ub97c \ub77c\uc6b0\ud2b8\ud558\ub824\uba74 .routes \ubaa9\ub85d\uc5d0 DynamicListRoute \uc640 / \uc774\ub098 DynamicDetailRoute \ub77c\ub294 \uc774\ub984\uc758 \ud29c\ud50c\uc744 \ud3ec\ud568\ud558\uc138\uc694. DynamicListRoute \uc640 DynamicDetailRoute \uc758 \uc778\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. url : \ub77c\uc6b0\ud2b8 \ub420 URL\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4. Route \uc640 \ub3d9\uc77c\ud55c \ud0c0\uc785\uc758 \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568\ud560 \uc218 \uc788\uc73c\uba70, {methodname} \uacfc {methodnamehyphen} \ud615\uc2dd \ubb38\uc790\uc5f4\uc744 \ucd94\uac00\ub85c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. name : reverse \ud638\ucd9c\uc5d0 \uc0ac\uc6a9\ub418\ub294 URL\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. {basename} , {methodname} \ubc0f {methodnamehyphen} \uacfc \uac19\uc740 \ud615\uc2dd \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. initkwargs : \ubdf0\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c \uc804\ub2ec\ub418\uc5b4\uc57c \ud558\ub294 \ucd94\uac00 \uc778\uc218\uc758 dict","title":"Customizing dynamic routes"},{"location":"Routers/#example","text":"\ub2e4\uc74c \uc608\ub294 'list'\uc640 'retrieve`\uc758 \uc561\uc158\uc5d0\ub9cc \ub77c\uc6b0\ud305\ud558\uba70, \ud6c4\ud589 \uc2ac\ub798\uc2dc \uaddc\uce59\uc740 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. from rest_framework.routers import Route, DynamicDetailRoute, SimpleRouter class CustomReadOnlyRouter(SimpleRouter): \"\"\" A router for read-only APIs, which doesn't use trailing slashes. \"\"\" routes = [ Route( url=r'^{prefix}$', mapping={'get': 'list'}, name='{basename}-list', initkwargs={'suffix': 'List'} ), Route( url=r'^{prefix}/{lookup}$', mapping={'get': 'retrieve'}, name='{basename}-detail', initkwargs={'suffix': 'Detail'} ), DynamicDetailRoute( url=r'^{prefix}/{lookup}/{methodnamehyphen}$', name='{basename}-{methodnamehyphen}', initkwargs={} ) ] CustomReadOnlyRouter \uac00 \uac04\ub2e8\ud55c viewset\uc744 \uc704\ud574 \uc0dd\uc131 \ud560 \ub77c\uc6b0\ud2b8\ub97c \uc0b4\ud3b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. views.py : class UserViewSet(viewsets.ReadOnlyModelViewSet): \"\"\" A viewset that provides the standard actions \"\"\" queryset = User.objects.all() serializer_class = UserSerializer lookup_field = 'username' @detail_route() def group_names(self, request): \"\"\" Returns a list of all the group names that the given user belongs to. \"\"\" user = self.get_object() groups = user.groups.all() return Response([group.name for group in groups]) urls.py : router = CustomReadOnlyRouter() router.register('users', UserViewSet) urlpatterns = router.urls \ub2e4\uc74c\uacfc \uac19\uc740 \ub9e4\uce6d\uc774 \uc0dd\uc131\ub429\ub2c8\ub2e4... URL HTTP Method Action URL Name /users GET list user-list /users/{username} GET retrieve user-detail /users/{username}/group-names GET group_names user-group-names .routes \uc18d\uc131\uc744 \uc124\uc815\ud558\ub294 \ub2e4\ub978 \uc608\uc81c\ub294 SimpleRouter \ud074\ub798\uc2a4\uc758 \uc18c\uc2a4 \ucf54\ub4dc\ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"Example"},{"location":"Routers/#advanced-custom-routers","text":"\uc644\uc804\ud788 custom\ub41c \ub3d9\uc791\uc744 \uc81c\uacf5\ud558\ub824\uba74 BaseRouter \ub97c \ub300\uccb4\ud558\uace0 get_urls(self) \uba54\uc11c\ub4dc\ub97c \ub300\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 \ub4f1\ub85d \ub41c viewset\uc744 \uac80\uc0ac\ud558\uace0, URL \ud328\ud134 list\ub97c \ub9ac\ud134\ud574\uc57c\ud569\ub2c8\ub2e4. \ub4f1\ub85d\ub41c prefix, viewset, basename \ud29c\ud50c\uc740 self.registry \uc18d\uc131\uc5d0 \uc561\uc11c\uc2a4\ud558\uc5ec \uac80\uc0ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. get_default_base_name(self, viewset) \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uac70\ub098, viewset\uc744 \ub77c\uc6b0\ud130\uc5d0 \ub4f1\ub85d \ud560 \ub54c \ud56d\uc0c1 base_name \uc778\uc218\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Advanced custom routers"},{"location":"Routers/#third-party-packages","text":"\ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"Third Party Packages"},{"location":"Routers/#drf-nested-routers","text":"drf-nested-routers \ud328\ud0a4\uc9c0 \ub294 \uc911\ucca9\ub41c \ub9ac\uc18c\uc2a4\ub85c \uc791\uc5c5\ud558\uae30 \uc704\ud55c \ub77c\uc6b0\ud130\uc640 \uad00\uacc4 \ud544\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"DRF Nested Routers"},{"location":"Routers/#modelrouter-wqdbrest","text":"wq.db \ud328\ud0a4\uc9c0 \ub294 register_model() API\ub85c DefaultRouter \ub97c \ud655\uc7a5\ud558\ub294 \uace0\uae09 ModelRouter \ud074\ub798\uc2a4(\ubc0f \uc2f1\uae00 \ud1a4 \uc778\uc2a4\ud134\uc2a4)\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Django\uc758 admin.site.register \uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c rest.router.register_model \uc5d0 \ud544\uc694\ud55c \uc720\uc77c\ud55c \uc778\uc218\ub294 \ubaa8\ub378 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. url prefix, serializer, viewset\uc5d0 \ub300\ud55c \ud569\ub9ac\uc801\uc778 \uae30\ubcf8\uac12\uc740 \ubaa8\ub378\uacfc \uc804\uc5ed\uad6c\uc131\uc5d0\uc11c \uc720\ucd94\ub429\ub2c8\ub2e4. from wq.db import rest from myapp.models import MyModel rest.router.register_model(MyModel)","title":"ModelRouter (wq.db.rest)"},{"location":"Routers/#drf-extensions","text":"DRF-extensions package \ub294 \uc911\ucca9\ub41c viewset , custom\uac00 \uac00\ub2a5\ud55c \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc774\ub984 \uc744 \uac00\uc9c4 \ucf5c\ub809\uc158 \ub808\ubca8 \ucee8\ud2b8\ub864\ub7ec \ub97c \uc791\uc131\ud558\uae30 \uc704\ud55c \ub77c\uc6b0\ud130 \ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"DRF-extensions"},{"location":"Schemas/","text":"Django REST Framework - Schemas \"A machine-readable [schema] describes what resources are available via the API, what their URLs are, how they are represented and what operations they support.\" \"\uae30\uacc4 \ud310\ub3c5 \uac00\ub2a5\ud55c [\uc2a4\ud0a4\ub9c8]\ub294 API\ub97c \ud1b5\ud574 \uc0ac\uc6a9\ud560 \uc218\uc788\ub294 \ub9ac\uc18c\uc2a4, \ud574\ub2f9 URL\uc758 \uc758\ubbf8, \ud45c\ud604 \ubc29\ubc95 \ubc0f \uc9c0\uc6d0 \uc791\uc5c5\uc744 \uc124\uba85\ud569\ub2c8\ub2e4.\" \u2014 Heroku, JSON Schema for the Heroku Platform API Schemas API schema\ub294 \ucc38\uc870 \ubb38\uc11c\ub97c \uc0dd\uc131\ud558\uac70\ub098 API\uc640 \uc0c1\ud638 \uc791\uc6a9 \ud560 \uc218 \uc788\ub294 \ub3d9\uc801 \ud074\ub77c\uc774\uc5b8\ud2b8 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uad6c\ub3d9\ud558\ub294 \ub4f1 \ub2e4\uc591\ud55c \uc0ac\uc6a9 \uc0ac\ub840\ub97c \ud5c8\uc6a9\ud558\ub294 \uc720\uc6a9\ud55c \ub3c4\uad6c\uc785\ub2c8\ub2e4. Representing schemas internally (\ub0b4\ubd80\uc801\uc73c\ub85c \uc2a4\ud0a4\ub9c8 \ud45c\ud604\ud558\uae30) REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ud615\uc2dd \ub3c5\ub9bd\uc801\uc778 \ud45c\ud604\uc73c\ub85c \uc2a4\ud0a4\ub9c8 \uc815\ubcf4\ub97c \ubaa8\ub378\ub9c1\ud558\uae30 \uc704\ud574 Core API \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uc815\ubcf4\ub294 \ub2e4\uc591\ud55c \uc2a4\ud0a4\ub9c8 \ud615\uc2dd\uc73c\ub85c \ub80c\ub354\ub9c1\ub418\uac70\ub098 API \ubb38\uc11c\ub97c \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Core API\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc2a4\ud0a4\ub9c8\ub294 API\uc5d0 \ub300\ud55c \uc815\ubcf4\uc758 \ucd5c\uc0c1\uc704 \ucee8\ud14c\uc774\ub108 \uac1d\uccb4\uc778 \ubb38\uc11c\ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c API \uc0c1\ud638\uc791\uc6a9\uc740 \ub9c1\ud06c \uac1d\uccb4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uac01 \ub9c1\ud06c\ub294 URL, HTTP \uba54\uc11c\ub4dc\ub97c \ud3ec\ud568\ud558\uba70 API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \uc2b9\uc778 \ud560 \uc218 \uc788\ub294 \ub9e4\uac1c\ubcc0\uc218\ub97c \uc124\uba85\ud558\ub294 Field \uc778\uc2a4\ud134\uc2a4 \ubaa9\ub85d\uc744 \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Link \uc640 Field \uc778\uc2a4\ud134\uc2a4\uc5d0\ub294 API \uc2a4\ud0a4\ub9c8\ub97c \uc0ac\uc6a9\uc790 \ubb38\uc11c\ub85c \ub80c\ub354\ub9c1 \ud560 \uc218 \uc788\ub294 \uc124\uba85\uc774 \ud3ec\ud568\ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \ub2e8\uc77c \uac80\uc0c9 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ud3ec\ud568\ud558\ub294 API \uc124\uba85\uc758 \uc608\uc785\ub2c8\ub2e4. coreapi.Document( title='Flight Search API', url='https://api.example.org/', content={ 'search': coreapi.Link( url='/search/', action='get', fields=[ coreapi.Field( name='from', required=True, location='query', description='City name or airport code.' ), coreapi.Field( name='to', required=True, location='query', description='City name or airport code.' ), coreapi.Field( name='date', required=True, location='query', description='Flight date in \"YYYY-MM-DD\" format.' ) ], description='Return flight availability and prices.' ) } ) Schema output formats HTTP response\uc73c\ub85c \ud45c\uc2dc\ub418\ub824\uba74 \ub0b4\ubd80 \ud45c\ud604\uc774 response\uc5d0 \uc0ac\uc6a9 \ub41c \uc2e4\uc81c \ubc14\uc774\ud2b8\ub85c \ub80c\ub354\ub9c1\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. Core JSON \uc740 Core API\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c \ud45c\uc900 \ud615\uc2dd\uc73c\ub85c \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\ub294 \uc774 \ubbf8\ub514\uc5b4 \uc720\ud615\uc744 \ucc98\ub9ac\ud558\uae30 \uc704\ud55c \ub80c\ub354\ub7ec \ud074\ub798\uc2a4\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc73c\uba70, \uc774 \ub80c\ub354\ub7ec\ud074\ub798\uc2a4\ub294 CoreJSONRenderer \ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Open API (\"Swagger\"), JSON HyperSchema , API Blueprint \uc640 \uac19\uc740 \ub2e4\ub978 \uc2a4\ud0a4\ub9c8 \ud615\uc2dd\ub3c4 custom renderer \ud074\ub798\uc2a4\ub97c \uad6c\ud604\ud558\uc5ec \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Schemas vs Hypermedia Core API\ub294 API \uc2a4\ud0a4\ub9c8\uc5d0 \ub300\ud55c \ub300\uc548\uc801\uc778 \uc0c1\ud638\uc791\uc6a9 \uc2a4\ud0c0\uc77c\uc744 \uc81c\uc2dc\ud558\ub294 \ud558\uc774\ud37c \ubbf8\ub514\uc5b4 \uc751\ub2f5\uc744 \ubaa8\ub378\ub9c1\ud558\ub294\ub370 \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4\ub294 \uc810\uc744 \uc5ec\uae30\uc11c \uc9c0\uc801 \ud560 \ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4. API \uc2a4\ud0a4\ub9c8\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc804\uccb4 \uc778\ud130\ud398\uc774\uc2a4\uac00 \ub2e8\uc77c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub85c \uc81c\uacf5\ub429\ub2c8\ub2e4. \uac1c\ubcc4 API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \ub300\ud55c \uc751\ub2f5\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \uac01 response\uc5d0 \ucd94\uac00 \uc0c1\ud638 \uc791\uc6a9\uc5c6\uc774 \uc77c\ubc18 \ub370\uc774\ud130\ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4. Hypermedia\ub97c \uc0ac\uc6a9\ud558\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ub370\uc774\ud130\uc640 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc0c1\ud638 \uc791\uc6a9\uc774 \ubaa8\ub450 \ud3ec\ud568\ub41c \ubb38\uc11c\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. \uac01 \uc0c1\ud638 \uc791\uc6a9\uc744 \ud1b5\ud574 \ud604\uc7ac \uc0c1\ud0dc\uc640 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc0c1\ud638 \uc791\uc6a9\uc744 \uc790\uc138\ud788 \uc124\uba85\ud558\ub294 \uc0c8 \ubb38\uc11c\uac00 \uc0dd\uc131\ub429\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec Hypermedia API\ub97c \ube4c\ub4dc\ud558\ub294\ub370 \ub300\ud55c \uc790\uc138\ud55c \uc815\ubcf4\uc640 \uc9c0\uc6d0\uc740 \ud5a5\ud6c4 \ubc84\uc804\uc5d0\uc11c \uacc4\ud68d\ub429\ub2c8\ub2e4. Adding a schema REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ub300\ud55c \uc2a4\ud0a4\ub9c8 \uc9c0\uc6d0\uc744 \ucd94\uac00\ud558\ub824\uba74 coreapi \ud328\ud0a4\uc9c0\ub97c \uc124\uce58\ud574\uc57c\ud569\ub2c8\ub2e4. pip install coreapi REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\ub294 \uc2a4\ud0a4\ub9c8 \uc790\ub3d9 \uc0dd\uc131 \uae30\ub2a5\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uac70\ub098 \uba85\uc2dc\uc801\uc744 \uc2a4\ud0a4\ub9c8\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud544\uc694\ud55c \ud56d\ubaa9\uc5d0 \ub530\ub77c API\uc5d0 \uc2a4\ud0a4\ub9c8\ub97c \ucd94\uac00\ud558\ub294 \uba87\uac00\uc9c0 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4. The get_schema_view shortcut \ud504\ub85c\uc81d\ud2b8\uc5d0 \uc2a4\ud0a4\ub9c8\ub97c \ud3ec\ud568\uc2dc\ud0a4\ub294 \uac00\uc7a5 \uac04\ub2e8\ud55c \ubc29\ubc95\uc740 get_schema_view() \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. schema_view = get_schema_view(title=\"Server Monitoring API\") urlpatterns = [ url('^$', schema_view), ... ] view\uac00 \ucd94\uac00\ub418\uba74 \uc790\ub3d9 \uc0dd\uc131 \uc2a4\ud0a4\ub9c8 \uc815\uc758\ub97c \uac80\uc0c9\ud558\uae30 \uc704\ud55c API \uc694\uccad\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. $ http http://127.0.0.1:8000/ Accept:application/vnd.coreapi+json HTTP/1.0 200 OK Allow: GET, HEAD, OPTIONS Content-Type: application/vnd.coreapi+json { \"_meta\": { \"title\": \"Server Monitoring API\" }, \"_type\": \"document\", ... } get_schema_view() \uc5d0 \ub300\ud55c \uc778\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. title : \uc2a4\ud0a4\ub9c8 \uc815\uc758\ub97c \uc124\uba85\ud558\ub294 \uc81c\ubaa9\uc744 \uc81c\uacf5\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. url : \uc2a4\ud0a4\ub9c8\uc758 \ud45c\uc900 URL\uc744 \uc804\ub2ec\ud558\ub294\ub370 \uc0ac\uc6a9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. schema_view = get_schema_view( title='Server Monitoring API', url='https://www.example.org/api/' ) urlconf : API \uc2a4\ud0a4\ub9c8\ub97c \uc0dd\uc131\ud558\ub824\ub294 URL conf\uc758 \uac00\uc838\uc624\uae30 \uacbd\ub85c\ub97c \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 Django\uc758 ROOT_URLCONF \uc124\uc815 \uac12\uc785\ub2c8\ub2e4. schema_view = get_schema_view( title='Server Monitoring API', url='https://www.example.org/api/', urlconf='myproject.urls' ) renderer_classes : API root \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 \ub80c\ub354\ub9c1\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub80c\ub354\ub7ec \ud074\ub798\uc2a4 \uc14b\uc744 \uc804\ub2ec\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.renderers import CoreJSONRenderer from my_custom_package import APIBlueprintRenderer schema_view = get_schema_view( title='Server Monitoring API', url='https://www.example.org/api/', renderer_classes=[CoreJSONRenderer, APIBlueprintRenderer] ) Using an explicit schema view get_schema_view() shortcut\uc774 \uc81c\uacf5\ud558\ub294 \uac83\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \ucee8\ud2b8\ub864\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 SchemaGenerator \ud074\ub798\uc2a4\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud558\uc5ec Document \uc778\uc2a4\ud134\uc2a4\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud558\uace0 \ubdf0\uc5d0\uc11c \uc774\ub97c \ubc18\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc635\uc165\uc744 \uc0ac\uc6a9\ud558\uba74 \uc6d0\ud558\ub294 \ubaa8\ub4e0 \ub3d9\uc791\uc73c\ub85c \uc2a4\ud0a4\ub9c8 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc2a4\ud0a4\ub9c8 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \ub2e4\ub978 \uc0ac\uc6a9 \uad8c\ud55c, \uc81c\ud55c \ub610\ub294 \uc778\uc99d \uc815\ucc45\uc744 \uc801\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc740 SchemaGenerator \ub97c \ubdf0\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\ub824 \uc2a4\ud0a4\ub9c8\ub97c \ubc18\ud658\ud558\ub294 \uc608\uc81c\uc785\ub2c8\ub2e4. get_schema_view () \ubc14\ub85c \uac00\uae30\uac00 \uc81c\uacf5\ud558\ub294 \uac83\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \ucee8\ud2b8\ub864\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 SchemaGenerator \ud074\ub798\uc2a4\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud558\uc5ec Document \uc778\uc2a4\ud134\uc2a4\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud558\uace0 \ubdf0\uc5d0\uc11c\uc774\ub97c \ubc18\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. views.py : from rest_framework.decorators import api_view, renderer_classes from rest_framework import renderers, response, schemas generator = schemas.SchemaGenerator(title='Bookings API') @api_view() @renderer_classes([renderers.CoreJSONRenderer]) def schema_view(request): schema = generator.get_schema(request) return response.Response(schema) urls.py : urlpatterns = [ url('/', schema_view), ... ] \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uad8c\ud55c\uc5d0 \ub530\ub77c \ub2e4\ub978 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ub2e4\ub978 \uc2a4\ud0a4\ub9c8\ub97c \uc81c\uacf5\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc811\uadfc\ubc95\uc740 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc774 \uc778\uc99d\ub41c \uc694\uccad\uacfc \ub2e4\ub978 \uc2a4\ud0a4\ub9c8\ub85c \uc81c\uacf5\ub418\uac70\ub098 API\uc758 \ub2e4\ub978 \ubd80\ubd84\uc774 \ud574\ub2f9 \uc5ed\ud560\uc5d0 \ub530\ub77c \ub2e4\ub978 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud45c\uc2dc\ub418\ub3c4\ub85d\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uad8c\ud55c\uc73c\ub85c \ud544\ud130\ub9c1 \ub41c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \uc788\ub294 \uc2a4\ud0a4\ub9c8\ub97c \ud45c\uc2dc\ud558\ub824\uba74 get_schema() \uba54\uc11c\ub4dc\uc5d0 request \uc778\uc218\ub97c \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. @api_view() @renderer_classes([renderers.CoreJSONRenderer]) def schema_view(request): generator = schemas.SchemaGenerator(title='Bookings API') return response.Response(generator.get_schema(request=request)) Explicit schema definition \uc790\ub3d9 \uc0dd\uc131 \ubc29\uc2dd\uc758 \ub300\uc548\uc740 \ucf54\ub4dc\ubca0\uc774\uc2a4\uc5d0 Document \uac1d\uccb4\ub97c \uc120\uc5b8\ud558\uc5ec API \uc2a4\ud0a4\ub9c8\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud558\ub294\uac83\uc740 \uc870\uae08 \ub354 \uc791\uc5c5 \ud560 \uc218 \uc788\uc9c0\ub9cc \uc2a4\ud0a4\ub9c8 \ud45c\ud604\uc744 \uc644\uc804\ud788 \uc81c\uc5b4 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. import coreapi from rest_framework.decorators import api_view, renderer_classes from rest_framework import renderers, response schema = coreapi.Document( title='Bookings API', content={ ... } ) @api_view() @renderer_classes([renderers.CoreJSONRenderer]) def schema_view(request): return response.Response(schema) Static schema file \ub9c8\uc9c0\ub9c9 \uc635\uc158\uc740 Core JSON \ub610\ub294 Open API \uc640 \uac19\uc740 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud615\uc2dd \uc911 \ud558\ub098\ub97c \uc0ac\uc6a9\ud558\uc5ec API schema\ub97c static \ud30c\uc77c\ub85c \uc791\uc131\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub2e4\uc74c \uc911 \ud558\ub098\ub97c \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2a4\ud0a4\ub9c8 \uc815\uc758\ub97c static \ud30c\uc77c\ub85c \uc791\uc131\ud558\uace0 static \ud30c\uc77c\uc744 \uc9c1\uc811 \uc81c\uacf5\ud558\uc138\uc694 . Core API\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub85c\ub4dc \ub41c \uc2a4\ud0a4\ub9c8 \uc815\uc758\ub97c \uc791\uc131\ud55c \ub2e4\uc74c \ud074\ub77c\uc774\uc5b8\ud2b8 \uc694\uccad\uc5d0 \ub530\ub77c \uc5ec\ub7ec\uac00\uc9c0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud615\uc2dd\uc911 \ud558\ub098\ub85c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. Schemas as documentation API \uc2a4\ud0a4\ub9c8\uc758 \uc77c\ubc18\uc801\uc778 \uc0ac\uc6a9\ubc95 \uc911 \ud558\ub098\ub294 \ubb38\uc11c \ud398\uc774\uc9c0\ub97c \uc791\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \uc2a4\ud0a4\ub9c8 \uc0dd\uc131\uc740 docstring\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc2a4\ud0a4\ub9c8 \ubb38\uc11c\uc758 \uc124\uba85\uc744 \uc790\ub3d9\uc73c\ub85c \ucc44\uc6c1\ub2c8\ub2e4. \uc774 \uc124\uba85\uc740 \ub2e4\uc74c\uc744 \uae30\ubc18\uc73c\ub85c \ud569\ub2c8\ub2e4. \ud574\ub2f9 \uba54\uc18c\ub4dc docstring\uc774 \uc788\ub294 \uacbd\uc6b0\ub294 \uadf8\uac83\uc744 \ub3cc\ub824\uc90d\ub2c8\ub2e4. docstring \ud074\ub798\uc2a4 \ub0b4\uc758 \uba85\uba85\ub41c \uc139\uc158\uc73c\ub85c, \ud55c \uc904 \ub610\ub294 \uc5ec\ub7ec \uc904\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. The class docstring. Examples \uba85\uc2dc\uc801\uc778 \uba54\uc11c\ub4dc docstring\uc774 \uc788\ub294 APIView \uc785\ub2c8\ub2e4. class ListUsernames(APIView): def get(self, request): \"\"\" Return a list of all user names in the system. \"\"\" usernames = [user.username for user in User.objects.all()] return Response(usernames) \uc124\uba85\ud558\ub294 \uc561\uc158 docstring\uc774 \uc788\ub294 ViewSet \uc785\ub2c8\ub2e4. class ListUsernames(ViewSet): def list(self, request): \"\"\" Return a list of all user names in the system. \"\"\" usernames = [user.username for user in User.objects.all()] return Response(usernames) \ub2e8\uc77c \ud589 \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec docstring \ud074\ub798\uc2a4\uc758 \uc139\uc158\uc774 \uc788\ub294 generic view\uc785\ub2c8\ub2e4. class UserList(generics.ListCreateAPIView): \"\"\" get: List all the users. post: Create a new user. \"\"\" queryset = User.objects.all() serializer_class = UserSerializer permission_classes = (IsAdminUser,) \ub2e4\uc911 \ud68c\uc120 \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec docstring \ud074\ub798\uc2a4\uc758 \uc139\uc158\uc774 \uc788\ub294 generic viewset\uc785\ub2c8\ub2e4. class UserViewSet(viewsets.ModelViewSet): \"\"\" API endpoint that allows users to be viewed or edited. retrieve: Return a user instance. list: Return all users, ordered by most recently joined. \"\"\" queryset = User.objects.all().order_by('-date_joined') serializer_class = UserSerializer Alternate schema formats \ub300\uccb4 \uc2a4\ud0a4\ub9c8 \ud615\uc2dd\uc744 \uc9c0\uc6d0\ud558\ub824\uba74 Document \uc778\uc2a4\ud134\uc2a4\ub97c \ubc14\uc774\ud2b8 \ud45c\ud604\uc73c\ub85c \ubcc0\ud658\ud558\ub294 \ucc98\ub9ac\ub97c \ub2f4\ub2f9\ud558\ub294 custom\uc758 rederer \ud074\ub798\uc2a4\ub97c \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\ud560 \ud615\uc2dd\uc744 \uc778\ucf54\ub529\uc744 \uc9c0\uc6d0\ud558\ub294 Core API \ucf54\ub371\ud328\ud0a4\uc9c0\uac00 \uc788\ub294 \uacbd\uc6b0 \ud574\ub2f9 \ucf54\ub371\uc744 \uc0ac\uc6a9\ud558\uc5ec rederer \ud074\ub798\uc2a4\ub97c \uad6c\ud604 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Example \uc608\ub97c \ub4e4\uc5b4 openapi_codec \ud328\ud0a4\uc9c0\ub294 Open API(\"Swagger\") \ud615\uc2dd\uc758 \uc778\ucf54\ub529 \ub610\ub294 \ub514\ucf54\ub529\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. from rest_framework import renderers from openapi_codec import OpenAPICodec class SwaggerRenderer(renderers.BaseRenderer): media_type = 'application/openapi+json' format = 'swagger' def render(self, data, media_type=None, renderer_context=None): codec = OpenAPICodec() return codec.dump(data) API Reference SchemaGenerator \uc2a4\ud0a4\ub9c8\ub97c \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9 \ud560 \uc218 \uc788\ub294 API view\ub97c \uac80\ud1a0\ud558\ub294 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ub2e4\uc74c\uacfc \uac19\uc774 \ub2e8\uc77c \uc778\uc218\ub85c SchemaGenerator \ub97c \uc778\uc2a4\ud134\uc2a4\ud654\ud569\ub2c8\ub2e4. generator = SchemaGenerator(title='Stock Prices API') Arguments: title required : API\uc758 \uc774\ub984. url : API \uc2a4\ud0a4\ub9c8\uc758 \ub8e8\ud2b8 URL\uc785\ub2c8\ub2e4. \uc2a4\ud0a4\ub9c8\uac00 \uacbd\ub85c \uc811\ub450\uc5b4\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc73c\uba74 \uc774 \uc635\uc158\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. patterns : \uc2a4\ud0a4\ub9c8\ub97c \uc0dd\uc131 \ud560 \ub54c \uac80\uc0ac \ud560 URL \ubaa9\ub85d\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \ud504\ub85c\uc81d\ud2b8\uc758 URL conf\uc785\ub2c8\ub2e4. urlconf : \uc2a4\ud0a4\ub9c8\ub97c \uc0dd\uc131 \ud560 \ub54c \uc0ac\uc6a9\ud560 URL conf \ubaa8\ub4c8 \uc774\ub984\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 settings.ROOT_URLCONF \uc785\ub2c8\ub2e4. get_schema(self, request) API \uc2a4\ud0a4\ub9c8\ub97c \ub098\ud0c0\ub0b4\ub294 coreapi.Document \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. @api_view @renderer_classes([renderers.CoreJSONRenderer]) def schema_view(request): generator = schemas.SchemaGenerator(title='Bookings API') return Response(generator.get_schema()) request \uc778\uc218\ub294 \uc120\ud0dd \uc0ac\ud56d\uc774\uba70, \uacb0\uacfc \uc2a4\ud0a4\ub9c8 \uc0dd\uc131\uc5d0 \uc0ac\uc6a9\uc790 \ubcc4 \uad8c\ud55c\uc744 \uc801\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. get_links(self, request) API \uc2a4\ud0a4\ub9c8\uc5d0 \ud3ec\ud568\ub418\uc5b4\uc57c \ud558\ub294 \ubaa8\ub4e0 \ub9c1\ud06c\uac00 \ud3ec\ud568\ub41c \uc911\ucca9\ub41c dict\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ub2e4\ub978 \ub808\uc774\uc544\uc6c3\uc73c\ub85c \uc0c8 dict\ub97c \ube4c\ub4dc\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \uc0dd\uc131\ub41c \uc2a4\ud0a4\ub9c8\uc758 \uacb0\uacfc \uad6c\uc870\ub97c \uc218\uc815\ud558\ub824\ub294 \uacbd\uc6b0 \uc774\ub97c \ub300\uccb4\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. get_link(self, path, method, view) \uc8fc\uc5b4\uc9c4 \ubdf0\uc5d0 \ud574\ub2f9\ud558\ub294 coreapi.Link \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ud2b9\uc815 \ubdf0\uc5d0 \ub300\ud574 custom \ub3d9\uc791\uc744 \uc81c\uacf5\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 \uc774 \uc124\uc815\uc744 \uc624\ubc84\ub77c\uc774\ub4dc \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. get_description(self, path, method, view) \ub9c1\ud06c \uc124\uba85\uc73c\ub85c \uc0ac\uc6a9\ud560 \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774\ub294 \uc704\uc758 \"Schemas as Documentation\" \uc139\uc158\uc5d0\uc11c \uc124\uba85\ud55c\ub300\ub85c docstring\uc744 \uae30\ubc18\uc73c\ub85c\ud569\ub2c8\ub2e4. get_encoding(self, path, method, view) \uc9c0\uc815\ub41c \ubdf0\uc640 \uc0c1\ud638 \uc791\uc6a9\ud560 \ub54c \ubaa8\ub4e0 request \ubcf8\ubb38\uc5d0 \ub300\ud55c \uc778\ucf54\ub529\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc608: application/json . request \ubcf8\ubb38\uc744 \uae30\ub300\ud558\uc9c0 \uc54a\ub294 \ubdf0\uc5d0 \ube48 \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. get_path_fields(self, path, method, view): coreapi.Link() \uc778\uc2a4\ud134\uc2a4\uc758 list\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. URL\uc758 \uac01 \uacbd\ub85c parameter\uc5d0 \ud558\ub098\uc529. get_serializer_fields(self, path, method, view) coreapi.Link() \uc778\uc2a4\ud134\uc2a4\uc758 list\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ubdf0\uac00 \uc0ac\uc6a9\ud558\ub294 serializer \ud074\ub798\uc2a4\uc758 \uac01 \ud544\ub4dc\uc5d0 \ud558\ub098\uc529. get_pagination_fields(self, path, method, view) \ubdf0\uac00 \uc0ac\uc6a9\ud558\ub294 pagination \ud074\ub798\uc2a4\uc758 get_schema_fields() \uba54\uc18c\ub4dc\uac00 \ubc18\ud658 \ud55c coreapi.Link() \uc778\uc2a4\ud134\uc2a4\uc758 list\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. get_filter_fields(self, path, method, view) \ubdf0\uc5d0 \uc758\ud574 \uc0ac\uc6a9 \ub41c filter \ud074\ub798\uc2a4\uc758 get_schema_fields() \uba54\uc18c\ub4dc\uc5d0 \uc758\ud574 \ub3cc\ub824 \uc8fc\uc5b4\uc9c0\ub294 coreapi.Link() \uc778\uc2a4\ud134\uc2a4\uc758 list\ub97c \ub3cc\ub824\uc90d\ub2c8\ub2e4. Core API \uc774 \ubb38\uc11c\ub294 API \uc2a4\ud0a4\ub9c8\ub97c \ud45c\ud604\ud558\ub294\ub370 \uc0ac\uc6a9\ub418\ub294 coreapi \ud328\ud0a4\uc9c0 \ub0b4\uc758 \uad6c\uc131 \uc694\uc18c\uc5d0 \ub300\ud55c \uac04\ub7b5\ud55c \uac1c\uc694\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud074\ub798\uc2a4\ub294 rest_framework \ud328\ud0a4\uc9c0\uac00 \uc544\ub2c8\ub77c coreapi \ud328\ud0a4\uc9c0\uc5d0\uc11c \uac00\uc838\uc635\ub2c8\ub2e4. Document API \uc2a4\ud0a4\ub9c8 \ucee8\ud14c\uc774\ub108\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. title : API\uc758 \uc774\ub984 url : API\uc758 \ud45c\uc900 URL content : \uc2a4\ud0a4\ub9c8\uc5d0 \ud3ec\ud568 \ub41c Link \uac1c\uccb4\ub97c \ud3ec\ud568\ud558\ub294 dict\uc785\ub2c8\ub2e4. \uc2a4\ud0a4\ub9c8\uc5d0 \ub354 \ub9ce\uc740 \uad6c\uc870\ub97c \uc81c\uacf5\ud558\uae30 \uc704\ud574 content dict\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ub450\ubc88\uc9f8 \ub808\ubca8\ub85c \uc911\ucca9 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608: content={ \"bookings\": { \"list\": Link(...), \"create\": Link(...), ... }, \"venues\": { \"list\": Link(...), ... }, ... } Link \uac1c\ubcc4 API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. url : \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 URL. /users/{username}/ \uc640 \uac19\uc740 URI \ud15c\ud50c\ub9bf \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. action : \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc640 \uc5f0\uad00\ub41c HTTP \ubc29\ubc95. \ud558\ub098 \uac1c \uc774\uc0c1\uc758 HTTP \uba54\uc11c\ub4dc\ub97c \uc9c0\uc6d0\ud558\ub294 URL\uc740, \uac01\uac01 \ud558\ub098\uc758 Link \uc5d0 \ud574\ub2f9\ud574\uc57c\ud569\ub2c8\ub2e4. fields : \uc785\ub825\uc5d0 \uc0ac\uc6a9 \ud560 \uc218 \uc788\ub294 parameter\ub97c \uc124\uba85\ud558\ub294 Field \uc778\uc2a4\ud134\uc2a4\uc758 list\uc785\ub2c8\ub2e4. description : \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 \uc758\ubbf8\uc640 \uc6a9\ub3c4\uc5d0 \ub300\ud574 \uac04\ub2e8\ud55c \uc124\uba85. Field \uc9c0\uc815\ub41c API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \ub2e8\uc77c \uc785\ub825 \ub9e4\uac1c\ubcc0\uc218\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. name : \uc785\ub825\uc744 \uc124\uba85\ud558\ub294 \uc774\ub984\uc785\ub2c8\ub2e4. required : \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uac12\uc744 \ud3ec\ud568\ud558\ub294 \uacbd\uc6b0 \ub610\ub294 parameter\ub97c \uc0dd\ub7b5\ud560 \uc218 \uc788\ub294\uc9c0 \uc5ec\ubd80\ub97c \ub098\ud0c0\ub0b4\ub294 boolean \uc785\ub2c8\ub2e4. location : \uc815\ubcf4\uac00 request\uc5d0 \uc5b4\ub5bb\uac8c \uc778\ucf54\ub529\ub418\ub294\uc9c0 \uacb0\uc815\ud569\ub2c8\ub2e4. \ub2e4\uc74c \ubb38\uc790\uc5f4 \uc911 \ud558\ub098\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \"path\" \ud15c\ud50c\ub9bf \ud654 \ub41c URL\uc5d0 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 /products/slim-fit-jeans/ \uc640 \uac19\uc740 URL path\uc5d0\uc11c API \uc785\ub825\uc744 \ucc98\ub9ac\ud558\uae30 \uc704\ud574 /products/{product_code}/ \uc758 URL \uac12\uc744 \"path\" \uc785\ub825\ub780\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud544\ub4dc\ub294 \ub300\uac1c \ud504\ub85c\uc81d\ud2b8 URL conf\uc758 \uba85\uba85 \ub41c \uc778\uc218 \uc640 \uc77c\uce58\ud569\ub2c8\ub2e4. \"query\" URL \ucffc\ub9ac \ub9e4\uac1c\ubcc0\uc218\ub85c \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc608: ?search=sale . \uc77c\ubc18\uc801\uc73c\ub85c GET \uc694\uccad\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud544\ub4dc\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ubdf0\uc758 pagination \ubc0f \ud544\ud130\ub9c1 \ucee8\ud2b8\ub864\uacfc \uc77c\uce58\ud569\ub2c8\ub2e4. \"form\" request \ubcf8\ubb38\uc5d0 JSON \uac1d\uccb4 \ub610\ub294 HTML \uc591\uc2dd\uc758 \ub2e8\uc77c \ud56d\ubaa9\uc73c\ub85c \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc608 : {\"color\":\"blue\",...} . \uc77c\ubc18\uc801\uc73c\ub85c POST , PUT \ubc0f PATCH \uc694\uccad\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc5ec\ub7ec \"form\" \uc785\ub825\ub780\uc740 \ub2e8\uc77c \ub9c1\ud06c\uc5d0 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud544\ub4dc\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ubdf0\uc758 serializer \ud544\ub4dc\uc640 \uc77c\uce58\ud569\ub2c8\ub2e4. \"body\" \uc804\uccb4 request \ubcf8\ubb38\uc5d0 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c POST , PUT \ubc0f PATCH \uc694\uccad\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ub9c1\ud06c\uc5d0\ub294 \ub458 \uc774\uc0c1\uc758 \"body\" \ud544\ub4dc\uac00 \uc874\uc7ac \ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \"form\" \ud544\ub4dc\uc640 \ud568\uaed8 \uc0ac\uc6a9 \ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud544\ub4dc\ub294 \ubcf4\ud1b5 ListSerializer \ub97c \uc0ac\uc6a9\ud558\ub294 request \uc785\ub825\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud558\uac70\ub098 \ud30c\uc77c \uc5c5\ub85c\ub4dc \ubdf0\ub97c \uc0ac\uc6a9\ud558\ub294 view\uc640 \uc77c\uce58\ud569\ub2c8\ub2e4. encoding \"application/json\" JSON \uc778\ucf54\ub529 \ub41c request \ucee8\ud150\uce20. JSONParser \ub97c \uc0ac\uc6a9\ud558\ub294 \ubdf0\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. \ud558\ub098 \uc774\uc0c1\uc758 location=\"form\" \ud544\ub4dc \ub610\ub294 \ub2e8\uc77c location=\"body\" \ud544\ub4dc\uac00 \ub9c1\ud06c\uc5d0 \ud3ec\ud568 \ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc720\ud6a8\ud569\ub2c8\ub2e4. \"multipart/form-data\" \uba40\ud2f0 \ud30c\ud2b8\ub85c \uc778\ucf54\ub529 \ub41c request content. MultiPartParser \ub97c \uc0ac\uc6a9\ud558\ub294 \ubdf0\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4 \ud558\ub098 \uc774\uc0c1\uc758 location=\"form\" \ud544\ub4dc\uac00 \ub9c1\ud06c\uc5d0 \ud3ec\ud568 \ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc720\ud6a8\ud569\ub2c8\ub2e4. \"application/x-www-form-urlencoded\" URL\ub85c \uc778\ucf54\ub529 \ub41c requetst content. FormParser \ub97c \uc0ac\uc6a9\ud558\ub294 \ubdf0\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. \ud558\ub098 \uc774\uc0c1\uc758 location=\"form\" \ud544\ub4dc\uac00 \ub9c1\ud06c\uc5d0 \ud3ec\ud568 \ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc720\ud6a8\ud569\ub2c8\ub2e4. \"application/octet-stream\" \uc774\uc9c4 \uc5c5\ub85c\ub4dc request content. FileUploadParser \ub97c \uc0ac\uc6a9\ud558\ub294 \ubdf0\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. location=\"body\" \ud544\ub4dc\uac00 \ub9c1\ud06c\uc5d0 \ud3ec\ud568\ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc720\ud6a8\ud569\ub2c8\ub2e4. description : \uc785\ub825 \ud544\ub4dc\uc758 \uc758\ubbf8\uc640 \uc6a9\ub3c4\uc5d0 \ub300\ud55c \uac04\ub2e8\ud55c \uc124\uba85","title":"Schemas"},{"location":"Schemas/#django-rest-framework-schemas","text":"\"A machine-readable [schema] describes what resources are available via the API, what their URLs are, how they are represented and what operations they support.\" \"\uae30\uacc4 \ud310\ub3c5 \uac00\ub2a5\ud55c [\uc2a4\ud0a4\ub9c8]\ub294 API\ub97c \ud1b5\ud574 \uc0ac\uc6a9\ud560 \uc218\uc788\ub294 \ub9ac\uc18c\uc2a4, \ud574\ub2f9 URL\uc758 \uc758\ubbf8, \ud45c\ud604 \ubc29\ubc95 \ubc0f \uc9c0\uc6d0 \uc791\uc5c5\uc744 \uc124\uba85\ud569\ub2c8\ub2e4.\" \u2014 Heroku, JSON Schema for the Heroku Platform API","title":"Django REST Framework - Schemas"},{"location":"Schemas/#schemas","text":"API schema\ub294 \ucc38\uc870 \ubb38\uc11c\ub97c \uc0dd\uc131\ud558\uac70\ub098 API\uc640 \uc0c1\ud638 \uc791\uc6a9 \ud560 \uc218 \uc788\ub294 \ub3d9\uc801 \ud074\ub77c\uc774\uc5b8\ud2b8 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uad6c\ub3d9\ud558\ub294 \ub4f1 \ub2e4\uc591\ud55c \uc0ac\uc6a9 \uc0ac\ub840\ub97c \ud5c8\uc6a9\ud558\ub294 \uc720\uc6a9\ud55c \ub3c4\uad6c\uc785\ub2c8\ub2e4.","title":"Schemas"},{"location":"Schemas/#representing-schemas-internally","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ud615\uc2dd \ub3c5\ub9bd\uc801\uc778 \ud45c\ud604\uc73c\ub85c \uc2a4\ud0a4\ub9c8 \uc815\ubcf4\ub97c \ubaa8\ub378\ub9c1\ud558\uae30 \uc704\ud574 Core API \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uc815\ubcf4\ub294 \ub2e4\uc591\ud55c \uc2a4\ud0a4\ub9c8 \ud615\uc2dd\uc73c\ub85c \ub80c\ub354\ub9c1\ub418\uac70\ub098 API \ubb38\uc11c\ub97c \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Core API\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc2a4\ud0a4\ub9c8\ub294 API\uc5d0 \ub300\ud55c \uc815\ubcf4\uc758 \ucd5c\uc0c1\uc704 \ucee8\ud14c\uc774\ub108 \uac1d\uccb4\uc778 \ubb38\uc11c\ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c API \uc0c1\ud638\uc791\uc6a9\uc740 \ub9c1\ud06c \uac1d\uccb4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uac01 \ub9c1\ud06c\ub294 URL, HTTP \uba54\uc11c\ub4dc\ub97c \ud3ec\ud568\ud558\uba70 API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \uc2b9\uc778 \ud560 \uc218 \uc788\ub294 \ub9e4\uac1c\ubcc0\uc218\ub97c \uc124\uba85\ud558\ub294 Field \uc778\uc2a4\ud134\uc2a4 \ubaa9\ub85d\uc744 \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Link \uc640 Field \uc778\uc2a4\ud134\uc2a4\uc5d0\ub294 API \uc2a4\ud0a4\ub9c8\ub97c \uc0ac\uc6a9\uc790 \ubb38\uc11c\ub85c \ub80c\ub354\ub9c1 \ud560 \uc218 \uc788\ub294 \uc124\uba85\uc774 \ud3ec\ud568\ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \ub2e8\uc77c \uac80\uc0c9 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ud3ec\ud568\ud558\ub294 API \uc124\uba85\uc758 \uc608\uc785\ub2c8\ub2e4. coreapi.Document( title='Flight Search API', url='https://api.example.org/', content={ 'search': coreapi.Link( url='/search/', action='get', fields=[ coreapi.Field( name='from', required=True, location='query', description='City name or airport code.' ), coreapi.Field( name='to', required=True, location='query', description='City name or airport code.' ), coreapi.Field( name='date', required=True, location='query', description='Flight date in \"YYYY-MM-DD\" format.' ) ], description='Return flight availability and prices.' ) } )","title":"Representing schemas internally (\ub0b4\ubd80\uc801\uc73c\ub85c \uc2a4\ud0a4\ub9c8 \ud45c\ud604\ud558\uae30)"},{"location":"Schemas/#schema-output-formats","text":"HTTP response\uc73c\ub85c \ud45c\uc2dc\ub418\ub824\uba74 \ub0b4\ubd80 \ud45c\ud604\uc774 response\uc5d0 \uc0ac\uc6a9 \ub41c \uc2e4\uc81c \ubc14\uc774\ud2b8\ub85c \ub80c\ub354\ub9c1\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. Core JSON \uc740 Core API\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c \ud45c\uc900 \ud615\uc2dd\uc73c\ub85c \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\ub294 \uc774 \ubbf8\ub514\uc5b4 \uc720\ud615\uc744 \ucc98\ub9ac\ud558\uae30 \uc704\ud55c \ub80c\ub354\ub7ec \ud074\ub798\uc2a4\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc73c\uba70, \uc774 \ub80c\ub354\ub7ec\ud074\ub798\uc2a4\ub294 CoreJSONRenderer \ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Open API (\"Swagger\"), JSON HyperSchema , API Blueprint \uc640 \uac19\uc740 \ub2e4\ub978 \uc2a4\ud0a4\ub9c8 \ud615\uc2dd\ub3c4 custom renderer \ud074\ub798\uc2a4\ub97c \uad6c\ud604\ud558\uc5ec \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Schema output formats"},{"location":"Schemas/#schemas-vs-hypermedia","text":"Core API\ub294 API \uc2a4\ud0a4\ub9c8\uc5d0 \ub300\ud55c \ub300\uc548\uc801\uc778 \uc0c1\ud638\uc791\uc6a9 \uc2a4\ud0c0\uc77c\uc744 \uc81c\uc2dc\ud558\ub294 \ud558\uc774\ud37c \ubbf8\ub514\uc5b4 \uc751\ub2f5\uc744 \ubaa8\ub378\ub9c1\ud558\ub294\ub370 \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4\ub294 \uc810\uc744 \uc5ec\uae30\uc11c \uc9c0\uc801 \ud560 \ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4. API \uc2a4\ud0a4\ub9c8\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc804\uccb4 \uc778\ud130\ud398\uc774\uc2a4\uac00 \ub2e8\uc77c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub85c \uc81c\uacf5\ub429\ub2c8\ub2e4. \uac1c\ubcc4 API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \ub300\ud55c \uc751\ub2f5\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \uac01 response\uc5d0 \ucd94\uac00 \uc0c1\ud638 \uc791\uc6a9\uc5c6\uc774 \uc77c\ubc18 \ub370\uc774\ud130\ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4. Hypermedia\ub97c \uc0ac\uc6a9\ud558\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ub370\uc774\ud130\uc640 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc0c1\ud638 \uc791\uc6a9\uc774 \ubaa8\ub450 \ud3ec\ud568\ub41c \ubb38\uc11c\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. \uac01 \uc0c1\ud638 \uc791\uc6a9\uc744 \ud1b5\ud574 \ud604\uc7ac \uc0c1\ud0dc\uc640 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc0c1\ud638 \uc791\uc6a9\uc744 \uc790\uc138\ud788 \uc124\uba85\ud558\ub294 \uc0c8 \ubb38\uc11c\uac00 \uc0dd\uc131\ub429\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec Hypermedia API\ub97c \ube4c\ub4dc\ud558\ub294\ub370 \ub300\ud55c \uc790\uc138\ud55c \uc815\ubcf4\uc640 \uc9c0\uc6d0\uc740 \ud5a5\ud6c4 \ubc84\uc804\uc5d0\uc11c \uacc4\ud68d\ub429\ub2c8\ub2e4.","title":"Schemas vs Hypermedia"},{"location":"Schemas/#adding-a-schema","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ub300\ud55c \uc2a4\ud0a4\ub9c8 \uc9c0\uc6d0\uc744 \ucd94\uac00\ud558\ub824\uba74 coreapi \ud328\ud0a4\uc9c0\ub97c \uc124\uce58\ud574\uc57c\ud569\ub2c8\ub2e4. pip install coreapi REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\ub294 \uc2a4\ud0a4\ub9c8 \uc790\ub3d9 \uc0dd\uc131 \uae30\ub2a5\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uac70\ub098 \uba85\uc2dc\uc801\uc744 \uc2a4\ud0a4\ub9c8\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud544\uc694\ud55c \ud56d\ubaa9\uc5d0 \ub530\ub77c API\uc5d0 \uc2a4\ud0a4\ub9c8\ub97c \ucd94\uac00\ud558\ub294 \uba87\uac00\uc9c0 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4.","title":"Adding a schema"},{"location":"Schemas/#the-get_schema_view-shortcut","text":"\ud504\ub85c\uc81d\ud2b8\uc5d0 \uc2a4\ud0a4\ub9c8\ub97c \ud3ec\ud568\uc2dc\ud0a4\ub294 \uac00\uc7a5 \uac04\ub2e8\ud55c \ubc29\ubc95\uc740 get_schema_view() \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. schema_view = get_schema_view(title=\"Server Monitoring API\") urlpatterns = [ url('^$', schema_view), ... ] view\uac00 \ucd94\uac00\ub418\uba74 \uc790\ub3d9 \uc0dd\uc131 \uc2a4\ud0a4\ub9c8 \uc815\uc758\ub97c \uac80\uc0c9\ud558\uae30 \uc704\ud55c API \uc694\uccad\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. $ http http://127.0.0.1:8000/ Accept:application/vnd.coreapi+json HTTP/1.0 200 OK Allow: GET, HEAD, OPTIONS Content-Type: application/vnd.coreapi+json { \"_meta\": { \"title\": \"Server Monitoring API\" }, \"_type\": \"document\", ... } get_schema_view() \uc5d0 \ub300\ud55c \uc778\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. title : \uc2a4\ud0a4\ub9c8 \uc815\uc758\ub97c \uc124\uba85\ud558\ub294 \uc81c\ubaa9\uc744 \uc81c\uacf5\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. url : \uc2a4\ud0a4\ub9c8\uc758 \ud45c\uc900 URL\uc744 \uc804\ub2ec\ud558\ub294\ub370 \uc0ac\uc6a9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. schema_view = get_schema_view( title='Server Monitoring API', url='https://www.example.org/api/' ) urlconf : API \uc2a4\ud0a4\ub9c8\ub97c \uc0dd\uc131\ud558\ub824\ub294 URL conf\uc758 \uac00\uc838\uc624\uae30 \uacbd\ub85c\ub97c \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 Django\uc758 ROOT_URLCONF \uc124\uc815 \uac12\uc785\ub2c8\ub2e4. schema_view = get_schema_view( title='Server Monitoring API', url='https://www.example.org/api/', urlconf='myproject.urls' ) renderer_classes : API root \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 \ub80c\ub354\ub9c1\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub80c\ub354\ub7ec \ud074\ub798\uc2a4 \uc14b\uc744 \uc804\ub2ec\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.renderers import CoreJSONRenderer from my_custom_package import APIBlueprintRenderer schema_view = get_schema_view( title='Server Monitoring API', url='https://www.example.org/api/', renderer_classes=[CoreJSONRenderer, APIBlueprintRenderer] )","title":"The get_schema_view shortcut"},{"location":"Schemas/#using-an-explicit-schema-view","text":"get_schema_view() shortcut\uc774 \uc81c\uacf5\ud558\ub294 \uac83\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \ucee8\ud2b8\ub864\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 SchemaGenerator \ud074\ub798\uc2a4\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud558\uc5ec Document \uc778\uc2a4\ud134\uc2a4\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud558\uace0 \ubdf0\uc5d0\uc11c \uc774\ub97c \ubc18\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc635\uc165\uc744 \uc0ac\uc6a9\ud558\uba74 \uc6d0\ud558\ub294 \ubaa8\ub4e0 \ub3d9\uc791\uc73c\ub85c \uc2a4\ud0a4\ub9c8 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc2a4\ud0a4\ub9c8 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \ub2e4\ub978 \uc0ac\uc6a9 \uad8c\ud55c, \uc81c\ud55c \ub610\ub294 \uc778\uc99d \uc815\ucc45\uc744 \uc801\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc740 SchemaGenerator \ub97c \ubdf0\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\ub824 \uc2a4\ud0a4\ub9c8\ub97c \ubc18\ud658\ud558\ub294 \uc608\uc81c\uc785\ub2c8\ub2e4. get_schema_view () \ubc14\ub85c \uac00\uae30\uac00 \uc81c\uacf5\ud558\ub294 \uac83\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \ucee8\ud2b8\ub864\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 SchemaGenerator \ud074\ub798\uc2a4\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud558\uc5ec Document \uc778\uc2a4\ud134\uc2a4\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud558\uace0 \ubdf0\uc5d0\uc11c\uc774\ub97c \ubc18\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. views.py : from rest_framework.decorators import api_view, renderer_classes from rest_framework import renderers, response, schemas generator = schemas.SchemaGenerator(title='Bookings API') @api_view() @renderer_classes([renderers.CoreJSONRenderer]) def schema_view(request): schema = generator.get_schema(request) return response.Response(schema) urls.py : urlpatterns = [ url('/', schema_view), ... ] \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uad8c\ud55c\uc5d0 \ub530\ub77c \ub2e4\ub978 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ub2e4\ub978 \uc2a4\ud0a4\ub9c8\ub97c \uc81c\uacf5\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc811\uadfc\ubc95\uc740 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc774 \uc778\uc99d\ub41c \uc694\uccad\uacfc \ub2e4\ub978 \uc2a4\ud0a4\ub9c8\ub85c \uc81c\uacf5\ub418\uac70\ub098 API\uc758 \ub2e4\ub978 \ubd80\ubd84\uc774 \ud574\ub2f9 \uc5ed\ud560\uc5d0 \ub530\ub77c \ub2e4\ub978 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud45c\uc2dc\ub418\ub3c4\ub85d\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uad8c\ud55c\uc73c\ub85c \ud544\ud130\ub9c1 \ub41c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \uc788\ub294 \uc2a4\ud0a4\ub9c8\ub97c \ud45c\uc2dc\ud558\ub824\uba74 get_schema() \uba54\uc11c\ub4dc\uc5d0 request \uc778\uc218\ub97c \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. @api_view() @renderer_classes([renderers.CoreJSONRenderer]) def schema_view(request): generator = schemas.SchemaGenerator(title='Bookings API') return response.Response(generator.get_schema(request=request))","title":"Using an explicit schema view"},{"location":"Schemas/#explicit-schema-definition","text":"\uc790\ub3d9 \uc0dd\uc131 \ubc29\uc2dd\uc758 \ub300\uc548\uc740 \ucf54\ub4dc\ubca0\uc774\uc2a4\uc5d0 Document \uac1d\uccb4\ub97c \uc120\uc5b8\ud558\uc5ec API \uc2a4\ud0a4\ub9c8\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud558\ub294\uac83\uc740 \uc870\uae08 \ub354 \uc791\uc5c5 \ud560 \uc218 \uc788\uc9c0\ub9cc \uc2a4\ud0a4\ub9c8 \ud45c\ud604\uc744 \uc644\uc804\ud788 \uc81c\uc5b4 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. import coreapi from rest_framework.decorators import api_view, renderer_classes from rest_framework import renderers, response schema = coreapi.Document( title='Bookings API', content={ ... } ) @api_view() @renderer_classes([renderers.CoreJSONRenderer]) def schema_view(request): return response.Response(schema)","title":"Explicit schema definition"},{"location":"Schemas/#static-schema-file","text":"\ub9c8\uc9c0\ub9c9 \uc635\uc158\uc740 Core JSON \ub610\ub294 Open API \uc640 \uac19\uc740 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud615\uc2dd \uc911 \ud558\ub098\ub97c \uc0ac\uc6a9\ud558\uc5ec API schema\ub97c static \ud30c\uc77c\ub85c \uc791\uc131\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub2e4\uc74c \uc911 \ud558\ub098\ub97c \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2a4\ud0a4\ub9c8 \uc815\uc758\ub97c static \ud30c\uc77c\ub85c \uc791\uc131\ud558\uace0 static \ud30c\uc77c\uc744 \uc9c1\uc811 \uc81c\uacf5\ud558\uc138\uc694 . Core API\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub85c\ub4dc \ub41c \uc2a4\ud0a4\ub9c8 \uc815\uc758\ub97c \uc791\uc131\ud55c \ub2e4\uc74c \ud074\ub77c\uc774\uc5b8\ud2b8 \uc694\uccad\uc5d0 \ub530\ub77c \uc5ec\ub7ec\uac00\uc9c0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud615\uc2dd\uc911 \ud558\ub098\ub85c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4.","title":"Static schema file"},{"location":"Schemas/#schemas-as-documentation","text":"API \uc2a4\ud0a4\ub9c8\uc758 \uc77c\ubc18\uc801\uc778 \uc0ac\uc6a9\ubc95 \uc911 \ud558\ub098\ub294 \ubb38\uc11c \ud398\uc774\uc9c0\ub97c \uc791\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \uc2a4\ud0a4\ub9c8 \uc0dd\uc131\uc740 docstring\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc2a4\ud0a4\ub9c8 \ubb38\uc11c\uc758 \uc124\uba85\uc744 \uc790\ub3d9\uc73c\ub85c \ucc44\uc6c1\ub2c8\ub2e4. \uc774 \uc124\uba85\uc740 \ub2e4\uc74c\uc744 \uae30\ubc18\uc73c\ub85c \ud569\ub2c8\ub2e4. \ud574\ub2f9 \uba54\uc18c\ub4dc docstring\uc774 \uc788\ub294 \uacbd\uc6b0\ub294 \uadf8\uac83\uc744 \ub3cc\ub824\uc90d\ub2c8\ub2e4. docstring \ud074\ub798\uc2a4 \ub0b4\uc758 \uba85\uba85\ub41c \uc139\uc158\uc73c\ub85c, \ud55c \uc904 \ub610\ub294 \uc5ec\ub7ec \uc904\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. The class docstring.","title":"Schemas as documentation"},{"location":"Schemas/#examples","text":"\uba85\uc2dc\uc801\uc778 \uba54\uc11c\ub4dc docstring\uc774 \uc788\ub294 APIView \uc785\ub2c8\ub2e4. class ListUsernames(APIView): def get(self, request): \"\"\" Return a list of all user names in the system. \"\"\" usernames = [user.username for user in User.objects.all()] return Response(usernames) \uc124\uba85\ud558\ub294 \uc561\uc158 docstring\uc774 \uc788\ub294 ViewSet \uc785\ub2c8\ub2e4. class ListUsernames(ViewSet): def list(self, request): \"\"\" Return a list of all user names in the system. \"\"\" usernames = [user.username for user in User.objects.all()] return Response(usernames) \ub2e8\uc77c \ud589 \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec docstring \ud074\ub798\uc2a4\uc758 \uc139\uc158\uc774 \uc788\ub294 generic view\uc785\ub2c8\ub2e4. class UserList(generics.ListCreateAPIView): \"\"\" get: List all the users. post: Create a new user. \"\"\" queryset = User.objects.all() serializer_class = UserSerializer permission_classes = (IsAdminUser,) \ub2e4\uc911 \ud68c\uc120 \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec docstring \ud074\ub798\uc2a4\uc758 \uc139\uc158\uc774 \uc788\ub294 generic viewset\uc785\ub2c8\ub2e4. class UserViewSet(viewsets.ModelViewSet): \"\"\" API endpoint that allows users to be viewed or edited. retrieve: Return a user instance. list: Return all users, ordered by most recently joined. \"\"\" queryset = User.objects.all().order_by('-date_joined') serializer_class = UserSerializer","title":"Examples"},{"location":"Schemas/#alternate-schema-formats","text":"\ub300\uccb4 \uc2a4\ud0a4\ub9c8 \ud615\uc2dd\uc744 \uc9c0\uc6d0\ud558\ub824\uba74 Document \uc778\uc2a4\ud134\uc2a4\ub97c \ubc14\uc774\ud2b8 \ud45c\ud604\uc73c\ub85c \ubcc0\ud658\ud558\ub294 \ucc98\ub9ac\ub97c \ub2f4\ub2f9\ud558\ub294 custom\uc758 rederer \ud074\ub798\uc2a4\ub97c \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\ud560 \ud615\uc2dd\uc744 \uc778\ucf54\ub529\uc744 \uc9c0\uc6d0\ud558\ub294 Core API \ucf54\ub371\ud328\ud0a4\uc9c0\uac00 \uc788\ub294 \uacbd\uc6b0 \ud574\ub2f9 \ucf54\ub371\uc744 \uc0ac\uc6a9\ud558\uc5ec rederer \ud074\ub798\uc2a4\ub97c \uad6c\ud604 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Alternate schema formats"},{"location":"Schemas/#example","text":"\uc608\ub97c \ub4e4\uc5b4 openapi_codec \ud328\ud0a4\uc9c0\ub294 Open API(\"Swagger\") \ud615\uc2dd\uc758 \uc778\ucf54\ub529 \ub610\ub294 \ub514\ucf54\ub529\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. from rest_framework import renderers from openapi_codec import OpenAPICodec class SwaggerRenderer(renderers.BaseRenderer): media_type = 'application/openapi+json' format = 'swagger' def render(self, data, media_type=None, renderer_context=None): codec = OpenAPICodec() return codec.dump(data)","title":"Example"},{"location":"Schemas/#api-reference","text":"","title":"API Reference"},{"location":"Schemas/#schemagenerator","text":"\uc2a4\ud0a4\ub9c8\ub97c \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9 \ud560 \uc218 \uc788\ub294 API view\ub97c \uac80\ud1a0\ud558\ub294 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ub2e4\uc74c\uacfc \uac19\uc774 \ub2e8\uc77c \uc778\uc218\ub85c SchemaGenerator \ub97c \uc778\uc2a4\ud134\uc2a4\ud654\ud569\ub2c8\ub2e4. generator = SchemaGenerator(title='Stock Prices API') Arguments: title required : API\uc758 \uc774\ub984. url : API \uc2a4\ud0a4\ub9c8\uc758 \ub8e8\ud2b8 URL\uc785\ub2c8\ub2e4. \uc2a4\ud0a4\ub9c8\uac00 \uacbd\ub85c \uc811\ub450\uc5b4\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc73c\uba74 \uc774 \uc635\uc158\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. patterns : \uc2a4\ud0a4\ub9c8\ub97c \uc0dd\uc131 \ud560 \ub54c \uac80\uc0ac \ud560 URL \ubaa9\ub85d\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \ud504\ub85c\uc81d\ud2b8\uc758 URL conf\uc785\ub2c8\ub2e4. urlconf : \uc2a4\ud0a4\ub9c8\ub97c \uc0dd\uc131 \ud560 \ub54c \uc0ac\uc6a9\ud560 URL conf \ubaa8\ub4c8 \uc774\ub984\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 settings.ROOT_URLCONF \uc785\ub2c8\ub2e4.","title":"SchemaGenerator"},{"location":"Schemas/#get_schemaself-request","text":"API \uc2a4\ud0a4\ub9c8\ub97c \ub098\ud0c0\ub0b4\ub294 coreapi.Document \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. @api_view @renderer_classes([renderers.CoreJSONRenderer]) def schema_view(request): generator = schemas.SchemaGenerator(title='Bookings API') return Response(generator.get_schema()) request \uc778\uc218\ub294 \uc120\ud0dd \uc0ac\ud56d\uc774\uba70, \uacb0\uacfc \uc2a4\ud0a4\ub9c8 \uc0dd\uc131\uc5d0 \uc0ac\uc6a9\uc790 \ubcc4 \uad8c\ud55c\uc744 \uc801\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"get_schema(self, request)"},{"location":"Schemas/#get_linksself-request","text":"API \uc2a4\ud0a4\ub9c8\uc5d0 \ud3ec\ud568\ub418\uc5b4\uc57c \ud558\ub294 \ubaa8\ub4e0 \ub9c1\ud06c\uac00 \ud3ec\ud568\ub41c \uc911\ucca9\ub41c dict\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ub2e4\ub978 \ub808\uc774\uc544\uc6c3\uc73c\ub85c \uc0c8 dict\ub97c \ube4c\ub4dc\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \uc0dd\uc131\ub41c \uc2a4\ud0a4\ub9c8\uc758 \uacb0\uacfc \uad6c\uc870\ub97c \uc218\uc815\ud558\ub824\ub294 \uacbd\uc6b0 \uc774\ub97c \ub300\uccb4\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"get_links(self, request)"},{"location":"Schemas/#get_linkself-path-method-view","text":"\uc8fc\uc5b4\uc9c4 \ubdf0\uc5d0 \ud574\ub2f9\ud558\ub294 coreapi.Link \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ud2b9\uc815 \ubdf0\uc5d0 \ub300\ud574 custom \ub3d9\uc791\uc744 \uc81c\uacf5\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 \uc774 \uc124\uc815\uc744 \uc624\ubc84\ub77c\uc774\ub4dc \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"get_link(self, path, method, view)"},{"location":"Schemas/#get_descriptionself-path-method-view","text":"\ub9c1\ud06c \uc124\uba85\uc73c\ub85c \uc0ac\uc6a9\ud560 \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774\ub294 \uc704\uc758 \"Schemas as Documentation\" \uc139\uc158\uc5d0\uc11c \uc124\uba85\ud55c\ub300\ub85c docstring\uc744 \uae30\ubc18\uc73c\ub85c\ud569\ub2c8\ub2e4.","title":"get_description(self, path, method, view)"},{"location":"Schemas/#get_encodingself-path-method-view","text":"\uc9c0\uc815\ub41c \ubdf0\uc640 \uc0c1\ud638 \uc791\uc6a9\ud560 \ub54c \ubaa8\ub4e0 request \ubcf8\ubb38\uc5d0 \ub300\ud55c \uc778\ucf54\ub529\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc608: application/json . request \ubcf8\ubb38\uc744 \uae30\ub300\ud558\uc9c0 \uc54a\ub294 \ubdf0\uc5d0 \ube48 \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"get_encoding(self, path, method, view)"},{"location":"Schemas/#get_path_fieldsself-path-method-view","text":"coreapi.Link() \uc778\uc2a4\ud134\uc2a4\uc758 list\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. URL\uc758 \uac01 \uacbd\ub85c parameter\uc5d0 \ud558\ub098\uc529.","title":"get_path_fields(self, path, method, view):"},{"location":"Schemas/#get_serializer_fieldsself-path-method-view","text":"coreapi.Link() \uc778\uc2a4\ud134\uc2a4\uc758 list\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ubdf0\uac00 \uc0ac\uc6a9\ud558\ub294 serializer \ud074\ub798\uc2a4\uc758 \uac01 \ud544\ub4dc\uc5d0 \ud558\ub098\uc529.","title":"get_serializer_fields(self, path, method, view)"},{"location":"Schemas/#get_pagination_fieldsself-path-method-view","text":"\ubdf0\uac00 \uc0ac\uc6a9\ud558\ub294 pagination \ud074\ub798\uc2a4\uc758 get_schema_fields() \uba54\uc18c\ub4dc\uac00 \ubc18\ud658 \ud55c coreapi.Link() \uc778\uc2a4\ud134\uc2a4\uc758 list\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.","title":"get_pagination_fields(self, path, method, view)"},{"location":"Schemas/#get_filter_fieldsself-path-method-view","text":"\ubdf0\uc5d0 \uc758\ud574 \uc0ac\uc6a9 \ub41c filter \ud074\ub798\uc2a4\uc758 get_schema_fields() \uba54\uc18c\ub4dc\uc5d0 \uc758\ud574 \ub3cc\ub824 \uc8fc\uc5b4\uc9c0\ub294 coreapi.Link() \uc778\uc2a4\ud134\uc2a4\uc758 list\ub97c \ub3cc\ub824\uc90d\ub2c8\ub2e4.","title":"get_filter_fields(self, path, method, view)"},{"location":"Schemas/#core-api","text":"\uc774 \ubb38\uc11c\ub294 API \uc2a4\ud0a4\ub9c8\ub97c \ud45c\ud604\ud558\ub294\ub370 \uc0ac\uc6a9\ub418\ub294 coreapi \ud328\ud0a4\uc9c0 \ub0b4\uc758 \uad6c\uc131 \uc694\uc18c\uc5d0 \ub300\ud55c \uac04\ub7b5\ud55c \uac1c\uc694\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud074\ub798\uc2a4\ub294 rest_framework \ud328\ud0a4\uc9c0\uac00 \uc544\ub2c8\ub77c coreapi \ud328\ud0a4\uc9c0\uc5d0\uc11c \uac00\uc838\uc635\ub2c8\ub2e4.","title":"Core API"},{"location":"Schemas/#document","text":"API \uc2a4\ud0a4\ub9c8 \ucee8\ud14c\uc774\ub108\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. title : API\uc758 \uc774\ub984 url : API\uc758 \ud45c\uc900 URL content : \uc2a4\ud0a4\ub9c8\uc5d0 \ud3ec\ud568 \ub41c Link \uac1c\uccb4\ub97c \ud3ec\ud568\ud558\ub294 dict\uc785\ub2c8\ub2e4. \uc2a4\ud0a4\ub9c8\uc5d0 \ub354 \ub9ce\uc740 \uad6c\uc870\ub97c \uc81c\uacf5\ud558\uae30 \uc704\ud574 content dict\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ub450\ubc88\uc9f8 \ub808\ubca8\ub85c \uc911\ucca9 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608: content={ \"bookings\": { \"list\": Link(...), \"create\": Link(...), ... }, \"venues\": { \"list\": Link(...), ... }, ... }","title":"Document"},{"location":"Schemas/#link","text":"\uac1c\ubcc4 API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. url : \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 URL. /users/{username}/ \uc640 \uac19\uc740 URI \ud15c\ud50c\ub9bf \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. action : \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc640 \uc5f0\uad00\ub41c HTTP \ubc29\ubc95. \ud558\ub098 \uac1c \uc774\uc0c1\uc758 HTTP \uba54\uc11c\ub4dc\ub97c \uc9c0\uc6d0\ud558\ub294 URL\uc740, \uac01\uac01 \ud558\ub098\uc758 Link \uc5d0 \ud574\ub2f9\ud574\uc57c\ud569\ub2c8\ub2e4. fields : \uc785\ub825\uc5d0 \uc0ac\uc6a9 \ud560 \uc218 \uc788\ub294 parameter\ub97c \uc124\uba85\ud558\ub294 Field \uc778\uc2a4\ud134\uc2a4\uc758 list\uc785\ub2c8\ub2e4. description : \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 \uc758\ubbf8\uc640 \uc6a9\ub3c4\uc5d0 \ub300\ud574 \uac04\ub2e8\ud55c \uc124\uba85.","title":"Link"},{"location":"Schemas/#field","text":"\uc9c0\uc815\ub41c API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \ub2e8\uc77c \uc785\ub825 \ub9e4\uac1c\ubcc0\uc218\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. name : \uc785\ub825\uc744 \uc124\uba85\ud558\ub294 \uc774\ub984\uc785\ub2c8\ub2e4. required : \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uac12\uc744 \ud3ec\ud568\ud558\ub294 \uacbd\uc6b0 \ub610\ub294 parameter\ub97c \uc0dd\ub7b5\ud560 \uc218 \uc788\ub294\uc9c0 \uc5ec\ubd80\ub97c \ub098\ud0c0\ub0b4\ub294 boolean \uc785\ub2c8\ub2e4. location : \uc815\ubcf4\uac00 request\uc5d0 \uc5b4\ub5bb\uac8c \uc778\ucf54\ub529\ub418\ub294\uc9c0 \uacb0\uc815\ud569\ub2c8\ub2e4. \ub2e4\uc74c \ubb38\uc790\uc5f4 \uc911 \ud558\ub098\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \"path\" \ud15c\ud50c\ub9bf \ud654 \ub41c URL\uc5d0 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 /products/slim-fit-jeans/ \uc640 \uac19\uc740 URL path\uc5d0\uc11c API \uc785\ub825\uc744 \ucc98\ub9ac\ud558\uae30 \uc704\ud574 /products/{product_code}/ \uc758 URL \uac12\uc744 \"path\" \uc785\ub825\ub780\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud544\ub4dc\ub294 \ub300\uac1c \ud504\ub85c\uc81d\ud2b8 URL conf\uc758 \uba85\uba85 \ub41c \uc778\uc218 \uc640 \uc77c\uce58\ud569\ub2c8\ub2e4. \"query\" URL \ucffc\ub9ac \ub9e4\uac1c\ubcc0\uc218\ub85c \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc608: ?search=sale . \uc77c\ubc18\uc801\uc73c\ub85c GET \uc694\uccad\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud544\ub4dc\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ubdf0\uc758 pagination \ubc0f \ud544\ud130\ub9c1 \ucee8\ud2b8\ub864\uacfc \uc77c\uce58\ud569\ub2c8\ub2e4. \"form\" request \ubcf8\ubb38\uc5d0 JSON \uac1d\uccb4 \ub610\ub294 HTML \uc591\uc2dd\uc758 \ub2e8\uc77c \ud56d\ubaa9\uc73c\ub85c \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc608 : {\"color\":\"blue\",...} . \uc77c\ubc18\uc801\uc73c\ub85c POST , PUT \ubc0f PATCH \uc694\uccad\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc5ec\ub7ec \"form\" \uc785\ub825\ub780\uc740 \ub2e8\uc77c \ub9c1\ud06c\uc5d0 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud544\ub4dc\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ubdf0\uc758 serializer \ud544\ub4dc\uc640 \uc77c\uce58\ud569\ub2c8\ub2e4. \"body\" \uc804\uccb4 request \ubcf8\ubb38\uc5d0 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c POST , PUT \ubc0f PATCH \uc694\uccad\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ub9c1\ud06c\uc5d0\ub294 \ub458 \uc774\uc0c1\uc758 \"body\" \ud544\ub4dc\uac00 \uc874\uc7ac \ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \"form\" \ud544\ub4dc\uc640 \ud568\uaed8 \uc0ac\uc6a9 \ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud544\ub4dc\ub294 \ubcf4\ud1b5 ListSerializer \ub97c \uc0ac\uc6a9\ud558\ub294 request \uc785\ub825\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud558\uac70\ub098 \ud30c\uc77c \uc5c5\ub85c\ub4dc \ubdf0\ub97c \uc0ac\uc6a9\ud558\ub294 view\uc640 \uc77c\uce58\ud569\ub2c8\ub2e4. encoding \"application/json\" JSON \uc778\ucf54\ub529 \ub41c request \ucee8\ud150\uce20. JSONParser \ub97c \uc0ac\uc6a9\ud558\ub294 \ubdf0\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. \ud558\ub098 \uc774\uc0c1\uc758 location=\"form\" \ud544\ub4dc \ub610\ub294 \ub2e8\uc77c location=\"body\" \ud544\ub4dc\uac00 \ub9c1\ud06c\uc5d0 \ud3ec\ud568 \ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc720\ud6a8\ud569\ub2c8\ub2e4. \"multipart/form-data\" \uba40\ud2f0 \ud30c\ud2b8\ub85c \uc778\ucf54\ub529 \ub41c request content. MultiPartParser \ub97c \uc0ac\uc6a9\ud558\ub294 \ubdf0\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4 \ud558\ub098 \uc774\uc0c1\uc758 location=\"form\" \ud544\ub4dc\uac00 \ub9c1\ud06c\uc5d0 \ud3ec\ud568 \ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc720\ud6a8\ud569\ub2c8\ub2e4. \"application/x-www-form-urlencoded\" URL\ub85c \uc778\ucf54\ub529 \ub41c requetst content. FormParser \ub97c \uc0ac\uc6a9\ud558\ub294 \ubdf0\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. \ud558\ub098 \uc774\uc0c1\uc758 location=\"form\" \ud544\ub4dc\uac00 \ub9c1\ud06c\uc5d0 \ud3ec\ud568 \ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc720\ud6a8\ud569\ub2c8\ub2e4. \"application/octet-stream\" \uc774\uc9c4 \uc5c5\ub85c\ub4dc request content. FileUploadParser \ub97c \uc0ac\uc6a9\ud558\ub294 \ubdf0\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. location=\"body\" \ud544\ub4dc\uac00 \ub9c1\ud06c\uc5d0 \ud3ec\ud568\ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc720\ud6a8\ud569\ub2c8\ub2e4. description : \uc785\ub825 \ud544\ub4dc\uc758 \uc758\ubbf8\uc640 \uc6a9\ub3c4\uc5d0 \ub300\ud55c \uac04\ub2e8\ud55c \uc124\uba85","title":"Field"},{"location":"Serializer_fields/","text":"Django REST framework - Serializer fields \"Each field in a Form class is responsible not only for validating data, but also for \"cleaning\" it \u2014 normalizing it to a consistent format.\" \"Form \ud074\ub798\uc2a4\uc758 \uac01 \ud544\ub4dc\ub294 \ub370\uc774\ud130 \uc720\ud6a8\uc131 \uac80\uc0ac\ubfd0\ub9cc \uc544\ub2c8\ub77c \uc77c\uad00\ub41c \ud615\uc2dd\uc73c\ub85c \uc815\uaddc\ud654\ud558\ub824 \"\uc815\ub9ac\"\ud558\ub294 \uc5ed\ud560\uc744 \ub2f4\ub2f9\ud569\ub2c8\ub2e4.\" \u2014 Django documentation Serializer fields serializer \ud544\ub4dc\ub294 \uae30\uc874 \uac12\uacfc \ub0b4\ubd80 \ub370\uc774\ud130 \uc720\ud615\uac04\uc758 \ubcc0\ud658\uc744 \ucc98\ub9ac\ud569\ub2c8\ub2e4. \ub610\ud55c \uc785\ub825 \uac12\uc758 \uc720\ud6a8\uc131 \uac80\uc0ac\uc640 \ubd80\ubaa8 \uc624\ube0c\uc81d\ud2b8\uc5d0\uc11c \uac12 \uac80\uc0c9 \ubc0f \uc124\uc815\uc744 \ucc98\ub9ac\ud569\ub2c8\ub2e4. Note : serializer \ud544\ub4dc\ub294 fields.py \uc5d0 \uc120\uc5b8\ub418\uc5b4 \uc788\uc9c0\ub9cc, \uaddc\uce59\uc5d0 \ub530\ub77c from rest)framework import serializer \uc5d0\uc11c \uac00\uc838\uc640\uc11c setializers.<FiledName> \ud544\ub4dc\ub97c \ucc38\uc870\ud574\uc57c\ud569\ub2c8\ub2e4. Core arguments \uac01 serializer \ud544\ub4dc \uc0dd\uc131\uc790\ub294 \ucd5c\uc18c\ud55c \uc774\ub7ec\ud55c \uc778\uc218\ub97c \ucde8\ud569\ub2c8\ub2e4. \uc77c\ubd80 Field \ud074\ub798\uc2a4\ub294 \ud544\ub4dc \ubcc4 \uc778\uc218\ub97c \ucd94\uac00\ub85c \uac00\uc838\uc624\uc9c0\ub9cc \ud56d\uc0c1 \ub2e4\uc74c \uc0ac\ud56d\uc744 \ubc1b\uc544\ub4e4\uc5ec\uc57c\ud569\ub2c8\ub2e4. read_only \uc77d\uae30 \uc804\uc6a9 \ud544\ub4dc\ub294 API \ucd9c\ub825\uc5d0 \ud3ec\ud568\ub418\uc9c0\ub9cc create \ub610\ub294 update \uc870\uc791 \uc911 \uc785\ub825\uc5d0 \ud3ec\ud568\ub418\uba74 \uc548\ub429\ub2c8\ub2e4. serializer \uc785\ub825\uc5d0 \uc798\ubabb \ub41c 'read_only'\ud544\ub4dc\ub294 \ubb34\uc2dc\ub429\ub2c8\ub2e4. \ud45c\ud604\uc2dd\uc744 serializer \ud560 \ub584 \ud544\ub4dc\uac00 \uc0ac\uc6a9\ub418\ub3c4\ub85d\ud558\ub824\uba74 \uc774 \uac12\uc744 True \ub85c \uc124\uc815\ud558\uace0 serializer \ubcf5\uc6d0 \uc911 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4e4\uac70\ub098 \uc5c5\ub370\uc774\ud2b8 \ud560 \ub584\ub294 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc138\uc694. Default: False write_only \uc774 \uac12\uc744 True \ub85c \uc124\uc815\ud558\uba74 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uac70\ub098 \ub9cc\ub4e4\ub54c \ud544\ub4dc\uac00 \uc0ac\uc6a9\ub420 \uc218 \uc788\uc9c0\ub9cc \ud45c\ud604\uc744 serializer \ud560 \ub54c\ub294 \ud544\ub4dc\uac00 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Default: True required deserializer \uc911\uc5d0 \ud544\ub4dc\uac00 \uc81c\uacf5\ub418\uc9c0 \uc54a\uc73c\uba74 \uc77c\ubc18\uc801\uc73c\ub85c \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. deserializer \uc911\uc5d0 \uc774 \ud544\ub4dc\uac00 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 False \ub85c \uc124\uc815\ud558\uc138\uc694. \uc774 \uac12\uc744 False \ub85c \uc124\uc815\ud558\uba74 \uc778\uc2a4\ud134\uc2a4\ub97c serializer \ud560 \ub54c \uac1d\uccb4 \uc18d\uc131 \ub610\ub294 dict \ud0a4\uac00 \ucd9c\ub825\uc5d0 \uc0dd\ub7b5 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud0a4\uac00 \uc5c6\uc73c\uba74 \ucd9c\ub825 \ud45c\ud604\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Default: True allow_null serializer \ud544\ub4dc\uc5d0 None \uc774 \uc804\ub2ec\ub418\uba74 \uc77c\ubc18\uc801\uc73c\ub85c \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. None \uc744 \uc720\ud6a8\ud55c \uac12\uc73c\ub85c \uac04\uc8fc\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 \uc774 \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c True \ub85c \uc124\uc815\ud558\uc138\uc694. Default: False default \uc124\uc815\ub418\uba74, \uc785\ub825 \uac12\uc774 \uc81c\uacf5\ub418\uc9c0 \uc54a\uc73c\uba74 \ud544\ub4dc\uc5d0 \uc0ac\uc6a9\ub420 \uae30\ubcf8\uac12\uc774 \uc81c\uacf5\ub429\ub2c8\ub2e4. \uc124\uc815\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uae30\ubcf8 \ub3d9\uc791\uc740 \uc18d\uc131\uc744 \uc804\ud600 \ucc44\uc6b0\uc9c0 \uc54a\ub294 \uac83\uc785\ub2c8\ub2e4. \ubd80\ubd84 \uc5c5\ub370\uc774\ud2b8 \uc870\uc791\uc911\uc5d0\ub294 default \uac12\uc774 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ubd80\ubd84 \uc5c5\ub370\uc774\ud2b8\uc758 \uacbd\uc6b0 \ub4e4\uc5b4\uc624\ub294 \ub370\uc774\ud130\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \ud544\ub4dc\uc5d0\ub9cc \uc720\ud6a8\uc131 \uac80\uc0ac \ub41c \uac12\uc774 \ubc18\ud658\ub429\ub2c8\ub2e4. \ud568\uc218 \ub610\ub294 \ub2e4\ub978 \ud638\ucd9c \uac00\ub2a5 \uac1d\uccb4\ub85c \uc124\uc815 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \uac12\uc740 \uc0ac\uc6a9\ub420 \ub54c\ub9c8\ub2e4 \ud3c9\uac00\ub429\ub2c8\ub2e4. \ud638\ucd9c \ub420 \ub54c \uc778\uc218\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. 'callable'\uc5d0 set_context \uba54\uc11c\ub4dc\uac00 \uc788\ub294 \uacbd\uc6b0, \ud544\ub4dc \uc778\uc2a4\ud134\uc2a4\ub97c \uc778\uc218\ub85c \uc0ac\uc6a9\ud558\uae30 \uc804\uc5d0 \ub9e4\ubc88 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc774\ub294 validators \uc640 \ub3d9\uc77c\ud55c \ubc29\uc2dd\uc73c\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4\ub97c serializer \ud560 \ub54c \uc624\ube0c\uc81d\ud2b8 \uc18d\uc131 \ub610\ub294 dict \ud0a4\uac00 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc5c6\ub294 \uacbd\uc6b0 \uae30\ubcf8\uac12\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc744 \uc124\uc815\ud558\uba74 \ud544\ub4dc\uac00 \ud544\uc694\ud558\uc9c0 \uc54a\uc74c\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \uae30\ubcf8 \ubc0f \ud544\uc218 \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \ubaa8\ub450 \ud3ec\ud568\ud558\uba74 \uc62c\ubc14\ub974\uc9c0 \uc54a\uc73c\uba70 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. source \ud544\ub4dc\ub97c \ucc44\uc6b0\ub294\ub370 \uc0ac\uc6a9\ud560 \uc18d\uc131\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. URLField(source='get_absolute_url') \uc640 \uac19\uc740 \uc790\uccb4 \uc778\uc218\ub9cc \uc0ac\uc6a9\ud558\uac70\ub098 EmailField(source='user.email') \uc640 \uac19\uc740 \uc18d\uc131\uc744 \ud1b5\uacfc\ud558\ub294 \uc810\uc73c\ub85c \uad6c\ubd84 \ub41c \ud45c\uae30\ubc95\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac12 source='*' \ub294 \ud2b9\ubcc4\ud55c \uc758\ubbf8\ub97c \uac00\uc9c0\uba70 \uc804\uccb4 \uac1d\uccb4\uac00 \ud544\ub4dc\ub85c \uc804\ub2ec\ub418\uc5b4\uc57c \ud568\uc744 \ub098\ud0c0\ub0b4\uae30 \uc704\ud574 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc911\ucca9\ub41c \ud45c\ud604\uc744 \uc791\uc131\ud558\uac70\ub098 \ucd9c\ub825 \ud45c\ud604\uc744 \uacb0\uc815\ud558\uae30 \uc704\ud574 \uc804\uccb4 \uc624\ube0c\uc81d\ud2b8\uc5d0 \uc561\uc138\uc2a4\ud574\uc57c\ud558\ub294 \ud544\ub4dc\uc5d0 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \ud544\ub4dc\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. validators \uc785\ub825 \ud544\ub4dc \uc785\ub825\uc5d0 \uc801\uc6a9\ub418\uc5b4\uc57c\ud558\uace0 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\ub97c \ubc1c\uc0dd\uc2dc\ud0a4\uac70\ub098 \ub2e8\uc21c\ud788 \ubc18\ud658\ud574\uc57c\ud558\ub294 validator \ud568\uc218\uc758 list\uc785\ub2c8\ub2e4. 'Validator'\ud568\uc218\ub294 \uc77c\ubc18\uc801\uc73c\ub85c serializers.ValidationError \ub97c \ubc1c\uc0dd\uc2dc\ucf1c\uc57c\ud558\uc9c0\ub9cc Django\uc5d0 \ub0b4\uc7a5\ub41c ValidationError \ub294 Djang \ucf54\ub4dc\ubca0\uc774\uc2a4 \ub610\ub294 \ud0c0\uc0ac Django \ud328\ud0a4\uc9c0\uc5d0 \uc815\uc758\ub41c \uc720\ud6a8\uc131 \uac80\uc0ac\uae30\uc640\uc758 \ud638\ud658\uc131\uc744 \uc704\ud574 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. error_messages \uc624\ub958 \uba54\uc2dc\uc9c0\uc5d0 \ub300\ud55c \uc624\ub958\ucf54\ub4dc dict label HTML \uc591\uc2dd \ud544\ub4dc \ub610\ub294 \uae30\ud0c0 \uc124\uba85\uc801\uc778 \uc694\uc18c\uc758 \ud544\ub4dc \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc9e7\uc740 \ud14d\uc2a4\ud2b8 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. help_text HTML \uc591\uc2dd \ud544\ub4dc\ub098 \uae30\ud0c0 \uc124\uba85\uc801\uc778 \uc694\uc18c\uc758 \ud544\ub4dc\uc5d0 \ub300\ud55c \uc124\uba85\uc73c\ub85c \uc0ac\uc6a9\ub420 \uc218 \uc788\ub294 \ud14d\uc2a4\ud2b8 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. initial HTML \uc591\uc2dd \ud53c\ub4dc \uac12\uc744 \ubbf8\ub9ac \ucc44\uc6b0\ub294 \ub370 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \uac12\uc785\ub2c8\ub2e4. \uc77c\ubc18 Django field \uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud638\ucd9c \ub300\uc0c1\uc744 \uc804\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. import datetime from rest_framework import serializers class ExampleSerializer(serializers.Serializer): day = serializers.DateField(initial=datetime.date.today) style \ub80c\ub354\ub7ec\uac00 \ud544\ub4dc\ub97c \ub80c\ub354\ub9c1\ud558\ub294 \ubc29\ubc95\uc744 \uc81c\uc5b4\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 key-value dict\uc785\ub2c8\ub2e4. \ub2e4\uc74c\uc740 'input_type' \uacfc 'base_template' \uc758 \ub450 \uac00\uc9c0 \uc608\uc785\ub2c8\ub2e4. # Use <input type=\"password\"> for the input. password = serializers.CharField( style={'input_type': 'password'} ) # Use a radio input instead of a select input. color_channel = serializers.ChoiceField( choices=['red', 'green', 'blue'], style={'base_template': 'radio.html'} ) \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 HTML & Forms documentation \ub97c \ucc38\uc870\ud558\uc138\uc694. Boolean fields BooleanField boolean \ud45c\ud604\uc785\ub2c8\ub2e4. HTML\uc73c\ub85c \uc778\ucf54\ub529 \ub41c \uc591\uc2dd \uc785\ub825\uc744 \uc0ac\uc6a9\ud560 \ub54c default=True \uc635\uc158\uc774 \uc9c0\uc815\ub418\uc5b4 \uc788\uc5b4\ub3c4 \uac12\uc744 \uc0dd\ub7b5\ud558\uba74 \ud56d\uc0c1 \ud544\ub4dc\ub97c False \ub85c \uc124\uc815\ud558\ub294 \uac83\uc73c\ub85c \ucc98\ub9ac\ub429\ub2c8\ub2e4. \uc774\uac83\uc740 HTML \uccb4\ud06c \uc0c1\uc790 \uc785\ub825\uc774 \uac12\uc744 \uc0dd\ub7b5\ud558\uc5ec \uc120\ud0dd\ub418\uc9c0 \uc54a\uc740 \uc0c1\ud0dc\ub97c \ub098\ud0c0\ub0b4\ubbc0\ub85c, REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc0dd\ub7b5\uc744 \ube48 \uccb4\ud06c \ubc15\uc2a4 \uc785\ub825\uc73c\ub85c \ucc98\ub9ac\ud569\ub2c8\ub2e4. django.db.models.fields.BooleanField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : BooleanField() NullBooleanField \uc720\ud6a8\ud55c \uac12\uc73c\ub85c None \ub3c4 \ud5c8\uc6a9\ud558\ub294 boolean \ud45c\ud604\uc785\ub2c8\ub2e4. django.db.models.fields.NullBooleanField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : NullBooleanField() String fields CharField \ud14d\uc2a4\ud2b8 \ud45c\ud604\uc785\ub2c8\ub2e4. \uc120\ud0dd\uc801\uc73c\ub85c \ud14d\uc2a4\ud2b8\uac00 max_length \ubcf4\ub2e4 \uc9e7\uace0 min_length \ubcf4\ub2e4 \uae38\ub3c4\ub85d \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4. django.db.models.fields.CharField \ub610\ub294 django.db.models.fields.TextField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : CharField(max_length=None, min_length=None, allow_blank=False, trim_whitespace=True) max_length : \uc785\ub825\uc774 \uc774 \ubb38\uc790 \uc218\ub97c \ucd08\uacfc\ud558\uc9c0 \uc54a\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. min_length : \uc785\ub825\uc5d0 \uc774 \uc218\ubcf4\ub2e4 \uc801\uc740 \ubb38\uc790\uac00 \ub4e4\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. allow_blank : True \ub85c \uc124\uc815\ud558\uba74 \ube48 \ubb38\uc790\uc5f4\uc744 \uc720\ud6a8\ud55c \uac12\uc73c\ub85c \uac04\uc8fc\ud574\uc57c\ud569\ub2c8\ub2e4. False \ub85c \uc124\uc815\ud558\uba74 \ube48 \ubb38\uc790\uc5f4\uc774 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \uac83\uc73c\ub85c \uac04\uc8fc\ub418\uc5b4 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. rim_whitespace : True \ub85c \uc124\uc815\ud558\uba74 \uc55e\ub4a4 \uacf5\ubc31\uc774 \uc798\ub9bd\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 True \uc785\ub2c8\ub2e4. allow_null \uc635\uc158\uc740 \ubb38\uc790\uc5f4 \ud544\ub4dc\uc5d0\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc, allow_blank \ub97c \uc0ac\uc6a9\ud558\uba74 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. allow_blank=True \uc640 allow_null=True \ub97c \ubaa8\ub450 \uc124\uc815\ud558\ub294 \uac83\uc740 \uc720\ud6a8\ud558\uc9c0\ub9cc \ubb38\uc790\uc5f4 \ud45c\ud604\uc5d0 \ud5c8\uc6a9\ub418\ub294 \ub450 \uac00\uc9c0 \uc720\ud615\uc758 \ube48 \uac12\uc774 \uc874\uc7ac\ud558\ubbc0\ub85c \ub370\uc774\ud130 \ubd88\uc77c\uce58\uc640 \ubbf8\uc138\ud55c \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \ubc84\uadf8\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EmailField \ud14d\uc2a4\ud2b8 \ud45c\ud604\uc740 \uc720\ud6a8\ud55c Email \uc8fc\uc18c\ub85c \ud14d\uc2a4\ud2b8\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4. django.db.models.fields.EmailField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : EmailField(max_length=None, min_length=None, allow_blank=False) RegexField \uc9c0\uc815\ub41c \uac12\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud558\ub294 \ud14d\uc2a4\ud2b8 \ud45c\ud604\uc740 \ud2b9\uc815 \uc815\uaddc \ud45c\ud604\uc2dd\uacfc \uc77c\uce58\ud569\ub2c8\ub2e4. django.forms.fields.RegexField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : RegexField(regex, max_length=None, min_length=None, allow_blank=False) \ud544\uc218 \uc815\uaddc \ud45c\ud604\uc2dd \uc778\uc790\ub294 \ubb38\uc790\uc5f4\uc774\uac70\ub098 \ucef4\ud30c\uc77c \ub41c \ud30c\uc774\uc36c \uc815\uaddc \ud45c\ud604\uc2dd \uac1d\uccb4\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac80\uc99d\uc744 \uc704\ud55c Django\uc758 django.core.validators.RegexValidator \uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. SlugField \ud328\ud134 [a-zA-Z0-9_-]+ \uc5d0 \ub300\ud55c \uc785\ub825\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud558\ub294 RegexField \uc785\ub2c8\ub2e4. django.db.models.fields.SlugField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : SlugField(max_length=50, min_length=None, allow_blank=False) URLField URL \uc77c\uce58 \ud328\ud134\uc5d0 \ub300\ud574 \uc785\ub825\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud558\ub294 RegexField \uc785\ub2c8\ub2e4. http://<host>/<path> \ud615\uc2dd\uc758 \uc815\uaddc\ud654 \ub41c URL\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. django.db.models.fields.URLField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. \ud655\uc778\uc744 \uc704\ud574 \uc7a5\uace0\uc758 django.core.validators.URLValidator \uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. Signature : URLField(max_length=200, min_length=None, allow_blank=False) UUIDField \uc785\ub825\uc774 \uc720\ud6a8\ud55c UUID \ubb38\uc790\uc5f4\uc784\uc744 \ubcf4\uc7a5\ud558\ub294 \ud544\ub4dc\uc785\ub2c8\ub2e4. to_internal_value \uba54\uc11c\ub4dc\ub294 uuid.UUID \uc778\uc2a4\ud134\uc2a4\ub97c \ub9ac\ud134\ud569\ub2c8\ub2e4. \ucd9c\ub825\uc2dc \ud544\ub4dc\ub294 \uc815\uaddc \ud558\uc774\ud508 \ud615\uc2dc\uc758 \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc608: \"de305d54-75b4-431b-adb2-eb6b9e546013\" Signature : UUIDField(format='hex_verbose') format : uuid \uac12\uc758 \ud45c\ud604 \ud615\uc2dd\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. 'hex_verbose' : \ud558\uc774\ud508\uc744 \ud3ec\ud568\ud55c \ube44\ud45c\uc900 16 \uc9c4\uc218 \ud45c\ud604 : \"5ce0e9a5-5ffa-654b-cee0-1238041fb31a\" 'hex' : \ud558\uc774\ud508\uc744 \uc81c\uc678\ud558\uace0 UUID\uc758 \uc555\ucd95 \ub41c 16 \uc9c4\uc218 \ud45c\ud604 : \"5ce0e9a55ffa654bcee01238041fb31a\" 'int' : UUID\uc758 128 \ube44\ud2b8 \uc815\uc218 \ud45c\ud604 : \"123456789012312313134124512351145145114\" 'urn' : RFC 4122 URID\uc758 URN \ud45c\ud604 : \"urn:uuid:5ce0e9a5-5ffa-654b-cee0-1238041fb31a\" \ud615\uc2dd parameter\ub97c \ubcc0\uacbd\ud558\uba74 \ud45c\ud604 \uac12\uc5d0\ub9cc \uc601\ud5a5\uc744 \uc90d\ub2c8\ub2e4. \ubaa8\ub4e0 \ud615\uc2dd\uc740 to_internal_value \uc5d0\uc11c \ud5c8\uc6a9\ub429\ub2c8\ub2e4. FilePathField \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc758 \ud2b9\uc815 \ub514\ub809\ud1a0\ub9ac\uc5d0 \uc788\ub294 \ud30c\uc77c \uc774\ub984\uc73c\ub85c \uc81c\ud55c \ub418\ub294 \ud544\ub4dc\uc785\ub2c8\ub2e4. django.forms.fields.FilePathField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : FilePathField(path, match=None, recursive=False, allow_files=True, allow_folders=False, required=None, **kwargs) path : \uc774 FilePathField\uac00 \uc120\ud0dd\ud574\uc57c\ud558\ub294 \ub514\ub809\ud1a0\ub9ac\uc5d0 \ub300\ud55c \uc808\ub300 \ud30c\uc77c \uc2dc\uc2a4\ud15c \uacbd\ub85c. match : \ud30c\uc77c \uacbd\ub85c \ud544\ud130\ub9c1\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud30c\uc77c \uc774\ub984\uc744 \ud544\ud130\ub9c1\ud558\ub294 \uc815\uaddc \ud45c\ud604\uc2dd\uc785\ub2c8\ub2e4. recursive : path\uc758 \ubaa8\ub4e0 \ud558\uc704 \ub514\ub809\ud1a0\ub9ac\uac00 \ud3ec\ud568\ub418\uc5b4\uc57c\ud558\ub294\uc9c0 \uc5ec\ubd80\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. allow_files : \uc9c0\uc815\ub41c \uc704\uce58\uc758 \ud30c\uc77c\uc744 \ud3ec\ud568\ud560\uc9c0 \uc5ec\ubd80\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 True \uc785\ub2c8\ub2e4. allow_files \ub610\ub294 allow_folders \ub294 True \uc774\uc5b4\uc57c\ud569\ub2c8\ub2e4. allow_folders : \uc9c0\uc815\ub41c \uc704\uce58\uc758 \ud3f4\ub354\ub97c \ud3ec\ud568\ud560\uc9c0 \uc5ec\ubd80\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. allow_folders \ub610\ub294 allow_files \ub294 True \uc5ec\uc57c\ud569\ub2c8\ub2e4. IPAddressField \uc785\ub825\uc774 \uc720\ud6a8\ud55c IPv4 \ub610\ub294 IPv6 \ubb38\uc790\uc5f4\uc778\uc9c0 \ud655\uc778\ud558\ub294 \ud544\ub4dc\uc785\ub2c8\ub2e4. django.forms.fields.IPAddressField \uc640 django.forms.fields.GenericIPAddressField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : IPAddressField(protocol='both', unpack_ipv4=False, **options) protocol \uc758 \uc720\ud6a8\ud55c \uc785\ub825\uc744 \uc9c0\uc815\ub41c \ud504\ub85c\ud1a0\ucf5c\ub85c \uc81c\ud55c\ud569\ub2c8\ub2e4. \ud5c8\uc6a9\ub418\ub294 \uac12\uc740 'both'(\uae30\ubcf8\uac12), 'IPv4'\ub610\ub294 'IPv6'\uc785\ub2c8\ub2e4. \ub9e4\uce6d\uc740 \ub300\uc18c\ubb38\uc790\ub97c \uad6c\ubd84\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. unpack_ipv4 \uc740 ::ffff:192.0.2.1 \uacfc \uac19\uc740 IPv4 \ub9e4\ud551 \uc8fc\uc18c\uc758 \uc555\ucd95\uc744 \ud489\ub2c8\ub2e4. \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \uc8fc\uc18c\uac00 192.0.2.1 \ub85c \uc555\ucd95 \ud574\uc81c\ub429\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud504\ub85c\ud1a0\ucf5c\uc774 'both'\ub85c \uc124\uc815\ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Numeric fields IntegerField \uc815\uc218 \ud45c\ud604. django.db.models.fields.IntegerField , django.db.models.fields.SmallIntegerField , django.db.models.fields.PositiveIntegerField , django.db.models.fields.PositiveSmallIntegerField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : IntegerField(max_value=None, min_value=None) max_value : \uc81c\uacf5\ub41c \uc22b\uc790\uac00\uc774 \uac12\ubcf4\ub2e4 \ud06c\uc9c0 \uc54a\uc740\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. min_value : \uc81c\uacf5\ub41c \uc22b\uc790\uac00\uc774 \uac12\ubcf4\ub2e4 \uc791\uc9c0 \uc54a\uc74c\uc744 \uac80\uc99d\ud569\ub2c8\ub2e4. FloatField \ubd80\ub3d9 \uc18c\uc218\uc810 \ud45c\ud604. django.db.models.fields.FloatField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : FloatField(max_value=None, min_value=None) max_value : \uc81c\uacf5\ub41c \uc22b\uc790\uac00\uc774 \uac12\ubcf4\ub2e4 \ud06c\uc9c0 \uc54a\uc740\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. min_value : \uc81c\uacf5\ub41c \uc22b\uc790\uac00\uc774 \uac12\ubcf4\ub2e4 \uc791\uc9c0 \uc54a\uc74c\uc744 \uac80\uc99d\ud569\ub2c8\ub2e4. DecimalField 10 \uc9c4\uc218 \ud45c\ud604\uc73c\ub85c, Python\uc5d0\uc11c Decimal \uc778\uc2a4\ud134\uc2a4\ub85c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. django.db.models.fields.DecimalField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : DecimalField(max_digits, decimal_places, coerce_to_string=None, max_value=None, min_value=None) max_digits : \uc22b\uc790\uc5d0 \ud5c8\uc6a9\ub418\ub294 \ucd5c\ub300 \uc790\ub9bf\uc218. None \uc774\uac70\ub098 decimal_places \ubcf4\ub2e4 \ud06c\uac70\ub098 \uac19\uc740 \uc815\uc218 \uc5ec\uc57c\ud569\ub2c8\ub2e4. decimal_places : \uc22b\uc790\uc640 \ud568\uaed8 \uc800\uc7a5\ud560 \uc18c\uc218 \uc790\ub9bf\uc218\uc785\ub2c8\ub2e4. coerce_to_string : \ud45c\ud604\uc2dd\uc5d0 \ubb38\uc790\uc5f4 \uac12\uc744 \ubc18\ud658\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 True \ub85c \uc124\uc815\ud558\uace0 Decimal \uac1d\uccb4\ub97c \ubc18\ud658\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 False \ub85c \uc124\uc815\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 COERCE_DECIMAL_TO_STRING \uc124\uc815 \ud0a4\uc640 \uac19\uc740 \uac12\uc73c\ub85c, \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc9c0 \uc54a\uc73c\uba74 True \uc785\ub2c8\ub2e4. serializer\uac00 Decimal \uac1d\uccb4\ub97c \ubc18\ud658\ud558\uba74 \ucd5c\uc885 \ucd9c\ub825 \ud615\uc2dd\uc740 \ub80c\ub354\ub7ec\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. localize \ub97c \uc124\uc815\ud558\uba74 \uac12\uc774 True \ub85c \uc124\uc815\ub429\ub2c8\ub2e4. max_value : \uc81c\uacf5\ub41c \uc22b\uc790\uac00\uc774 \uac12\ubcf4\ub2e4 \ud06c\uc9c0 \uc54a\uc740\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. min_value : \uc81c\uacf5\ub41c \uc22b\uc790\uac00\uc774 \uac12\ubcf4\ub2e4 \uc791\uc9c0 \uc54a\uc74c\uc744 \uac80\uc99d\ud569\ub2c8\ub2e4. localize : \ud604\uc7ac \ub85c\ucf00\uc77c\uc744 \uae30\ubc18\uc73c\ub85c \uc785\ub825 \ubc0f \ucd9c\ub825\uc758 \uc9c0\uc5ed\ud654\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 True \ub85c \uc124\uc815\ud558\uc2ed\uc2dc\uc624. \ub610\ud55c coerce_to_string \uc744 True \ub85c \uc124\uc815\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. \uc124\uc815 \ud30c\uc77c\uc5d0\uc11c USE_L10N=True \ub85c \uc124\uc815\ud558\uba74 \ub370\uc774\ud130 \uc11c\uc2dd\uc774 \ud65c\uc131\ud654\ub429\ub2c8\ub2e4. Example usage \uc18c\uc218\uc810 2 \uc790\ub9ac\uc758 \ud574\uc0c1\ub3c4\ub85c 999\uae4c\uc9c0\uc758 \uc22b\uc790\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud558\ub824\uba74 \ub2e4\uc74c\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. serializers.DecimalField(max_digits=5, decimal_places=2) \uc18c\uc218 \uc790\ub9bf\uc218 10\uc758 \ud574\uc0c1\ub3c4\ub85c 10 \uc5b5 \ubbf8\ub9cc\uc758 \uc22b\uc790\ub97c \uac80\uc99d\ud558\ub824\uba74 \ub2e4\uc74c\uc744 \uc218\ud589\ud558\uc2ed\uc2dc\uc624. serializers.DecimalField(max_digits=19, decimal_places=10) \uc774 \ud544\ub4dc\uc5d0\ub294 \uc120\ud0dd\uc801 \uc778\uc218 coerce_to_string \ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. True \ub85c \uc124\uc815\ud558\uba74 \ud45c\ud604\uc774 \ubb38\uc790\uc5f4\ub85c \ucd9c\ub825\ub429\ub2c8\ub2e4. False \ub85c \uc124\uc815\ud558\uba74 \ud45c\ud604\uc740 Decimal \uc778\uc2a4\ud134\uc2a4\ub85c \ub0a8\uac8c\ub418\uace0 \ucd5c\uc885 \ud45c\ud604\uc740 \ub80c\ub354\ub7ec\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. \uc124\uc815\uc744 \ud574\uc81c\ud558\uba74 \uae30\ubcf8\uac12\uc740 COERCE_DECIMAL_TO_STRING \uc124\uc815\uacfc \ub3d9\uc77c\ud55c \uac12\uc73c\ub85c \uc124\uc815\ub418\uba70, \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0 True \ub85c \uc124\uc815\ub429\ub2c8\ub2e4. Date and time fields DateTimeField \ub0a0\uc9dc \ubc0f \uc2dc\uac04 \ud45c\ud604. django.db.models.fields.DateTimeField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : DateTimeField(format=api_settings.DATETIME_FORMAT, input_formats=None) format : \ucd9c\ub825 \ud3ec\ub9f7\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4. \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 \uae30\ubcf8\uac12\uc740 DATETIME_FORMAT \uc124\uc815 \ud0a4\uc640 \ub3d9\uc77c\ud55c \uac12\uc73c\ub85c \uc124\uc815\ub418\uba70, \uc124\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 'iso-8601' \uc774 \ub429\ub2c8\ub2e4. \ud615\uc2dd \ubb38\uc790\uc5f4\ub85c \uc124\uc815\ud558\uba74 to_representation \ubc18\ud658 \uac12\uc744 \ubb38\uc790\uc5f4 \ucd9c\ub825\uc73c\ub85c \uac15\uc81c \ubcc0\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \ud615\uc2dd \ubb38\uc790\uc5f4\uc740 \uc544\ub798\uc5d0 \uc124\uba85\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uac12\uc744 None \uc73c\ub85c \uc124\uc815\ud558\uba74 Python datetime \uac1d\uccb4\uac00 to_representation \uc5d0 \uc758\ud574 \ubc18\ud658\ub418\uc5b4\uc57c\ud569\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 datetime \uc778\ucf54\ub529\uc740 \ub80c\ub354\ub7ec\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. input_formats : \ub0a0\uc9dc\ub97c \ud30c\uc2f1\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc785\ub825 \ud615\uc2dd\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 list\uc785\ub2c8\ub2e4. \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 DATETIME_INPUT_FORMATS \uc124\uc815\uc774 \uc0ac\uc6a9\ub418\uba70 \uae30\ubcf8\uac12\uc740 ['iso-8601'] \uc785\ub2c8\ub2e4. DateTimeField format strings. \ud615\uc2dd \ubb38\uc790\uc5f4\uc740 \uba85\uc2dc\uc801\uc73c\ub85c \ud615\uc2dd\uc744 \uc9c0\uc815\ud558\ub294 Python strftime \ud615\uc2dd\uc774\uac70\ub098 ISO 8601 \uc2a4\ud0c0\uc77c datetimes\uac00 \uc0ac\uc6a9\ub418\uc5b4\uc57c \ud568\uc744 \ub098\ud0c0\ub0b4\ub294 \ud2b9\uc218 \ubb38\uc790\uc5f4 'iso-8601' \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. (\uc608 : '2013-01-29T12:34:56.000000Z' ) \ud615\uc2dd\uc758 \uac12\uc73c\ub85c None \uac12\uc774 \uc0ac\uc6a9\ub418\uba74 datetime \uac1d\uccb4\ub294 to_representation \uc5d0 \uc758\ud574 \ubc18\ud658\ub418\uace0 \ucd5c\uc885 \ucd9c\ub825 \ud45c\ud604\uc740 \ub80c\ub354\ub7ec \ud074\ub798\uc2a4\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. auto_now and auto_now_add model fields ModelSerializer \ub610\ub294 HyperlinkedModelSerializer \ub97c \uc0ac\uc6a9\ud560 \ub54c auto_now=True \ub610\ub294 auto_now_add=True \uc778 \ubaa8\ub378 \ud544\ub4dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c read_only=True \uc778 serializer \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc744 \uc7ac\uc815\uc758\ud558\ub824\uba74 serializer\uc5d0\uc11c DateTimeField \ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc120\uc5b8\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608 : class CommentSerializer(serializers.ModelSerializer): created = serializers.DateTimeField() class Meta: model = Comment DateField \ub0a0\uc9dc \ud45c\ud604\uc785\ub2c8\ub2e4. django.db.models.fields.DateField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : DateField(format=api_settings.DATE_FORMAT, input_formats=None) format : \ucd9c\ub825 \ud3ec\ub9f7\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4. \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 \uae30\ubcf8\uac12\uc740 DATE_FORMAT \uc124\uc815 \ud0a4\uc640 \ub3d9\uc77c\ud55c \uac12\uc73c\ub85c \uc124\uc815\ub418\uba70, \uc124\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 'iso-8601' \uc774 \ub429\ub2c8\ub2e4. \ud615\uc2dd \ubb38\uc790\uc5f4\ub85c \uc124\uc815\ud558\uba74 to_representation \ubc18\ud658 \uac12\uc744 \ubb38\uc790\uc5f4 \ucd9c\ub825\uc73c\ub85c \uac15\uc81c \ubcc0\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \ud615\uc2dd \ubb38\uc790\uc5f4\uc740 \uc544\ub798\uc5d0 \uc124\uba85\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uac12\uc744 None \uc73c\ub85c \uc124\uc815\ud558\uba74 Python date \uac1d\uccb4\uac00 to_representation \uc5d0 \uc758\ud574 \ubc18\ud658\ub418\uc5b4\uc57c\ud569\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 date \uc778\ucf54\ub529\uc740 \ub80c\ub354\ub7ec\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. input_formats : date\ub97c \ud30c\uc2f1\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc785\ub825 \ud615\uc2dd\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \ubaa9\ub85d\uc785\ub2c8\ub2e4. \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 DATE_INPUT_FORMATS \uc124\uc815\uc774 \uc0ac\uc6a9\ub418\uba70 \uae30\ubcf8\uac12\uc740 ['iso-8601'] \uc785\ub2c8\ub2e4. DateField format strings \ud615\uc2dd \ubb38\uc790\uc5f4\uc740 \uba85\uc2dc\uc801\uc73c\ub85c \ud615\uc2dd\uc744 \uc9c0\uc815\ud558\ub294 Python strftime \ud615\uc2dd \uc774\uac70\ub098 ISO 8601 \uc2a4\ud0c0\uc77c \ub0a0\uc9dc\ub97c \uc0ac\uc6a9\ud574\uc57c\ud55c\ub2e4\ub294 \uac83\uc744 \ub098\ud0c0\ub0b4\ub294 \ud2b9\uc218 \ubb38\uc790\uc5f4 'iso-8601' \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. (\uc608 : '2013-01-29' ) TimeField \uc2dc\uac04 \ud45c\ud604. django.db.models.fields.TimeField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : TimeField(format=api_settings.TIME_FORMAT, input_formats=None) format : \ucd9c\ub825 \ud3ec\ub9f7\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4. \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 \uae30\ubcf8\uac12\uc740 TIME_FORMAT \uc124\uc815 \ud0a4\uc640 \ub3d9\uc77c\ud55c \uac12\uc73c\ub85c \uc124\uc815\ub418\uba70, \uc124\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 'iso-8601' \uc774 \ub429\ub2c8\ub2e4. \ud615\uc2dd \ubb38\uc790\uc5f4\ub85c \uc124\uc815\ud558\uba74 to_representation \ubc18\ud658 \uac12\uc744 \ubb38\uc790\uc5f4 \ucd9c\ub825\uc73c\ub85c \uac15\uc81c \ubcc0\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \ud615\uc2dd \ubb38\uc790\uc5f4\uc740 \uc544\ub798\uc5d0 \uc124\uba85\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uac12\uc744 None \uc73c\ub85c \uc124\uc815\ud558\uba74 Python time \uac1d\uccb4\uac00 to_representation \uc5d0 \uc758\ud574 \ubc18\ud658\ub418\uc5b4\uc57c \ud568\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 time \uc778\ucf54\ub529\uc740 \ub80c\ub354\ub7ec\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. input_formats : date\ub97c \ud30c\uc2f1\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218\uc788\ub294 \uc785\ub825 \ud615\uc2dd\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 list\uc785\ub2c8\ub2e4. \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 TIME_INPUT_FORMATS \uc124\uc815\uc774 \uc0ac\uc6a9\ub418\uba70 \uae30\ubcf8\uac12\uc740 ['iso-8601'] \uc785\ub2c8\ub2e4. TimeField format strings \ud615\uc2dd \ubb38\uc790\uc5f4\uc740 \uba85\uc2dc\uc801\uc73c\ub85c \ud615\uc2dd\uc744 \uc9c0\uc815\ud558\ub294 Python strftime \ud615\uc2dd \uc774\uac70\ub098 ISO 8601 \uc2a4\ud0c0\uc77c \uc2dc\uac04\uc774 \uc0ac\uc6a9\ub418\uc5b4\uc57c \ud568\uc744 \ub098\ud0c0\ub0b4\ub294 \ud2b9\uc218 \ubb38\uc790\uc5f4 'iso-8601' \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. (\uc608 : '12:34:56.000000' ) DurationField \uc9c0\uc18d \uc2dc\uac04 \ud45c\ud604. django.db.models.fields.DurationField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uc758 validated_data \uc5d0\ub294 datetime.timedelta \uc778\uc2a4\ud134\uc2a4\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ud45c\ud604\uc740 '[DD] [HH:[MM:]]ss[.uuuuuu]' \ud615\uc2dd\uc758 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. Note : \uc774 \ud544\ub4dc\ub294 Django \ubc84\uc804 1.8 \uc774\uc0c1\uc5d0\uc11c\ub9cc \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4. Signature : DurationField() Choice selection fields ChoiceField \uc81c\ud55c\ub41c choice set\uc5d0\uc11c \uac12\uc744 \ud5c8\uc6a9 \ud560 \uc218 \uc788\ub294 \ud544\ub4dc\uc785\ub2c8\ub2e4. ModelSerializer \uac00 \ud574\ub2f9 \ubaa8\ub378 \ud544\ub4dc\uc5d0 choices=... \uc778\uc218\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc73c\uba74 \ud544\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Signature : ChoiceField(choices) choices : \uc720\ud6a8\ud55c \uac12\uc758 list \ub610\ub294 (key, display_name) tuple\uc758 list. allow_blank : True \ub85c \uc124\uc815\ud558\uba74 \ube48 \ubb38\uc790\uc5f4\uc744 \uc720\ud6a8\ud55c \uac12\uc73c\ub85c \uac04\uc8fc\ud574\uc57c\ud569\ub2c8\ub2e4. False \ub85c \uc124\uc815\ud558\uba74 \ube48 \ubb38\uc790\uc5f4\uc774 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \uac83\uc73c\ub85c \uac04\uc8fc\ub418\uc5b4 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. html_cutoff : \uc124\uc815\ub41c \uacbd\uc6b0 HTML \uc120\ud0dd \ub4dc\ub86d \ub2e4\uc6b4\uc5d0 \ud45c\uc2dc \ub420 \ucd5c\ub300 \uc120\ud0dd\ud56d\ubaa9 \uc218\uc785\ub2c8\ub2e4. \ub9e4\uc6b0 \ud070 \uc120\ud0dd \ud56d\ubaa9\uc774 \uc788\ub294 \uc790\ub3d9 \uc0dd\uc131 \ub41c ChoiceField\uac00 \ud15c\ud50c\ub9bf \ub80c\ub354\ub9c1\uc744 \ubc29\ud574\ud558\uc9c0 \uc54a\ub3c4\ub85d\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 None \uc785\ub2c8\ub2e4. html_cutoff_text : \uc124\uc815\ub41c \uacbd\uc6b0 HTML \uc120\ud0dd \ub4dc\ub86d \ub2e4\uc6b4\uc5d0\uc11c \ucd5c\ub300 \ud56d\ubaa9 \uc218\uac00 \uc798\ub9b0 \uacbd\uc6b0 \ud14d\uc2a4\ud2b8 \ud45c\uc2dc\uae30\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \"More than {count} items\u2026\" \uc785\ub2c8\ub2e4. allow_blank \uc640 allow_null \uc740 \ubaa8\ub450 ChoiceField \uc758 \uc720\ud6a8\ud55c \uc635\uc158\uc785\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ub458 \uc911 \ud558\ub098\ub9cc \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. allow_blank \ub294 \ud14d\uc2a4\ud2b8 \uc120\ud0dd\uc5d0 \uc120\ud638\ub418\uace0 allow_null \uc740 \uc22b\uc790 \ub610\ub294 \uae30\ud0c0 \ud14d\uc2a4\ud2b8\uac00 \uc544\ub2cc \uc120\ud0dd\uc5d0 \uc6b0\uc120\ud574\uc57c\ud569\ub2c8\ub2e4. MultipleChoiceField \uc81c\ud55c \ub41c \uc120\ud0dd \ud56d\ubaa9 set\uc5d0\uc11c \uc120\ud0dd\ub41c 0, \ud558\ub098 \ub610\ub294 \uc5ec\ub7ec \uac12 \uc9d1\ud569\uc744 \ud5c8\uc6a9 \ud560 \uc218 \uc788\ub294 \ud544\ub4dc\uc785\ub2c8\ub2e4. \ud558\ub098\uc758 \ud544\uc218 \uc778\uc218\ub97c \ucde8\ud569\ub2c8\ub2e4. to_internal_value \ub294 \uc120\ud0dd\ub41c \uac12\uc744 \ud3ec\ud568\ud558\ub294 \uc138\ud2b8\ub97c \ub9ac\ud134\ud569\ub2c8\ub2e4. Signature : MultipleChoiceField(choices) choices : \uc720\ud6a8\ud55c \uac12\uc758 list \ub610\ub294 (key, display_name) tuple\uc758 list\uc785\ub2c8\ub2e4. allow_blank : True \ub85c \uc124\uc815\ud558\uba74 \ube48 \ubb38\uc790\uc5f4\uc744 \uc720\ud6a8\ud55c \uac12\uc73c\ub85c \uac04\uc8fc\ud574\uc57c\ud569\ub2c8\ub2e4. False \ub85c \uc124\uc815\ud558\uba74 \ube48 \ubb38\uc790\uc5f4\uc774 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \uac83\uc73c\ub85c \uac04\uc8fc\ub418\uc5b4 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. html_cutoff : \uc124\uc815\ub41c \uacbd\uc6b0 HTML \uc120\ud0dd \ub4dc\ub86d \ub2e4\uc6b4\uc5d0 \ud45c\uc2dc \ub420 \ucd5c\ub300 \uc120\ud0dd \ud56d\ubaa9 \uc218\uc785\ub2c8\ub2e4. \ub9e4\uc6b0 \ud070 \uc120\ud0dd \ud56d\ubaa9\uc774 \uc788\ub294 \uc790\ub3d9 \uc0dd\uc131 \ub41c ChoiceField\uac00 \ud15c\ud50c\ub9bf \ub80c\ub354\ub9c1\uc744 \ubc29\ud574\ud558\uc9c0 \uc54a\ub3c4\ub85d\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 None \uc785\ub2c8\ub2e4. html_cutoff_text : \uc124\uc815\ub41c \uacbd\uc6b0 HTML \uc120\ud0dd \ub4dc\ub86d \ub2e4\uc6b4\uc5d0\uc11c \ucd5c\ub300 \ud56d\ubaa9 \uc218\uac00 \uc798\ub9b0 \uacbd\uc6b0 \ud14d\uc2a4\ud2b8 \ud45c\uc2dc\uae30\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \"More than {count} items\u2026\" \uc785\ub2c8\ub2e4. ChoiceField \uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c allow_blank \ubc0f allow_null \uc635\uc158\uc774 \ubaa8\ub450 \uc720\ud6a8\ud558\uc9c0\ub9cc \ud558\ub098\ub9cc \uc0ac\uc6a9\ud558\uace0 \ub458 \ub2e4 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. allow_blank \ub294 \ud14d\uc2a4\ud2b8 \uc120\ud0dd\uc5d0 \uc120\ud638\ub418\uace0 allow_null \uc740 \uc22b\uc790 \ub610\ub294 \uae30\ud0c0 \ud14d\uc2a4\ud2b8\uac00 \uc544\ub2cc \uc120\ud0dd\uc5d0 \uc6b0\uc120\ud574\uc57c\ud569\ub2c8\ub2e4. File upload fields Parsers and file uploads. FileField \ubc0f ImageField \ud074\ub798\uc2a4\ub294 MultiPartParser \ub610\ub294 FileUploadParser \uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud558\uae30\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \ud30c\uc11c, \uc608\ub97c \ub4e4\uc5b4. JSON\uc740 \ud30c\uc77c \uc5c5\ub85c\ub4dc\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Django\uc758 \uc77c\ubc18 FILE_UPLOAD_HANDLERS \ub294 \uc5c5\ub85c\ub4dc \ub41c \ud30c\uc77c\uc744 \ucc98\ub9ac\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. FileField \ud30c\uc77c \ud45c\ud604. Django\uc758 \ud45c\uc900 FileField \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc218\ud589\ud569\ub2c8\ub2e4. django.forms.fields.FileField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : FileField(max_length=None, allow_empty_file=False, use_url=UPLOADED_FILES_USE_URL) max_length : \ud30c\uc77c \uc774\ub984\uc758 \ucd5c\ub300 \uae38\uc774\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. allow_empty_file : \ube48 \ud30c\uc77c\uc774 \ud5c8\uc6a9 \ub41c \uacbd\uc6b0 \uc9c0\uc815\ud569\ub2c8\ub2e4. use_url : True \ub85c \uc124\uc815\ud558\uba74 URL \ubb38\uc790\uc5f4 \uac12\uc774 \ucd9c\ub825 \ud45c\ud604\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. False \ub85c \uc124\uc815\ud558\uba74 \ud30c\uc77c \uc774\ub984 \ubb38\uc790\uc5f4 \uac12\uc774 \ucd9c\ub825 \ud45c\ud604\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. UPLOADED_FILES_USE_URL \uc124\uc815 \ud0a4\uc758 \uae30\ubcf8\uac12\uc73c\ub85c \uc124\uc815\ub418\uba70, \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0 True \ub85c \uc124\uc815\ub429\ub2c8\ub2e4. ImageField \uc774\ubbf8\uc9c0 \ud45c\ud604. \uc5c5\ub85c\ub4dc \ub41c \ud30c\uc77c \ub0b4\uc6a9\uc744 \uc54c\ub824\uc9c4 \uc774\ubbf8\uc9c0 \ud615\uc2dd\uacfc \uc77c\uce58\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. Signature : ImageField(max_length=None, allow_empty_file=False, use_url=UPLOADED_FILES_USE_URL) max_length : \ud30c\uc77c \uc774\ub984\uc758 \ucd5c\ub300 \uae38\uc774\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. allow_empty_file : \ube48 \ud30c\uc77c\uc774 \ud5c8\uc6a9 \ub41c \uacbd\uc6b0 \uc9c0\uc815\ud569\ub2c8\ub2e4. use_url : True \ub85c \uc124\uc815\ud558\uba74 URL \ubb38\uc790\uc5f4 \uac12\uc774 \ucd9c\ub825 \ud45c\ud604\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. False \ub85c \uc124\uc815\ud558\uba74 \ud30c\uc77c \uc774\ub984 \ubb38\uc790\uc5f4 \uac12\uc774 \ucd9c\ub825 \ud45c\ud604\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. UPLOADED_FILES_USE_URL \uc124\uc815 \ud0a4\uc758 \uae30\ubcf8\uac12\uc73c\ub85c \uc124\uc815\ub418\uba70, \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0 True \ub85c \uc124\uc815\ub429\ub2c8\ub2e4. Composite fields ListField \uc624\ube0c\uc81d\ud2b8\uc758 list\ub97c \uac80\uc99d\ud558\ub294 \ud544\ub4dc \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. Signature : ListField(child, min_length=None, max_length=None) child : \ub9ac\uc2a4\ud2b8 \ub0b4\uc758 object\uc758 \uac80\uc99d\uc5d0 \uc0ac\uc6a9\ud558\ub294 \ud544\ub4dc \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4. \uc774 \uc778\uc218\uac00 \uc81c\uacf5\ub418\uc9c0 \uc54a\uc73c\uba74 \ubaa9\ub85d\uc5d0\uc788\ub294 \uac1d\uccb4\uc758 \uc720\ud6a8\uc131\uc774 \uac80\uc0ac\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. min_length : \ubaa9\ub85d\uc5d0\uc774 \uc218\ubcf4\ub2e4 \uc801\uc740 \uc694\uc18c\uac00 \ud3ec\ud568\ub418\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. max_length : \ubaa9\ub85d\uc5d0\uc774 \uac1c\uc218\uc758 \uc694\uc18c\ub9cc \ud3ec\ud568\ub418\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc815\uc218 \ubaa9\ub85d\uc744 \uac80\uc99d\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uac83\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. scores = serializers.ListField( child=serializers.IntegerField(min_value=0, max_value=100) ) \ub610\ud55c ListField \ud074\ub798\uc2a4\ub294 \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa9\ub85d \ud544\ub4dc \ud074\ub798\uc2a4\ub97c \uc791\uc131\ud560 \uc218 \uc788\ub294 \uc120\uc5b8 \uc2a4\ud0c0\uc77c\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. class StringListField(serializers.ListField): child = serializers.CharField() \uc774\uc81c \uc6b0\ub9ac\ub294 custom StringListField \ud074\ub798\uc2a4\ub97c child \uc778\uc790\ub97c \uc81c\uacf5 \ud560 \ud544\uc694\uc5c6\uc774 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc804\ubc18\uc5d0 \uc7ac\uc0ac\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DictField \uac1c\uccb4 dict\uc744 \ud655\uc778\ud558\ub294 \ud544\ub4dc \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. DictField \uc758 \ud0a4\ub294 \ud56d\uc0c1 \ubb38\uc790\uc5f4 \uac12\uc73c\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. Signature : DictField(child) child : dict\uc758 \uac12\uc744 \ud655\uc778\ud558\ub294\ub370 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud544\ub4dc \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4. \uc774 \uc778\uc218\uac00 \uc81c\uacf5\ub418\uc9c0 \uc54a\uc73c\uba74 \ub9e4\ud551\uc758 \uac12\uc774 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ubb38\uc790\uc5f4\uacfc \ubb38\uc790\uc5f4\uc758 \ub9e4\ud551\uc744 \uac80\uc99d\ud558\ub294 \ud544\ub4dc\ub97c \ub9cc\ub4e4\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \uc791\uc131\ud569\ub2c8\ub2e4. document = DictField(child=CharField()) ListField \uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc120\uc5b8 \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc608 : class DocumentField(DictField): child = CharField() JSONField \ub4e4\uc5b4\uc624\ub294 \ub370\uc774\ud130 \uad6c\uc870\uac00 \uc720\ud6a8\ud55c JSON \ud504\ub9ac\ubbf8\ud2f0\ube0c\ub85c \uad6c\uc131\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\ub294 \ud544\ub4dc \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \ub300\uccb4 \ubc14\uc774\ub108\ub9ac \ubaa8\ub4dc\uc5d0\uc11c\ub294 JSON\uc73c\ub85c \uc778\ucf54\ub529 \ub41c \ubc14\uc774\ub108\ub9ac \ubb38\uc790\uc5f4\uc744 \ub098\ud0c0\ub0b4\uace0 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4. Signature : JSONField(binary) binary : True \ub85c \uc124\uc815\ud558\uba74 \ud544\ub4dc\uac00 \ud504\ub9ac\ubbf8\ud2f0\ube0c \ub370\uc774\ud130 \uad6c\uc870\uac00 \uc544\ub2cc JSON \uc778\ucf54\ub529 \ub41c \ubb38\uc790\uc5f4\uc744 \ucd9c\ub825\ud558\uace0 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. Miscellaneous fields ReadOnlyField \uc218\uc815\ud558\uc9c0 \uc54a\uace0 \ub2e8\uc21c\ud788 \ud544\ub4dc \uac12\uc744 \ubc18\ud658\ud558\ub294 \ud544\ub4dc \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uc774 \ud544\ub4dc\ub294 \ubaa8\ub378 \ud544\ub4dc\uac00 \uc544\ub2cc \uc18d\uc131\uacfc \uad00\ub828\ub41c \ud544\ub4dc \uc774\ub984\uc744 \ud3ec\ud568 \ud560 \ub54c ModelSerializer \uc5d0\uc11c \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Signature : ReadOnlyField() \uc608\ub97c \ub4e4\uc5b4, has_expired \uac00 Account \ubaa8\ub378\uc758 \uc18d\uc131 \uc778 \uacbd\uc6b0 \ub2e4\uc74c serializer\uac00\uc774\ub97c \uc790\ub3d9\uc73c\ub85c ReadOnlyField \ub85c \uc0dd\uc131\ud569\ub2c8\ub2e4. class AccountSerializer(serializers.ModelSerializer): class Meta: model = Account fields = ('id', 'account_name', 'has_expired') HiddenField \uc0ac\uc6a9\uc790 \uc785\ub825\uc5d0 \ub530\ub77c \uac12\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 \ub300\uc2e0 \uae30\ubcf8\uac12 \ub610\ub294 \ud638\ucd9c \uac00\ub2a5 \uac12\uc5d0\uc11c \uac12\uc744 \uac00\uc838\uc624\ub294 \ud544\ub4dc \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. Signature : HiddenField() \uc608\ub97c \ub4e4\uc5b4, serializer \uc720\ud6a8\uc131 \uac80\uc0ac \ub370\uc774\ud130\uc758 \uc77c\ubd80\ub85c \ud56d\uc0c1 \ud604\uc7ac \uc2dc\uac04\uc744 \uc81c\uacf5\ud558\ub294 \ud544\ub4dc\ub97c \ud3ec\ud568 \uc2dc\ud0a4\ub824\uba74 \ub2e4\uc74c\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. modified = serializers.HiddenField(default=timezone.now) HiddenField \ud074\ub798\uc2a4\ub294 \uc0ac\uc804 \uc815\uc758 \ub41c \uc77c\ubd80 \ud544\ub4dc \uac12\uc744 \uae30\ubc18\uc73c\ub85c \uc2e4\ud589\ud574\uc57c\ud558\ub294 \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc788\uc9c0\ub9cc \ud574\ub2f9 \ud544\ub4dc\ub97c \ubaa8\ub450 \ucd5c\uc885 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uacf5\uac1c\ud558\uc9c0 \uc54a\uc73c\ub824\ub294 \uacbd\uc6b0\uc5d0\ub9cc \ud544\uc694\ud569\ub2c8\ub2e4. HiddenField\uc5d0 \ub300\ud55c \ucd94\uac00 \uc608\uc81c\ub294 validators \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. ModelField \uc784\uc758\uc758 \ubaa8\ub378 \ud544\ub4dc\uc5d0 \ubb36\uc744 \uc218 \uc788\ub294 generic \ud544\ub4dc\uc785\ub2c8\ub2e4. ModelField \ud074\ub798\uc2a4\ub294 serializer/deserializer \uc791\uc5c5\uc744 \uad00\ub828 \ubaa8\ub378 \ud544\ub4dc\uc5d0 \uc704\uc784\ud569\ub2c8\ub2e4. \uc774 \ud544\ub4dc\ub294 \uc0c8 custom serializer \ud544\ub4dc\ub97c \ub9cc\ub4e4\uc9c0 \uc54a\uace0\ub3c4 custom \ubaa8\ub378 \ud544\ub4dc\uc5d0 \ub300\ud55c serializer \ud544\ub4dc\ub97c \ub9cc\ub4dc\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud544\ub4dc\ub294 ModelSerializer \uc5d0\uc11c custom \ubaa8\ub378 \ud544\ub4dc \ud074\ub798\uc2a4\uc5d0 \uc77c\uce58\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Signature : ModelField(model_field=<Django ModelField instance>) ModelField \ud074\ub798\uc2a4\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ub0b4\ubd80 \uc0ac\uc6a9\uc744 \uc704\ud55c \ud074\ub798\uc2a4\uc774\uc9c0\ub9cc \ud544\uc694\ud55c \uacbd\uc6b0 API\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ModelField \ub97c \uc62c\ubc14\ub974\uac8c \uc778\uc2a4\ud134\uc2a4\ud654\ud558\ub824\uba74 \uc778\uc2a4\ud134\uc2a4\ud654 \ub41c \ubaa8\ub378\uc5d0 \ucca8\ubd80 \ub41c \ud544\ub4dc\ub97c \uc804\ub2ec\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: ModelField(model_field=MyModel()._meta.get_field('custom_field')) SerializerMethodField \uc774 \ud544\ub4dc\ub294 \uc77d\uae30 \uc804\uc6a9 \ud544\ub4dc\uc785\ub2c8\ub2e4. \uc774 \ud074\ub798\uc2a4\ub294 \ucca8\ubd80 \ub41c serializer \ud074\ub798\uc2a4\uc5d0\uc11c \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\uc5ec \uac12\uc744 \uac00\uc838\uc635\ub2c8\ub2e4. \uac1d\uccb4\uc758 serializer \ub41c \ud45c\ud604\uc5d0 \ubaa8\ub4e0 \uc885\ub958\uc758 \ub370\uc774\ud130\ub97c \ucd94\uac00\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Signature : SerializerMethodField(method_name=None) method_name : \ud638\ucd9c\ub418\ub294 serializer\uc758 \uba54\uc11c\ub4dc \uc774\ub984\uc785\ub2c8\ub2e4. \ud3ec\ud568\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uae30\ubcf8\uac12\uc740 get_<field_name> \uc785\ub2c8\ub2e4. method_name \uc778\uc218\ub85c \ucc38\uc870\ub418\ub294 serializer \uba54\uc11c\ub4dc\ub294 serializer \ub420 \uac1d\uccb4\uc778 \ub2e8\uc77c \uc778\uc218 ( self \uc678)\ub97c \ucc44\ud0dd\ud574\uc57c\ud569\ub2c8\ub2e4. \uac1d\uccb4\uc758 serializer \ub41c \ud45c\ud604\uc5d0 \ud3ec\ud568\ub418\uae30\ub97c \uc6d0\ud558\ub294 \ubaa8\ub4e0 \uac83\uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: from django.contrib.auth.models import User from django.utils.timezone import now from rest_framework import serializers class UserSerializer(serializers.ModelSerializer): days_since_joined = serializers.SerializerMethodField() class Meta: model = User def get_days_since_joined(self, obj): return (now() - obj.date_joined).days Custom fields custom \ud544\ub4dc\ub97c \ub9cc\ub4e4\ub824\uba74 Field \ub97c \uc11c\ube0c \ud074\ub798\uc2a4\ud654\ud55c \ub2e4\uc74c .to_representation() \ubc0f .to_internal_value() \uba54\uc11c\ub4dc \uc911 \ud558\ub098 \ub610\ub294 \ubaa8\ub450\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud574\uc57c\ud569\ub2c8\ub2e4. \uc774 \ub450 \uba54\uc11c\ub4dc\ub294 \ucd08\uae30 \ub370\uc774\ud130 \uc720\ud615\uacfc \uae30\ubcf8 serializer \uac00\ub2a5 \ub370\uc774\ud130 \uc720\ud615\uac04\uc5d0 \ubcc0\ud658\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uae30\ubcf8 \ub370\uc774\ud130 \uc720\ud615\uc740 \uc77c\ubc18\uc801\uc73c\ub85c number, string, boolean, date / time / datetime \ub610\ub294 None \uc911 \ud558\ub098\uc785\ub2c8\ub2e4. \uadf8\uac83\ub4e4\uc740 \ub610\ud55c \ub2e4\ub978 \ud504\ub9ac\ubbf8\ud2f0\ube0c \uac1d\uccb4\ub9cc\uc744 \ud3ec\ud568\ud558\ub294 \uac1d\uccb4\uc640 \uac19\uc740 list \ub610\ub294 dict\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc911\uc778 \ub80c\ub354\ub7ec\uc5d0 \ub530\ub77c \ub2e4\ub978 \uc720\ud615\uc774 \uc9c0\uc6d0 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. .to_representation() \uba54\uc11c\ub4dc\ub294 \ucd08\uae30 \ub370\uc774\ud130 \uc720\ud615\uc744 \uae30\uc874\uc758 serializer \uac00\ub2a5 \ub370\uc774\ud130 \uc720\ud615\uc73c\ub85c \ubcc0\ud658\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. .to_internal_value() \uba54\uc11c\ub4dc\ub294 \uae30\ubcf8 \ub370\uc774\ud130 \uc720\ud615\uc744 \ub0b4\ubd80 \ud30c\uc774\uc36c \ud45c\ud604\uc73c\ub85c \ubcf5\uc6d0\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \ub370\uc774\ud130\uac00 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc774 \uba54\uc11c\ub4dc\ub294 serializers.ValidationError \ub97c \ubc1c\uc0dd\uc2dc\ucf1c\uc57c\ud569\ub2c8\ub2e4. \ubc84\uc804 2.x\uc5d0 \uc788\ub358 WritableField \ud074\ub798\uc2a4\ub294 \ub354 \uc774\uc0c1 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud544\ub4dc\uac00 \ub370\uc774\ud130 \uc785\ub825\uc744 \uc9c0\uc6d0\ud558\uba74 Field \uc758 \ud558\uc704 \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4\uace0 to_internal_value() \ub97c \uc7ac\uc815\uc758\ud574\uc57c\ud569\ub2c8\ub2e4. Examples RGB \uc0c9\uc0c1 \uac12\uc744 \ub098\ud0c0\ub0b4\ub294 \ud074\ub798\uc2a4\ub97c serializer\ud558\ub294 \uc608\ub97c \uc0b4\ud3b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. class Color(object): \"\"\" A color represented in the RGB colorspace. \"\"\" def __init__(self, red, green, blue): assert(red >= 0 and green >= 0 and blue >= 0) assert(red < 256 and green < 256 and blue < 256) self.red, self.green, self.blue = red, green, blue class ColorField(serializers.Field): \"\"\" Color objects are serialized into 'rgb(#, #, #)' notation. \"\"\" def to_representation(self, obj): return \"rgb(%d, %d, %d)\" % (obj.red, obj.green, obj.blue) def to_internal_value(self, data): data = data.strip('rgb(').rstrip(')') red, green, blue = [int(col) for col in data.split(',')] return Color(red, green, blue) \uae30\ubcf8\uc801\uc73c\ub85c \ud544\ub4dc \uac12\uc740 \uac1d\uccb4\uc758 \uc18d\uc131\uc5d0 \ub9e4\ud551\uc73c\ub85c \ucc98\ub9ac\ub429\ub2c8\ub2e4. \ud544\ub4dc \uac12\uc5d0 \uc561\uc11c\uc2a4\ud558\uace0 \uc124\uc815\ud558\ub294 \ubc29\ubc95\uc744 custom \ud574\uc57c\ud558\ub294 \uacbd\uc6b0 .get_attribute() \ubc0f / \ub610\ub294 .get_value() \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, serializer \ub418\ub294 \uac1d\uccb4\uc758 \ud074\ub798\uc2a4 \uc774\ub984\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ud544\ub4dc\ub97c \ub9cc\ub4ed\ub2c8\ub2e4. class ClassNameField(serializers.Field): def get_attribute(self, obj): # We pass the object instance onto `to_representation`, # not just the field attribute. return obj def to_representation(self, obj): \"\"\" Serialize the object's class name. \"\"\" return obj.__class__.__name__ Raising validation errors \uc704\uc758 ColorField \ud074\ub798\uc2a4\ub294 \ud604\uc7ac \ub370\uc774\ud130 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc218\ud589\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc798\ubabb\ub41c \ub370\uc774\ud130\ub97c \ub098\ud0c0\ub0b4\ub824\uba74 serializers.ValidationError \ub97c \ubc1c\uc0dd\uc2dc\ucf1c\uc57c\ud569\ub2c8\ub2e4. def to_internal_value(self, data): if not isinstance(data, six.text_type): msg = 'Incorrect type. Expected a string, but got %s' raise ValidationError(msg % type(data).__name__) if not re.match(r'^rgb\\([0-9]+,[0-9]+,[0-9]+\\)$', data): raise ValidationError('Incorrect format. Expected `rgb(#,#,#)`.') data = data.strip('rgb(').rstrip(')') red, green, blue = [int(col) for col in data.split(',')] if any([col > 255 or col < 0 for col in (red, green, blue)]): raise ValidationError('Value out of range. Must be between 0 and 255.') return Color(red, green, blue) .fail() \uba54\uc11c\ub4dc\ub294 error_messages dict\uc5d0\uc11c \uba54\uc2dc\uc9c0 \ubb38\uc790\uc5f4\uc744 \ucde8\ud558\ub294 ValidationError \ub97c \ubc1c\uc0dd\uc2dc\ud0a4\ub294 shortcut \uc785\ub2c8\ub2e4. \uc608: default_error_messages = { 'incorrect_type': 'Incorrect type. Expected a string, but got {input_type}', 'incorrect_format': 'Incorrect format. Expected `rgb(#,#,#)`.', 'out_of_range': 'Value out of range. Must be between 0 and 255.' } def to_internal_value(self, data): if not isinstance(data, six.text_type): self.fail('incorrect_type', input_type=type(data).__name__) if not re.match(r'^rgb\\([0-9]+,[0-9]+,[0-9]+\\)$', data): self.fail('incorrect_format') data = data.strip('rgb(').rstrip(')') red, green, blue = [int(col) for col in data.split(',')] if any([col > 255 or col < 0 for col in (red, green, blue)]): self.fail('out_of_range') return Color(red, green, blue) \uc774 \uc2a4\ud0c0\uc77c\uc740 \uc624\ub958 \uba54\uc2dc\uc9c0\ub97c \ucf54\ub4dc\uc5d0\uc11c\ubcf4\ub2e4 \uba85\ud655\ud558\uac8c \ubd84\ub9ac\ud558\uace0 \uc120\ud638\ud574\uc57c\ud569\ub2c8\ub2e4. Third party packages \ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4. DRF Compound Fields drf-compound-fields \ud328\ud0a4\uc9c0\ub294 many=True \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub294 serializer\uac00 \uc544\ub2cc \ub2e4\ub978 \ud544\ub4dc\ub85c \uc124\uba85 \ud560 \uc218 \uc788\ub294 \uac04\ub2e8\ud55c \uac12 \ubaa9\ub85d\uacfc \uac19\uc740 \"compound(\ubcf5\ud569)\" serializer \ud544\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub610\ud55c \ud2b9\uc815 \uc720\ud615 \ub610\ub294 \ud574\ub2f9 \uc720\ud615\uc758 \ud56d\ubaa9 \ubaa9\ub85d \uc77c \uc218 \uc788\ub294 \uc785\ub825 \ub41c dict \ubc0f \uac12\uc5d0 \ub300\ud55c \ud544\ub4dc\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. DRF Extra Fields drf-extra-fields \ud328\ud0a4\uc9c0\ub294 Base64ImageField \ubc0f PointField \ud074\ub798\uc2a4\ub97c \ud3ec\ud568\ud558\uc5ec REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ub300\ud55c \ucd94\uac00 serializer \ud544\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. djangrestframework-recursive djangorestframework-recursive \ud328\ud0a4\uc9c0\ub294 \uc7ac\uadc0\uc801 \uad6c\uc870\uc758 serializer\uc640 deserializer\ub97c \uc704\ud55c RecursiceField \ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. django-rest-framework-gis django-rest-framework-gis \ud328\ud0a4\uc9c0\ub294 GeometryField \ud544\ub4dc\uc640 GeoJSON serializer \uac19\uc740 django rest \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc704\ud55c \uc9c0\ub9ac\uc801 \ucd94\uac00 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. django-rest-framework-hstore django-rest-framework-hstore \ud328\ud0a4\uc9c0\ub294 django-hstore DictionaryField \ubaa8\ub378 \ud544\ub4dc\ub97c \uc9c0\uc6d0\ud558\ub294 HStoreField \ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Serializer fields"},{"location":"Serializer_fields/#django-rest-framework-serializer-fields","text":"\"Each field in a Form class is responsible not only for validating data, but also for \"cleaning\" it \u2014 normalizing it to a consistent format.\" \"Form \ud074\ub798\uc2a4\uc758 \uac01 \ud544\ub4dc\ub294 \ub370\uc774\ud130 \uc720\ud6a8\uc131 \uac80\uc0ac\ubfd0\ub9cc \uc544\ub2c8\ub77c \uc77c\uad00\ub41c \ud615\uc2dd\uc73c\ub85c \uc815\uaddc\ud654\ud558\ub824 \"\uc815\ub9ac\"\ud558\ub294 \uc5ed\ud560\uc744 \ub2f4\ub2f9\ud569\ub2c8\ub2e4.\" \u2014 Django documentation","title":"Django REST framework - Serializer fields"},{"location":"Serializer_fields/#serializer-fields","text":"serializer \ud544\ub4dc\ub294 \uae30\uc874 \uac12\uacfc \ub0b4\ubd80 \ub370\uc774\ud130 \uc720\ud615\uac04\uc758 \ubcc0\ud658\uc744 \ucc98\ub9ac\ud569\ub2c8\ub2e4. \ub610\ud55c \uc785\ub825 \uac12\uc758 \uc720\ud6a8\uc131 \uac80\uc0ac\uc640 \ubd80\ubaa8 \uc624\ube0c\uc81d\ud2b8\uc5d0\uc11c \uac12 \uac80\uc0c9 \ubc0f \uc124\uc815\uc744 \ucc98\ub9ac\ud569\ub2c8\ub2e4. Note : serializer \ud544\ub4dc\ub294 fields.py \uc5d0 \uc120\uc5b8\ub418\uc5b4 \uc788\uc9c0\ub9cc, \uaddc\uce59\uc5d0 \ub530\ub77c from rest)framework import serializer \uc5d0\uc11c \uac00\uc838\uc640\uc11c setializers.<FiledName> \ud544\ub4dc\ub97c \ucc38\uc870\ud574\uc57c\ud569\ub2c8\ub2e4.","title":"Serializer fields"},{"location":"Serializer_fields/#core-arguments","text":"\uac01 serializer \ud544\ub4dc \uc0dd\uc131\uc790\ub294 \ucd5c\uc18c\ud55c \uc774\ub7ec\ud55c \uc778\uc218\ub97c \ucde8\ud569\ub2c8\ub2e4. \uc77c\ubd80 Field \ud074\ub798\uc2a4\ub294 \ud544\ub4dc \ubcc4 \uc778\uc218\ub97c \ucd94\uac00\ub85c \uac00\uc838\uc624\uc9c0\ub9cc \ud56d\uc0c1 \ub2e4\uc74c \uc0ac\ud56d\uc744 \ubc1b\uc544\ub4e4\uc5ec\uc57c\ud569\ub2c8\ub2e4. read_only \uc77d\uae30 \uc804\uc6a9 \ud544\ub4dc\ub294 API \ucd9c\ub825\uc5d0 \ud3ec\ud568\ub418\uc9c0\ub9cc create \ub610\ub294 update \uc870\uc791 \uc911 \uc785\ub825\uc5d0 \ud3ec\ud568\ub418\uba74 \uc548\ub429\ub2c8\ub2e4. serializer \uc785\ub825\uc5d0 \uc798\ubabb \ub41c 'read_only'\ud544\ub4dc\ub294 \ubb34\uc2dc\ub429\ub2c8\ub2e4. \ud45c\ud604\uc2dd\uc744 serializer \ud560 \ub584 \ud544\ub4dc\uac00 \uc0ac\uc6a9\ub418\ub3c4\ub85d\ud558\ub824\uba74 \uc774 \uac12\uc744 True \ub85c \uc124\uc815\ud558\uace0 serializer \ubcf5\uc6d0 \uc911 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4e4\uac70\ub098 \uc5c5\ub370\uc774\ud2b8 \ud560 \ub584\ub294 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc138\uc694. Default: False write_only \uc774 \uac12\uc744 True \ub85c \uc124\uc815\ud558\uba74 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uac70\ub098 \ub9cc\ub4e4\ub54c \ud544\ub4dc\uac00 \uc0ac\uc6a9\ub420 \uc218 \uc788\uc9c0\ub9cc \ud45c\ud604\uc744 serializer \ud560 \ub54c\ub294 \ud544\ub4dc\uac00 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Default: True required deserializer \uc911\uc5d0 \ud544\ub4dc\uac00 \uc81c\uacf5\ub418\uc9c0 \uc54a\uc73c\uba74 \uc77c\ubc18\uc801\uc73c\ub85c \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. deserializer \uc911\uc5d0 \uc774 \ud544\ub4dc\uac00 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 False \ub85c \uc124\uc815\ud558\uc138\uc694. \uc774 \uac12\uc744 False \ub85c \uc124\uc815\ud558\uba74 \uc778\uc2a4\ud134\uc2a4\ub97c serializer \ud560 \ub54c \uac1d\uccb4 \uc18d\uc131 \ub610\ub294 dict \ud0a4\uac00 \ucd9c\ub825\uc5d0 \uc0dd\ub7b5 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud0a4\uac00 \uc5c6\uc73c\uba74 \ucd9c\ub825 \ud45c\ud604\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Default: True allow_null serializer \ud544\ub4dc\uc5d0 None \uc774 \uc804\ub2ec\ub418\uba74 \uc77c\ubc18\uc801\uc73c\ub85c \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. None \uc744 \uc720\ud6a8\ud55c \uac12\uc73c\ub85c \uac04\uc8fc\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 \uc774 \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c True \ub85c \uc124\uc815\ud558\uc138\uc694. Default: False default \uc124\uc815\ub418\uba74, \uc785\ub825 \uac12\uc774 \uc81c\uacf5\ub418\uc9c0 \uc54a\uc73c\uba74 \ud544\ub4dc\uc5d0 \uc0ac\uc6a9\ub420 \uae30\ubcf8\uac12\uc774 \uc81c\uacf5\ub429\ub2c8\ub2e4. \uc124\uc815\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uae30\ubcf8 \ub3d9\uc791\uc740 \uc18d\uc131\uc744 \uc804\ud600 \ucc44\uc6b0\uc9c0 \uc54a\ub294 \uac83\uc785\ub2c8\ub2e4. \ubd80\ubd84 \uc5c5\ub370\uc774\ud2b8 \uc870\uc791\uc911\uc5d0\ub294 default \uac12\uc774 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ubd80\ubd84 \uc5c5\ub370\uc774\ud2b8\uc758 \uacbd\uc6b0 \ub4e4\uc5b4\uc624\ub294 \ub370\uc774\ud130\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \ud544\ub4dc\uc5d0\ub9cc \uc720\ud6a8\uc131 \uac80\uc0ac \ub41c \uac12\uc774 \ubc18\ud658\ub429\ub2c8\ub2e4. \ud568\uc218 \ub610\ub294 \ub2e4\ub978 \ud638\ucd9c \uac00\ub2a5 \uac1d\uccb4\ub85c \uc124\uc815 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \uac12\uc740 \uc0ac\uc6a9\ub420 \ub54c\ub9c8\ub2e4 \ud3c9\uac00\ub429\ub2c8\ub2e4. \ud638\ucd9c \ub420 \ub54c \uc778\uc218\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. 'callable'\uc5d0 set_context \uba54\uc11c\ub4dc\uac00 \uc788\ub294 \uacbd\uc6b0, \ud544\ub4dc \uc778\uc2a4\ud134\uc2a4\ub97c \uc778\uc218\ub85c \uc0ac\uc6a9\ud558\uae30 \uc804\uc5d0 \ub9e4\ubc88 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc774\ub294 validators \uc640 \ub3d9\uc77c\ud55c \ubc29\uc2dd\uc73c\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4\ub97c serializer \ud560 \ub54c \uc624\ube0c\uc81d\ud2b8 \uc18d\uc131 \ub610\ub294 dict \ud0a4\uac00 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc5c6\ub294 \uacbd\uc6b0 \uae30\ubcf8\uac12\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc744 \uc124\uc815\ud558\uba74 \ud544\ub4dc\uac00 \ud544\uc694\ud558\uc9c0 \uc54a\uc74c\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \uae30\ubcf8 \ubc0f \ud544\uc218 \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \ubaa8\ub450 \ud3ec\ud568\ud558\uba74 \uc62c\ubc14\ub974\uc9c0 \uc54a\uc73c\uba70 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. source \ud544\ub4dc\ub97c \ucc44\uc6b0\ub294\ub370 \uc0ac\uc6a9\ud560 \uc18d\uc131\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. URLField(source='get_absolute_url') \uc640 \uac19\uc740 \uc790\uccb4 \uc778\uc218\ub9cc \uc0ac\uc6a9\ud558\uac70\ub098 EmailField(source='user.email') \uc640 \uac19\uc740 \uc18d\uc131\uc744 \ud1b5\uacfc\ud558\ub294 \uc810\uc73c\ub85c \uad6c\ubd84 \ub41c \ud45c\uae30\ubc95\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac12 source='*' \ub294 \ud2b9\ubcc4\ud55c \uc758\ubbf8\ub97c \uac00\uc9c0\uba70 \uc804\uccb4 \uac1d\uccb4\uac00 \ud544\ub4dc\ub85c \uc804\ub2ec\ub418\uc5b4\uc57c \ud568\uc744 \ub098\ud0c0\ub0b4\uae30 \uc704\ud574 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc911\ucca9\ub41c \ud45c\ud604\uc744 \uc791\uc131\ud558\uac70\ub098 \ucd9c\ub825 \ud45c\ud604\uc744 \uacb0\uc815\ud558\uae30 \uc704\ud574 \uc804\uccb4 \uc624\ube0c\uc81d\ud2b8\uc5d0 \uc561\uc138\uc2a4\ud574\uc57c\ud558\ub294 \ud544\ub4dc\uc5d0 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \ud544\ub4dc\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. validators \uc785\ub825 \ud544\ub4dc \uc785\ub825\uc5d0 \uc801\uc6a9\ub418\uc5b4\uc57c\ud558\uace0 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\ub97c \ubc1c\uc0dd\uc2dc\ud0a4\uac70\ub098 \ub2e8\uc21c\ud788 \ubc18\ud658\ud574\uc57c\ud558\ub294 validator \ud568\uc218\uc758 list\uc785\ub2c8\ub2e4. 'Validator'\ud568\uc218\ub294 \uc77c\ubc18\uc801\uc73c\ub85c serializers.ValidationError \ub97c \ubc1c\uc0dd\uc2dc\ucf1c\uc57c\ud558\uc9c0\ub9cc Django\uc5d0 \ub0b4\uc7a5\ub41c ValidationError \ub294 Djang \ucf54\ub4dc\ubca0\uc774\uc2a4 \ub610\ub294 \ud0c0\uc0ac Django \ud328\ud0a4\uc9c0\uc5d0 \uc815\uc758\ub41c \uc720\ud6a8\uc131 \uac80\uc0ac\uae30\uc640\uc758 \ud638\ud658\uc131\uc744 \uc704\ud574 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. error_messages \uc624\ub958 \uba54\uc2dc\uc9c0\uc5d0 \ub300\ud55c \uc624\ub958\ucf54\ub4dc dict label HTML \uc591\uc2dd \ud544\ub4dc \ub610\ub294 \uae30\ud0c0 \uc124\uba85\uc801\uc778 \uc694\uc18c\uc758 \ud544\ub4dc \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc9e7\uc740 \ud14d\uc2a4\ud2b8 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. help_text HTML \uc591\uc2dd \ud544\ub4dc\ub098 \uae30\ud0c0 \uc124\uba85\uc801\uc778 \uc694\uc18c\uc758 \ud544\ub4dc\uc5d0 \ub300\ud55c \uc124\uba85\uc73c\ub85c \uc0ac\uc6a9\ub420 \uc218 \uc788\ub294 \ud14d\uc2a4\ud2b8 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. initial HTML \uc591\uc2dd \ud53c\ub4dc \uac12\uc744 \ubbf8\ub9ac \ucc44\uc6b0\ub294 \ub370 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \uac12\uc785\ub2c8\ub2e4. \uc77c\ubc18 Django field \uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud638\ucd9c \ub300\uc0c1\uc744 \uc804\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. import datetime from rest_framework import serializers class ExampleSerializer(serializers.Serializer): day = serializers.DateField(initial=datetime.date.today) style \ub80c\ub354\ub7ec\uac00 \ud544\ub4dc\ub97c \ub80c\ub354\ub9c1\ud558\ub294 \ubc29\ubc95\uc744 \uc81c\uc5b4\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 key-value dict\uc785\ub2c8\ub2e4. \ub2e4\uc74c\uc740 'input_type' \uacfc 'base_template' \uc758 \ub450 \uac00\uc9c0 \uc608\uc785\ub2c8\ub2e4. # Use <input type=\"password\"> for the input. password = serializers.CharField( style={'input_type': 'password'} ) # Use a radio input instead of a select input. color_channel = serializers.ChoiceField( choices=['red', 'green', 'blue'], style={'base_template': 'radio.html'} ) \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 HTML & Forms documentation \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"Core arguments"},{"location":"Serializer_fields/#boolean-fields","text":"","title":"Boolean fields"},{"location":"Serializer_fields/#booleanfield","text":"boolean \ud45c\ud604\uc785\ub2c8\ub2e4. HTML\uc73c\ub85c \uc778\ucf54\ub529 \ub41c \uc591\uc2dd \uc785\ub825\uc744 \uc0ac\uc6a9\ud560 \ub54c default=True \uc635\uc158\uc774 \uc9c0\uc815\ub418\uc5b4 \uc788\uc5b4\ub3c4 \uac12\uc744 \uc0dd\ub7b5\ud558\uba74 \ud56d\uc0c1 \ud544\ub4dc\ub97c False \ub85c \uc124\uc815\ud558\ub294 \uac83\uc73c\ub85c \ucc98\ub9ac\ub429\ub2c8\ub2e4. \uc774\uac83\uc740 HTML \uccb4\ud06c \uc0c1\uc790 \uc785\ub825\uc774 \uac12\uc744 \uc0dd\ub7b5\ud558\uc5ec \uc120\ud0dd\ub418\uc9c0 \uc54a\uc740 \uc0c1\ud0dc\ub97c \ub098\ud0c0\ub0b4\ubbc0\ub85c, REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc0dd\ub7b5\uc744 \ube48 \uccb4\ud06c \ubc15\uc2a4 \uc785\ub825\uc73c\ub85c \ucc98\ub9ac\ud569\ub2c8\ub2e4. django.db.models.fields.BooleanField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : BooleanField()","title":"BooleanField"},{"location":"Serializer_fields/#nullbooleanfield","text":"\uc720\ud6a8\ud55c \uac12\uc73c\ub85c None \ub3c4 \ud5c8\uc6a9\ud558\ub294 boolean \ud45c\ud604\uc785\ub2c8\ub2e4. django.db.models.fields.NullBooleanField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : NullBooleanField()","title":"NullBooleanField"},{"location":"Serializer_fields/#string-fields","text":"","title":"String fields"},{"location":"Serializer_fields/#charfield","text":"\ud14d\uc2a4\ud2b8 \ud45c\ud604\uc785\ub2c8\ub2e4. \uc120\ud0dd\uc801\uc73c\ub85c \ud14d\uc2a4\ud2b8\uac00 max_length \ubcf4\ub2e4 \uc9e7\uace0 min_length \ubcf4\ub2e4 \uae38\ub3c4\ub85d \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4. django.db.models.fields.CharField \ub610\ub294 django.db.models.fields.TextField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : CharField(max_length=None, min_length=None, allow_blank=False, trim_whitespace=True) max_length : \uc785\ub825\uc774 \uc774 \ubb38\uc790 \uc218\ub97c \ucd08\uacfc\ud558\uc9c0 \uc54a\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. min_length : \uc785\ub825\uc5d0 \uc774 \uc218\ubcf4\ub2e4 \uc801\uc740 \ubb38\uc790\uac00 \ub4e4\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. allow_blank : True \ub85c \uc124\uc815\ud558\uba74 \ube48 \ubb38\uc790\uc5f4\uc744 \uc720\ud6a8\ud55c \uac12\uc73c\ub85c \uac04\uc8fc\ud574\uc57c\ud569\ub2c8\ub2e4. False \ub85c \uc124\uc815\ud558\uba74 \ube48 \ubb38\uc790\uc5f4\uc774 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \uac83\uc73c\ub85c \uac04\uc8fc\ub418\uc5b4 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. rim_whitespace : True \ub85c \uc124\uc815\ud558\uba74 \uc55e\ub4a4 \uacf5\ubc31\uc774 \uc798\ub9bd\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 True \uc785\ub2c8\ub2e4. allow_null \uc635\uc158\uc740 \ubb38\uc790\uc5f4 \ud544\ub4dc\uc5d0\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc, allow_blank \ub97c \uc0ac\uc6a9\ud558\uba74 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. allow_blank=True \uc640 allow_null=True \ub97c \ubaa8\ub450 \uc124\uc815\ud558\ub294 \uac83\uc740 \uc720\ud6a8\ud558\uc9c0\ub9cc \ubb38\uc790\uc5f4 \ud45c\ud604\uc5d0 \ud5c8\uc6a9\ub418\ub294 \ub450 \uac00\uc9c0 \uc720\ud615\uc758 \ube48 \uac12\uc774 \uc874\uc7ac\ud558\ubbc0\ub85c \ub370\uc774\ud130 \ubd88\uc77c\uce58\uc640 \ubbf8\uc138\ud55c \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \ubc84\uadf8\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"CharField"},{"location":"Serializer_fields/#emailfield","text":"\ud14d\uc2a4\ud2b8 \ud45c\ud604\uc740 \uc720\ud6a8\ud55c Email \uc8fc\uc18c\ub85c \ud14d\uc2a4\ud2b8\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4. django.db.models.fields.EmailField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : EmailField(max_length=None, min_length=None, allow_blank=False)","title":"EmailField"},{"location":"Serializer_fields/#regexfield","text":"\uc9c0\uc815\ub41c \uac12\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud558\ub294 \ud14d\uc2a4\ud2b8 \ud45c\ud604\uc740 \ud2b9\uc815 \uc815\uaddc \ud45c\ud604\uc2dd\uacfc \uc77c\uce58\ud569\ub2c8\ub2e4. django.forms.fields.RegexField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : RegexField(regex, max_length=None, min_length=None, allow_blank=False) \ud544\uc218 \uc815\uaddc \ud45c\ud604\uc2dd \uc778\uc790\ub294 \ubb38\uc790\uc5f4\uc774\uac70\ub098 \ucef4\ud30c\uc77c \ub41c \ud30c\uc774\uc36c \uc815\uaddc \ud45c\ud604\uc2dd \uac1d\uccb4\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac80\uc99d\uc744 \uc704\ud55c Django\uc758 django.core.validators.RegexValidator \uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.","title":"RegexField"},{"location":"Serializer_fields/#slugfield","text":"\ud328\ud134 [a-zA-Z0-9_-]+ \uc5d0 \ub300\ud55c \uc785\ub825\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud558\ub294 RegexField \uc785\ub2c8\ub2e4. django.db.models.fields.SlugField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : SlugField(max_length=50, min_length=None, allow_blank=False)","title":"SlugField"},{"location":"Serializer_fields/#urlfield","text":"URL \uc77c\uce58 \ud328\ud134\uc5d0 \ub300\ud574 \uc785\ub825\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud558\ub294 RegexField \uc785\ub2c8\ub2e4. http://<host>/<path> \ud615\uc2dd\uc758 \uc815\uaddc\ud654 \ub41c URL\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. django.db.models.fields.URLField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. \ud655\uc778\uc744 \uc704\ud574 \uc7a5\uace0\uc758 django.core.validators.URLValidator \uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. Signature : URLField(max_length=200, min_length=None, allow_blank=False)","title":"URLField"},{"location":"Serializer_fields/#uuidfield","text":"\uc785\ub825\uc774 \uc720\ud6a8\ud55c UUID \ubb38\uc790\uc5f4\uc784\uc744 \ubcf4\uc7a5\ud558\ub294 \ud544\ub4dc\uc785\ub2c8\ub2e4. to_internal_value \uba54\uc11c\ub4dc\ub294 uuid.UUID \uc778\uc2a4\ud134\uc2a4\ub97c \ub9ac\ud134\ud569\ub2c8\ub2e4. \ucd9c\ub825\uc2dc \ud544\ub4dc\ub294 \uc815\uaddc \ud558\uc774\ud508 \ud615\uc2dc\uc758 \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc608: \"de305d54-75b4-431b-adb2-eb6b9e546013\" Signature : UUIDField(format='hex_verbose') format : uuid \uac12\uc758 \ud45c\ud604 \ud615\uc2dd\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. 'hex_verbose' : \ud558\uc774\ud508\uc744 \ud3ec\ud568\ud55c \ube44\ud45c\uc900 16 \uc9c4\uc218 \ud45c\ud604 : \"5ce0e9a5-5ffa-654b-cee0-1238041fb31a\" 'hex' : \ud558\uc774\ud508\uc744 \uc81c\uc678\ud558\uace0 UUID\uc758 \uc555\ucd95 \ub41c 16 \uc9c4\uc218 \ud45c\ud604 : \"5ce0e9a55ffa654bcee01238041fb31a\" 'int' : UUID\uc758 128 \ube44\ud2b8 \uc815\uc218 \ud45c\ud604 : \"123456789012312313134124512351145145114\" 'urn' : RFC 4122 URID\uc758 URN \ud45c\ud604 : \"urn:uuid:5ce0e9a5-5ffa-654b-cee0-1238041fb31a\" \ud615\uc2dd parameter\ub97c \ubcc0\uacbd\ud558\uba74 \ud45c\ud604 \uac12\uc5d0\ub9cc \uc601\ud5a5\uc744 \uc90d\ub2c8\ub2e4. \ubaa8\ub4e0 \ud615\uc2dd\uc740 to_internal_value \uc5d0\uc11c \ud5c8\uc6a9\ub429\ub2c8\ub2e4.","title":"UUIDField"},{"location":"Serializer_fields/#filepathfield","text":"\ud30c\uc77c \uc2dc\uc2a4\ud15c\uc758 \ud2b9\uc815 \ub514\ub809\ud1a0\ub9ac\uc5d0 \uc788\ub294 \ud30c\uc77c \uc774\ub984\uc73c\ub85c \uc81c\ud55c \ub418\ub294 \ud544\ub4dc\uc785\ub2c8\ub2e4. django.forms.fields.FilePathField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : FilePathField(path, match=None, recursive=False, allow_files=True, allow_folders=False, required=None, **kwargs) path : \uc774 FilePathField\uac00 \uc120\ud0dd\ud574\uc57c\ud558\ub294 \ub514\ub809\ud1a0\ub9ac\uc5d0 \ub300\ud55c \uc808\ub300 \ud30c\uc77c \uc2dc\uc2a4\ud15c \uacbd\ub85c. match : \ud30c\uc77c \uacbd\ub85c \ud544\ud130\ub9c1\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud30c\uc77c \uc774\ub984\uc744 \ud544\ud130\ub9c1\ud558\ub294 \uc815\uaddc \ud45c\ud604\uc2dd\uc785\ub2c8\ub2e4. recursive : path\uc758 \ubaa8\ub4e0 \ud558\uc704 \ub514\ub809\ud1a0\ub9ac\uac00 \ud3ec\ud568\ub418\uc5b4\uc57c\ud558\ub294\uc9c0 \uc5ec\ubd80\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. allow_files : \uc9c0\uc815\ub41c \uc704\uce58\uc758 \ud30c\uc77c\uc744 \ud3ec\ud568\ud560\uc9c0 \uc5ec\ubd80\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 True \uc785\ub2c8\ub2e4. allow_files \ub610\ub294 allow_folders \ub294 True \uc774\uc5b4\uc57c\ud569\ub2c8\ub2e4. allow_folders : \uc9c0\uc815\ub41c \uc704\uce58\uc758 \ud3f4\ub354\ub97c \ud3ec\ud568\ud560\uc9c0 \uc5ec\ubd80\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. allow_folders \ub610\ub294 allow_files \ub294 True \uc5ec\uc57c\ud569\ub2c8\ub2e4.","title":"FilePathField"},{"location":"Serializer_fields/#ipaddressfield","text":"\uc785\ub825\uc774 \uc720\ud6a8\ud55c IPv4 \ub610\ub294 IPv6 \ubb38\uc790\uc5f4\uc778\uc9c0 \ud655\uc778\ud558\ub294 \ud544\ub4dc\uc785\ub2c8\ub2e4. django.forms.fields.IPAddressField \uc640 django.forms.fields.GenericIPAddressField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : IPAddressField(protocol='both', unpack_ipv4=False, **options) protocol \uc758 \uc720\ud6a8\ud55c \uc785\ub825\uc744 \uc9c0\uc815\ub41c \ud504\ub85c\ud1a0\ucf5c\ub85c \uc81c\ud55c\ud569\ub2c8\ub2e4. \ud5c8\uc6a9\ub418\ub294 \uac12\uc740 'both'(\uae30\ubcf8\uac12), 'IPv4'\ub610\ub294 'IPv6'\uc785\ub2c8\ub2e4. \ub9e4\uce6d\uc740 \ub300\uc18c\ubb38\uc790\ub97c \uad6c\ubd84\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. unpack_ipv4 \uc740 ::ffff:192.0.2.1 \uacfc \uac19\uc740 IPv4 \ub9e4\ud551 \uc8fc\uc18c\uc758 \uc555\ucd95\uc744 \ud489\ub2c8\ub2e4. \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \uc8fc\uc18c\uac00 192.0.2.1 \ub85c \uc555\ucd95 \ud574\uc81c\ub429\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud504\ub85c\ud1a0\ucf5c\uc774 'both'\ub85c \uc124\uc815\ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"IPAddressField"},{"location":"Serializer_fields/#numeric-fields","text":"","title":"Numeric fields"},{"location":"Serializer_fields/#integerfield","text":"\uc815\uc218 \ud45c\ud604. django.db.models.fields.IntegerField , django.db.models.fields.SmallIntegerField , django.db.models.fields.PositiveIntegerField , django.db.models.fields.PositiveSmallIntegerField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : IntegerField(max_value=None, min_value=None) max_value : \uc81c\uacf5\ub41c \uc22b\uc790\uac00\uc774 \uac12\ubcf4\ub2e4 \ud06c\uc9c0 \uc54a\uc740\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. min_value : \uc81c\uacf5\ub41c \uc22b\uc790\uac00\uc774 \uac12\ubcf4\ub2e4 \uc791\uc9c0 \uc54a\uc74c\uc744 \uac80\uc99d\ud569\ub2c8\ub2e4.","title":"IntegerField"},{"location":"Serializer_fields/#floatfield","text":"\ubd80\ub3d9 \uc18c\uc218\uc810 \ud45c\ud604. django.db.models.fields.FloatField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : FloatField(max_value=None, min_value=None) max_value : \uc81c\uacf5\ub41c \uc22b\uc790\uac00\uc774 \uac12\ubcf4\ub2e4 \ud06c\uc9c0 \uc54a\uc740\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. min_value : \uc81c\uacf5\ub41c \uc22b\uc790\uac00\uc774 \uac12\ubcf4\ub2e4 \uc791\uc9c0 \uc54a\uc74c\uc744 \uac80\uc99d\ud569\ub2c8\ub2e4.","title":"FloatField"},{"location":"Serializer_fields/#decimalfield","text":"10 \uc9c4\uc218 \ud45c\ud604\uc73c\ub85c, Python\uc5d0\uc11c Decimal \uc778\uc2a4\ud134\uc2a4\ub85c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. django.db.models.fields.DecimalField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : DecimalField(max_digits, decimal_places, coerce_to_string=None, max_value=None, min_value=None) max_digits : \uc22b\uc790\uc5d0 \ud5c8\uc6a9\ub418\ub294 \ucd5c\ub300 \uc790\ub9bf\uc218. None \uc774\uac70\ub098 decimal_places \ubcf4\ub2e4 \ud06c\uac70\ub098 \uac19\uc740 \uc815\uc218 \uc5ec\uc57c\ud569\ub2c8\ub2e4. decimal_places : \uc22b\uc790\uc640 \ud568\uaed8 \uc800\uc7a5\ud560 \uc18c\uc218 \uc790\ub9bf\uc218\uc785\ub2c8\ub2e4. coerce_to_string : \ud45c\ud604\uc2dd\uc5d0 \ubb38\uc790\uc5f4 \uac12\uc744 \ubc18\ud658\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 True \ub85c \uc124\uc815\ud558\uace0 Decimal \uac1d\uccb4\ub97c \ubc18\ud658\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 False \ub85c \uc124\uc815\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 COERCE_DECIMAL_TO_STRING \uc124\uc815 \ud0a4\uc640 \uac19\uc740 \uac12\uc73c\ub85c, \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc9c0 \uc54a\uc73c\uba74 True \uc785\ub2c8\ub2e4. serializer\uac00 Decimal \uac1d\uccb4\ub97c \ubc18\ud658\ud558\uba74 \ucd5c\uc885 \ucd9c\ub825 \ud615\uc2dd\uc740 \ub80c\ub354\ub7ec\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. localize \ub97c \uc124\uc815\ud558\uba74 \uac12\uc774 True \ub85c \uc124\uc815\ub429\ub2c8\ub2e4. max_value : \uc81c\uacf5\ub41c \uc22b\uc790\uac00\uc774 \uac12\ubcf4\ub2e4 \ud06c\uc9c0 \uc54a\uc740\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. min_value : \uc81c\uacf5\ub41c \uc22b\uc790\uac00\uc774 \uac12\ubcf4\ub2e4 \uc791\uc9c0 \uc54a\uc74c\uc744 \uac80\uc99d\ud569\ub2c8\ub2e4. localize : \ud604\uc7ac \ub85c\ucf00\uc77c\uc744 \uae30\ubc18\uc73c\ub85c \uc785\ub825 \ubc0f \ucd9c\ub825\uc758 \uc9c0\uc5ed\ud654\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 True \ub85c \uc124\uc815\ud558\uc2ed\uc2dc\uc624. \ub610\ud55c coerce_to_string \uc744 True \ub85c \uc124\uc815\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. \uc124\uc815 \ud30c\uc77c\uc5d0\uc11c USE_L10N=True \ub85c \uc124\uc815\ud558\uba74 \ub370\uc774\ud130 \uc11c\uc2dd\uc774 \ud65c\uc131\ud654\ub429\ub2c8\ub2e4.","title":"DecimalField"},{"location":"Serializer_fields/#example-usage","text":"\uc18c\uc218\uc810 2 \uc790\ub9ac\uc758 \ud574\uc0c1\ub3c4\ub85c 999\uae4c\uc9c0\uc758 \uc22b\uc790\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud558\ub824\uba74 \ub2e4\uc74c\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. serializers.DecimalField(max_digits=5, decimal_places=2) \uc18c\uc218 \uc790\ub9bf\uc218 10\uc758 \ud574\uc0c1\ub3c4\ub85c 10 \uc5b5 \ubbf8\ub9cc\uc758 \uc22b\uc790\ub97c \uac80\uc99d\ud558\ub824\uba74 \ub2e4\uc74c\uc744 \uc218\ud589\ud558\uc2ed\uc2dc\uc624. serializers.DecimalField(max_digits=19, decimal_places=10) \uc774 \ud544\ub4dc\uc5d0\ub294 \uc120\ud0dd\uc801 \uc778\uc218 coerce_to_string \ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. True \ub85c \uc124\uc815\ud558\uba74 \ud45c\ud604\uc774 \ubb38\uc790\uc5f4\ub85c \ucd9c\ub825\ub429\ub2c8\ub2e4. False \ub85c \uc124\uc815\ud558\uba74 \ud45c\ud604\uc740 Decimal \uc778\uc2a4\ud134\uc2a4\ub85c \ub0a8\uac8c\ub418\uace0 \ucd5c\uc885 \ud45c\ud604\uc740 \ub80c\ub354\ub7ec\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. \uc124\uc815\uc744 \ud574\uc81c\ud558\uba74 \uae30\ubcf8\uac12\uc740 COERCE_DECIMAL_TO_STRING \uc124\uc815\uacfc \ub3d9\uc77c\ud55c \uac12\uc73c\ub85c \uc124\uc815\ub418\uba70, \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0 True \ub85c \uc124\uc815\ub429\ub2c8\ub2e4.","title":"Example usage"},{"location":"Serializer_fields/#date-and-time-fields","text":"","title":"Date and time fields"},{"location":"Serializer_fields/#datetimefield","text":"\ub0a0\uc9dc \ubc0f \uc2dc\uac04 \ud45c\ud604. django.db.models.fields.DateTimeField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : DateTimeField(format=api_settings.DATETIME_FORMAT, input_formats=None) format : \ucd9c\ub825 \ud3ec\ub9f7\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4. \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 \uae30\ubcf8\uac12\uc740 DATETIME_FORMAT \uc124\uc815 \ud0a4\uc640 \ub3d9\uc77c\ud55c \uac12\uc73c\ub85c \uc124\uc815\ub418\uba70, \uc124\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 'iso-8601' \uc774 \ub429\ub2c8\ub2e4. \ud615\uc2dd \ubb38\uc790\uc5f4\ub85c \uc124\uc815\ud558\uba74 to_representation \ubc18\ud658 \uac12\uc744 \ubb38\uc790\uc5f4 \ucd9c\ub825\uc73c\ub85c \uac15\uc81c \ubcc0\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \ud615\uc2dd \ubb38\uc790\uc5f4\uc740 \uc544\ub798\uc5d0 \uc124\uba85\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uac12\uc744 None \uc73c\ub85c \uc124\uc815\ud558\uba74 Python datetime \uac1d\uccb4\uac00 to_representation \uc5d0 \uc758\ud574 \ubc18\ud658\ub418\uc5b4\uc57c\ud569\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 datetime \uc778\ucf54\ub529\uc740 \ub80c\ub354\ub7ec\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. input_formats : \ub0a0\uc9dc\ub97c \ud30c\uc2f1\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc785\ub825 \ud615\uc2dd\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 list\uc785\ub2c8\ub2e4. \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 DATETIME_INPUT_FORMATS \uc124\uc815\uc774 \uc0ac\uc6a9\ub418\uba70 \uae30\ubcf8\uac12\uc740 ['iso-8601'] \uc785\ub2c8\ub2e4.","title":"DateTimeField"},{"location":"Serializer_fields/#datetimefield-format-strings","text":"\ud615\uc2dd \ubb38\uc790\uc5f4\uc740 \uba85\uc2dc\uc801\uc73c\ub85c \ud615\uc2dd\uc744 \uc9c0\uc815\ud558\ub294 Python strftime \ud615\uc2dd\uc774\uac70\ub098 ISO 8601 \uc2a4\ud0c0\uc77c datetimes\uac00 \uc0ac\uc6a9\ub418\uc5b4\uc57c \ud568\uc744 \ub098\ud0c0\ub0b4\ub294 \ud2b9\uc218 \ubb38\uc790\uc5f4 'iso-8601' \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. (\uc608 : '2013-01-29T12:34:56.000000Z' ) \ud615\uc2dd\uc758 \uac12\uc73c\ub85c None \uac12\uc774 \uc0ac\uc6a9\ub418\uba74 datetime \uac1d\uccb4\ub294 to_representation \uc5d0 \uc758\ud574 \ubc18\ud658\ub418\uace0 \ucd5c\uc885 \ucd9c\ub825 \ud45c\ud604\uc740 \ub80c\ub354\ub7ec \ud074\ub798\uc2a4\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4.","title":"DateTimeField format strings."},{"location":"Serializer_fields/#auto_now-and-auto_now_add-model-fields","text":"ModelSerializer \ub610\ub294 HyperlinkedModelSerializer \ub97c \uc0ac\uc6a9\ud560 \ub54c auto_now=True \ub610\ub294 auto_now_add=True \uc778 \ubaa8\ub378 \ud544\ub4dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c read_only=True \uc778 serializer \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc744 \uc7ac\uc815\uc758\ud558\ub824\uba74 serializer\uc5d0\uc11c DateTimeField \ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc120\uc5b8\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608 : class CommentSerializer(serializers.ModelSerializer): created = serializers.DateTimeField() class Meta: model = Comment","title":"auto_now and auto_now_add model fields"},{"location":"Serializer_fields/#datefield","text":"\ub0a0\uc9dc \ud45c\ud604\uc785\ub2c8\ub2e4. django.db.models.fields.DateField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : DateField(format=api_settings.DATE_FORMAT, input_formats=None) format : \ucd9c\ub825 \ud3ec\ub9f7\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4. \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 \uae30\ubcf8\uac12\uc740 DATE_FORMAT \uc124\uc815 \ud0a4\uc640 \ub3d9\uc77c\ud55c \uac12\uc73c\ub85c \uc124\uc815\ub418\uba70, \uc124\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 'iso-8601' \uc774 \ub429\ub2c8\ub2e4. \ud615\uc2dd \ubb38\uc790\uc5f4\ub85c \uc124\uc815\ud558\uba74 to_representation \ubc18\ud658 \uac12\uc744 \ubb38\uc790\uc5f4 \ucd9c\ub825\uc73c\ub85c \uac15\uc81c \ubcc0\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \ud615\uc2dd \ubb38\uc790\uc5f4\uc740 \uc544\ub798\uc5d0 \uc124\uba85\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uac12\uc744 None \uc73c\ub85c \uc124\uc815\ud558\uba74 Python date \uac1d\uccb4\uac00 to_representation \uc5d0 \uc758\ud574 \ubc18\ud658\ub418\uc5b4\uc57c\ud569\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 date \uc778\ucf54\ub529\uc740 \ub80c\ub354\ub7ec\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. input_formats : date\ub97c \ud30c\uc2f1\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc785\ub825 \ud615\uc2dd\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 \ubaa9\ub85d\uc785\ub2c8\ub2e4. \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 DATE_INPUT_FORMATS \uc124\uc815\uc774 \uc0ac\uc6a9\ub418\uba70 \uae30\ubcf8\uac12\uc740 ['iso-8601'] \uc785\ub2c8\ub2e4.","title":"DateField"},{"location":"Serializer_fields/#datefield-format-strings","text":"\ud615\uc2dd \ubb38\uc790\uc5f4\uc740 \uba85\uc2dc\uc801\uc73c\ub85c \ud615\uc2dd\uc744 \uc9c0\uc815\ud558\ub294 Python strftime \ud615\uc2dd \uc774\uac70\ub098 ISO 8601 \uc2a4\ud0c0\uc77c \ub0a0\uc9dc\ub97c \uc0ac\uc6a9\ud574\uc57c\ud55c\ub2e4\ub294 \uac83\uc744 \ub098\ud0c0\ub0b4\ub294 \ud2b9\uc218 \ubb38\uc790\uc5f4 'iso-8601' \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. (\uc608 : '2013-01-29' )","title":"DateField format strings"},{"location":"Serializer_fields/#timefield","text":"\uc2dc\uac04 \ud45c\ud604. django.db.models.fields.TimeField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : TimeField(format=api_settings.TIME_FORMAT, input_formats=None) format : \ucd9c\ub825 \ud3ec\ub9f7\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4. \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 \uae30\ubcf8\uac12\uc740 TIME_FORMAT \uc124\uc815 \ud0a4\uc640 \ub3d9\uc77c\ud55c \uac12\uc73c\ub85c \uc124\uc815\ub418\uba70, \uc124\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 'iso-8601' \uc774 \ub429\ub2c8\ub2e4. \ud615\uc2dd \ubb38\uc790\uc5f4\ub85c \uc124\uc815\ud558\uba74 to_representation \ubc18\ud658 \uac12\uc744 \ubb38\uc790\uc5f4 \ucd9c\ub825\uc73c\ub85c \uac15\uc81c \ubcc0\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \ud615\uc2dd \ubb38\uc790\uc5f4\uc740 \uc544\ub798\uc5d0 \uc124\uba85\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uac12\uc744 None \uc73c\ub85c \uc124\uc815\ud558\uba74 Python time \uac1d\uccb4\uac00 to_representation \uc5d0 \uc758\ud574 \ubc18\ud658\ub418\uc5b4\uc57c \ud568\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 time \uc778\ucf54\ub529\uc740 \ub80c\ub354\ub7ec\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. input_formats : date\ub97c \ud30c\uc2f1\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218\uc788\ub294 \uc785\ub825 \ud615\uc2dd\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4 list\uc785\ub2c8\ub2e4. \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 TIME_INPUT_FORMATS \uc124\uc815\uc774 \uc0ac\uc6a9\ub418\uba70 \uae30\ubcf8\uac12\uc740 ['iso-8601'] \uc785\ub2c8\ub2e4.","title":"TimeField"},{"location":"Serializer_fields/#timefield-format-strings","text":"\ud615\uc2dd \ubb38\uc790\uc5f4\uc740 \uba85\uc2dc\uc801\uc73c\ub85c \ud615\uc2dd\uc744 \uc9c0\uc815\ud558\ub294 Python strftime \ud615\uc2dd \uc774\uac70\ub098 ISO 8601 \uc2a4\ud0c0\uc77c \uc2dc\uac04\uc774 \uc0ac\uc6a9\ub418\uc5b4\uc57c \ud568\uc744 \ub098\ud0c0\ub0b4\ub294 \ud2b9\uc218 \ubb38\uc790\uc5f4 'iso-8601' \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. (\uc608 : '12:34:56.000000' )","title":"TimeField format strings"},{"location":"Serializer_fields/#durationfield","text":"\uc9c0\uc18d \uc2dc\uac04 \ud45c\ud604. django.db.models.fields.DurationField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uc758 validated_data \uc5d0\ub294 datetime.timedelta \uc778\uc2a4\ud134\uc2a4\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ud45c\ud604\uc740 '[DD] [HH:[MM:]]ss[.uuuuuu]' \ud615\uc2dd\uc758 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. Note : \uc774 \ud544\ub4dc\ub294 Django \ubc84\uc804 1.8 \uc774\uc0c1\uc5d0\uc11c\ub9cc \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4. Signature : DurationField()","title":"DurationField"},{"location":"Serializer_fields/#choice-selection-fields","text":"","title":"Choice selection fields"},{"location":"Serializer_fields/#choicefield","text":"\uc81c\ud55c\ub41c choice set\uc5d0\uc11c \uac12\uc744 \ud5c8\uc6a9 \ud560 \uc218 \uc788\ub294 \ud544\ub4dc\uc785\ub2c8\ub2e4. ModelSerializer \uac00 \ud574\ub2f9 \ubaa8\ub378 \ud544\ub4dc\uc5d0 choices=... \uc778\uc218\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc73c\uba74 \ud544\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Signature : ChoiceField(choices) choices : \uc720\ud6a8\ud55c \uac12\uc758 list \ub610\ub294 (key, display_name) tuple\uc758 list. allow_blank : True \ub85c \uc124\uc815\ud558\uba74 \ube48 \ubb38\uc790\uc5f4\uc744 \uc720\ud6a8\ud55c \uac12\uc73c\ub85c \uac04\uc8fc\ud574\uc57c\ud569\ub2c8\ub2e4. False \ub85c \uc124\uc815\ud558\uba74 \ube48 \ubb38\uc790\uc5f4\uc774 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \uac83\uc73c\ub85c \uac04\uc8fc\ub418\uc5b4 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. html_cutoff : \uc124\uc815\ub41c \uacbd\uc6b0 HTML \uc120\ud0dd \ub4dc\ub86d \ub2e4\uc6b4\uc5d0 \ud45c\uc2dc \ub420 \ucd5c\ub300 \uc120\ud0dd\ud56d\ubaa9 \uc218\uc785\ub2c8\ub2e4. \ub9e4\uc6b0 \ud070 \uc120\ud0dd \ud56d\ubaa9\uc774 \uc788\ub294 \uc790\ub3d9 \uc0dd\uc131 \ub41c ChoiceField\uac00 \ud15c\ud50c\ub9bf \ub80c\ub354\ub9c1\uc744 \ubc29\ud574\ud558\uc9c0 \uc54a\ub3c4\ub85d\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 None \uc785\ub2c8\ub2e4. html_cutoff_text : \uc124\uc815\ub41c \uacbd\uc6b0 HTML \uc120\ud0dd \ub4dc\ub86d \ub2e4\uc6b4\uc5d0\uc11c \ucd5c\ub300 \ud56d\ubaa9 \uc218\uac00 \uc798\ub9b0 \uacbd\uc6b0 \ud14d\uc2a4\ud2b8 \ud45c\uc2dc\uae30\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \"More than {count} items\u2026\" \uc785\ub2c8\ub2e4. allow_blank \uc640 allow_null \uc740 \ubaa8\ub450 ChoiceField \uc758 \uc720\ud6a8\ud55c \uc635\uc158\uc785\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ub458 \uc911 \ud558\ub098\ub9cc \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. allow_blank \ub294 \ud14d\uc2a4\ud2b8 \uc120\ud0dd\uc5d0 \uc120\ud638\ub418\uace0 allow_null \uc740 \uc22b\uc790 \ub610\ub294 \uae30\ud0c0 \ud14d\uc2a4\ud2b8\uac00 \uc544\ub2cc \uc120\ud0dd\uc5d0 \uc6b0\uc120\ud574\uc57c\ud569\ub2c8\ub2e4.","title":"ChoiceField"},{"location":"Serializer_fields/#multiplechoicefield","text":"\uc81c\ud55c \ub41c \uc120\ud0dd \ud56d\ubaa9 set\uc5d0\uc11c \uc120\ud0dd\ub41c 0, \ud558\ub098 \ub610\ub294 \uc5ec\ub7ec \uac12 \uc9d1\ud569\uc744 \ud5c8\uc6a9 \ud560 \uc218 \uc788\ub294 \ud544\ub4dc\uc785\ub2c8\ub2e4. \ud558\ub098\uc758 \ud544\uc218 \uc778\uc218\ub97c \ucde8\ud569\ub2c8\ub2e4. to_internal_value \ub294 \uc120\ud0dd\ub41c \uac12\uc744 \ud3ec\ud568\ud558\ub294 \uc138\ud2b8\ub97c \ub9ac\ud134\ud569\ub2c8\ub2e4. Signature : MultipleChoiceField(choices) choices : \uc720\ud6a8\ud55c \uac12\uc758 list \ub610\ub294 (key, display_name) tuple\uc758 list\uc785\ub2c8\ub2e4. allow_blank : True \ub85c \uc124\uc815\ud558\uba74 \ube48 \ubb38\uc790\uc5f4\uc744 \uc720\ud6a8\ud55c \uac12\uc73c\ub85c \uac04\uc8fc\ud574\uc57c\ud569\ub2c8\ub2e4. False \ub85c \uc124\uc815\ud558\uba74 \ube48 \ubb38\uc790\uc5f4\uc774 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \uac83\uc73c\ub85c \uac04\uc8fc\ub418\uc5b4 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. html_cutoff : \uc124\uc815\ub41c \uacbd\uc6b0 HTML \uc120\ud0dd \ub4dc\ub86d \ub2e4\uc6b4\uc5d0 \ud45c\uc2dc \ub420 \ucd5c\ub300 \uc120\ud0dd \ud56d\ubaa9 \uc218\uc785\ub2c8\ub2e4. \ub9e4\uc6b0 \ud070 \uc120\ud0dd \ud56d\ubaa9\uc774 \uc788\ub294 \uc790\ub3d9 \uc0dd\uc131 \ub41c ChoiceField\uac00 \ud15c\ud50c\ub9bf \ub80c\ub354\ub9c1\uc744 \ubc29\ud574\ud558\uc9c0 \uc54a\ub3c4\ub85d\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 None \uc785\ub2c8\ub2e4. html_cutoff_text : \uc124\uc815\ub41c \uacbd\uc6b0 HTML \uc120\ud0dd \ub4dc\ub86d \ub2e4\uc6b4\uc5d0\uc11c \ucd5c\ub300 \ud56d\ubaa9 \uc218\uac00 \uc798\ub9b0 \uacbd\uc6b0 \ud14d\uc2a4\ud2b8 \ud45c\uc2dc\uae30\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \"More than {count} items\u2026\" \uc785\ub2c8\ub2e4. ChoiceField \uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c allow_blank \ubc0f allow_null \uc635\uc158\uc774 \ubaa8\ub450 \uc720\ud6a8\ud558\uc9c0\ub9cc \ud558\ub098\ub9cc \uc0ac\uc6a9\ud558\uace0 \ub458 \ub2e4 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. allow_blank \ub294 \ud14d\uc2a4\ud2b8 \uc120\ud0dd\uc5d0 \uc120\ud638\ub418\uace0 allow_null \uc740 \uc22b\uc790 \ub610\ub294 \uae30\ud0c0 \ud14d\uc2a4\ud2b8\uac00 \uc544\ub2cc \uc120\ud0dd\uc5d0 \uc6b0\uc120\ud574\uc57c\ud569\ub2c8\ub2e4.","title":"MultipleChoiceField"},{"location":"Serializer_fields/#file-upload-fields","text":"","title":"File upload fields"},{"location":"Serializer_fields/#parsers-and-file-uploads","text":"FileField \ubc0f ImageField \ud074\ub798\uc2a4\ub294 MultiPartParser \ub610\ub294 FileUploadParser \uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud558\uae30\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \ud30c\uc11c, \uc608\ub97c \ub4e4\uc5b4. JSON\uc740 \ud30c\uc77c \uc5c5\ub85c\ub4dc\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Django\uc758 \uc77c\ubc18 FILE_UPLOAD_HANDLERS \ub294 \uc5c5\ub85c\ub4dc \ub41c \ud30c\uc77c\uc744 \ucc98\ub9ac\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.","title":"Parsers and file uploads."},{"location":"Serializer_fields/#filefield","text":"\ud30c\uc77c \ud45c\ud604. Django\uc758 \ud45c\uc900 FileField \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc218\ud589\ud569\ub2c8\ub2e4. django.forms.fields.FileField \uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. Signature : FileField(max_length=None, allow_empty_file=False, use_url=UPLOADED_FILES_USE_URL) max_length : \ud30c\uc77c \uc774\ub984\uc758 \ucd5c\ub300 \uae38\uc774\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. allow_empty_file : \ube48 \ud30c\uc77c\uc774 \ud5c8\uc6a9 \ub41c \uacbd\uc6b0 \uc9c0\uc815\ud569\ub2c8\ub2e4. use_url : True \ub85c \uc124\uc815\ud558\uba74 URL \ubb38\uc790\uc5f4 \uac12\uc774 \ucd9c\ub825 \ud45c\ud604\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. False \ub85c \uc124\uc815\ud558\uba74 \ud30c\uc77c \uc774\ub984 \ubb38\uc790\uc5f4 \uac12\uc774 \ucd9c\ub825 \ud45c\ud604\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. UPLOADED_FILES_USE_URL \uc124\uc815 \ud0a4\uc758 \uae30\ubcf8\uac12\uc73c\ub85c \uc124\uc815\ub418\uba70, \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0 True \ub85c \uc124\uc815\ub429\ub2c8\ub2e4.","title":"FileField"},{"location":"Serializer_fields/#imagefield","text":"\uc774\ubbf8\uc9c0 \ud45c\ud604. \uc5c5\ub85c\ub4dc \ub41c \ud30c\uc77c \ub0b4\uc6a9\uc744 \uc54c\ub824\uc9c4 \uc774\ubbf8\uc9c0 \ud615\uc2dd\uacfc \uc77c\uce58\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. Signature : ImageField(max_length=None, allow_empty_file=False, use_url=UPLOADED_FILES_USE_URL) max_length : \ud30c\uc77c \uc774\ub984\uc758 \ucd5c\ub300 \uae38\uc774\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. allow_empty_file : \ube48 \ud30c\uc77c\uc774 \ud5c8\uc6a9 \ub41c \uacbd\uc6b0 \uc9c0\uc815\ud569\ub2c8\ub2e4. use_url : True \ub85c \uc124\uc815\ud558\uba74 URL \ubb38\uc790\uc5f4 \uac12\uc774 \ucd9c\ub825 \ud45c\ud604\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. False \ub85c \uc124\uc815\ud558\uba74 \ud30c\uc77c \uc774\ub984 \ubb38\uc790\uc5f4 \uac12\uc774 \ucd9c\ub825 \ud45c\ud604\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. UPLOADED_FILES_USE_URL \uc124\uc815 \ud0a4\uc758 \uae30\ubcf8\uac12\uc73c\ub85c \uc124\uc815\ub418\uba70, \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0 True \ub85c \uc124\uc815\ub429\ub2c8\ub2e4.","title":"ImageField"},{"location":"Serializer_fields/#composite-fields","text":"","title":"Composite fields"},{"location":"Serializer_fields/#listfield","text":"\uc624\ube0c\uc81d\ud2b8\uc758 list\ub97c \uac80\uc99d\ud558\ub294 \ud544\ub4dc \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. Signature : ListField(child, min_length=None, max_length=None) child : \ub9ac\uc2a4\ud2b8 \ub0b4\uc758 object\uc758 \uac80\uc99d\uc5d0 \uc0ac\uc6a9\ud558\ub294 \ud544\ub4dc \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4. \uc774 \uc778\uc218\uac00 \uc81c\uacf5\ub418\uc9c0 \uc54a\uc73c\uba74 \ubaa9\ub85d\uc5d0\uc788\ub294 \uac1d\uccb4\uc758 \uc720\ud6a8\uc131\uc774 \uac80\uc0ac\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. min_length : \ubaa9\ub85d\uc5d0\uc774 \uc218\ubcf4\ub2e4 \uc801\uc740 \uc694\uc18c\uac00 \ud3ec\ud568\ub418\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. max_length : \ubaa9\ub85d\uc5d0\uc774 \uac1c\uc218\uc758 \uc694\uc18c\ub9cc \ud3ec\ud568\ub418\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc815\uc218 \ubaa9\ub85d\uc744 \uac80\uc99d\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uac83\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. scores = serializers.ListField( child=serializers.IntegerField(min_value=0, max_value=100) ) \ub610\ud55c ListField \ud074\ub798\uc2a4\ub294 \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa9\ub85d \ud544\ub4dc \ud074\ub798\uc2a4\ub97c \uc791\uc131\ud560 \uc218 \uc788\ub294 \uc120\uc5b8 \uc2a4\ud0c0\uc77c\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. class StringListField(serializers.ListField): child = serializers.CharField() \uc774\uc81c \uc6b0\ub9ac\ub294 custom StringListField \ud074\ub798\uc2a4\ub97c child \uc778\uc790\ub97c \uc81c\uacf5 \ud560 \ud544\uc694\uc5c6\uc774 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc804\ubc18\uc5d0 \uc7ac\uc0ac\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"ListField"},{"location":"Serializer_fields/#dictfield","text":"\uac1c\uccb4 dict\uc744 \ud655\uc778\ud558\ub294 \ud544\ub4dc \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. DictField \uc758 \ud0a4\ub294 \ud56d\uc0c1 \ubb38\uc790\uc5f4 \uac12\uc73c\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. Signature : DictField(child) child : dict\uc758 \uac12\uc744 \ud655\uc778\ud558\ub294\ub370 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud544\ub4dc \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4. \uc774 \uc778\uc218\uac00 \uc81c\uacf5\ub418\uc9c0 \uc54a\uc73c\uba74 \ub9e4\ud551\uc758 \uac12\uc774 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ubb38\uc790\uc5f4\uacfc \ubb38\uc790\uc5f4\uc758 \ub9e4\ud551\uc744 \uac80\uc99d\ud558\ub294 \ud544\ub4dc\ub97c \ub9cc\ub4e4\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \uc791\uc131\ud569\ub2c8\ub2e4. document = DictField(child=CharField()) ListField \uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc120\uc5b8 \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc608 : class DocumentField(DictField): child = CharField()","title":"DictField"},{"location":"Serializer_fields/#jsonfield","text":"\ub4e4\uc5b4\uc624\ub294 \ub370\uc774\ud130 \uad6c\uc870\uac00 \uc720\ud6a8\ud55c JSON \ud504\ub9ac\ubbf8\ud2f0\ube0c\ub85c \uad6c\uc131\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\ub294 \ud544\ub4dc \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \ub300\uccb4 \ubc14\uc774\ub108\ub9ac \ubaa8\ub4dc\uc5d0\uc11c\ub294 JSON\uc73c\ub85c \uc778\ucf54\ub529 \ub41c \ubc14\uc774\ub108\ub9ac \ubb38\uc790\uc5f4\uc744 \ub098\ud0c0\ub0b4\uace0 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4. Signature : JSONField(binary) binary : True \ub85c \uc124\uc815\ud558\uba74 \ud544\ub4dc\uac00 \ud504\ub9ac\ubbf8\ud2f0\ube0c \ub370\uc774\ud130 \uad6c\uc870\uac00 \uc544\ub2cc JSON \uc778\ucf54\ub529 \ub41c \ubb38\uc790\uc5f4\uc744 \ucd9c\ub825\ud558\uace0 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4.","title":"JSONField"},{"location":"Serializer_fields/#miscellaneous-fields","text":"","title":"Miscellaneous fields"},{"location":"Serializer_fields/#readonlyfield","text":"\uc218\uc815\ud558\uc9c0 \uc54a\uace0 \ub2e8\uc21c\ud788 \ud544\ub4dc \uac12\uc744 \ubc18\ud658\ud558\ub294 \ud544\ub4dc \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uc774 \ud544\ub4dc\ub294 \ubaa8\ub378 \ud544\ub4dc\uac00 \uc544\ub2cc \uc18d\uc131\uacfc \uad00\ub828\ub41c \ud544\ub4dc \uc774\ub984\uc744 \ud3ec\ud568 \ud560 \ub54c ModelSerializer \uc5d0\uc11c \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Signature : ReadOnlyField() \uc608\ub97c \ub4e4\uc5b4, has_expired \uac00 Account \ubaa8\ub378\uc758 \uc18d\uc131 \uc778 \uacbd\uc6b0 \ub2e4\uc74c serializer\uac00\uc774\ub97c \uc790\ub3d9\uc73c\ub85c ReadOnlyField \ub85c \uc0dd\uc131\ud569\ub2c8\ub2e4. class AccountSerializer(serializers.ModelSerializer): class Meta: model = Account fields = ('id', 'account_name', 'has_expired')","title":"ReadOnlyField"},{"location":"Serializer_fields/#hiddenfield","text":"\uc0ac\uc6a9\uc790 \uc785\ub825\uc5d0 \ub530\ub77c \uac12\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 \ub300\uc2e0 \uae30\ubcf8\uac12 \ub610\ub294 \ud638\ucd9c \uac00\ub2a5 \uac12\uc5d0\uc11c \uac12\uc744 \uac00\uc838\uc624\ub294 \ud544\ub4dc \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. Signature : HiddenField() \uc608\ub97c \ub4e4\uc5b4, serializer \uc720\ud6a8\uc131 \uac80\uc0ac \ub370\uc774\ud130\uc758 \uc77c\ubd80\ub85c \ud56d\uc0c1 \ud604\uc7ac \uc2dc\uac04\uc744 \uc81c\uacf5\ud558\ub294 \ud544\ub4dc\ub97c \ud3ec\ud568 \uc2dc\ud0a4\ub824\uba74 \ub2e4\uc74c\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. modified = serializers.HiddenField(default=timezone.now) HiddenField \ud074\ub798\uc2a4\ub294 \uc0ac\uc804 \uc815\uc758 \ub41c \uc77c\ubd80 \ud544\ub4dc \uac12\uc744 \uae30\ubc18\uc73c\ub85c \uc2e4\ud589\ud574\uc57c\ud558\ub294 \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc788\uc9c0\ub9cc \ud574\ub2f9 \ud544\ub4dc\ub97c \ubaa8\ub450 \ucd5c\uc885 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uacf5\uac1c\ud558\uc9c0 \uc54a\uc73c\ub824\ub294 \uacbd\uc6b0\uc5d0\ub9cc \ud544\uc694\ud569\ub2c8\ub2e4. HiddenField\uc5d0 \ub300\ud55c \ucd94\uac00 \uc608\uc81c\ub294 validators \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"HiddenField"},{"location":"Serializer_fields/#modelfield","text":"\uc784\uc758\uc758 \ubaa8\ub378 \ud544\ub4dc\uc5d0 \ubb36\uc744 \uc218 \uc788\ub294 generic \ud544\ub4dc\uc785\ub2c8\ub2e4. ModelField \ud074\ub798\uc2a4\ub294 serializer/deserializer \uc791\uc5c5\uc744 \uad00\ub828 \ubaa8\ub378 \ud544\ub4dc\uc5d0 \uc704\uc784\ud569\ub2c8\ub2e4. \uc774 \ud544\ub4dc\ub294 \uc0c8 custom serializer \ud544\ub4dc\ub97c \ub9cc\ub4e4\uc9c0 \uc54a\uace0\ub3c4 custom \ubaa8\ub378 \ud544\ub4dc\uc5d0 \ub300\ud55c serializer \ud544\ub4dc\ub97c \ub9cc\ub4dc\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud544\ub4dc\ub294 ModelSerializer \uc5d0\uc11c custom \ubaa8\ub378 \ud544\ub4dc \ud074\ub798\uc2a4\uc5d0 \uc77c\uce58\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Signature : ModelField(model_field=<Django ModelField instance>) ModelField \ud074\ub798\uc2a4\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ub0b4\ubd80 \uc0ac\uc6a9\uc744 \uc704\ud55c \ud074\ub798\uc2a4\uc774\uc9c0\ub9cc \ud544\uc694\ud55c \uacbd\uc6b0 API\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ModelField \ub97c \uc62c\ubc14\ub974\uac8c \uc778\uc2a4\ud134\uc2a4\ud654\ud558\ub824\uba74 \uc778\uc2a4\ud134\uc2a4\ud654 \ub41c \ubaa8\ub378\uc5d0 \ucca8\ubd80 \ub41c \ud544\ub4dc\ub97c \uc804\ub2ec\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: ModelField(model_field=MyModel()._meta.get_field('custom_field'))","title":"ModelField"},{"location":"Serializer_fields/#serializermethodfield","text":"\uc774 \ud544\ub4dc\ub294 \uc77d\uae30 \uc804\uc6a9 \ud544\ub4dc\uc785\ub2c8\ub2e4. \uc774 \ud074\ub798\uc2a4\ub294 \ucca8\ubd80 \ub41c serializer \ud074\ub798\uc2a4\uc5d0\uc11c \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\uc5ec \uac12\uc744 \uac00\uc838\uc635\ub2c8\ub2e4. \uac1d\uccb4\uc758 serializer \ub41c \ud45c\ud604\uc5d0 \ubaa8\ub4e0 \uc885\ub958\uc758 \ub370\uc774\ud130\ub97c \ucd94\uac00\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Signature : SerializerMethodField(method_name=None) method_name : \ud638\ucd9c\ub418\ub294 serializer\uc758 \uba54\uc11c\ub4dc \uc774\ub984\uc785\ub2c8\ub2e4. \ud3ec\ud568\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uae30\ubcf8\uac12\uc740 get_<field_name> \uc785\ub2c8\ub2e4. method_name \uc778\uc218\ub85c \ucc38\uc870\ub418\ub294 serializer \uba54\uc11c\ub4dc\ub294 serializer \ub420 \uac1d\uccb4\uc778 \ub2e8\uc77c \uc778\uc218 ( self \uc678)\ub97c \ucc44\ud0dd\ud574\uc57c\ud569\ub2c8\ub2e4. \uac1d\uccb4\uc758 serializer \ub41c \ud45c\ud604\uc5d0 \ud3ec\ud568\ub418\uae30\ub97c \uc6d0\ud558\ub294 \ubaa8\ub4e0 \uac83\uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: from django.contrib.auth.models import User from django.utils.timezone import now from rest_framework import serializers class UserSerializer(serializers.ModelSerializer): days_since_joined = serializers.SerializerMethodField() class Meta: model = User def get_days_since_joined(self, obj): return (now() - obj.date_joined).days","title":"SerializerMethodField"},{"location":"Serializer_fields/#custom-fields","text":"custom \ud544\ub4dc\ub97c \ub9cc\ub4e4\ub824\uba74 Field \ub97c \uc11c\ube0c \ud074\ub798\uc2a4\ud654\ud55c \ub2e4\uc74c .to_representation() \ubc0f .to_internal_value() \uba54\uc11c\ub4dc \uc911 \ud558\ub098 \ub610\ub294 \ubaa8\ub450\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud574\uc57c\ud569\ub2c8\ub2e4. \uc774 \ub450 \uba54\uc11c\ub4dc\ub294 \ucd08\uae30 \ub370\uc774\ud130 \uc720\ud615\uacfc \uae30\ubcf8 serializer \uac00\ub2a5 \ub370\uc774\ud130 \uc720\ud615\uac04\uc5d0 \ubcc0\ud658\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uae30\ubcf8 \ub370\uc774\ud130 \uc720\ud615\uc740 \uc77c\ubc18\uc801\uc73c\ub85c number, string, boolean, date / time / datetime \ub610\ub294 None \uc911 \ud558\ub098\uc785\ub2c8\ub2e4. \uadf8\uac83\ub4e4\uc740 \ub610\ud55c \ub2e4\ub978 \ud504\ub9ac\ubbf8\ud2f0\ube0c \uac1d\uccb4\ub9cc\uc744 \ud3ec\ud568\ud558\ub294 \uac1d\uccb4\uc640 \uac19\uc740 list \ub610\ub294 dict\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc911\uc778 \ub80c\ub354\ub7ec\uc5d0 \ub530\ub77c \ub2e4\ub978 \uc720\ud615\uc774 \uc9c0\uc6d0 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. .to_representation() \uba54\uc11c\ub4dc\ub294 \ucd08\uae30 \ub370\uc774\ud130 \uc720\ud615\uc744 \uae30\uc874\uc758 serializer \uac00\ub2a5 \ub370\uc774\ud130 \uc720\ud615\uc73c\ub85c \ubcc0\ud658\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. .to_internal_value() \uba54\uc11c\ub4dc\ub294 \uae30\ubcf8 \ub370\uc774\ud130 \uc720\ud615\uc744 \ub0b4\ubd80 \ud30c\uc774\uc36c \ud45c\ud604\uc73c\ub85c \ubcf5\uc6d0\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \ub370\uc774\ud130\uac00 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc774 \uba54\uc11c\ub4dc\ub294 serializers.ValidationError \ub97c \ubc1c\uc0dd\uc2dc\ucf1c\uc57c\ud569\ub2c8\ub2e4. \ubc84\uc804 2.x\uc5d0 \uc788\ub358 WritableField \ud074\ub798\uc2a4\ub294 \ub354 \uc774\uc0c1 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud544\ub4dc\uac00 \ub370\uc774\ud130 \uc785\ub825\uc744 \uc9c0\uc6d0\ud558\uba74 Field \uc758 \ud558\uc704 \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4\uace0 to_internal_value() \ub97c \uc7ac\uc815\uc758\ud574\uc57c\ud569\ub2c8\ub2e4.","title":"Custom fields"},{"location":"Serializer_fields/#examples","text":"RGB \uc0c9\uc0c1 \uac12\uc744 \ub098\ud0c0\ub0b4\ub294 \ud074\ub798\uc2a4\ub97c serializer\ud558\ub294 \uc608\ub97c \uc0b4\ud3b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. class Color(object): \"\"\" A color represented in the RGB colorspace. \"\"\" def __init__(self, red, green, blue): assert(red >= 0 and green >= 0 and blue >= 0) assert(red < 256 and green < 256 and blue < 256) self.red, self.green, self.blue = red, green, blue class ColorField(serializers.Field): \"\"\" Color objects are serialized into 'rgb(#, #, #)' notation. \"\"\" def to_representation(self, obj): return \"rgb(%d, %d, %d)\" % (obj.red, obj.green, obj.blue) def to_internal_value(self, data): data = data.strip('rgb(').rstrip(')') red, green, blue = [int(col) for col in data.split(',')] return Color(red, green, blue) \uae30\ubcf8\uc801\uc73c\ub85c \ud544\ub4dc \uac12\uc740 \uac1d\uccb4\uc758 \uc18d\uc131\uc5d0 \ub9e4\ud551\uc73c\ub85c \ucc98\ub9ac\ub429\ub2c8\ub2e4. \ud544\ub4dc \uac12\uc5d0 \uc561\uc11c\uc2a4\ud558\uace0 \uc124\uc815\ud558\ub294 \ubc29\ubc95\uc744 custom \ud574\uc57c\ud558\ub294 \uacbd\uc6b0 .get_attribute() \ubc0f / \ub610\ub294 .get_value() \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, serializer \ub418\ub294 \uac1d\uccb4\uc758 \ud074\ub798\uc2a4 \uc774\ub984\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ud544\ub4dc\ub97c \ub9cc\ub4ed\ub2c8\ub2e4. class ClassNameField(serializers.Field): def get_attribute(self, obj): # We pass the object instance onto `to_representation`, # not just the field attribute. return obj def to_representation(self, obj): \"\"\" Serialize the object's class name. \"\"\" return obj.__class__.__name__","title":"Examples"},{"location":"Serializer_fields/#raising-validation-errors","text":"\uc704\uc758 ColorField \ud074\ub798\uc2a4\ub294 \ud604\uc7ac \ub370\uc774\ud130 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc218\ud589\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc798\ubabb\ub41c \ub370\uc774\ud130\ub97c \ub098\ud0c0\ub0b4\ub824\uba74 serializers.ValidationError \ub97c \ubc1c\uc0dd\uc2dc\ucf1c\uc57c\ud569\ub2c8\ub2e4. def to_internal_value(self, data): if not isinstance(data, six.text_type): msg = 'Incorrect type. Expected a string, but got %s' raise ValidationError(msg % type(data).__name__) if not re.match(r'^rgb\\([0-9]+,[0-9]+,[0-9]+\\)$', data): raise ValidationError('Incorrect format. Expected `rgb(#,#,#)`.') data = data.strip('rgb(').rstrip(')') red, green, blue = [int(col) for col in data.split(',')] if any([col > 255 or col < 0 for col in (red, green, blue)]): raise ValidationError('Value out of range. Must be between 0 and 255.') return Color(red, green, blue) .fail() \uba54\uc11c\ub4dc\ub294 error_messages dict\uc5d0\uc11c \uba54\uc2dc\uc9c0 \ubb38\uc790\uc5f4\uc744 \ucde8\ud558\ub294 ValidationError \ub97c \ubc1c\uc0dd\uc2dc\ud0a4\ub294 shortcut \uc785\ub2c8\ub2e4. \uc608: default_error_messages = { 'incorrect_type': 'Incorrect type. Expected a string, but got {input_type}', 'incorrect_format': 'Incorrect format. Expected `rgb(#,#,#)`.', 'out_of_range': 'Value out of range. Must be between 0 and 255.' } def to_internal_value(self, data): if not isinstance(data, six.text_type): self.fail('incorrect_type', input_type=type(data).__name__) if not re.match(r'^rgb\\([0-9]+,[0-9]+,[0-9]+\\)$', data): self.fail('incorrect_format') data = data.strip('rgb(').rstrip(')') red, green, blue = [int(col) for col in data.split(',')] if any([col > 255 or col < 0 for col in (red, green, blue)]): self.fail('out_of_range') return Color(red, green, blue) \uc774 \uc2a4\ud0c0\uc77c\uc740 \uc624\ub958 \uba54\uc2dc\uc9c0\ub97c \ucf54\ub4dc\uc5d0\uc11c\ubcf4\ub2e4 \uba85\ud655\ud558\uac8c \ubd84\ub9ac\ud558\uace0 \uc120\ud638\ud574\uc57c\ud569\ub2c8\ub2e4.","title":"Raising validation errors"},{"location":"Serializer_fields/#third-party-packages","text":"\ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"Third party packages"},{"location":"Serializer_fields/#drf-compound-fields","text":"drf-compound-fields \ud328\ud0a4\uc9c0\ub294 many=True \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub294 serializer\uac00 \uc544\ub2cc \ub2e4\ub978 \ud544\ub4dc\ub85c \uc124\uba85 \ud560 \uc218 \uc788\ub294 \uac04\ub2e8\ud55c \uac12 \ubaa9\ub85d\uacfc \uac19\uc740 \"compound(\ubcf5\ud569)\" serializer \ud544\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub610\ud55c \ud2b9\uc815 \uc720\ud615 \ub610\ub294 \ud574\ub2f9 \uc720\ud615\uc758 \ud56d\ubaa9 \ubaa9\ub85d \uc77c \uc218 \uc788\ub294 \uc785\ub825 \ub41c dict \ubc0f \uac12\uc5d0 \ub300\ud55c \ud544\ub4dc\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"DRF Compound Fields"},{"location":"Serializer_fields/#drf-extra-fields","text":"drf-extra-fields \ud328\ud0a4\uc9c0\ub294 Base64ImageField \ubc0f PointField \ud074\ub798\uc2a4\ub97c \ud3ec\ud568\ud558\uc5ec REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ub300\ud55c \ucd94\uac00 serializer \ud544\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"DRF Extra Fields"},{"location":"Serializer_fields/#djangrestframework-recursive","text":"djangorestframework-recursive \ud328\ud0a4\uc9c0\ub294 \uc7ac\uadc0\uc801 \uad6c\uc870\uc758 serializer\uc640 deserializer\ub97c \uc704\ud55c RecursiceField \ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"djangrestframework-recursive"},{"location":"Serializer_fields/#django-rest-framework-gis","text":"django-rest-framework-gis \ud328\ud0a4\uc9c0\ub294 GeometryField \ud544\ub4dc\uc640 GeoJSON serializer \uac19\uc740 django rest \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc704\ud55c \uc9c0\ub9ac\uc801 \ucd94\uac00 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"django-rest-framework-gis"},{"location":"Serializer_fields/#django-rest-framework-hstore","text":"django-rest-framework-hstore \ud328\ud0a4\uc9c0\ub294 django-hstore DictionaryField \ubaa8\ub378 \ud544\ub4dc\ub97c \uc9c0\uc6d0\ud558\ub294 HStoreField \ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"django-rest-framework-hstore"},{"location":"Serializer_relations/","text":"Django REST framework - Serializer relations \"Bad programmers worry about the code. Good programmers worry about data structures and their relationships.\" \"\ub098\uc05c \ud504\ub85c\uadf8\ub798\uba38\ub294 \ucf54\ub4dc\uc5d0 \ub300\ud574 \uac71\uc815\ud569\ub2c8\ub2e4. \uc88b\uc740 \ud504\ub85c\uadf8\ub798\uba38\ub294 \ub370\uc774\ud130 \uad6c\uc870\uc640 \uadf8 \uad00\uacc4\uc5d0 \ub300\ud574 \uac71\uc815\ud569\ub2c8\ub2e4.\" \u2014 Linus Torvalds Serializer relations relational field\ub294 \ubaa8\ub378 \uad00\uacc4\ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. ForeignKey , ManyToManyField \ubc0f OneToOneField \uad00\uacc4\ub294 \ubb3c\ub860 \uad00\uacc4 \ubc0f custom \uad00\uacc4 (\uc608 : GenericForeignKey )\ub97c \uc5ed\uc73c\ub85c \uc801\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note : \uad00\uacc4\ud615 \ud544\ub4dc\ub294 relations.py \uc5d0 \uc120\uc5b8\ub418\uc5b4 \uc788\uc9c0\ub9cc, \uad00\uc2b5\uc5d0 \ub530\ub77c serializer \ubaa8\ub4c8\uc5d0\uc11c \uac00\uc838\uc640\uc57c\ud558\uba70, rest_framework import serializer \uc5d0\uc11c \uc0ac\uc6a9\ud558\uace0 serializer.<FiledName> \ub85c \ud544\ub4dc\ub97c \ucc38\uc870\ud574\uc57c\ud569\ub2c8\ub2e4. Inspecting relationships. ModelSerializer \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 serializer \ud544\ub4dc\uc640 \uad00\uacc4\uac00 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc790\ub3d9 \uc0dd\uc131 \ud544\ub4dc\ub97c \uac80\uc0ac\ud558\ub294 \uac83\uc740 \uad00\uacc4 \uc2a4\ud0c0\uc77c\uc744 custom\ud558\ub294 \ubc29\ubc95\uc744 \uacb0\uc815\ud558\ub294\ub370 \uc720\uc6a9\ud55c \ub3c4\uad6c\uac00 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\ub824\uba74, Django\uc758 \uc258\uc744 \uc5f4\uace0, python manage.py shell \uc744 \uc0ac\uc6a9\ud558\uace0, serializer \ud074\ub798\uc2a4\ub97c \uac00\uc838\uc640\uc11c \uc778\uc2a4\ud134\uc2a4\ud654\ud558\uace0, \uac1d\uccb4 \ud45c\ud604\uc744 \ucd9c\ub825\ud558\uc138\uc694. >>> from myapp.serializers import AccountSerializer >>> serializer = AccountSerializer() >>> print repr(serializer) # Or `print(repr(serializer))` in Python 3.x. AccountSerializer(): id = IntegerField(label='ID', read_only=True) name = CharField(allow_blank=True, max_length=100, required=False) owner = PrimaryKeyRelatedField(queryset=User.objects.all()) API Reference \ub2e4\uc591\ud55c \uc720\ud615\uc758 \uad00\uacc4 \ud544\ub4dc\ub97c \uc124\uba85\ud558\uae30 \uc704\ud574 \uc608\uc81c\uc5d0 \uba87\uac00\uc9c0 \uac04\ub2e8\ud55c \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc6b0\ub9ac \ubaa8\ub378\uc740 \uc74c\uc545 \uc568\ubc94\uacfc \uac01 \uc568\ubc94\uc5d0 \uc218\ub85d\ub41c \ud2b8\ub799\uc744 \ub300\uc0c1\uc73c\ub85c \ud569\ub2c8\ub2e4. class Album(models.Model): album_name = models.CharField(max_length=100) artist = models.CharField(max_length=100) class Track(models.Model): album = models.ForeignKey(Album, related_name='tracks', on_delete=models.CASCADE) order = models.IntegerField() title = models.CharField(max_length=100) duration = models.IntegerField() class Meta: unique_together = ('album', 'order') ordering = ['order'] def __unicode__(self): return '%d: %s' % (self.order, self.title) StringRelatedField StringRelatedField \ub294 __unicode__ \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uad00\uacc4\uc758 \ub300\uc0c1\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub2e4\uc74c serializer\uc640 \uac19\uc2b5\ub2c8\ub2e4. class AlbumSerializer(serializers.ModelSerializer): tracks = serializers.StringRelatedField(many=True) class Meta: model = Album fields = ('album_name', 'artist', 'tracks') \ub2e4\uc74c\uacfc \uac19\uc740 \ud45c\ud604\uc73c\ub85c serializer\ud569\ub2c8\ub2e4. { 'album_name': 'Things We Lost In The Fire', 'artist': 'Low', 'tracks': [ '1: Sunflower', '2: Whitetail', '3: Dinosaur Act', ... ] } \uc774 \ud544\ub4dc\ub294 \uc77d\uae30 \uc804\uc6a9\uc785\ub2c8\ub2e4. Arguments : many : to-many \uad00\uacc4\uc5d0 \uc801\uc6a9\ub418\uba74 \uc774 \uc778\uc218\ub294 True \ub85c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. PrimaryKeyRelatedField primaryKeyRelatedField \ub294 primary key\ub97c \uc0ac\uc6a9\ud558\uc5ec \uad00\uacc4\uc758 \ub300\uc0c1\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub2e4\uc74c serializer\uac00 \uc788\uc2b5\ub2c8\ub2e4. class AlbumSerializer(serializers.ModelSerializer): tracks = serializers.PrimaryKeyRelatedField(many=True, read_only=True) class Meta: model = Album fields = ('album_name', 'artist', 'tracks') \ub2e4\uc74c\uacfc \uac19\uc774 \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. { 'album_name': 'Undun', 'artist': 'The Roots', 'tracks': [ 89, 90, 91, ... ] } \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \ud544\ub4dc\ub294 \uc77d\uae30\uc804\uc6a9\uc774\uc9c0\ub9cc, read_only \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774 \ub3d9\uc791\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Arguments : queryset : \ud544\ub4dc \uc785\ub825\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac \ud560 \ub54c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \uc870\ud68c\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ucffc\ub9ac \uc138\ud2b8\uc785\ub2c8\ub2e4. \uad00\uacc4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \ucffc\ub9ac \uc138\ud2b8\ub97c \uc124\uc815\ud558\uac70\ub098 read_only=True \ub85c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. many : to-many \uad00\uacc4\uc5d0 \uc801\uc6a9\ub418\uba74\uc774 \uc778\uc218\ub97c True \ub85c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. allow_null : True \ub85c \uc124\uc815\ud558\uba74 \ud544\ub4dc\uc5d0 None \uac12 \ub610\ub294 null \ud5c8\uc6a9 \uad00\uacc4\uc5d0 \ub300\ud55c \ube48 \ubb38\uc790\uc5f4\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. pk_field : primary key \uac12\uc758 serialzier/deserializer\ub97c \uc81c\uc5b4\ud558\ub294 \u200b\u200b\ud544\ub4dc\ub85c \uc124\uc815\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \u20a9pk_field=UUIDField(format='hex')\u20a9\ub294 UUID primary key\ub97c \ucef4\ud329\ud2b8 16 \uc9c4\uc218 \ud45c\ud604\uc73c\ub85c serializer\ud654\ud569\ub2c8\ub2e4. HyperlinkedRelatedField HyperlinkedRelatedField \ub294 \ud558\uc774\ud37c\ub9c1\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uad00\uacc4\uc758 \ub300\uc0c1\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub2e4\uc74c serializer\uac00 \uc788\uc2b5\ub2c8\ub2e4. class AlbumSerializer(serializers.ModelSerializer): tracks = serializers.HyperlinkedRelatedField( many=True, read_only=True, view_name='track-detail' ) class Meta: model = Album fields = ('album_name', 'artist', 'tracks') \ub2e4\uc74c\uacfc \uac19\uc774 \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. { 'album_name': 'Graceland', 'artist': 'Paul Simon', 'tracks': [ 'http://www.example.com/api/tracks/45/', 'http://www.example.com/api/tracks/46/', 'http://www.example.com/api/tracks/47/', ... ] } \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \ud544\ub4dc\ub294 \uc77d\uae30\uc804\uc6a9\uc774\uc9c0\ub9cc, read_only \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774 \ub3d9\uc791\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note : \uc774 \ud544\ub4dc\ub294 lookup_field \ubc0f lookup_url_kwarg \uc778\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uc815\ub41c\ub300\ub85c \ub2e8\uc77c URL \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \ud5c8\uc6a9\ud558\ub294 URL\uc5d0 \ub9e4\ud551\ub418\ub294 \uac1c\uccb4\ub97c \uc704\ud574 \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. URL\uc758 \uc77c\ubd80\ub85c \ub2e8\uc77c primary key \ub610\ub294 slug \uc778\uc218\uac00 \ud3ec\ud568\ub41c URL\uc5d0 \uc801\ud569\ud799\ub2c8\ub2e4. \ubcf4\ub2e4 \ubcf5\uc7a1\ud55c \ud558\uc774\ud37c \ub9c1\ud06c\ub85c \ud45c\ud604\uc774 \ud544\uc694\ud55c \uacbd\uc6b0\uc5d0\ub294 \uc544\ub798\uc758 custom hyperlinked field \uc139\uc158\uc5d0 \uc124\uba85 \ub41c\ub300\ub85c custom\ud574\uc57c \ud569\ub2c8\ub2e4. Arguments : view_name : \uad00\uacc4\uc758 \ub300\uc0c1\uc73c\ub85c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 view \uc774\ub984\uc785\ub2c8\ub2e4. \ud45c\uc900 \ub77c\uc6b0\ud130 \ud074\ub798\uc2a4 \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 <modelname>-detail \ud615\uc2dd\uc758 \ubb38\uc790\uc5f4\uc774 \ub429\ub2c8\ub2e4. \ud544\uc218. queryset : \ud544\ub4dc \uc785\ub825\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac \ud560 \ub54c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \uc870\ud68c\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ucffc\ub9ac\uc14b\uc785\ub2c8\ub2e4. \uad00\uacc4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \ucffc\ub9ac\uc14b\uc744 \uc124\uc815\ud558\uac70\ub098 read_only=True \ub85c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. many - to-many \uad00\uacc4\uc5d0 \uc801\uc6a9\ub418\uba74 \uc774 \uc778\uc218\ub97c True \ub85c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. allow_null : True \ub85c \uc124\uc815\ud558\uba74 \ud544\ub4dc\uc5d0 None \uac12 \ub610\ub294 null \ud5c8\uc6a9 \uad00\uacc4\uc5d0 \ub300\ud55c \ube48 \ubb38\uc790\uc5f4\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. lookup_field : \uc870\ud68c\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ub300\uc0c1\uc758 \ud544\ub4dc\uc785\ub2c8\ub2e4. \ucc38\uc870 \ub41c \ubdf0\uc758 URL \ud0a4\uc6cc\ub4dc \uc778\uc218\uc5d0 \ud574\ub2f9\ud574\uc57c\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 pk \uc785\ub2c8\ub2e4. lookup_url_kwarg : \uc870\ud68c \ud544\ub4dc\uc5d0 \ud574\ub2f9\ud558\ub294 URL conf\uc5d0 \uc815\uc758\ub41c \ud0a4\uc6cc\ub4dc \uc778\uc218\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c lookup_field \uc640 \uac19\uc740 \uac12\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. format : format suffix\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, \ud558\uc774\ud37c \ub9c1\ud06c \ub41c \ud544\ub4dc\ub294 format \uc778\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc9c0 \uc54a\ub294 \ud55c \ub300\uc0c1\uc5d0 \ub300\ud574 \ub3d9\uc77c\ud55c format suffix\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. SlugRelatedField slugRelatedField \ub294 \ub300\uc0c1 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uad00\uacc4 \ub300\uc0c1\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub2e4\uc74c serializer\uac00 \uc788\uc2b5\ub2c8\ub2e4. class AlbumSerializer(serializers.ModelSerializer): tracks = serializers.SlugRelatedField( many=True, read_only=True, slug_field='title' ) class Meta: model = Album fields = ('album_name', 'artist', 'tracks') \ub2e4\uc74c\uacfc \uac19\uc774 \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. { 'album_name': 'Dear John', 'artist': 'Loney Dear', 'tracks': [ 'Airport Surroundings', 'Everything Turns to You', 'I Was Only Going Out', ... ] } \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \ud544\ub4dc\ub294 \uc77d\uae30 \uc804\uc6a9\uc774\uc9c0\ub9cc, read_only \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774 \ub3d9\uc791\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. SlugRelatedField \ub97c read-write \ud544\ub4dc\ub85c \uc0ac\uc6a9\ud560 \ub54c\ub294 \uc77c\ubc18\uc801\uc73c\ub85c slug \ud544\ub4dc\uac00 unique=True \uc778 \ubaa8\ub378 \ud544\ub4dc\uc5d0 \ud574\ub2f9\ud558\ub294\uc9c0 \ud655\uc778\ud574\uc57c\ud569\ub2c8\ub2e4. Arguments : slug_field : \uadf8\uac83\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ub300\uc0c1\uc758 \ud544\ub4dc\uc785\ub2c8\ub2e4. \uc8fc\uc5b4\uc9c4 \uc778\uc2a4\ud134\uc2a4\ub97c \uace0\uc720\ud558\uac8c \uc2dd\ubcc4\ud558\ub294 \ud544\ub4dc\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc608: username . \ud544\uc218 queryset : \ud544\ub4dc \uc785\ub825\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac \ud560 \ub54c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \uc870\ud68c\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ucffc\ub9ac\uc14b\uc785\ub2c8\ub2e4. \uad00\uacc4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \ucffc\ub9ac\uc14b\uc744 \uc124\uc815\ud558\uac70\ub098 read_only=True \ub85c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. many : to-many \uad00\uacc4\uc5d0 \uc801\uc6a9\ub418\uba74 \uc774 \uc778\uc218\ub97c True \ub85c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. allow_null : True \ub85c \uc124\uc815\ud558\uba74 \ud544\ub4dc\uc5d0 None \uac12 \ub610\ub294 null \ud5c8\uc6a9 \uad00\uacc4\uc5d0 \ub300\ud55c \ube48 \ubb38\uc790\uc5f4\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. HyperlinkedIdentityField \uc774 \ud544\ub4dc\ub294 HyperlinkedModelSerializer \uc758 url \ud544\ub4dc\uc640 \uac19\uc740 \ub3d9\uc77c\ud55c \uad00\uacc4\ub85c \uc801\uc6a9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac1d\uccb4\uc758 \uc18d\uc131\uc5d0\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c serializer\uac00 \uc788\uc2b5\ub2c8\ub2e4. class AlbumSerializer(serializers.HyperlinkedModelSerializer): track_listing = serializers.HyperlinkedIdentityField(view_name='track-list') class Meta: model = Album fields = ('album_name', 'artist', 'track_listing') \ub2e4\uc74c\uacfc \uac19\uc774 \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. { 'album_name': 'The Eraser', 'artist': 'Thom Yorke', 'track_listing': 'http://www.example.com/api/track_list/12/', } \uc774 \ud544\ub4dc\ub294 \ud56d\uc0c1 \uc77d\uae30 \uc804\uc6a9\uc785\ub2c8\ub2e4. Arguments : view_name : \uad00\uacc4\uc758 \ub300\uc0c1\uc73c\ub85c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 view \uc774\ub984\uc785\ub2c8\ub2e4. \ud45c\uc900 \ub77c\uc6b0\ud130 \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 <model_name>-detail \ud615\uc2dd\uc758 \ubb38\uc790\uc5f4\uc774 \ub429\ub2c8\ub2e4. \ud544\uc218 lookup_field : \uc870\ud68c\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ub300\uc0c1\uc758 \ud544\ub4dc\uc785\ub2c8\ub2e4. \ucc38\uc870 \ub41c \ubdf0\uc758 URL \ud0a4\uc6cc\ub4dc \uc778\uc218\uc5d0 \ud574\ub2f9\ud574\uc57c\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 'pk' \uc785\ub2c8\ub2e4. lookup_url_kwarg : \uc870\ud68c \ud544\ub4dc\uc5d0 \ud574\ub2f9\ud558\ub294 URL conf\uc5d0 \uc815\uc758 \ub41c \ud0a4\uc6cc\ub4dc \uc778\uc218\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c lookup_field \uc640 \uac19\uc740 \uac12\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. format - format suffix\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud558\uc774\ud37c \ub9c1\ud06c \ub41c \ud544\ub4dc\ub294 format \uc778\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc9c0 \uc54a\ub294\ud55c \ub300\uc0c1\uc5d0 \ub300\ud574 \ub3d9\uc77c\ud55c format suffix\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. Nested relationships \uc911\ucca9 \ub41c \uad00\uacc4\ub294 serializer\ub97c \ud544\ub4dc\ub85c \uc0ac\uc6a9\ud558\uc5ec \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud544\ub4dc\uac00 to-many \uad00\uacc4\ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub418\ub294 \uacbd\uc6b0 serializer\ud544\ub4dc\uc5d0 many=True \ud50c\ub798\uadf8\ub97c \ucd94\uac00\ud574\uc57c\ud569\ub2c8\ub2e4. Example \uc608\ub97c \ub4e4\uc5b4 \ub2e4\uc74c serializer\uac00 \uc788\uc2b5\ub2c8\ub2e4. class TrackSerializer(serializers.ModelSerializer): class Meta: model = Track fields = ('order', 'title', 'duration') class AlbumSerializer(serializers.ModelSerializer): tracks = TrackSerializer(many=True, read_only=True) class Meta: model = Album fields = ('album_name', 'artist', 'tracks') \ub2e4\uc74c\uacfc \uac19\uc774 \uc911\ucca9\ub41c \ud45c\ud604\uc73c\ub85c serializer \ud569\ub2c8\ub2e4. >>> album = Album.objects.create(album_name=\"The Grey Album\", artist='Danger Mouse') >>> Track.objects.create(album=album, order=1, title='Public Service Announcement', duration=245) <Track: Track object> >>> Track.objects.create(album=album, order=2, title='What More Can I Say', duration=264) <Track: Track object> >>> Track.objects.create(album=album, order=3, title='Encore', duration=159) <Track: Track object> >>> serializer = AlbumSerializer(instance=album) >>> serializer.data { 'album_name': 'The Grey Album', 'artist': 'Danger Mouse', 'tracks': [ {'order': 1, 'title': 'Public Service Announcement', 'duration': 245}, {'order': 2, 'title': 'What More Can I Say', 'duration': 264}, {'order': 3, 'title': 'Encore', 'duration': 159}, ... ], } Writable nested serializers \uae30\ubcf8\uc801\uc73c\ub85c nested serializer\ub294 \uc77d\uae30 \uc804\uc6a9\uc785\ub2c8\ub2e4. \uc911\ucca9 \ub41c serializer \ud544\ub4dc\uc5d0 \ub300\ud55c \uc4f0\uae30 \uc791\uc5c5\uc744 \uc9c0\uc6d0\ud558\ub824\uba74 creat() \uc640 / \ub610\ub294 update() \uba54\uc11c\ub4dc\ub97c \ub9cc\ub4e4\uc5b4 \uc790\uc2dd \uad00\uacc4\ub97c \uc800\uc7a5\ud558\ub294 \ubc29\ubc95\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. class TrackSerializer(serializers.ModelSerializer): class Meta: model = Track fields = ('order', 'title', 'duration') class AlbumSerializer(serializers.ModelSerializer): tracks = TrackSerializer(many=True) class Meta: model = Album fields = ('album_name', 'artist', 'tracks') def create(self, validated_data): tracks_data = validated_data.pop('tracks') album = Album.objects.create(**validated_data) for track_data in tracks_data: Track.objects.create(album=album, **track_data) return album >>> data = { 'album_name': 'The Grey Album', 'artist': 'Danger Mouse', 'tracks': [ {'order': 1, 'title': 'Public Service Announcement', 'duration': 245}, {'order': 2, 'title': 'What More Can I Say', 'duration': 264}, {'order': 3, 'title': 'Encore', 'duration': 159}, ], } >>> serializer = AlbumSerializer(data=data) >>> serializer.is_valid() True >>> serializer.save() <Album: Album object> Custom relational fields \uae30\uc874\uc758 \uad00\uacc4\ud615 \uc2a4\ud0c0\uc77c\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uac00 \ub4dc\ubb3c\uc9c0\ub9cc \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ucd9c\ub825 \ud45c\ud604\uc744 \uc0dd\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uc815\ud655\ud558\uac8c \uc124\uba85\ud558\ub294 \uc644\ubcbd\ud55c custom relational field\ub97c \uad6c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. custom relational field\ub97c \uad6c\ud604\ud558\ub824\uba74 RelatedField\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uace0 .to_representation(self, value) \uba54\uc11c\ub4dc\ub97c \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 \ud544\ub4dc\uc758 \ub300\uc0c1\uc744 value \uc778\uc218\ub85c \uc0ac\uc6a9\ud558\uace0 \ub300\uc0c1\uc744 serializer\ud558\ub294\ub370 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud45c\ud604\uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. value \uc778\uc218\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4. read-write relational field\ub97c \uad6c\ud604\ud558\ub824\uba74 .to_internal_value(self, data) \uba54\uc18c\ub4dc\ub3c4 \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4. contextd\ub97c \uae30\ubc18\uc73c\ub85c \ub3d9\uc801 \ucffc\ub9ac\uc14b\uc744 \uc81c\uacf5\ud558\ub824\uba74 \ud074\ub798\uc2a4\uc5d0\uc11c .queryset \uc744 \uc9c0\uc815\ud558\uac70\ub098 \ud544\ub4dc\ub97c \ucd08\uae30\ud654 \ud560 \ub54c .get_queryset(self) \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Example \uc608\ub97c \ub4e4\uc5b4, \uc21c\uc11c, \uc81c\ubaa9, \uae30\uac04\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud2b8\ub799\uc744 custom \ubb38\uc790\uc5f4 \ud45c\ud604\uc73c\ub85c serializer\ud558\ub294 relational field\ub97c \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. import time class TrackListingField(serializers.RelatedField): def to_representation(self, value): duration = time.strftime('%M:%S', time.gmtime(value.duration)) return 'Track %d: %s (%s)' % (value.order, value.name, duration) class AlbumSerializer(serializers.ModelSerializer): tracks = TrackListingField(many=True) class Meta: model = Album fields = ('album_name', 'artist', 'tracks') \uc774 custom \ud544\ub4dc\ub294 \ub2e4\uc74c \ud45c\ud604\uc73c\ub85c serializer \ub429\ub2c8\ub2e4. { 'album_name': 'Sometimes I Wish We Were an Eagle', 'artist': 'Bill Callahan', 'tracks': [ 'Track 1: Jim Cain (04:39)', 'Track 2: Eid Ma Clack Shaw (04:19)', 'Track 3: The Wind and the Dove (04:34)', ... ] } Custom hyperlinked fields \uc5b4\ub5a4 \uacbd\uc6b0\uc5d0\ub294 \ud558\ub098 \uc774\uc0c1\uc758 \uc870\ud68c \ud544\ub4dc\uac00 \ud544\uc694\ud55c URL\uc744 \ub098\ud0c0\ub0b4\uae30 \uc704\ud574 \ud558\uc774\ud37c\ub9c1\ud06c \ud544\ub4dc\uc758 \ub3d9\uc791\uc744 custom \ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. HyperlinkedRelatedField \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc5ec \uc774 \uc791\uc5c5\uc744 \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc624\ubc84\ub77c\uc774\ub4dc \ud560 \uc218 \uc788\ub294 \ub450 \uac00\uc9c0 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4. get_url(self, obj, view_name, request, format) get_url \uba54\uc11c\ub4dc\ub294 \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\ub97c URL \ud45c\ud604\uc5d0 \ub9e4\ud551\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. view_name \ubc0f lookup_field \uc18d\uc131\uc774 URL conf\uc640 \uc815\ud655\ud558\uac8c \uc77c\uce58\ud558\ub3c4\ub85d \uad6c\uc131\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 NoReverseMatch \ub97c \ubc1c\uc0dd\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. get_object(self, queryset, view_name, view_args, view_kwargs) \uc4f0\uae30 \uac00\ub2a5\ud55c \ud558\uc774\ud37c\ub9c1\ud06c \ud544\ub4dc\ub97c \uc9c0\uc6d0\ud558\ub824\uba74 \ub4e4\uc5b4\uc624\ub294 URL\uc744 \uadf8\ub4e4\uc774 \ub098\ud0c0\ub0b4\ub294 \uac1d\uccb4\ub85c \ub2e4\uc2dc \ub9e4\ud551\ud558\uae30 \uc704\ud574 get_object \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud574\uc57c\ud569\ub2c8\ub2e4. \uc77d\uae30 \uc804\uc6a9 \ud558\uc774\ud37c\ub9c1\ud06c \ud544\ub4dc\uc758 \uacbd\uc6b0 \uc774 \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\uc758 \ubc18\ud658 \uac12\uc740 \uc77c\uce58\ud558\ub294 URL conf \uc778\uc218\uc5d0 \ud574\ub2f9\ud558\ub294 \uac1d\uccb4\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. ObjectDoesNotExist \uc608\uc678\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Example \ub2e4\uc74c\uacfc \uac19\uc774 \ub450 \uac1c\uc758 \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \ucde8\ud558\ub294 \uace0\uac1d \uac1d\uccb4\uc758 URL\uc774 \uc788\ub2e4\uace0 \uac00\uc815\ud574\ubcf4\uc138\uc694. /api/<organization_slug>/customers/<customer_pk>/ \ub2e8\uc77c\uc758 lookup field \ub9cc\uc744 \ubc1b\uc544\ub4e4\uc774\ub294 \uae30\ubcf8 \uad6c\ud604\uc5d0\uc11c\ub294 \uc774\uac83\uc744 \ud45c\ud604\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \uc6b0\ub9ac\uac00 \uc6d0\ud558\ub294 \ub3d9\uc791\uc744 \uc5bb\uc73c\ub824\uba74 HyperlinkedRelatedField \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud574\uc57c\ud569\ub2c8\ub2e4. from rest_framework import serializers from rest_framework.reverse import reverse class CustomerHyperlink(serializers.HyperlinkedRelatedField): # We define these as class attributes, so we don't need to pass them as arguments. view_name = 'customer-detail' queryset = Customer.objects.all() def get_url(self, obj, view_name, request, format): url_kwargs = { 'organization_slug': obj.organization.slug, 'customer_pk': obj.pk } return reverse(view_name, kwargs=url_kwargs, request=request, format=format) def get_object(self, view_name, view_args, view_kwargs): lookup_kwargs = { 'organization__slug': view_kwargs['organization_slug'], 'pk': view_kwargs['customer_pk'] } return self.get_queryset().get(**lookup_kwargs) \uc774 \uc2a4\ud0c0\uc77c\uc744 generic view \uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0 \uc62c\ubc14\ub978 \uc870\ud68c \ub3d9\uc791\uc744 \uc5bb\uc73c\ub824\uba74 \ubdf0\uc5d0\uc11c .get_object \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud574\uc57c\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uac00\ub2a5\ud55c \uacbd\uc6b0 API \ud45c\ud604\uc5d0 \ud50c\ub7ab \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc9c0\ub9cc, \uc911\ucca9\ub41c URL \uc2a4\ud0c0\uc77c\uc740 \uc801\ub2f9\ud788 \uc0ac\uc6a9\ud558\uba74 \ud569\ub9ac\uc801\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Further notes The queryset argument queryset \uc778\uc218\ub294 \uc4f0\uae30 \uac00\ub2a5\ud55c \uad00\uacc4 \ud544\ub4dc\uc5d0\ub9cc \ud544\uc694\ud569\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \uae30\ubcf8 \uc778\uc2a4\ud134\uc2a4 \uc0ac\uc6a9\uc790 \uc785\ub825 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\ub85c \ub9e4\ud551\ub418\ub294 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \uc870\ud68c\ub97c \uc218\ud589\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ubc84\uc804 2.x\uc5d0\uc11c\ub294 serializer \ud074\ub798\uc2a4\uac00 ModelSerializer \ud074\ub798\uc2a4\uac00 \uc0ac\uc6a9\ub418\ub294 \uacbd\uc6b0 queryset \uc778\uc218\ub97c \uc790\ub3d9\uc73c\ub85c \uacb0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc740 \uc774\uc81c \uc4f0\uae30 \uac00\ub2a5\ud55c \uad00\uacc4\ud615 \ud544\ub4dc\uc5d0 \ub300\ud574 \uba85\uc2dc\uc801 \ucffc\ub9ac\uc14b \uc778\uc218\ub97c \ud56d\uc0c1 \uc0ac\uc6a9\ud558\uc5ec \ub300\uccb4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c\ud558\uba74 ModelSerializer \uc774 \uc81c\uacf5\ud558\ub294 \uc228\uaca8\uc9c4 'magic'\uc591\uc774 \uc904\uc5b4\ub4e4\uace0 \ud544\ub4dc\uc758 \ub3d9\uc791\uc774 \ub354 \uba85\ud655\ud574\uc9c0\uba70 ModelSerializer shortcut\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 \uc644\uc804\ud558\uac8c \uba85\uc2dc\uc801\uc778 Serializer \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc27d\ub2e4\ub294 \uac83\uc744 \ubcf4\uc99d\ud569\ub2c8\ub2e4. Customizing the HTML display \ubaa8\ub378\uc758 \ub0b4\uc7a5 __str__ \uba54\uc11c\ub4dc\ub294 choices \uc18d\uc131\uc744 \ucc44\uc6b0\ub294\ub370 \uc0ac\uc6a9 \ub41c \uac1d\uccb4\uc758 \ubb38\uc790\uc5f4 \ud45c\ud604\uc744 \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc120\ud0dd\uc0ac\ud56d\uc740 \ud0d0\uc0c9 \uac00\ub2a5\ud55c API\uc5d0\uc11c \uc120\ud0dd\ub41c HTML \uc785\ub825\uc744 \ucc44\uc6b0\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc785\ub825\uc5d0 \ub300\ud574 custom \ub41c \ud45c\ud604\uc744 \uc81c\uacf5\ud558\ub824\uba74 RelatedField \uc11c\ube0c \ud074\ub798\uc2a4\uc758 display_value() \ub97c \ub300\uccb4\ud558\uc138\uc694. \uc774 \uba54\uc11c\ub4dc\ub294 \ubaa8\ub378 \uac1d\uccb4\ub97c \uc218\uc2e0\ud558\uace0 \ubaa8\ub378 \uac1d\uccb4\ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc801\ud569\ud55c \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: class TrackPrimaryKeyRelatedField(serializers.PrimaryKeyRelatedField): def display_value(self, instance): return 'Track: %s' % (instance.title) Select field cutoffs browsable API\uc5d0\uc11c \ub80c\ub354\ub9c1 \ub420 \ub54c \uad00\uacc4\ud615 \ud544\ub4dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ucd5c\ub300 1000\uac1c\uc758 \uc120\ud0dd \uac00\ub2a5\ud55c \ud56d\ubaa9\ub9cc \ud45c\uc2dc\ud569\ub2c8\ub2e4. \ub354 \ub9ce\uc740 \ud56d\ubaa9\uc774 \uc788\uc73c\uba74 \"More than 1000 items...\"\uc640 \ud568\uaed8 \ube44\ud65c\uc131\ud654 \ub41c \uc635\uc158\uc774 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc740 \ub9e4\uc6b0 \ub9ce\uc740 \uc218\uc758 \uad00\uacc4\uac00 \ud45c\uc2dc\ub418\uc5b4 \ud5c8\uc6a9\ub418\ub294 \ubc94\uc704 \ub0b4\uc5d0\uc11c \ud15c\ud50c\ub9bf\uc744 \ub80c\ub354\ub9c1 \ud560 \uc218 \uc5c6\ub3c4\ub85d \ud558\uae30 \uc704\ud55c \uac83\uc785\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc744 \uc81c\uc5b4\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub450 \uac1c\uc758 \ud0a4\uc6cc\ub4dc\uc778\uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4. html_cutoff : \uc124\uc815\ub41c \uacbd\uc6b0 HTML \uc120\ud0dd \ub4dc\ub86d \ub2e4\uc6b4\uc5d0 \ud45c\uc2dc \ub420 \ucd5c\ub300 \uc120\ud0dd \ud56d\ubaa9 \uc218\uc785\ub2c8\ub2e4. \uc81c\ud55c\uc744 \ud574\uc81c\ud558\ub824\uba74 None \uc73c\ub85c \uc124\uc815\ud558\uc2ed\uc2dc\uc624. \uae30\ubcf8\uac12\uc740 1000 \uc785\ub2c8\ub2e4. html_cutoff_text - \uc124\uc815\ub41c \uacbd\uc6b0 HTML \uc120\ud0dd \ub4dc\ub86d \ub2e4\uc6b4\uc5d0\uc11c \ucd5c\ub300 \ud56d\ubaa9 \uc218\uac00 \uc798\ub9b0 \uacbd\uc6b0 \ud14d\uc2a4\ud2b8 \ud45c\uc2dc\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \"More than {count} items\u2026\" \uc785\ub2c8\ub2e4. HTML_SELECT_CUTOFF \ubc0f HTML_SELECT_CUTOFF_TEXT \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\uc5ed\uc73c\ub85c \uc81c\uc5b4 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ucef7\uc624\ud504\uac00 \uc801\uc6a9\ub418\ub294 \uacbd\uc6b0 HTML \uc591\uc2dd\uc5d0 \uc77c\ubc18 \uc785\ub825 \ud544\ub4dc\ub97c \ub300\uc2e0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. style \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \uc0ac\uc6a9\ud558\uba74\ub429\ub2c8\ub2e4. \uc608 : assigned_to = serializers.SlugRelatedField( queryset=User.objects.all(), slug_field='username', style={'base_template': 'input.html'} ) Reverse relations reverse \uad00\uacc4\ub294 ModelSerializer \ubc0f HyperlinkedModelSerializer \ud074\ub798\uc2a4\uc5d0 \uc790\ub3d9\uc73c\ub85c \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. reverse \uad00\uacc4\ub97c \ud3ec\ud568 \uc2dc\ud0a4\ub824\uba74 \ud544\ub4dc \ubaa9\ub85d\uc5d0 \uba85\uc2dc\uc801\uc73c\ub85c \ucd94\uac00\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: class AlbumSerializer(serializers.ModelSerializer): class Meta: fields = ('tracks', ...) \uc77c\ubc18\uc801\uc73c\ub85c \ud544\ub4dc \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc801\uc808\ud55c related_name \uc778\uc218\ub97c \uad00\uacc4\uc5d0 \uc124\uc815\ud588\ub294\uc9c0 \ud655\uc778\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: class Track(models.Model): album = models.ForeignKey(Album, related_name='tracks', on_delete=models.CASCADE) ... reverse \uad00\uacc4\uc5d0 \ub300\ud55c \uad00\ub828 \uc774\ub984\uc744 \uc124\uc815\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 fields \uc778\uc218\uc5d0 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131 \ub41c \uad00\ub828 \uc774\ub984\uc744 \uc0ac\uc6a9\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: class AlbumSerializer(serializers.ModelSerializer): class Meta: fields = ('track_set', ...) \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 reverse relationships \uc5d0 \ub300\ud55c Django \ubb38\uc11c\ub97c \ucc38\uc870\ud558\uc138\uc694. Generic relationships \uc77c\ubc18\uc801\uc778 foreign key\ub97c serializer\ud558\ub824\uba74 \uad00\uacc4\uc758 \ub300\uc0c1\uc744 serializer\ud654\ud558\ub294 \ubc29\ubc95\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uacb0\uc815\ud558\uae30 \uc704\ud574 custom \ud544\ub4dc\ub97c \uc815\uc758\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\ub978 \uc784\uc758\uc758 \ubaa8\ub378\uacfc \uc77c\ubc18\uc801\uc778 \uad00\uacc4\uac00 \uc788\ub294 \ud0dc\uadf8\uc5d0 \ub300\ud574 \ub2e4\uc74c \ubaa8\ub378\uc774 \uc81c\uacf5\ub429\ub2c8\ub2e4. class TaggedItem(models.Model): \"\"\" Tags arbitrary model instances using a generic relation. See: https://docs.djangoproject.com/en/stable/ref/contrib/contenttypes/ \"\"\" tag_name = models.SlugField() content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE) object_id = models.PositiveIntegerField() tagged_object = GenericForeignKey('content_type', 'object_id') def __unicode__(self): return self.tag_name \uadf8\ub9ac\uace0 \ub2e4\uc74c \ub450 \ubaa8\ub378\uc758 \uad00\ub828 \ud0dc\uadf8\ub97c \uac00\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class Bookmark(models.Model): \"\"\" A bookmark consists of a URL, and 0 or more descriptive tags. \"\"\" url = models.URLField() tags = GenericRelation(TaggedItem) class Note(models.Model): \"\"\" A note consists of some text, and 0 or more descriptive tags. \"\"\" text = models.CharField(max_length=1000) tags = GenericRelation(TaggedItem) \ud0dc\uadf8\uac00 \uc9c0\uc815\ub41c \uc778\uc2a4\ud134\uc2a4\ub97c serializer\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 custom \ud544\ub4dc\ub97c \uc815\uc758\ud558\uc5ec \uac01 \uc778\uc2a4\ud134\uc2a4\uc758 \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\uc5ec serializer \ud574\uc57c\ud558\ub294 \ubc29\uc2dd\uc744 \uacb0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class TaggedObjectRelatedField(serializers.RelatedField): \"\"\" A custom field to use for the `tagged_object` generic relationship. \"\"\" def to_representation(self, value): \"\"\" Serialize tagged objects to a simple textual representation. \"\"\" if isinstance(value, Bookmark): return 'Bookmark: ' + value.url elif isinstance(value, Note): return 'Note: ' + value.text raise Exception('Unexpected type of tagged object') \uad00\uacc4\uc758 \ud0c0\uac9f\uc774 \uc911\ucca9 \ub41c \ud45c\ud604\uc744 \ud544\uc694\ub85c \ud558\ub294 \uacbd\uc6b0 .to_representation() \uba54\uc11c\ub4dc \ub0b4\uc5d0\uc11c \ud544\uc694\ud55c serializer\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. def to_representation(self, value): \"\"\" Serialize bookmark instances using a bookmark serializer, and note instances using a note serializer. \"\"\" if isinstance(value, Bookmark): serializer = BookmarkSerializer(value) elif isinstance(value, Note): serializer = NoteSerializer(value) else: raise Exception('Unexpected type of tagged object') return serializer.data GenericRelation \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud45c\ud604\ub41c reverse generic key\ub294 \uad00\uacc4\uc758 \ub300\uc0c1 \uc720\ud615\uc774 \ud56d\uc0c1 \uc54c\ub824\uc838 \uc788\uc73c\ubbc0\ub85c \uc77c\ubc18 \uad00\uacc4\ud615 \ud544\ub4dc \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\uc5ec serializer\ud654 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \uc790\uc138\ud55c \uc815\ubcf4\ub294 the Django documentation on generic relations \ub97c \ucc38\uc870\ud558\uc138\uc694. ManyToManyFields with a Through Model \uae30\ubcf8\uc801\uc73c\ub85c \uc9c0\uc815\ub41c through \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\uc5ec ManyToManyField \ub97c \ub300\uc0c1\uc73c\ub85c\ud558\ub294 \uad00\uacc4\ud615 \ud544\ub4dc\ub294 \uc77d\uae30\uc804\uc6a9\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. through \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\uc5ec manyToManyField \ub97c \uac00\ub9ac\ud0a4\ub294 \uad00\uacc4 \ud544\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud558\uba74 read_only \ub97c True \ub85c \uc124\uc815\ud558\uc138\uc694. Third Party Packages \ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4. DRF Nested Routers drf-nested-routers \ud328\ud0a4\uc9c0\ub294 \uc911\ucca9 \ub41c \ub9ac\uc18c\uc2a4\ub85c \uc791\uc5c5\ud558\uae30 \uc704\ud55c \ub77c\uc6b0\ud130 \ubc0f \uad00\uacc4 \ud544\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Rest Framework Generic Relations rest-framework-generic-relations \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \uc77c\ubc18\uc801\uc778 foreign key\uc5d0 \ub300\ud55c read/write serializer\ud654\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Serializer relations"},{"location":"Serializer_relations/#django-rest-framework-serializer-relations","text":"\"Bad programmers worry about the code. Good programmers worry about data structures and their relationships.\" \"\ub098\uc05c \ud504\ub85c\uadf8\ub798\uba38\ub294 \ucf54\ub4dc\uc5d0 \ub300\ud574 \uac71\uc815\ud569\ub2c8\ub2e4. \uc88b\uc740 \ud504\ub85c\uadf8\ub798\uba38\ub294 \ub370\uc774\ud130 \uad6c\uc870\uc640 \uadf8 \uad00\uacc4\uc5d0 \ub300\ud574 \uac71\uc815\ud569\ub2c8\ub2e4.\" \u2014 Linus Torvalds","title":"Django REST framework - Serializer relations"},{"location":"Serializer_relations/#serializer-relations","text":"relational field\ub294 \ubaa8\ub378 \uad00\uacc4\ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. ForeignKey , ManyToManyField \ubc0f OneToOneField \uad00\uacc4\ub294 \ubb3c\ub860 \uad00\uacc4 \ubc0f custom \uad00\uacc4 (\uc608 : GenericForeignKey )\ub97c \uc5ed\uc73c\ub85c \uc801\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note : \uad00\uacc4\ud615 \ud544\ub4dc\ub294 relations.py \uc5d0 \uc120\uc5b8\ub418\uc5b4 \uc788\uc9c0\ub9cc, \uad00\uc2b5\uc5d0 \ub530\ub77c serializer \ubaa8\ub4c8\uc5d0\uc11c \uac00\uc838\uc640\uc57c\ud558\uba70, rest_framework import serializer \uc5d0\uc11c \uc0ac\uc6a9\ud558\uace0 serializer.<FiledName> \ub85c \ud544\ub4dc\ub97c \ucc38\uc870\ud574\uc57c\ud569\ub2c8\ub2e4.","title":"Serializer relations"},{"location":"Serializer_relations/#inspecting-relationships","text":"ModelSerializer \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 serializer \ud544\ub4dc\uc640 \uad00\uacc4\uac00 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc790\ub3d9 \uc0dd\uc131 \ud544\ub4dc\ub97c \uac80\uc0ac\ud558\ub294 \uac83\uc740 \uad00\uacc4 \uc2a4\ud0c0\uc77c\uc744 custom\ud558\ub294 \ubc29\ubc95\uc744 \uacb0\uc815\ud558\ub294\ub370 \uc720\uc6a9\ud55c \ub3c4\uad6c\uac00 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\ub824\uba74, Django\uc758 \uc258\uc744 \uc5f4\uace0, python manage.py shell \uc744 \uc0ac\uc6a9\ud558\uace0, serializer \ud074\ub798\uc2a4\ub97c \uac00\uc838\uc640\uc11c \uc778\uc2a4\ud134\uc2a4\ud654\ud558\uace0, \uac1d\uccb4 \ud45c\ud604\uc744 \ucd9c\ub825\ud558\uc138\uc694. >>> from myapp.serializers import AccountSerializer >>> serializer = AccountSerializer() >>> print repr(serializer) # Or `print(repr(serializer))` in Python 3.x. AccountSerializer(): id = IntegerField(label='ID', read_only=True) name = CharField(allow_blank=True, max_length=100, required=False) owner = PrimaryKeyRelatedField(queryset=User.objects.all())","title":"Inspecting relationships."},{"location":"Serializer_relations/#api-reference","text":"\ub2e4\uc591\ud55c \uc720\ud615\uc758 \uad00\uacc4 \ud544\ub4dc\ub97c \uc124\uba85\ud558\uae30 \uc704\ud574 \uc608\uc81c\uc5d0 \uba87\uac00\uc9c0 \uac04\ub2e8\ud55c \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc6b0\ub9ac \ubaa8\ub378\uc740 \uc74c\uc545 \uc568\ubc94\uacfc \uac01 \uc568\ubc94\uc5d0 \uc218\ub85d\ub41c \ud2b8\ub799\uc744 \ub300\uc0c1\uc73c\ub85c \ud569\ub2c8\ub2e4. class Album(models.Model): album_name = models.CharField(max_length=100) artist = models.CharField(max_length=100) class Track(models.Model): album = models.ForeignKey(Album, related_name='tracks', on_delete=models.CASCADE) order = models.IntegerField() title = models.CharField(max_length=100) duration = models.IntegerField() class Meta: unique_together = ('album', 'order') ordering = ['order'] def __unicode__(self): return '%d: %s' % (self.order, self.title)","title":"API Reference"},{"location":"Serializer_relations/#stringrelatedfield","text":"StringRelatedField \ub294 __unicode__ \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uad00\uacc4\uc758 \ub300\uc0c1\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub2e4\uc74c serializer\uc640 \uac19\uc2b5\ub2c8\ub2e4. class AlbumSerializer(serializers.ModelSerializer): tracks = serializers.StringRelatedField(many=True) class Meta: model = Album fields = ('album_name', 'artist', 'tracks') \ub2e4\uc74c\uacfc \uac19\uc740 \ud45c\ud604\uc73c\ub85c serializer\ud569\ub2c8\ub2e4. { 'album_name': 'Things We Lost In The Fire', 'artist': 'Low', 'tracks': [ '1: Sunflower', '2: Whitetail', '3: Dinosaur Act', ... ] } \uc774 \ud544\ub4dc\ub294 \uc77d\uae30 \uc804\uc6a9\uc785\ub2c8\ub2e4. Arguments : many : to-many \uad00\uacc4\uc5d0 \uc801\uc6a9\ub418\uba74 \uc774 \uc778\uc218\ub294 True \ub85c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4.","title":"StringRelatedField"},{"location":"Serializer_relations/#primarykeyrelatedfield","text":"primaryKeyRelatedField \ub294 primary key\ub97c \uc0ac\uc6a9\ud558\uc5ec \uad00\uacc4\uc758 \ub300\uc0c1\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub2e4\uc74c serializer\uac00 \uc788\uc2b5\ub2c8\ub2e4. class AlbumSerializer(serializers.ModelSerializer): tracks = serializers.PrimaryKeyRelatedField(many=True, read_only=True) class Meta: model = Album fields = ('album_name', 'artist', 'tracks') \ub2e4\uc74c\uacfc \uac19\uc774 \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. { 'album_name': 'Undun', 'artist': 'The Roots', 'tracks': [ 89, 90, 91, ... ] } \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \ud544\ub4dc\ub294 \uc77d\uae30\uc804\uc6a9\uc774\uc9c0\ub9cc, read_only \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774 \ub3d9\uc791\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Arguments : queryset : \ud544\ub4dc \uc785\ub825\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac \ud560 \ub54c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \uc870\ud68c\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ucffc\ub9ac \uc138\ud2b8\uc785\ub2c8\ub2e4. \uad00\uacc4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \ucffc\ub9ac \uc138\ud2b8\ub97c \uc124\uc815\ud558\uac70\ub098 read_only=True \ub85c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. many : to-many \uad00\uacc4\uc5d0 \uc801\uc6a9\ub418\uba74\uc774 \uc778\uc218\ub97c True \ub85c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. allow_null : True \ub85c \uc124\uc815\ud558\uba74 \ud544\ub4dc\uc5d0 None \uac12 \ub610\ub294 null \ud5c8\uc6a9 \uad00\uacc4\uc5d0 \ub300\ud55c \ube48 \ubb38\uc790\uc5f4\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. pk_field : primary key \uac12\uc758 serialzier/deserializer\ub97c \uc81c\uc5b4\ud558\ub294 \u200b\u200b\ud544\ub4dc\ub85c \uc124\uc815\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \u20a9pk_field=UUIDField(format='hex')\u20a9\ub294 UUID primary key\ub97c \ucef4\ud329\ud2b8 16 \uc9c4\uc218 \ud45c\ud604\uc73c\ub85c serializer\ud654\ud569\ub2c8\ub2e4.","title":"PrimaryKeyRelatedField"},{"location":"Serializer_relations/#hyperlinkedrelatedfield","text":"HyperlinkedRelatedField \ub294 \ud558\uc774\ud37c\ub9c1\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uad00\uacc4\uc758 \ub300\uc0c1\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub2e4\uc74c serializer\uac00 \uc788\uc2b5\ub2c8\ub2e4. class AlbumSerializer(serializers.ModelSerializer): tracks = serializers.HyperlinkedRelatedField( many=True, read_only=True, view_name='track-detail' ) class Meta: model = Album fields = ('album_name', 'artist', 'tracks') \ub2e4\uc74c\uacfc \uac19\uc774 \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. { 'album_name': 'Graceland', 'artist': 'Paul Simon', 'tracks': [ 'http://www.example.com/api/tracks/45/', 'http://www.example.com/api/tracks/46/', 'http://www.example.com/api/tracks/47/', ... ] } \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \ud544\ub4dc\ub294 \uc77d\uae30\uc804\uc6a9\uc774\uc9c0\ub9cc, read_only \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774 \ub3d9\uc791\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note : \uc774 \ud544\ub4dc\ub294 lookup_field \ubc0f lookup_url_kwarg \uc778\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uc815\ub41c\ub300\ub85c \ub2e8\uc77c URL \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \ud5c8\uc6a9\ud558\ub294 URL\uc5d0 \ub9e4\ud551\ub418\ub294 \uac1c\uccb4\ub97c \uc704\ud574 \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. URL\uc758 \uc77c\ubd80\ub85c \ub2e8\uc77c primary key \ub610\ub294 slug \uc778\uc218\uac00 \ud3ec\ud568\ub41c URL\uc5d0 \uc801\ud569\ud799\ub2c8\ub2e4. \ubcf4\ub2e4 \ubcf5\uc7a1\ud55c \ud558\uc774\ud37c \ub9c1\ud06c\ub85c \ud45c\ud604\uc774 \ud544\uc694\ud55c \uacbd\uc6b0\uc5d0\ub294 \uc544\ub798\uc758 custom hyperlinked field \uc139\uc158\uc5d0 \uc124\uba85 \ub41c\ub300\ub85c custom\ud574\uc57c \ud569\ub2c8\ub2e4. Arguments : view_name : \uad00\uacc4\uc758 \ub300\uc0c1\uc73c\ub85c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 view \uc774\ub984\uc785\ub2c8\ub2e4. \ud45c\uc900 \ub77c\uc6b0\ud130 \ud074\ub798\uc2a4 \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 <modelname>-detail \ud615\uc2dd\uc758 \ubb38\uc790\uc5f4\uc774 \ub429\ub2c8\ub2e4. \ud544\uc218. queryset : \ud544\ub4dc \uc785\ub825\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac \ud560 \ub54c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \uc870\ud68c\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ucffc\ub9ac\uc14b\uc785\ub2c8\ub2e4. \uad00\uacc4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \ucffc\ub9ac\uc14b\uc744 \uc124\uc815\ud558\uac70\ub098 read_only=True \ub85c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. many - to-many \uad00\uacc4\uc5d0 \uc801\uc6a9\ub418\uba74 \uc774 \uc778\uc218\ub97c True \ub85c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. allow_null : True \ub85c \uc124\uc815\ud558\uba74 \ud544\ub4dc\uc5d0 None \uac12 \ub610\ub294 null \ud5c8\uc6a9 \uad00\uacc4\uc5d0 \ub300\ud55c \ube48 \ubb38\uc790\uc5f4\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4. lookup_field : \uc870\ud68c\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ub300\uc0c1\uc758 \ud544\ub4dc\uc785\ub2c8\ub2e4. \ucc38\uc870 \ub41c \ubdf0\uc758 URL \ud0a4\uc6cc\ub4dc \uc778\uc218\uc5d0 \ud574\ub2f9\ud574\uc57c\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 pk \uc785\ub2c8\ub2e4. lookup_url_kwarg : \uc870\ud68c \ud544\ub4dc\uc5d0 \ud574\ub2f9\ud558\ub294 URL conf\uc5d0 \uc815\uc758\ub41c \ud0a4\uc6cc\ub4dc \uc778\uc218\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c lookup_field \uc640 \uac19\uc740 \uac12\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. format : format suffix\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, \ud558\uc774\ud37c \ub9c1\ud06c \ub41c \ud544\ub4dc\ub294 format \uc778\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc9c0 \uc54a\ub294 \ud55c \ub300\uc0c1\uc5d0 \ub300\ud574 \ub3d9\uc77c\ud55c format suffix\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.","title":"HyperlinkedRelatedField"},{"location":"Serializer_relations/#slugrelatedfield","text":"slugRelatedField \ub294 \ub300\uc0c1 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uad00\uacc4 \ub300\uc0c1\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub2e4\uc74c serializer\uac00 \uc788\uc2b5\ub2c8\ub2e4. class AlbumSerializer(serializers.ModelSerializer): tracks = serializers.SlugRelatedField( many=True, read_only=True, slug_field='title' ) class Meta: model = Album fields = ('album_name', 'artist', 'tracks') \ub2e4\uc74c\uacfc \uac19\uc774 \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. { 'album_name': 'Dear John', 'artist': 'Loney Dear', 'tracks': [ 'Airport Surroundings', 'Everything Turns to You', 'I Was Only Going Out', ... ] } \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \ud544\ub4dc\ub294 \uc77d\uae30 \uc804\uc6a9\uc774\uc9c0\ub9cc, read_only \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774 \ub3d9\uc791\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. SlugRelatedField \ub97c read-write \ud544\ub4dc\ub85c \uc0ac\uc6a9\ud560 \ub54c\ub294 \uc77c\ubc18\uc801\uc73c\ub85c slug \ud544\ub4dc\uac00 unique=True \uc778 \ubaa8\ub378 \ud544\ub4dc\uc5d0 \ud574\ub2f9\ud558\ub294\uc9c0 \ud655\uc778\ud574\uc57c\ud569\ub2c8\ub2e4. Arguments : slug_field : \uadf8\uac83\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ub300\uc0c1\uc758 \ud544\ub4dc\uc785\ub2c8\ub2e4. \uc8fc\uc5b4\uc9c4 \uc778\uc2a4\ud134\uc2a4\ub97c \uace0\uc720\ud558\uac8c \uc2dd\ubcc4\ud558\ub294 \ud544\ub4dc\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc608: username . \ud544\uc218 queryset : \ud544\ub4dc \uc785\ub825\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac \ud560 \ub54c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \uc870\ud68c\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ucffc\ub9ac\uc14b\uc785\ub2c8\ub2e4. \uad00\uacc4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \ucffc\ub9ac\uc14b\uc744 \uc124\uc815\ud558\uac70\ub098 read_only=True \ub85c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. many : to-many \uad00\uacc4\uc5d0 \uc801\uc6a9\ub418\uba74 \uc774 \uc778\uc218\ub97c True \ub85c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. allow_null : True \ub85c \uc124\uc815\ud558\uba74 \ud544\ub4dc\uc5d0 None \uac12 \ub610\ub294 null \ud5c8\uc6a9 \uad00\uacc4\uc5d0 \ub300\ud55c \ube48 \ubb38\uc790\uc5f4\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 False \uc785\ub2c8\ub2e4.","title":"SlugRelatedField"},{"location":"Serializer_relations/#hyperlinkedidentityfield","text":"\uc774 \ud544\ub4dc\ub294 HyperlinkedModelSerializer \uc758 url \ud544\ub4dc\uc640 \uac19\uc740 \ub3d9\uc77c\ud55c \uad00\uacc4\ub85c \uc801\uc6a9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac1d\uccb4\uc758 \uc18d\uc131\uc5d0\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c serializer\uac00 \uc788\uc2b5\ub2c8\ub2e4. class AlbumSerializer(serializers.HyperlinkedModelSerializer): track_listing = serializers.HyperlinkedIdentityField(view_name='track-list') class Meta: model = Album fields = ('album_name', 'artist', 'track_listing') \ub2e4\uc74c\uacfc \uac19\uc774 \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. { 'album_name': 'The Eraser', 'artist': 'Thom Yorke', 'track_listing': 'http://www.example.com/api/track_list/12/', } \uc774 \ud544\ub4dc\ub294 \ud56d\uc0c1 \uc77d\uae30 \uc804\uc6a9\uc785\ub2c8\ub2e4. Arguments : view_name : \uad00\uacc4\uc758 \ub300\uc0c1\uc73c\ub85c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 view \uc774\ub984\uc785\ub2c8\ub2e4. \ud45c\uc900 \ub77c\uc6b0\ud130 \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 <model_name>-detail \ud615\uc2dd\uc758 \ubb38\uc790\uc5f4\uc774 \ub429\ub2c8\ub2e4. \ud544\uc218 lookup_field : \uc870\ud68c\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ub300\uc0c1\uc758 \ud544\ub4dc\uc785\ub2c8\ub2e4. \ucc38\uc870 \ub41c \ubdf0\uc758 URL \ud0a4\uc6cc\ub4dc \uc778\uc218\uc5d0 \ud574\ub2f9\ud574\uc57c\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 'pk' \uc785\ub2c8\ub2e4. lookup_url_kwarg : \uc870\ud68c \ud544\ub4dc\uc5d0 \ud574\ub2f9\ud558\ub294 URL conf\uc5d0 \uc815\uc758 \ub41c \ud0a4\uc6cc\ub4dc \uc778\uc218\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c lookup_field \uc640 \uac19\uc740 \uac12\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. format - format suffix\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud558\uc774\ud37c \ub9c1\ud06c \ub41c \ud544\ub4dc\ub294 format \uc778\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc9c0 \uc54a\ub294\ud55c \ub300\uc0c1\uc5d0 \ub300\ud574 \ub3d9\uc77c\ud55c format suffix\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.","title":"HyperlinkedIdentityField"},{"location":"Serializer_relations/#nested-relationships","text":"\uc911\ucca9 \ub41c \uad00\uacc4\ub294 serializer\ub97c \ud544\ub4dc\ub85c \uc0ac\uc6a9\ud558\uc5ec \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud544\ub4dc\uac00 to-many \uad00\uacc4\ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ub418\ub294 \uacbd\uc6b0 serializer\ud544\ub4dc\uc5d0 many=True \ud50c\ub798\uadf8\ub97c \ucd94\uac00\ud574\uc57c\ud569\ub2c8\ub2e4.","title":"Nested relationships"},{"location":"Serializer_relations/#example","text":"\uc608\ub97c \ub4e4\uc5b4 \ub2e4\uc74c serializer\uac00 \uc788\uc2b5\ub2c8\ub2e4. class TrackSerializer(serializers.ModelSerializer): class Meta: model = Track fields = ('order', 'title', 'duration') class AlbumSerializer(serializers.ModelSerializer): tracks = TrackSerializer(many=True, read_only=True) class Meta: model = Album fields = ('album_name', 'artist', 'tracks') \ub2e4\uc74c\uacfc \uac19\uc774 \uc911\ucca9\ub41c \ud45c\ud604\uc73c\ub85c serializer \ud569\ub2c8\ub2e4. >>> album = Album.objects.create(album_name=\"The Grey Album\", artist='Danger Mouse') >>> Track.objects.create(album=album, order=1, title='Public Service Announcement', duration=245) <Track: Track object> >>> Track.objects.create(album=album, order=2, title='What More Can I Say', duration=264) <Track: Track object> >>> Track.objects.create(album=album, order=3, title='Encore', duration=159) <Track: Track object> >>> serializer = AlbumSerializer(instance=album) >>> serializer.data { 'album_name': 'The Grey Album', 'artist': 'Danger Mouse', 'tracks': [ {'order': 1, 'title': 'Public Service Announcement', 'duration': 245}, {'order': 2, 'title': 'What More Can I Say', 'duration': 264}, {'order': 3, 'title': 'Encore', 'duration': 159}, ... ], }","title":"Example"},{"location":"Serializer_relations/#writable-nested-serializers","text":"\uae30\ubcf8\uc801\uc73c\ub85c nested serializer\ub294 \uc77d\uae30 \uc804\uc6a9\uc785\ub2c8\ub2e4. \uc911\ucca9 \ub41c serializer \ud544\ub4dc\uc5d0 \ub300\ud55c \uc4f0\uae30 \uc791\uc5c5\uc744 \uc9c0\uc6d0\ud558\ub824\uba74 creat() \uc640 / \ub610\ub294 update() \uba54\uc11c\ub4dc\ub97c \ub9cc\ub4e4\uc5b4 \uc790\uc2dd \uad00\uacc4\ub97c \uc800\uc7a5\ud558\ub294 \ubc29\ubc95\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. class TrackSerializer(serializers.ModelSerializer): class Meta: model = Track fields = ('order', 'title', 'duration') class AlbumSerializer(serializers.ModelSerializer): tracks = TrackSerializer(many=True) class Meta: model = Album fields = ('album_name', 'artist', 'tracks') def create(self, validated_data): tracks_data = validated_data.pop('tracks') album = Album.objects.create(**validated_data) for track_data in tracks_data: Track.objects.create(album=album, **track_data) return album >>> data = { 'album_name': 'The Grey Album', 'artist': 'Danger Mouse', 'tracks': [ {'order': 1, 'title': 'Public Service Announcement', 'duration': 245}, {'order': 2, 'title': 'What More Can I Say', 'duration': 264}, {'order': 3, 'title': 'Encore', 'duration': 159}, ], } >>> serializer = AlbumSerializer(data=data) >>> serializer.is_valid() True >>> serializer.save() <Album: Album object>","title":"Writable nested serializers"},{"location":"Serializer_relations/#custom-relational-fields","text":"\uae30\uc874\uc758 \uad00\uacc4\ud615 \uc2a4\ud0c0\uc77c\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uac00 \ub4dc\ubb3c\uc9c0\ub9cc \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ucd9c\ub825 \ud45c\ud604\uc744 \uc0dd\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uc815\ud655\ud558\uac8c \uc124\uba85\ud558\ub294 \uc644\ubcbd\ud55c custom relational field\ub97c \uad6c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. custom relational field\ub97c \uad6c\ud604\ud558\ub824\uba74 RelatedField\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uace0 .to_representation(self, value) \uba54\uc11c\ub4dc\ub97c \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 \ud544\ub4dc\uc758 \ub300\uc0c1\uc744 value \uc778\uc218\ub85c \uc0ac\uc6a9\ud558\uace0 \ub300\uc0c1\uc744 serializer\ud558\ub294\ub370 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud45c\ud604\uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. value \uc778\uc218\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4. read-write relational field\ub97c \uad6c\ud604\ud558\ub824\uba74 .to_internal_value(self, data) \uba54\uc18c\ub4dc\ub3c4 \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4. contextd\ub97c \uae30\ubc18\uc73c\ub85c \ub3d9\uc801 \ucffc\ub9ac\uc14b\uc744 \uc81c\uacf5\ud558\ub824\uba74 \ud074\ub798\uc2a4\uc5d0\uc11c .queryset \uc744 \uc9c0\uc815\ud558\uac70\ub098 \ud544\ub4dc\ub97c \ucd08\uae30\ud654 \ud560 \ub54c .get_queryset(self) \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"Custom relational fields"},{"location":"Serializer_relations/#example_1","text":"\uc608\ub97c \ub4e4\uc5b4, \uc21c\uc11c, \uc81c\ubaa9, \uae30\uac04\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud2b8\ub799\uc744 custom \ubb38\uc790\uc5f4 \ud45c\ud604\uc73c\ub85c serializer\ud558\ub294 relational field\ub97c \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. import time class TrackListingField(serializers.RelatedField): def to_representation(self, value): duration = time.strftime('%M:%S', time.gmtime(value.duration)) return 'Track %d: %s (%s)' % (value.order, value.name, duration) class AlbumSerializer(serializers.ModelSerializer): tracks = TrackListingField(many=True) class Meta: model = Album fields = ('album_name', 'artist', 'tracks') \uc774 custom \ud544\ub4dc\ub294 \ub2e4\uc74c \ud45c\ud604\uc73c\ub85c serializer \ub429\ub2c8\ub2e4. { 'album_name': 'Sometimes I Wish We Were an Eagle', 'artist': 'Bill Callahan', 'tracks': [ 'Track 1: Jim Cain (04:39)', 'Track 2: Eid Ma Clack Shaw (04:19)', 'Track 3: The Wind and the Dove (04:34)', ... ] }","title":"Example"},{"location":"Serializer_relations/#custom-hyperlinked-fields","text":"\uc5b4\ub5a4 \uacbd\uc6b0\uc5d0\ub294 \ud558\ub098 \uc774\uc0c1\uc758 \uc870\ud68c \ud544\ub4dc\uac00 \ud544\uc694\ud55c URL\uc744 \ub098\ud0c0\ub0b4\uae30 \uc704\ud574 \ud558\uc774\ud37c\ub9c1\ud06c \ud544\ub4dc\uc758 \ub3d9\uc791\uc744 custom \ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. HyperlinkedRelatedField \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc5ec \uc774 \uc791\uc5c5\uc744 \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc624\ubc84\ub77c\uc774\ub4dc \ud560 \uc218 \uc788\ub294 \ub450 \uac00\uc9c0 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4.","title":"Custom hyperlinked fields"},{"location":"Serializer_relations/#get_urlself-obj-view_name-request-format","text":"get_url \uba54\uc11c\ub4dc\ub294 \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\ub97c URL \ud45c\ud604\uc5d0 \ub9e4\ud551\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. view_name \ubc0f lookup_field \uc18d\uc131\uc774 URL conf\uc640 \uc815\ud655\ud558\uac8c \uc77c\uce58\ud558\ub3c4\ub85d \uad6c\uc131\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 NoReverseMatch \ub97c \ubc1c\uc0dd\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"get_url(self, obj, view_name, request, format)"},{"location":"Serializer_relations/#get_objectself-queryset-view_name-view_args-view_kwargs","text":"\uc4f0\uae30 \uac00\ub2a5\ud55c \ud558\uc774\ud37c\ub9c1\ud06c \ud544\ub4dc\ub97c \uc9c0\uc6d0\ud558\ub824\uba74 \ub4e4\uc5b4\uc624\ub294 URL\uc744 \uadf8\ub4e4\uc774 \ub098\ud0c0\ub0b4\ub294 \uac1d\uccb4\ub85c \ub2e4\uc2dc \ub9e4\ud551\ud558\uae30 \uc704\ud574 get_object \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud574\uc57c\ud569\ub2c8\ub2e4. \uc77d\uae30 \uc804\uc6a9 \ud558\uc774\ud37c\ub9c1\ud06c \ud544\ub4dc\uc758 \uacbd\uc6b0 \uc774 \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\uc758 \ubc18\ud658 \uac12\uc740 \uc77c\uce58\ud558\ub294 URL conf \uc778\uc218\uc5d0 \ud574\ub2f9\ud558\ub294 \uac1d\uccb4\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. ObjectDoesNotExist \uc608\uc678\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"get_object(self, queryset, view_name, view_args, view_kwargs)"},{"location":"Serializer_relations/#example_2","text":"\ub2e4\uc74c\uacfc \uac19\uc774 \ub450 \uac1c\uc758 \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \ucde8\ud558\ub294 \uace0\uac1d \uac1d\uccb4\uc758 URL\uc774 \uc788\ub2e4\uace0 \uac00\uc815\ud574\ubcf4\uc138\uc694. /api/<organization_slug>/customers/<customer_pk>/ \ub2e8\uc77c\uc758 lookup field \ub9cc\uc744 \ubc1b\uc544\ub4e4\uc774\ub294 \uae30\ubcf8 \uad6c\ud604\uc5d0\uc11c\ub294 \uc774\uac83\uc744 \ud45c\ud604\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \uc6b0\ub9ac\uac00 \uc6d0\ud558\ub294 \ub3d9\uc791\uc744 \uc5bb\uc73c\ub824\uba74 HyperlinkedRelatedField \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud574\uc57c\ud569\ub2c8\ub2e4. from rest_framework import serializers from rest_framework.reverse import reverse class CustomerHyperlink(serializers.HyperlinkedRelatedField): # We define these as class attributes, so we don't need to pass them as arguments. view_name = 'customer-detail' queryset = Customer.objects.all() def get_url(self, obj, view_name, request, format): url_kwargs = { 'organization_slug': obj.organization.slug, 'customer_pk': obj.pk } return reverse(view_name, kwargs=url_kwargs, request=request, format=format) def get_object(self, view_name, view_args, view_kwargs): lookup_kwargs = { 'organization__slug': view_kwargs['organization_slug'], 'pk': view_kwargs['customer_pk'] } return self.get_queryset().get(**lookup_kwargs) \uc774 \uc2a4\ud0c0\uc77c\uc744 generic view \uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0 \uc62c\ubc14\ub978 \uc870\ud68c \ub3d9\uc791\uc744 \uc5bb\uc73c\ub824\uba74 \ubdf0\uc5d0\uc11c .get_object \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud574\uc57c\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uac00\ub2a5\ud55c \uacbd\uc6b0 API \ud45c\ud604\uc5d0 \ud50c\ub7ab \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc9c0\ub9cc, \uc911\ucca9\ub41c URL \uc2a4\ud0c0\uc77c\uc740 \uc801\ub2f9\ud788 \uc0ac\uc6a9\ud558\uba74 \ud569\ub9ac\uc801\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Example"},{"location":"Serializer_relations/#further-notes","text":"","title":"Further notes"},{"location":"Serializer_relations/#the-queryset-argument","text":"queryset \uc778\uc218\ub294 \uc4f0\uae30 \uac00\ub2a5\ud55c \uad00\uacc4 \ud544\ub4dc\uc5d0\ub9cc \ud544\uc694\ud569\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \uae30\ubcf8 \uc778\uc2a4\ud134\uc2a4 \uc0ac\uc6a9\uc790 \uc785\ub825 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\ub85c \ub9e4\ud551\ub418\ub294 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \uc870\ud68c\ub97c \uc218\ud589\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ubc84\uc804 2.x\uc5d0\uc11c\ub294 serializer \ud074\ub798\uc2a4\uac00 ModelSerializer \ud074\ub798\uc2a4\uac00 \uc0ac\uc6a9\ub418\ub294 \uacbd\uc6b0 queryset \uc778\uc218\ub97c \uc790\ub3d9\uc73c\ub85c \uacb0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc740 \uc774\uc81c \uc4f0\uae30 \uac00\ub2a5\ud55c \uad00\uacc4\ud615 \ud544\ub4dc\uc5d0 \ub300\ud574 \uba85\uc2dc\uc801 \ucffc\ub9ac\uc14b \uc778\uc218\ub97c \ud56d\uc0c1 \uc0ac\uc6a9\ud558\uc5ec \ub300\uccb4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c\ud558\uba74 ModelSerializer \uc774 \uc81c\uacf5\ud558\ub294 \uc228\uaca8\uc9c4 'magic'\uc591\uc774 \uc904\uc5b4\ub4e4\uace0 \ud544\ub4dc\uc758 \ub3d9\uc791\uc774 \ub354 \uba85\ud655\ud574\uc9c0\uba70 ModelSerializer shortcut\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 \uc644\uc804\ud558\uac8c \uba85\uc2dc\uc801\uc778 Serializer \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc27d\ub2e4\ub294 \uac83\uc744 \ubcf4\uc99d\ud569\ub2c8\ub2e4.","title":"The queryset argument"},{"location":"Serializer_relations/#customizing-the-html-display","text":"\ubaa8\ub378\uc758 \ub0b4\uc7a5 __str__ \uba54\uc11c\ub4dc\ub294 choices \uc18d\uc131\uc744 \ucc44\uc6b0\ub294\ub370 \uc0ac\uc6a9 \ub41c \uac1d\uccb4\uc758 \ubb38\uc790\uc5f4 \ud45c\ud604\uc744 \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc120\ud0dd\uc0ac\ud56d\uc740 \ud0d0\uc0c9 \uac00\ub2a5\ud55c API\uc5d0\uc11c \uc120\ud0dd\ub41c HTML \uc785\ub825\uc744 \ucc44\uc6b0\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc785\ub825\uc5d0 \ub300\ud574 custom \ub41c \ud45c\ud604\uc744 \uc81c\uacf5\ud558\ub824\uba74 RelatedField \uc11c\ube0c \ud074\ub798\uc2a4\uc758 display_value() \ub97c \ub300\uccb4\ud558\uc138\uc694. \uc774 \uba54\uc11c\ub4dc\ub294 \ubaa8\ub378 \uac1d\uccb4\ub97c \uc218\uc2e0\ud558\uace0 \ubaa8\ub378 \uac1d\uccb4\ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc801\ud569\ud55c \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: class TrackPrimaryKeyRelatedField(serializers.PrimaryKeyRelatedField): def display_value(self, instance): return 'Track: %s' % (instance.title)","title":"Customizing the HTML display"},{"location":"Serializer_relations/#select-field-cutoffs","text":"browsable API\uc5d0\uc11c \ub80c\ub354\ub9c1 \ub420 \ub54c \uad00\uacc4\ud615 \ud544\ub4dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ucd5c\ub300 1000\uac1c\uc758 \uc120\ud0dd \uac00\ub2a5\ud55c \ud56d\ubaa9\ub9cc \ud45c\uc2dc\ud569\ub2c8\ub2e4. \ub354 \ub9ce\uc740 \ud56d\ubaa9\uc774 \uc788\uc73c\uba74 \"More than 1000 items...\"\uc640 \ud568\uaed8 \ube44\ud65c\uc131\ud654 \ub41c \uc635\uc158\uc774 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc740 \ub9e4\uc6b0 \ub9ce\uc740 \uc218\uc758 \uad00\uacc4\uac00 \ud45c\uc2dc\ub418\uc5b4 \ud5c8\uc6a9\ub418\ub294 \ubc94\uc704 \ub0b4\uc5d0\uc11c \ud15c\ud50c\ub9bf\uc744 \ub80c\ub354\ub9c1 \ud560 \uc218 \uc5c6\ub3c4\ub85d \ud558\uae30 \uc704\ud55c \uac83\uc785\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc744 \uc81c\uc5b4\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub450 \uac1c\uc758 \ud0a4\uc6cc\ub4dc\uc778\uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4. html_cutoff : \uc124\uc815\ub41c \uacbd\uc6b0 HTML \uc120\ud0dd \ub4dc\ub86d \ub2e4\uc6b4\uc5d0 \ud45c\uc2dc \ub420 \ucd5c\ub300 \uc120\ud0dd \ud56d\ubaa9 \uc218\uc785\ub2c8\ub2e4. \uc81c\ud55c\uc744 \ud574\uc81c\ud558\ub824\uba74 None \uc73c\ub85c \uc124\uc815\ud558\uc2ed\uc2dc\uc624. \uae30\ubcf8\uac12\uc740 1000 \uc785\ub2c8\ub2e4. html_cutoff_text - \uc124\uc815\ub41c \uacbd\uc6b0 HTML \uc120\ud0dd \ub4dc\ub86d \ub2e4\uc6b4\uc5d0\uc11c \ucd5c\ub300 \ud56d\ubaa9 \uc218\uac00 \uc798\ub9b0 \uacbd\uc6b0 \ud14d\uc2a4\ud2b8 \ud45c\uc2dc\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 \"More than {count} items\u2026\" \uc785\ub2c8\ub2e4. HTML_SELECT_CUTOFF \ubc0f HTML_SELECT_CUTOFF_TEXT \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\uc5ed\uc73c\ub85c \uc81c\uc5b4 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ucef7\uc624\ud504\uac00 \uc801\uc6a9\ub418\ub294 \uacbd\uc6b0 HTML \uc591\uc2dd\uc5d0 \uc77c\ubc18 \uc785\ub825 \ud544\ub4dc\ub97c \ub300\uc2e0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. style \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \uc0ac\uc6a9\ud558\uba74\ub429\ub2c8\ub2e4. \uc608 : assigned_to = serializers.SlugRelatedField( queryset=User.objects.all(), slug_field='username', style={'base_template': 'input.html'} )","title":"Select field cutoffs"},{"location":"Serializer_relations/#reverse-relations","text":"reverse \uad00\uacc4\ub294 ModelSerializer \ubc0f HyperlinkedModelSerializer \ud074\ub798\uc2a4\uc5d0 \uc790\ub3d9\uc73c\ub85c \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. reverse \uad00\uacc4\ub97c \ud3ec\ud568 \uc2dc\ud0a4\ub824\uba74 \ud544\ub4dc \ubaa9\ub85d\uc5d0 \uba85\uc2dc\uc801\uc73c\ub85c \ucd94\uac00\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: class AlbumSerializer(serializers.ModelSerializer): class Meta: fields = ('tracks', ...) \uc77c\ubc18\uc801\uc73c\ub85c \ud544\ub4dc \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc801\uc808\ud55c related_name \uc778\uc218\ub97c \uad00\uacc4\uc5d0 \uc124\uc815\ud588\ub294\uc9c0 \ud655\uc778\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: class Track(models.Model): album = models.ForeignKey(Album, related_name='tracks', on_delete=models.CASCADE) ... reverse \uad00\uacc4\uc5d0 \ub300\ud55c \uad00\ub828 \uc774\ub984\uc744 \uc124\uc815\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 fields \uc778\uc218\uc5d0 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131 \ub41c \uad00\ub828 \uc774\ub984\uc744 \uc0ac\uc6a9\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: class AlbumSerializer(serializers.ModelSerializer): class Meta: fields = ('track_set', ...) \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 reverse relationships \uc5d0 \ub300\ud55c Django \ubb38\uc11c\ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"Reverse relations"},{"location":"Serializer_relations/#generic-relationships","text":"\uc77c\ubc18\uc801\uc778 foreign key\ub97c serializer\ud558\ub824\uba74 \uad00\uacc4\uc758 \ub300\uc0c1\uc744 serializer\ud654\ud558\ub294 \ubc29\ubc95\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uacb0\uc815\ud558\uae30 \uc704\ud574 custom \ud544\ub4dc\ub97c \uc815\uc758\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\ub978 \uc784\uc758\uc758 \ubaa8\ub378\uacfc \uc77c\ubc18\uc801\uc778 \uad00\uacc4\uac00 \uc788\ub294 \ud0dc\uadf8\uc5d0 \ub300\ud574 \ub2e4\uc74c \ubaa8\ub378\uc774 \uc81c\uacf5\ub429\ub2c8\ub2e4. class TaggedItem(models.Model): \"\"\" Tags arbitrary model instances using a generic relation. See: https://docs.djangoproject.com/en/stable/ref/contrib/contenttypes/ \"\"\" tag_name = models.SlugField() content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE) object_id = models.PositiveIntegerField() tagged_object = GenericForeignKey('content_type', 'object_id') def __unicode__(self): return self.tag_name \uadf8\ub9ac\uace0 \ub2e4\uc74c \ub450 \ubaa8\ub378\uc758 \uad00\ub828 \ud0dc\uadf8\ub97c \uac00\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class Bookmark(models.Model): \"\"\" A bookmark consists of a URL, and 0 or more descriptive tags. \"\"\" url = models.URLField() tags = GenericRelation(TaggedItem) class Note(models.Model): \"\"\" A note consists of some text, and 0 or more descriptive tags. \"\"\" text = models.CharField(max_length=1000) tags = GenericRelation(TaggedItem) \ud0dc\uadf8\uac00 \uc9c0\uc815\ub41c \uc778\uc2a4\ud134\uc2a4\ub97c serializer\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 custom \ud544\ub4dc\ub97c \uc815\uc758\ud558\uc5ec \uac01 \uc778\uc2a4\ud134\uc2a4\uc758 \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\uc5ec serializer \ud574\uc57c\ud558\ub294 \ubc29\uc2dd\uc744 \uacb0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class TaggedObjectRelatedField(serializers.RelatedField): \"\"\" A custom field to use for the `tagged_object` generic relationship. \"\"\" def to_representation(self, value): \"\"\" Serialize tagged objects to a simple textual representation. \"\"\" if isinstance(value, Bookmark): return 'Bookmark: ' + value.url elif isinstance(value, Note): return 'Note: ' + value.text raise Exception('Unexpected type of tagged object') \uad00\uacc4\uc758 \ud0c0\uac9f\uc774 \uc911\ucca9 \ub41c \ud45c\ud604\uc744 \ud544\uc694\ub85c \ud558\ub294 \uacbd\uc6b0 .to_representation() \uba54\uc11c\ub4dc \ub0b4\uc5d0\uc11c \ud544\uc694\ud55c serializer\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. def to_representation(self, value): \"\"\" Serialize bookmark instances using a bookmark serializer, and note instances using a note serializer. \"\"\" if isinstance(value, Bookmark): serializer = BookmarkSerializer(value) elif isinstance(value, Note): serializer = NoteSerializer(value) else: raise Exception('Unexpected type of tagged object') return serializer.data GenericRelation \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud45c\ud604\ub41c reverse generic key\ub294 \uad00\uacc4\uc758 \ub300\uc0c1 \uc720\ud615\uc774 \ud56d\uc0c1 \uc54c\ub824\uc838 \uc788\uc73c\ubbc0\ub85c \uc77c\ubc18 \uad00\uacc4\ud615 \ud544\ub4dc \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\uc5ec serializer\ud654 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \uc790\uc138\ud55c \uc815\ubcf4\ub294 the Django documentation on generic relations \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"Generic relationships"},{"location":"Serializer_relations/#manytomanyfields-with-a-through-model","text":"\uae30\ubcf8\uc801\uc73c\ub85c \uc9c0\uc815\ub41c through \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\uc5ec ManyToManyField \ub97c \ub300\uc0c1\uc73c\ub85c\ud558\ub294 \uad00\uacc4\ud615 \ud544\ub4dc\ub294 \uc77d\uae30\uc804\uc6a9\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. through \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\uc5ec manyToManyField \ub97c \uac00\ub9ac\ud0a4\ub294 \uad00\uacc4 \ud544\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud558\uba74 read_only \ub97c True \ub85c \uc124\uc815\ud558\uc138\uc694.","title":"ManyToManyFields with a Through Model"},{"location":"Serializer_relations/#third-party-packages","text":"\ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"Third Party Packages"},{"location":"Serializer_relations/#drf-nested-routers","text":"drf-nested-routers \ud328\ud0a4\uc9c0\ub294 \uc911\ucca9 \ub41c \ub9ac\uc18c\uc2a4\ub85c \uc791\uc5c5\ud558\uae30 \uc704\ud55c \ub77c\uc6b0\ud130 \ubc0f \uad00\uacc4 \ud544\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"DRF Nested Routers"},{"location":"Serializer_relations/#rest-framework-generic-relations","text":"rest-framework-generic-relations \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \uc77c\ubc18\uc801\uc778 foreign key\uc5d0 \ub300\ud55c read/write serializer\ud654\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Rest Framework Generic Relations"},{"location":"Serializers/","text":"Django REST framework - Serializers _\"Expanding the usefulness of the serializers is something that we would like to address. However, it's not a trivial problem, and it will take some serious design work.\" \"serializer\uc758 \uc720\uc6a9\uc131\uc744 \ud655\uc7a5\ud558\ub294 \uac83\uc740 \uc6b0\ub9ac\uac00 \ub2e4\ub8e8\uace0\uc790 \ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub098, \uadf8\uac83\uc740 \uc0ac\uc18c\ud55c \ubb38\uc81c\uac00 \uc544\ub2c8\uba70. \uc2ec\uac01\ud55c \ub514\uc790\uc778 \uc791\uc5c5\uc744 \ud544\uc694\ub85c \ud569\ub2c8\ub2e4.\" \u2014 Russell Keith-Magee _ Serializers Serializers\ub294 \ucffc\ub9ac\uc14b\ub4e4 \ubc0f \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc640 \uac19\uc740 \ubcf5\uc7a1\ud55c \ub370\uc774\ud130\ub97c JSON , XML \ub610\ub294 \uae30\ud0c0 \ucee8\ud150\ud2b8 \uc720\ud615\uc73c\ub85c \uc27d\uac8c \ub80c\ub354\ub9c1 \ud560 \uc218 \uc788\ub294 Python \uae30\ubcf8 \ub370\uc774\ud130 \uc720\ud615\uc73c\ub85c \ubcc0\ud658\ud574 \uc90d\ub2c8\ub2e4. \ub610\ud55c serializer\ub294 deserialization\uc744 \uc81c\uacf5\ud558\uc5ec, \ub4e4\uc5b4\uc624\ub294 \ub370\uc774\ud130\uc758 \uc720\ud6a8\uc131\uc744 \ucc98\uc74c \ud655\uc778\ud55c \ud6c4\uc5d0 \uad6c\ubb38 \ubd84\uc11d \ub41c \ub370\uc774\ud130\ub97c \ubcf5\ud569 \ud615\uc2dd\uc73c\ub85c \ub2e4\uc2dc \ubcc0\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DJango \uc5d0\uc11c Client \uc73c\ub85c \ubcf5\uc7a1\ud55c \ub370\uc774\ud130(\ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \ub4f1)\ub97c \ubcf4\ub0b4\ub824\uba74 'string'\uc73c\ub85c \ubcc0\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \uc774 \ubcc0\ud658\uc744 serializer \ub77c\uace0 \ud569\ub2c8\ub2e4. \ubc18\ub300\ub85c client \uc758 'string'\uc744 Djagno\ub85c \ubc1b\uc744 \ub54c Python \uae30\ubcf8 \ub370\uc774\ud130 \uc720\ud615\uc73c\ub85c \ubc1b\uc544\uc57c \ud558\ub294\ub370 \uc774 \ubcc0\ud658\uc744 deserializer \ub77c\uace0 \ud569\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 serializers\ub294 Django\uc758 Form \ubc0f modelForm \ud074\ub798\uc2a4\uc640 \ub9e4\uc6b0 \uc720\uc0ac\ud558\uac8c \uc791\ub3d9\ud569\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 ModelSerializer (\ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc640 \ucffc\ub9ac\uc14b\uc744 \ub2e4\ub8e8\ub294 \uc2dc\ub9ac\uc5bc\ub77c\uc774\uc800\ub97c \uc0dd\uc131\ud558\uae30 \uc720\uc6a9\ud55c \ud074\ub798\uc2a4)\ubfd0\ub9cc \uc544\ub2c8\ub77c \uc751\ub2f5\uc758 \ucd9c\ub825\uc744 \uc81c\uc5b4\ud558\ub294 \uac15\ub825\ud558\uace0 \uc77c\ubc18\uc801\uc778 \ubc29\ubc95\uc744 \uc81c\uacf5\ud558\ub294 Serializer \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Declaring Serializers \uc608\uc81c\ub97c \uc704\ud574 \uc0ac\uc6a9\ud560 \uac04\ub2e8\ud55c \uac1d\uccb4\ub97c \ub9cc\ub4e4\uc5b4 \ubd05\ub2c8\ub2e4. from datetime import datetime class Comment(object): def __init__(self, email, content, created=None): self.email = email self.content = content self.created = created or datetime.now() comment = Comment(email='leila@example.com', content='foo bar') comment \uac1d\uccb4\uc5d0 \ud574\ub2f9\ud558\ub294 \ub370\uc774\ud130\ub97c serializer \ubc0f deserializer\ud654\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 serializer\ub97c \uc120\uc5b8\ud569\ub2c8\ub2e4. serializer\ub97c \uc120\uc5b8\ud558\uba74 \uc591\uc2dd\uc744 \uc120\uc5b8\ud558\ub294 \uac83\uacfc \ub9e4\uc6b0 \uc720\uc0ac\ud569\ub2c8\ub2e4. from rest_framework import serializers class CommentSerializer(serializers.Serializer): email = serializers.EmailField() content = serializers.CharField(max_length=200) created = serializers.DateTimeField() Serializing objects CommentSerializer \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc8fc\uc11d \ub610\ub294 \uc8fc\uc11d \ubaa9\ub85d\uc744 serializer \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \ub9d0\ud558\uba74, Serializer \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 Form \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uacfc \ube44\uc2b7\ud569\ub2c8\ub2e4. serializer = CommentSerializer(comment) serializer.data # {'email': 'leila@example.com', 'content': 'foo bar', 'created': '2016-01-27T15:17:10.375877'} \uc774 \uc2dc\uc810\uc5d0\uc11c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\ub97c \ud30c\uc774\uc36c \uae30\ubcf8 \ub370\uc774\ud130 \uc720\ud615\uc73c\ub85c \ubcc0\ud658\ud588\uc2b5\ub2c8\ub2e4. serializer \uacfc\uc815\uc744 \ub9c8\ubb34\ub9ac\ud558\uae30 \uc704\ud574 \ub370\uc774\ud130\ub97c json \uc73c\ub85c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. from rest_framework.renderers import JSONRenderer json = JSONRenderer().render(serializer.data) json # b'{\"email\":\"leila@example.com\",\"content\":\"foo bar\",\"created\":\"2016-01-27T15:17:10.375877\"}' Deserializing objects Deserialization\ub3c4 \ube44\uc2b7\ud569\ub2c8\ub2e4. \uba3c\uc800 \ud30c\uc774\uc36c \ub370\uc774\ud130 \ud615\uc2dd\uc73c\ub85c \uc2a4\ud2b8\ub9bc\uc744 \ud30c\uc2f1\ud569\ub2c8\ub2e4. from django.utils.six import BytesIO from rest_framework.parsers import JSONParser stream = BytesIO(json) data = JSONParser().parse(stream) \uadf8\ub7f0 \ub2e4\uc74c \uae30\ubcf8 \ub370\uc774\ud130 \uc720\ud615\uc744 \uac80\uc99d \ub41c \ub370\uc774\ud130 dict\ub85c \ubcf5\uc6d0\ud569\ub2c8\ub2e4. serializer = CommentSerializer(data=data) serializer.is_valid() # True serializer.validated_data # {'content': 'foo bar', 'email': 'leila@example.com', 'created': datetime.datetime(2012, 08, 22, 16, 20, 09, 822243)} Saving instances \uc720\ud6a8\uc131\uc774 \uac80\uc0ac \ub41c \ub370\uc774\ud130\ub97c \uae30\ubc18\uc73c\ub85c \uc644\uc804\ud55c \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud558\ub824\uba74, .create() , update() \uba54\uc18c\ub4dc \uc911 \ud558\ub098\ub098 \ub458 \ubaa8\ub450\ub97c \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class CommentSerializer(serializers.Serializer): email = serializers.EmailField() content = serializers.CharField(max_length=200) created = serializers.DateTimeField() def create(self, validated_data): return Comment(**validated_data) def update(self, instance, validated_data): instance.email = validated_data.get('email', instance.email) instance.content = validated_data.get('content', instance.content) instance.created = validated_data.get('created', instance.created) return instance \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\uac00 Django \ubaa8\ub378\uacfc \uc77c\uce58\ud558\ub294 \uacbd\uc6b0 \uc774 \uba54\uc18c\ub4dc\uac00 \uac1d\uccb4\ub97c \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc800\uc7a5\ud558\ub3c4\ub85d \ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, Comment \uac00 Django \ubaa8\ub378\uc778 \uacbd\uc6b0 \uba54\uc18c\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. def create(self, validated_data): return Comment.objects.create(**validated_data) def update(self, instance, validated_data): instance.email = validated_data.get('email', instance.email) instance.content = validated_data.get('content', instance.content) instance.created = validated_data.get('created', instance.created) instance.save() return instance \uc774\uc81c \ud14c\uc774\ud130\ub97c deserializer \ud560 \ub54c .save() \ub97c \ud638\ucd9c\ud558\uc5ec \uc720\ud6a8\uc131\uc774 \uac80\uc0ac\ub41c \ub370\uc774\ud130\ub97c \uae30\ubc18\uc73c\ub85c \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. comment = serializer.save() .save() \ub97c \ud638\ucd9c\ud558\uba74 serializer \ud074\ub798\uc2a4\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c \uae30\uc874 \uc778\uc2a4\ud134\uc2a4\uac00 \uc804\ub2ec\ub418\uc5c8\ub294\uc9c0 \uc5ec\ubd80\uc5d0 \ub530\ub77c \uc0c8 \uc778\uc2a4\ud130\uc2a4\ub97c \ub9cc\ub4e4\uac70\ub098 \uae30\uc874 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4. # .save() will create a new instance. serializer = CommentSerializer(data=data) # .save() will update the existing `comment` instance. serializer = CommentSerializer(comment, data=data) .create() \ubc0f .update() \uba54\uc11c\ub4dc\ub294 \ubaa8\ub450 \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. serializer \ud074\ub798\uc2a4\uc758 \uc720\uc0ac \ucf00\uc774\uc2a4\uc5d0 \ub530\ub77c \ud558\ub098 \ub610\ub294 \ub458 \ubaa8\ub450 \uad6c\ud604 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uac00 \uc18d\uc131\uc744 .save() \uc5d0 \uc804\ub2ec\ud569\ub2c8\ub2e4. \ub54c\ub85c\ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \uc800\uc7a5\ud558\ub294 \uc2dc\uc810\uc5d0 \ubdf0 \ucf54\ub4dc\uac00 \ub370\uc774\ud130\ub97c \ucd94\uac00\ud560 \uc218 \uc788\uc5b4\uc57c\ud569\ub2c8\ub2e4. \uc774 \ucd94\uac00 \ub370\uc774\ud130\uc5d0\ub294 \ud604\uc7ac \uc0ac\uc6a9\uc790, \ud604\uc7ac \uc2dc\uac04 \ub610\ub294 \uc694\uccad \ub370\uc774\ud130\uc758 \uc77c\ubd80\uac00 \uc544\ub2cc \ub2e4\ub978 \uc815\ubcf4\uac00 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. .save() \ub97c \ud638\ucd9c \ud560 \ub54c \ucd94\uac00 \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \ud3ec\ud568\uc2dc\ucf1c\uc11c \uadf8\ub807\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. serializer.save(owner=request.user) \ucd94\uac00 \ud0a4\uc6cc\ub4dc \uc778\uc218\ub294 .create() \ub610\ub294 .update() \uac00 \ud638\ucd9c \ub420 \ub54c validated_data \uc778\uc218\uc5d0 \ud3ec\ud568\ub429\ub2c8\ub2e4. .save() \ub97c \uc9c1\uc811 \uc7ac\uc815\uc758 \ud558\uc138\uc694. \uc5b4\ub5a4 \uacbd\uc6b0\uc5d0\ub294 .create() \ubc0f .update() \uba54\uc18c\ub4dc \uc774\ub984\uc774 \uc758\ubbf8\uac00 \uc5c6\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ubb38\uc758 \uc591\uc2dd\uc5d0\uc11c \uc0c8 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4dc\ub294 \ub300\uc2e0 email\uc774\ub098 \ub2e4\ub978 \uba54\uc138\uc9c0\ub97c \ubcf4\ub0c5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uacbd\uc6b0\uc5d0 \ub300\uc2e0 .save() \ub97c \uc9c1\uc811 \uc77d\uace0 \ubb34\uc2dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class ContactForm(serializers.Serializer): email = serializers.EmailField() message = serializers.CharField() def save(self): email = self.validated_data['email'] message = self.validated_data['message'] send_email(from=email, message=message) \uc704\uc758 \uacbd\uc6b0 serializer\uc758 .validated_data \uc18d\uc131\uc5d0 \uc9c1\uc811 \uc561\uc11c\uc2a4\ud574\uc57c \ud569\ub2c8\ub2e4. Validation \ub370\uc774\ud130\ub97c deserializer \ud560 \ub54c \uc720\ud6a8\uc131\uc774 \uac80\uc0ac \ub41c \ub370\uc774\ud130\uc5d0 \uc561\uc11c\uc2a4\ud558\uae30 \uc804\uc5d0 \ud56d\uc0c1 is_valid() \ub97c \ud638\ucd9c\ud558\uac70\ub098 \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\ub97c \uc800\uc7a5\ud574\uc57c \ud569\ub2c8\ub2e4. \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uba74, .errors \uc18d\uc131\uc5d0\ub294 \uacb0\uacfc \uc624\ub958 \uba54\uc138\uc9c0\ub97c \ub098\ud0c0\ub0b4\ub294 dict\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: serializer = CommentSerializer(data={'email': 'foobar', 'content': 'baz'}) serializer.is_valid() # False serializer.errors # {'email': [u'Enter a valid e-mail address.'], 'created': [u'This field is required.']} dict\uc758 \uac01 \ud0a4\ub294 \ud544\ub4dc \uc774\ub984\uc774\uba70, \uac12\uc740 \ud574\ub2f9 \ud544\ub4dc\uc5d0 \ud574\ub2f9\ud558\ub294 \uc624\ub958 \uba54\uc2dc\uc9c0\uc758 \ubb38\uc790\uc5f4 \ubaa9\ub85d\uc785\ub2c8\ub2e4. non_field_errors \ud0a4\uac00 \uc788\uc744 \uc218\ub3c4 \uc788\uace0 \uc77c\ubc18\uc801\uc778 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4. non_field_errors \ud0a4\uc758 \uc774\ub984\uc740 REST \ud504\ub808\uc784 \uc6cc\ud06c \uc124\uc815\uc758 NON_FIELD_ERRORS_KEY \uc744 \uc0ac\uc6a9\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc815\uc758 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud56d\ubaa9 \ubaa9\ub85d\uc744 deserializer \ud560 \ub54c \uc624\ub958\ub294 \uac01 deserializer\ud654 \ud56d\ubaa9\uc744 \ub098\ud0c0\ub0b4\ub294 dict \ubaa9\ub85d\uc73c\ub85c \ubc18\ud658\ub429\ub2c8\ub2e4. \uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \ub370\uc774\ud130\uc5d0 \ub300\ud55c \uc608\uc678 \ubc1c\uc0dd .is_valid() \uba54\uc11c\ub4dc\ub294 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uac00 \uc788\ub294 \uacbd\uc6b0 serializers.ValidationError \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0a4\ub294 \uc120\ud0dd\uc801 raise_exception \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc608\uc678\ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uae30\ubcf8 \uc608\uc678 \ucc98\ub9ac\uae30\uc5d0\uc11c \uc790\ub3d9\uc73c\ub85c \ucc98\ub9ac\ub418\uba70, \uae30\ubcf8\uc801\uc73c\ub85c HTTP 400 ad Request \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. # Return a 400 response if the data was invalid. serializer.is_valid(raise_exception=True) \ud544\ub4dc \ub808\ubca8 \uac80\uc99d Serializer \uc11c\ube0c \ud074\ub798\uc2a4\uc5d0 .validate_<field_name> \uba54\uc18c\ub4dc\ub97c \ucd94\uac00\ud558\uc5ec custom \ud544\ub4dc \ub808\ubca8 \uc720\ud6a8\uc131 \uac80\uc99d\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uac83\ub4e4\uc740 Django form\uc758 .clean_<field_name> \uba54\uc18c\ub4dc\uc640 \ube44\uc2b7\ud569\ub2c8\ub2e4. \uc774 \uba54\uc18c\ub4dc\ub294 \uc778\uc218\uac00 \ud544\uc694\ud558\uba70, \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \ud544\uc694\ud55c \ud544\ub4dc \uac12\uc785\ub2c8\ub2e4. validate_<field_name> \uba54\uc18c\ub4dc\ub294 \uc720\ud6a8\ud55c \uac12\uc744 \ubc18\ud658\ud558\uac70\ub098 serializers.ValidationError \ub97c \ubc1c\uc0dd\uc2dc\ucf1c\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: from rest_framework import serializers class BlogPostSerializer(serializers.Serializer): title = serializers.CharField(max_length=100) content = serializers.CharField() def validate_title(self, value): \"\"\" Check that the blog post is about Django. \"\"\" if 'django' not in value.lower(): raise serializers.ValidationError(\"Blog post is not about Django\") return value NOTE : <field_name> \uc774 required=False parameter\ub97c \uc0ac\uc6a9\ud558\uc5ec serializer \uc5d0\uc11c \uc120\uc5b8 \ub41c \uacbd\uc6b0, \ud544\ub4dc\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc73c\uba74 \uc774 \uc720\ud6a8\uc131 \uac80\uc0ac \ub2e8\uacc4\uac00 \uc218\ud589\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uac1d\uccb4 \uc218\uc900 \uc720\ud6a8\uc131 \uac80\uc0ac \uc5ec\ub7ec \ud544\ub4dc\uc5d0 \ub300\ud55c \uc561\uc11c\uc2a4\uac00 \ud544\uc694\ud55c \ub2e4\ub978 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \ud558\ub824\uba74, Serializer \uc11c\ube0c \ud074\ub798\uc2a4\uc5d0 .validate() \uba54\uc18c\ub4dc\ub97c \ucd94\uac00\ud558\uc138\uc694. \uc774 \uba54\uc18c\ub4dc\ub294 \ud544\ub4dc \uac12\uc758 dict\uc778 \ub2e8\uc77c \uc778\uc218\ub97c \ucde8\ud569\ub2c8\ub2e4. \ud544\uc694\ud55c \uacbd\uc6b0 ValidationError \ub97c \ubc1c\uc0dd\uc2dc\ud0a4\uac70\ub098 \uc720\ud6a8\uc131 \uac80\uc0ac \ub41c \uac12\uc744 \ubc18\ud658\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74: from rest_framework import serializers class EventSerializer(serializers.Serializer): description = serializers.CharField(max_length=100) start = serializers.DateTimeField() finish = serializers.DateTimeField() def validate(self, data): \"\"\" Check that the start is before the stop. \"\"\" if data['start'] > data['finish']: raise serializers.ValidationError(\"finish must occur after start\") return data Validators (\uac80\uc0ac\uae30) Serializer\uc758 \uac1c\ubcc4 \ud544\ub4dc\ub294 \ud544\ub4dc \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc120\uc5b8\ud568\uc73c\ub85c\uc368 \uc720\ud6a8\uc131 \uac80\uc0ac\uae30\uc5d0 \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. def multiple_of_ten(value): if value % 10 != 0: raise serializers.ValidationError('Not a multiple of ten') class GameRecord(serializers.Serializer): score = IntegerField(validators=[multiple_of_ten]) ... \ub610\ud55c Serializer \ud074\ub798\uc2a4\uc5d0\ub294 \uc804\uccb4 \ud544\ub4dc \ub370\uc774\ud130 \uc9d1\ud569\uc5d0 \uc801\uc6a9\ub418\ub294 \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc720\ud6a8\uc131 \uac80\uc0ac\uae30\uac00 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc720\ud6a8\uc131 \uac80\uc0ac\uae30\ub294 Meta \ud074\ub798\uc2a4\uc5d0 \uc120\uc5b8\ud568\uc73c\ub85c\uc368 \ud3ec\ud568\ub429\ub2c8\ub2e4. class EventSerializer(serializers.Serializer): name = serializers.CharField() room_number = serializers.IntegerField(choices=[101, 102, 103, 201]) date = serializers.DateField() class Meta: # Each room only has one event per day. validators = UniqueTogetherValidator( queryset=Event.objects.all(), fields=['room_number', 'date'] ) \ub354 \ub9ce\uc740 \uc815\ubcf4\ub294 validators documentation \ub97c \ucc38\uc870\ud558\uc138\uc694. Accessing the initial data and instance (\ucd08\uae30 \ub370\uc774\ud130 \ubc0f \uc778\uc2a4\ud134\uc2a4 \uc561\uc11c\uc2a4) serializer \uc778\uc2a4\ud134\uc2a4\uc5d0 \ucd08\uae30 \uac1d\uccb4 \ub610\ub294 \ucffc\ub9ac\uc14b\uc744 \uc804\ub2ec \ud560 \ub54c \uac1d\uccb4\ub294 .instance \ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4. \ucd08\uae30 \uac1d\uccb4\uac00 \uc804\ub2ec\ub418\uc9c0 \uc54a\uc73c\uba74 .instance \uc18d\uc131\uc774 None \uc774 \ub429\ub2c8\ub2e4. \ub370\uc774\ud130\ub97c serializer \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc804\ub2ec \ud560 \ub54c \uc218\uc815\ub418\uc9c0 \uc54a\uc740 \ub370\uc774\ud130\ub294 .initial_data \ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4. data \ud0a4\uc6cc\ub4dc \uc778\uc218\uac00 \uc804\ub2ec\ub418\uc9c0 \uc54a\uc73c\uba74 .initial_data \uc18d\uc131\uc774 \uc874\uc7ac \ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Partial updates (\ubd80\ubd84 \uc5c5\ub370\uc774\ud2b8) \uae30\ubcf8\uc801\uc73c\ub85c serializer\ub294 \ubaa8\ub4e0 \ud544\uc218 \ud544\ub4dc\uc5d0 \uac12\uc744 \uc804\ub2ec\ud574\uc57c\ud558\uba70 \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. partial \uc5c5\ub370\uc774\ud2b8\ub97c \ud5c8\uc6a9\ud558\uae30 \uc704\ud574 partial \uc778\uc218\ub97c \uc0ac\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. # Update `comment` with partial data serializer = CommentSerializer(comment, data={'content': u'foo bar'}, partial=True) Dealing with nested objects (\uc911\ucca9\ub41c \uac1d\uccb4 \ub2e4\ub8e8\uae30) \uc55e\uc758 \uc608\uc81c\ub294 \ub2e8\uc21c\ud55c \ub370\uc774\ud130 \uc720\ud615\ub9cc\uc744 \uac00\uc9c4 \uac1d\uccb4\ub97c \ub2e4\ub8e8\ub294 \uacbd\uc6b0\uc5d0\ub294 \ubb38\uc81c\uac00 \uc5c6\uc9c0\ub9cc \uac1d\uccb4\uc758 \uc77c\ubd80 \uc18d\uc131\uc774 \ubb38\uc790\uc5f4, \ub0a0\uc9dc \ub610\ub294 \uc815\uc218\uc640 \uac19\uc740 \ub2e8\uc21c\ud55c \ub370\uc774\ud130 \uc720\ud615\uc774 \uc544\ub2cc \ubcf5\uc7a1\ud55c \uac1d\uccb4\ub97c \ud45c\ud604\ud560 \uc218 \uc788\uc5b4\uc57c\ud558\ub294 \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4. Serializer \ud074\ub798\uc2a4 \uc790\uccb4\ub294 Field \uc720\ud615\uc774\uba70, \ud55c \uac1d\uccb4 \uc720\ud615\uc774 \ub2e4\ub978 \uac1d\uccb4 \uc720\ud615 \ub0b4\uc5d0 \uc911\ucca9\ub418\uc5b4\uc788\ub294 \uad00\uacc4\ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class UserSerializer(serializers.Serializer): email = serializers.EmailField() username = serializers.CharField(max_length=100) class CommentSerializer(serializers.Serializer): user = UserSerializer() content = serializers.CharField(max_length=200) created = serializers.DateTimeField() \uc911\ucca9 \ub41c \ud45c\ud604\uc774 None \uac12\uc744 \uc120\ud0dd\uc801\uc73c\ub85c \ubc1b\uc544 \ub4e4\uc77c \uc218 \uc788\uc73c\uba74 required=False \ud50c\ub798\uadf8\ub97c \uc911\ucca9 \ub41c serializer\uc5d0 \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4. lass CommentSerializer(serializers.Serializer): user = UserSerializer(required=False) # May be an anonymous user. content = serializers.CharField(max_length=200) created = serializers.DateTimeField() \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc911\ucca9 \ud45c\ud604\uc774 \ud56d\ubaa9 \ubaa9\ub85d\uc774\uc5b4\uc57c\ud558\ub294 \uacbd\uc6b0 \uc911\ucca9 \ub41c serializer\uc5d0 many=True \ud50c\ub798\uadf8\ub97c \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4. class CommentSerializer(serializers.Serializer): user = UserSerializer(required=False) edits = EditItemSerializer(many=True) # A nested list of 'edit' items. content = serializers.CharField(max_length=200) created = serializers.DateTimeField() Writable nested representations (\uc4f0\uae30 \uac00\ub2a5\ud55c \uc911\ucca9 \ud45c\ud604) \ub370\uc774\ud130\uc758 deserializer\ub97c \uc9c0\uc6d0\ud558\ub294 \uc911\ucca9 \ub41c \ud45c\ud604\uc744 \ucc98\ub9ac\ud560 \ub54c, \uc911\ucca9 \ub41c \uac1d\uccb4\uc758 \uc624\ub958\ub294 \uc911\ucca9 \ub41c \uac1d\uccb4\uc758 \ud544\ub4dc \uc774\ub984 \uc544\ub798\uc5d0 \uc911\ucca9\ub429\ub2c8\ub2e4. serializer = CommentSerializer(data={'user': {'email': 'foobar', 'username': 'doe'}, 'content': 'baz'}) serializer.is_valid() # False serializer.errors # {'user': {'email': [u'Enter a valid e-mail address.']}, 'created': [u'This field is required.']} \ube44\uc2b7\ud558\uac8c, .validated_data \uc18d\uc131\uc740 \uc911\ucca9 \ub41c \ub370\uc774\ud130 \uad6c\uc870\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. \uc911\ucca9 \ub41c \ud45c\ud604\uc744 \uc704\ud55c .create() \uba54\uc18c\ub4dc \uc791\uc131\ud558\uae30 \uc4f0\uae30 \uac00\ub2a5\ud55c \uc911\ucca9 \ud45c\ud604\uc744 \uc9c0\uc6d0\ud558\ub824\uba74 \uc5ec\ub7ec \uac1d\uccb4\ub97c \uc800\uc7a5\ud558\ub294 .create() \ub610\ub294 .update() \uba54\uc18c\ub4dc\ub97c \uc791\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \ub2e4\uc74c \uc608\uc81c\ub294 \uc911\ucca9 \ub41c \ud504\ub85c\ud544 \uac1d\uccb4\uac00 \uc788\ub294 \uc0ac\uc6a9\uc790 \ub9cc\ub4e4\uae30\ub97c \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. class UserSerializer(serializers.ModelSerializer): profile = ProfileSerializer() class Meta: model = User fields = ('username', 'email', 'profile') def create(self, validated_data): profile_data = validated_data.pop('profile') user = User.objects.create(**validated_data) Profile.objects.create(user=user, **profile_data) return user \uc911\ucca9 \ub41c \ud45c\ud604\uc744 \uc704\ud574 .update() \uba54\uc18c\ub4dc \uc791\uc131\ud558\uae30 \uc5c5\ub370\uc774\ud2b8\uc758 \uacbd\uc6b0, \uad00\uacc4 \uc5c5\ub370\uc774\ud2b8\ub97c \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc2e0\uc911\ud558\uac8c \uc0dd\uac01\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uad00\uacc4\uc5d0 \ub300\ud55c \ub370\uc774\ud130\uac00 \uc5c6\uac70\ub098 \uc81c\uacf5\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc5b4\ub5a4 \uc77c\uc774 \uc77c\uc5b4\ub098\uc57c \ud560\uae4c\uc694? \uad00\uacc4\ub97c \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c NULL \ub85c \uc124\uc815\ud558\uc138\uc694. \uc5f0\uad00\ub41c \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ad\uc81c\ud558\uc138\uc694. \ub370\uc774\ud130\ub97c \ubb34\uc2dc\ud558\uace0 \uc778\uc2a4\ud134\uc2a4\ub97c \uc788\ub294 \uadf8\ub300\ub85c \ub450\uc138\uc694. \uc720\ud6a8\uc131 \uac80\uc99d \uc624\ub958\ub97c \ubc1c\uc0dd\uc2dc\ud0a4\uc138\uc694. \ub2e4\uc74c\uc740 \uc774\uc804 UserSerializer \ud074\ub798\uc2a4\uc758 update() \uba54\uc18c\ub4dc \uc608\uc81c\uc785\ub2c8\ub2e4. def update(self, instance, validated_data): profile_data = validated_data.pop('profile') # Unless the application properly enforces that this field is # always set, the follow could raise a `DoesNotExist`, which # would need to be handled. profile = instance.profile instance.username = validated_data.get('username', instance.username) instance.email = validated_data.get('email', instance.email) instance.save() profile.is_premium_member = profile_data.get( 'is_premium_member', profile.is_premium_member ) profile.has_support_contract = profile_data.get( 'has_support_contract', profile.has_support_contract ) profile.save() return instance \uc911\ucca9 \ub41c \uc0dd\uc131 \ubc0f \uc5c5\ub370\uc774\ud2b8\uc758 \ub3d9\uc791\uc774 \uc560\ub9e4\ud560 \uc218 \uc788\uace0, \uad00\ub828 \ubaa8\ub378\uac04\uc5d0 \ubcf5\uc7a1\ud55c \uc885\uc18d\uc131\uc774 \ud544\uc694\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 REST \ud504\ub808\uc784\uc6cc\ud06c3 \uc5d0\uc11c\ub294 \uc774\ub7ec\ud55c \uba54\uc11c\ub4dc\ub97c \ud56d\uc0c1 \uba85\uc2dc\uc801\uc744 \uc791\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc744 ModelSerializer , .create() , .update() \uba54\uc18c\ub4dc\ub294 \uc4f0\uae30 \uac00\ub2a5\ud55c \uc911\ucca9 \ud45c\ud604\ub370 \ub300\ud55c \uc9c0\uc6d0\uc744 \ud3ec\ud568\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc790\ub3d9\uc73c\ub85c \uae30\uc785 \uac00\ub2a5\ud55c \uc911\ucca9 \ud45c\ud604\uc758 \uc77c\ubd80\ub97c \uc11c\ud3ec\ud2b8\ud558\ub294 \ud328\ud0a4\uc9c0\uac00 3.1 \ub9b4\ub9ac\uc2a4\uc640 \ud568\uaed8 \ub9b4\ub9ac\uc2a4 \ub420 \uac00\ub2a5\uc131\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub378 \uad00\ub9ac\uc790 \ud074\ub798\uc2a4\uc5d0\uc11c \uad00\ub828 \uc778\uc2a4\ud134\uc2a4 \uc800\uc7a5 \ucc98\ub9ac serializer\uc5d0 \uc5ec\ub7ec \uad00\ub828 \uc778\uc2a4\ud134\uc2a4\ub97c \uc800\uc7a5\ud558\ub294 \ub300\uc2e0 \uc62c\ubc14\ub978 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\ub294 custom \ubaa8\ub378 \uad00\ub9ac\uc790 \ud074\ub798\uc2a4\ub97c \uc791\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, User \uc778\uc2a4\ud134\uc2a4\uc640 Profile \uc778\uc2a4\ud134\uc2a4\uac00 \ud56d\uc0c1 \uc30d\uc73c\ub85c \ud568\uaed8 \uc0dd\uc131\ub418\ub3c4\ub85d\ud558\uace0 \ud558\uace0 \uc2f6\ub2e4\uace0 \uac00\uc815\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc774 custom \ub9e4\ub2c8\uc800 \ud074\ub798\uc2a4\ub97c \uc791\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class UserManager(models.Manager): ... def create(self, username, email, is_premium_member=False, has_support_contract=False): user = User(username=username, email=email) user.save() profile = Profile( user=user, is_premium_member=is_premium_member, has_support_contract=has_support_contract ) profile.save() return user \uc774 \uad00\ub9ac\uc790 \ud074\ub798\uc2a4\ub294 \uc774\uc81c \uc804\ubcf4\ub2e4 \ud6cc\ub96d\ud558\uac8c \uc0ac\uc6a9\uc790 \uc778\uc2a4\ud134\uc2a4\uc640 \ud504\ub85c\ud544 \uc778\uc2a4\ud134\uc2a4\uac00 \ud56d\uc0c1 \ub3d9\uc2dc\uc5d0 \uc0dd\uc131\ub41c\ub2e4\ub294 \uc0ac\uc2e4\uc744 \ucea1\uc290\ud654\ud569\ub2c8\ub2e4. serializer \ud074\ub798\uc2a4\uc758 .create() \uba54\uc11c\ub4dc\ub97c \uc0c8 \uad00\ub9ac\uc790 \ub9e4\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ub2e4\uc2dc \uc791\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. def create(self, validated_data): return User.objects.create( username=validated_data['username'], email=validated_data['email'] is_premium_member=validated_data['profile']['is_premium_member'] has_support_contract=validated_data['profile']['has_support_contract'] ) \uc774 \uc811\uadfc\ubc95\uc5d0 \ub300\ud55c \ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 model managers \uc640 this blogpost on using model and manager classes \uc744 \ucc38\uc870\ud558\uc138\uc694. Dealing with multiple objects Serializer \ud074\ub798\uc2a4\ub294 \uac1d\uccb4 \ubaa9\ub85d\uc758 serializer \ub610\ub294 deserializer\ub97c \ucc98\ub9ac \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\ub7ec \uac1d\uccb4 serializer \ub2e8\uc77c \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4 \ub300\uc2e0 \ucffc\ub9ac\uc14b \ub610\ub294 \uac1d\uccb4 \ubaa9\ub85d\uc744 serializer\ud558\ub824\uba74 serializer\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c many=True \ud50c\ub798\uadf8\ub97c \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\ub984 serializer \ud560 \ucffc\ub9ac\uc14b\uc774\ub098 \uac1d\uccb4 \ubaa9\ub85d\uc744 \uc804\ub2ec \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. queryset = Book.objects.all() serializer = BookSerializer(queryset, many=True) serializer.data # [ # {'id': 0, 'title': 'The electric kool-aid acid test', 'author': 'Tom Wolfe'}, # {'id': 1, 'title': 'If this is a man', 'author': 'Primo Levi'}, # {'id': 2, 'title': 'The wind-up bird chronicle', 'author': 'Haruki Murakami'} # ] \uc5ec\ub7ec \uac1d\uccb4\ub97c deserializer \uc5ec\ub7ec \uac1d\uccb4\ub97c deserializer\ud654\ud558\ub294 \uae30\ubcf8\ub3d9\uc791\uc740 \uac1d\uccb4 \uc0dd\uc131\uc744 \uc9c0\uc6d0\ud558\uc9c0\ub9cc \uc5ec\ub7ec \uac1d\uccb4 \uc5c5\ub370\uc774\ud2b8\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uacbd\uc6b0 \uc911 \ud558\ub098\ub97c \uc9c0\uc6d0\ud558\uac70\ub098 \uc0ac\uc6a9\uc790 \uc9c0\uc815\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c\ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 ListSerializer \ub97c \ucc38\uc870\ud558\uc138\uc694. Including extra context (\ucd94\uac00 \ubb38\ub9e5 \ud3ec\ud568) serializer\ub418\uace0 \uc788\ub294 \uac1d\uccb4\uc5d0 \ucd94\uac00\ub85c, serializer\uc5d0 \uc5ec\ubd84\uc758 \ubb38\ub9e5\uc744 \uc81c\uacf5 \ud560 \ud544\uc694\uac00 \uc774\ub294 \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ud55c \uac00\uc9c0 \uc77c\ubc18\uc801\uc778 \uacbd\uc6b0\ub294 \ud558\uc774\ud37c\ub9c1\ud06c \ub41c \uad00\uacc4\ub97c \ud3ec\ud568\ud558\ub294 serializer\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc774\uba70, serializer\uac00 \ud604\uc7ac \uc694\uccad\uc5d0 \uc561\uc11c\uc2a4\ud558\uc5ec \uc815\uaddc\ud654 \ub41c URL\uc744 \uc81c\ub300\ub85c \uc0dd\uc131 \ud560 \uc218 \uc788\uc5b4\uc57c\ud569\ub2c8\ub2e4. serializer\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c \ucee8\ud14d\uc2a4\ud2b8 \uc778\uc218\ub97c \uc804\ub2ec\ud558\uc5ec \uc784\uc758\uc758 \ucd94\uac00 \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc81c\uacf5 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: serializer = AccountSerializer(account, context={'request': request}) serializer.data # {'id': 6, 'owner': u'denvercoder9', 'created': datetime.datetime(2013, 2, 12, 09, 44, 56, 678870), 'details': 'http://example.com/accounts/6/details'} \ucee8\ud14d\uc2a4\ub4dc dict\uc740 \uc0ac\uc6a9\uc790 \uc815\uc758 .to_representation() \uba54\uc18c\ub4dc\uc640 \uac19\uc740 serializer \ud544\ub4dc \ub85c\uc9c1 \ub0b4\uc5d0\uc11c self.context \uc18d\uc131\uc5d0 \uc561\uc11c\uc2a4\ud558\uc5ec \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ModelSerializer \uc885\uc885 Django \ubaa8\ub378 \uc815\uc758\uc640 \ubc00\uc811\ud558\uac8c \ub9e4\ud551\ub418\ub294 serializer \ud074\ub798\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. ModelSerializer \ud074\ub798\uc2a4\ub294 \ubaa8\ub378 \ud544\ub4dc\uc5d0 \ud574\ub2f9\ud558\ub294 \ud544\ub4dc\uac00 \uc788\ub294 Serializer \ud074\ub798\uc2a4\ub97c \uc790\ub3d9\uc744 \ub9cc\ub4e4 \uc218 \uc788\ub294 \uc9c0\ub984\uae38\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. ModelSerializer \ud074\ub798\uc2a4\ub294 \ub2e4\uc74c\uc744 \uc81c\uc678\ud558\uace0\ub294 \uc77c\ubc18 Serializer \ud074\ub798\uc2a4\uc640 \ub3d9\uc77c\ud569\ub2c8\ub2e4. \ubaa8\ub378\uc744 \uae30\ubc18\uc73c\ub85c \uc77c\ub828\uc758 \ud544\ub4dc\uac00 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub429\ub2c8\ub2e4. unique_together validator\uc640 \uac19\uc740 serializer\uc5d0 \ub300\ud55c validator\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud569\ub2c8\ub2e4. .create() \uc640 .update() \uc758 \uac04\ub2e8\ud55c \uae30\ubcf8 \uad6c\ud604\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. ModelSerializer \uc120\uc5b8\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. class AccountSerializer(serializers.ModelSerializer): class Meta: model = Account fields = ('id', 'account_name', 'users', 'created') \uae30\ubcf8\uc801\uc73c\ub85c \ud074\ub798\uc2a4\uc758 \ubaa8\ub4e0 \ubaa8\ub378 \ud544\ub4dc\ub294 \ud574\ub2f9 serializer \ud544\ub4dc\uc5d0 \ub9e4\ud551\ub429\ub2c8\ub2e4. \ubaa8\ub378\uc758 \uc678\ub798 \ud0a4\uc640 \uac19\uc740 \uad00\uacc4\ub294 PrimaryKeyRelatedField \uc5d0 \ub9e4\ud551\ub429\ub2c8\ub2e4. \uc5ed\uc9c1\ub82c\ud654 \uad00\uacc4 \ubb38\uc11c \uc5d0 \uba85\uc2dc\ub41c\ub300\ub85c \uba85\uc2dd\uc801\uc73c\ub85c \ud3ec\ud568\ub418\uc9c0 \uc54a\uc73c\uba74 \uae30\ubcf8\uc801\uc73c\ub85c \uc5ed\uad00\uacc4\uac00 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Inspecting a ModelSerializer ( ModelSerializer \uc744 \uac80\uc0ac) Serializer \ud074\ub798\uc2a4\ub294 \uc720\uc6a9\ud55c \ud544\ub4dc \ud45c\ud604 \ubb38\uc790\uc5f4\uc744 \uc0dd\uc131\ud558\ubbc0\ub85c, \ud544\ub4dc\uc758 \uc0c1\ud0dc\ub97c \uc644\uc804\ud788 \uac80\uc0ac \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub418\ub294 \ud544\ub4dc \ubc0f \uc720\ud6a8\uc131 \uac80\uc0ac\uae30\ub4e4\uc744 \uacb0\uc815\ud558\ub824\ub294 ModelSerializer \ub85c \uc791\uc5c5 \ud560 \ub54c \ud2b9\ud788 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\ub824\uba74, Django \uc258\uc744 \uc5f4\uc5b4\uc11c serializer \ud074\ub798\uc2a4\ub97c \uac00\uc838\uc640\uc11c \uc778\uc2a4\ud134\uc2a4\ud654\ud558\uace0, \uac1d\uccb4 \ud45c\ud604\uc744 \ucd9c\ub825\ud558\uc138\uc694. >>> from myapp.serializers import AccountSerializer >>> serializer = AccountSerializer() >>> print(repr(serializer)) AccountSerializer(): id = IntegerField(label='ID', read_only=True) name = CharField(allow_blank=True, max_length=100, required=False) owner = PrimaryKeyRelatedField(queryset=User.objects.all()) Specifying which fields to include (\ud3ec\ud568 \ud560 \ud544\ub4dc \uc9c0\uc815) \uae30\ubcf8 \ud544\ub4dc\uc758 \ud558\uc704 \uc9d1\ud569\uc744 \ubaa8\ub378 serializer\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0 ModelForm \uc5d0\uc11c\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 \uc635\uc158\uc744 \uc81c\uc678\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. fields \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec serializer\ud574\uc57c\ud558\ub294 \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c\ud558\uba74 \ubaa8\ub378\uc774 \ubcc0\uacbd \ub420 \ub54c \uc2e4\uc218\ub85c \ub370\uc774\ud130\uac00 \ub178\ucd9c \ub420 \uac00\ub2a5\uc131\uc774 \uc904\uc5b4 \ub4ed\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class AccountSerializer(serializers.ModelSerializer): class Meta: model = Account fields = ('id', 'account_name', 'users', 'created') \ub610\ud55c fields \uc18d\uc131\uc744 \ud2b9\uc218 \uac12 '__all__' \uc73c\ub85c \uc124\uc815\ud558\uc5ec \ubaa8\ub378\uc758 \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc57c \ud568\uc744 \ub098\ud0c0\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub4e4 \ub4e4\uba74: class AccountSerializer(serializers.ModelSerializer): class Meta: model = Account fields = '__all__' serializer\uc5d0\uc11c \uc81c\uc678 \ud560 \ud544\ub4dc \ubaa9\ub85d\uc5d0 exclude \uc18d\uc131\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class AccountSerializer(serializers.ModelSerializer): class Meta: model = Account exclude = ('users',) \uc704\uc758 \uc608\uc5d0\uc11c \uacc4\uc815 \ubaa8\ub378\uc5d0 account_name , users , created \ud544\ub4dc\uac00 3\uac1c \uc788\ub294 \uacbd\uc6b0, account_name \ud544\ub4dc\uac00 \ub9cc\ub4e4\uc5b4\uc9c0\uace0 serializer\ub418\ub3c4\ub85d \uc0dd\uc131\ub429\ub2c8\ub2e4. \ud544\ub4dc \ubc0f \uc81c\uc678 \uc18d\uc131\uc758 \uc774\ub984\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \ubaa8\ub378 \ud074\ub798\uc2a4\uc758 \ubaa8\ub378 \ud544\ub4dc\uc5d0 \ub9e4\ud551\ub429\ub2c8\ub2e4. \ub610\ub294 \ud544\ub4dc \uc635\uc158\uc758 \uc774\ub984\uc740 \ubaa8\ub378 \ud074\ub798\uc2a4\uc5d0 \uc874\uc7ac\ud558\ub294 \uc778\uc218\ub97c \ucde8\ud558\uc9c0 \uc54a\ub294 \uc18d\uc131\uc774\ub098 \uba54\uc11c\ub4dc\uc5d0 \ub9e4\ud551 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Specifying nested serialization (\uc911\ucca9 \ub41c serializer \uc9c0\uc815) \uae30\ubcf8 ModelSerializer \ub294 \uad00\uacc4\uc5d0 \uae30\ubcf8 \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc depth \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc911\ucca9 \ub41c \ud45c\ud604\uc744 \uc27d\uac8c \uc0dd\uc131 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. class AccountSerializer(serializers.ModelSerializer): class Meta: model = Account fields = ('id', 'account_name', 'users', 'created') depth = 1 depth \uc635\uc158\uc740 flat \ud45c\ud604\uc73c\ub85c \ub418\ub3cc\ub9ac\uae30 \uc804\uc5d0 \ud0d0\uc0c9\ud574\uc57c\ud558\ub294 \uad00\uacc4\uc758 \uae4a\uc774\ub97c \ub098\ud0c0\ub0b4\ub294 \uc815\uc218 \uac12\uc73c\ub85c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. serializer\uac00 \uc218\ud589\ub418\ub294 \ubc29\uc2dd\uc744 \uc0ac\uc6a9\uc790 \uc815\uc758\ud558\ub824\uba74 \ud544\ub4dc\ub97c \uc9c1\uc811 \uc815\uc758\ud574\uc57c\ud569\ub2c8\ub2e4. Specifying fields explicitly (\uba85\uc2dc\uc801\uc73c\ub85c \ud544\ub4dc \uc9c0\uc815\ud558\uae30) ModelSerializer \uc5d0 \ucd94\uac00 \ud544\ub4dc\ub97c \ucd94\uac00\ud558\uac70\ub098 Serializer \ud074\ub798\uc2a4\uc5d0\uc11c\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud074\ub798\uc2a4\uc758 \ud544\ub4dc\ub97c \uc120\uc5b8\ud558\uc5ec \uae30\ubcf8 \ud544\ub4dc\ub97c \uc7ac\uc815\uc758 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class AccountSerializer(serializers.ModelSerializer): url = serializers.CharField(source='get_absolute_url', read_only=True) groups = serializers.PrimaryKeyRelatedField(many=True) class Meta: model = Account \ucd94\uac00 \ud544\ub4dc\ub294 \ubaa8\ub378\uc758 \ubaa8\ub4e0 \uc18d\uc131 \ub610\ub294 \ud638\ucd9c \uac00\ub2a5 \ud56d\ubaa9\uc5d0 \ud574\ub2f9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Specifying read only fields (\uc77d\uae30 \uc804\uc6a9 \ud544\ub4dc \uc9c0\uc815\ud558\uae30) \uc5ec\ub7ec \ud544\ub4dc\ub97c \uc77d\uae30 \uc804\uc6a9\uc73c\ub85c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \ud544\ub4dc\ub294 read_only=True \ud2b9\uc131\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \ucd94\uac00\ud558\ub294 \ub300\uc2e0, \ubc14\ub85c\uac00\uae30 \uba54\ud0c0 \uc635\uc158\uc778 read_only_fields \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc635\uc158\uc740 \ud544\ub4dc \uc774\ub984\uc758 \ubaa9\ub85d\uc774\ub098 \ud29c\ud50c\uc774\uc5b4\uc57c\ud558\uba70 \ub2e4\uc74c\uacfc \uac19\uc774 \uc120\uc5b8\ub429\ub2c8\ub2e4. class AccountSerializer(serializers.ModelSerializer): class Meta: model = Account fields = ('id', 'account_name', 'users', 'created') read_only_fields = ('account_name',) editable=False set\uacfc AutoField \ud544\ub4dc\uac00 \uc788\ub294 \ubaa8\ub378 \ud544\ub4dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc77d\uae30 \uc804\uc6a9\uc73c\ub85c \uc124\uc815\ub418\uba70, read_only_fields \uc635\uc158\uc5d0 \ucd94\uac00 \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. Note : \uc77d\uae30 \uc804\uc6a9 \ud544\ub4dc\uac00 \ubaa8\ub378 \uc218\uc900\uc5d0\uc11c unique_together \uc81c\uc57d \uc870\uac74\uc758 \uc77c\ubd80\uc778 \ud2b9\ubcc4\ud55c \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \ud544\ub4dc\ub294 \uc81c\uc57d \uc870\uac74\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud558\uae30 \uc704\ud574 serializer \ud074\ub798\uc2a4\uc5d0\uc11c \ud544\uc694\ud558\uc9c0\ub9cc \uc0ac\uc6a9\uc790\uac00 \ud3b8\uc9d1\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc57c\ud569\ub2c8\ub2e4. \uc774\ub97c \ucc98\ub9ac\ud558\ub294 \uc62c\ubc14\ub978 \ubc29\ubc95\uc740 read_only=True \uc640 default=... \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \uc81c\uacf5\ud558\uc5ec serializer\uc5d0\uc11c \ud544\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ud55c\uac00\uc9c0 \uc608\ub294 \ud604\uc7ac \uc778\uc99d \ub41c \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \uc77d\uae30 \uc804\uc6a9 \uad00\uacc4\uc774\uba70\ub2e4\ub978 \uc2dd\ubcc4\uc790\uc640 \uace0\uc720\ud569\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \uc0ac\uc6a9\uc790 \ud544\ub4dc\ub97c \ub2e4\uc74c\uacfc \uac19\uc774 \uc120\uc5b8\ud569\ub2c8\ub2e4. user = serializers.PrimaryKeyRelatedField(read_only=True, default=serializers.CurrentUserDefault()) \ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud558\uc138\uc694.. Validators Documentation , UniqueTogetherValidator , CurrentUserDefault Additional keyword arguments (\ucd94\uac00 \ud0a4\uc6cc\ub4dc \uc778\uc218) \ub610\ud55c extra_kwargs \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud544\ub4dc\uc5d0 \uc784\uc758\uc758 \ucd94\uac00 \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\ub294 \ub2e8\ucd95\ud0a4\uac00 \uc788\uc2b5\ub2c8\ub2e4. read_only_fields \uc758 \uacbd\uc6b0\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c, \uc774\uac83\uc740 serializer\uc5d0\uc11c \ud544\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc120\uc5b8 \ud560 \ud544\uc694\uac00 \uc5c6\uc74c\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \uc774 \uc635\uc158\uc740 \ud544\ub4dc \uc774\ub984\uc744 \ud0a4\uc6cc\ub4dc \uc778\uc218 dict\uc5d0 \ub9e4\ud551\ud558\ub294 dict\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74: class CreateUserSerializer(serializers.ModelSerializer): class Meta: model = User fields = ('email', 'username', 'password') extra_kwargs = {'password': {'write_only': True}} def create(self, validated_data): user = User( email=validated_data['email'], username=validated_data['username'] ) user.set_password(validated_data['password']) user.save() return user Relational fields \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\ub97c serializer \ud560 \ub54c \uad00\uacc4\ub97c \ub098\ud0c0\ub0b4\uae30 \uc704\ud574 \uc120\ud0dd\ud560 \uc218 \uc788\ub294 \uc5ec\ub7ec \ubc29\ubc95\ub4e4\uc774 \uc788\uc2b5\ub2c8\ub2e4. ModelSerializer \uc758 \uae30\ubcf8 \ud45c\ud604\uc740 \uad00\ub828 \uc778\uc2a4\ud134\uc2a4\uc758 \uae30\ubcf8 \ud0a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub2e4\ub978 \ud45c\ud604\uc740 \ud558\uc774\ud37c\ub9c1\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec serializer, \uc644\uc804\ud55c \uc911\ucca9 \ud45c\ud604\uc744 serializer,\uc0ac\uc6a9\uc790 \uc815\uc758 \ud45c\ud604\uc744 \uc0ac\uc6a9\ud558\uc5ec serializer\ud558\ub294 \uac83\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 serializer relations \ucc38\uc870\ud558\uc138\uc694. Customizing field mappings (\uc0ac\uc6a9\uc790 \uc815\uc758 \ud544\ub4dc \ub9e4\ud551) ModelSerializer \ud074\ub798\uc2a4\ub294 serializer\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c serializer \ud544\ub4dc\uac00 \uc790\ub3d9\uc73c\ub85c \uacb0\uc815\ub418\ub294 \ubc29\uc2dd\uc744 \ubcc0\uacbd\ud558\uae30 \uc704\ud574 \uc7ac\uc815\uc758 \ud560 \uc218 \uc788\ub294 API\ub3c4 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c ModelSerializer\uac00 \uae30\ubcf8\uc801\uc73c\ub85c \ud544\uc694\ud55c \ud544\ub4dc\ub97c \uc0dd\uc131\ud558\uc9c0 \uc54a\uc73c\uba74 \ud074\ub798\uc2a4\uc5d0 \uba85\uc2dc\uc801\uc73c\ub85c \ucd94\uac00\ud558\uac70\ub098 \ub300\uc2e0 \uc77c\ubc18 Serializer\ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uacbd\uc6b0\uc5d0 \ub530\ub77c \ud2b9\uc815 \ubaa8\ub378\uc5d0 \ub300\ud574 serializer \ud544\ub4dc\uac00 \uc0dd\uc131\ub418\ub294 \ubc29\uc2dd\uc744 \uc815\uc758\ud558\ub294 \uc0c8 \uae30\ubcf8 \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. .serializer_field_mapping Django \ubaa8\ub378 \ud074\ub798\uc2a4\uc640 REST \ud504\ub808\uc784\uc6cc\ud06c serializer \ud074\ub798\uc2a4\uc758 \ub9e4\ud551. \uc774 \ub9f5\ud551\uc744 \uacb9\uccd0 \uc4f0\uba74 \uac01 \ubaa8\ub378 \ud074\ub798\uc2a4\uc5d0 \uc0ac\uc6a9\ud574\ub7b4 \ud558\ub294 \uae30\ubcf8 serializer \ud074\ub798\uc2a4\ub97c \ubcc0\uacbd \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. .serializer_related_field \uc774 \uc18d\uc131\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \uad00\uacc4\ud615 \ud544\ub4dc\uc5d0 \uc0ac\uc6a9\ub418\ub294 serializer \ud544\ub4dc \ud074\ub798\uc2a4\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. ModelSerializer \uc758 \uacbd\uc6b0 \uae30\ubcf8\uac12\uc740 PrimaryKeyRelatedField \uc785\ub2c8\ub2e4. HyperlinkedModelSerializer \uc774 \uae30\ubcf8\uac12\uc774 serializers.HyperlinkedRelatedField \uc785\ub2c8\ub2e4. serializer_url_field serializer\uc758 url \ud544\ub4dc\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 serializer \ud544\ub4dc \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. serializers.HyperlinkedIdentityField \uac00 \uae30\ubcf8\uac12\uc785\ub2c8\ub2e4. serializer_choice_field serializer\uc758 \uc120\ud0dd \ud544\ub4dc\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 serializer \ud544\ub4dc \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. serializers.ChoiceField \uac00 \uae30\ubcf8\uac12\uc785\ub2c8\ub2e4. The field_class and field_kwargs API \ub2e4\uc74c \uba54\uc11c\ub4dc\ub294 serializer\uc5d0 \uc790\ub3d9\uc73c\ub85c \ud3ec\ud568\ub418\uc5b4\uc57c \ud558\ub294 \uac01 \ud544\ub4dc\uc758 \ud074\ub798\uc2a4 \ubc0f \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \uacb0\uc815\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc774 \uba54\uc18c\ub4dc\ub4e4\uc740 \uac01\uac01 (field_class, field_kwargs) \uc758 \ub450 \ud29c\ud50c\uc744 \ub9ac\ud134\ud574\uc57c\ud569\ub2c8\ub2e4. .build_standard_field(self, field_name, model_field) \ud45c\uc900 \ubaa8\ub378 \ud544\ub4dc\uc5d0 \ub9e4\ud551\ub418\ub294 serializer \ud544\ub4dc\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \ub514\ud3f4\ud2b8\uc758 \uad6c\ud604\uc740 serializer_field_mapping \uc18d\uc131\uc5d0 \uadfc\uac70\ud55c serializer \ud074\ub798\uc2a4\ub97c \ub3cc\ub824\uc90d\ub2c8\ub2e4. .build_relational_field(self, field_name, relation_info) \uad00\uacc4\ud615 \ubaa8\ub378 \ud544\ub4dc\uc5d0 \ub9e4\ud551\ub418\ub294 serializer \ud544\ub4dc\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \ub514\ud3f4\ud2b8\uc758 \u200b\u200b\uad6c\ud604\uc740 serializer_relational_field \uc18d\uc131\uc5d0 \uadfc\uac70\ud55c serializer \ud074\ub798\uc2a4\ub97c \ub3cc\ub824\uc90d\ub2c8\ub2e4. relation_info \uc778\uc218\ub294 \uba85\uba85 \ub41c \ud29c\ud50c\uc774\uba70 model_field , related_model , to_many \ubc0f has_through_model \uc18d\uc131\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. .build_nested_field(self, field_name, relation_info, nested_depth) depth \uc635\uc158\uc774 \uc124\uc815 \ub41c \uacbd\uc6b0, \uad00\uacc4\ud615 \ubaa8\ub378 \ud544\ub4dc\uc5d0 \ub9e4\ud551\ub418\ub294 serializer \ud544\ub4dc\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uae30\ubcf8 \uad6c\ud604\uc740 ModelSerializer \ub610\ub294 HtperlinkedModelSerializer \ub97c \uae30\ubc18\uc73c\ub85c \uc911\ucca9 \ub41c serializer \ud074\ub798\uc2a4\ub97c \ub3d9\uc801\uc73c\ub85c \ub9cc\ub4ed\ub2c8\ub2e4. nested_delth \ub294 depth \uc635\uacac\uc758 \uac12\uc5d0\uc11c 1\uc744 \ube80 \uac12\uc785\ub2c8\ub2e4. relation_info \uc778\uc218\ub294 \uba85\uba85 \ub41c \ud29c\ud50c\uc774\uba70, model_field , related_model , to_many , has_through_model \uc18d\uc131\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. .build_property_field(self, field_name, model_class) \ubaa8\ub378 \ud074\ub798\uc2a4\uc758 \uc18d\uc131 \ub610\ub294 \uc778\uc218\uac00 \uc5c6\ub294 \uba54\uc11c\ub4dc\uc5d0 \ub9e4\ud551\ub418\ub294 serializer \ud544\ub4dc\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uae30\ubcf8 \uad6c\ud604\uc740 readOnlyField \ud074\ub798\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. .build_url_field(self, field_name, model_class) serializer \uc790\uc2e0\uc758 url \ud544\ub4dc\uc5d0 \ub300\ud55c serializer \ud544\ub4dc\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uae30\ubcf8 \uad6c\ud604\uc740 HyperlinkedIdentityField \ud074\ub798\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. .build_unknown_field(self, field_name, model_class) \ud544\ub4dc \uc774\ub984\uc774 \ubaa8\ub378 \ud544\ub4dc \ub610\ub294 \ubaa8\ub378 \uc18d\uc131\uc5d0 \ub9e4\ud551\ub418\uc9c0 \uc54a\uc558\uc744 \ub54c \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc11c\ube0c \ud074\ub798\uc2a4\uc5d0 \uc758\ud574 \uc774 \ub3d9\uc791\uc744 \uc0ac\uc6a9\uc790 \uc815\uc758\ud574\ub3c4, \uae30\ubcf8 \uad6c\ud604\uc5d0\uc11c\ub294 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. HyperlinkedModelSerializer HyperlinkedModelSerializer \ud074\ub798\uc2a4\ub294 \uae30\ubcf8 \ud0a4\uac00 \uc544\ub2cc \uad00\uacc4\ub97c \ub098\ud0c0 \ub0b4\uae30 \uc704\ud574 \ud558\uc774\ud37c \ub9c1\ud06c\ub97c \uc0ac\uc6a9\ud55c\ub2e4\ub294 \uc810\uc744 \uc81c\uc678\ud558\uace0\ub294 ModelSerializer \ud074\ub798\uc2a4\uc640 \uc720\uc0ac\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c serializer\uc5d0\ub294 \uae30\ubcf8 \ud0a4 \ud544\ub4dc \ub300\uc2e0 url \ud544\ub4dc\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. url \ud544\ub4dc\ub294 HyperlinkedIdentityField serializer \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud45c\ud604\ub418\uba70 \ubaa8\ub378\uc758 \ubaa8\ub4e0 \uad00\uacc4\ub294 HyperlinkedRelatedField serializer \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uae30\ubcf8 \ud0a4\ub97c fields \uc635\uc158\uc5d0 \ucd94\uac00\ud558\uc5ec \uba85\uc2dc\uc801\uc73c\ub85c \ud3ec\ud568\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class AccountSerializer(serializers.HyperlinkedModelSerializer): class Meta: model = Account fields = ('url', 'id', 'account_name', 'users', 'created') Absolute and relative URLs HyperlinkedModelSerializer \ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c\ub294 \ud604\uc7ac request \uc744 serializer \ucee8\ud14d\uc2a4\ud2b8\uc5d0 \ud3ec\ud568\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74: serializer = AccountSerializer(queryset, context={'request': request}) \uc774\ub807\uac8c\ud558\uba74 \ud558\uc774\ud37c\ub9c1\ud06c\uc5d0 \uc801\uc808\ud55c \ud638\uc2a4\ud2b8 \uc774\ub984\uc774 \ud3ec\ud568\ub420 \uc218 \uc788\uc73c\ubbc0\ub85c \uacb0\uacfc \ud45c\ud604\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \uc815\uaddc\ud654 \ub41c URL\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. http://api.example.com/accounts/1/ \ub2e4\uc74c\uacfc \uac19\uc740 \uc0c1\ub300 URL\uc774 \uc544\ub2d9\ub2c8\ub2e4. /accounts/1/ \uc0c1\ub300 URL\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 serializer \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c { 'request': None} \uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc804\ub2ec\ud574\uc57c\ud569\ub2c8\ub2e4. How hyperlinked views are determined (\ud558\uc774\ud37c\ub9c1\ud06c\ub85c \uc5f0\uacb0\ub41c \ubdf0\uac00 \uacb0\uc815\ub418\ub294 \ubc29\ubc95) \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ud558\uc774\ud37c\ub9c1\ud06c\ud558\uae30 \uc704\ud574 \uc5b4\ub5a4 \ubdf0\ub97c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294\uc9c0 \uacb0\uc815 \ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \ud558\uc774\ud37c\ub9c1\ud06c\ub294 '{model_name} -detail' \uc2a4\ud0c0\uc77c\uacfc view \uc774\ub984\uacfc \uc77c\uce58\ud574\uc57c\ud558\uba70 pk \ud0a4\uc6cc\ub4dc \uc778\uc218\ub85c \uc778\uc2a4\ud134\uc2a4\ub97c \ucc3e\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc774 extra_kwargs \uc124\uc815\uc5d0\uc11c view_name \uacfc lookup_field \uc635\uc158 \uc911 \ud558\ub098 \ub610\ub294 \ub458 \ubaa8\ub450\ub97c \uc0ac\uc6a9\ud558\uc5ec URL \ud544\ub4dc view \uc774\ub984 \ubc0f \uc870\ud68c \ud544\ub4dc\ub97c \ubb34\uc2dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class AccountSerializer(serializers.HyperlinkedModelSerializer): class Meta: model = Account fields = ('account_url', 'account_name', 'users', 'created') extra_kwargs = { 'url': {'view_name': 'accounts', 'lookup_field': 'account_name'}, 'users': {'lookup_field': 'username'} } \ub610\ub294 serializer\uc5d0\uc11c \ud544\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class AccountSerializer(serializers.HyperlinkedModelSerializer): url = serializers.HyperlinkedIdentityField( view_name='accounts', lookup_field='slug' ) users = serializers.HyperlinkedRelatedField( view_name='user-detail', lookup_field='username', many=True, read_only=True ) class Meta: model = Account fields = ('url', 'account_name', 'users', 'created') tip : \ud558\uc774\ud37c \ub9c1\ud06c\ub85c \ud45c\uc2dc\ub41c \ud45c\ud604\uacfc URL conf\ub97c \uc801\uc808\ud558\uac8c \uc77c\uce58\uc2dc\ud0a4\ub294 \uac83\uc740 \ub54c\ub85c\ub294 \uc57d\uac04\uc758 \uc2e4\uc218 \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. HyperlinkedModelSerializer \uc778\uc2a4\ud134\uc2a4\uc758 repr \uc744 \uc778\uc1c4\ud558\ub294 \uac83\uc740 \uad00\uacc4\uac00 \ub9e4\ud551 \ud560 \uac83\uc73c\ub85c \uc608\uc0c1\ub418\ub294 \ubdf0 \uc774\ub984\uacfc \uc870\ud68c \ud544\ub4dc\ub97c \uc815\ud655\ud558\uac8c \uac80\uc0ac\ud558\ub294 \ub370 \ud2b9\ud788 \uc720\uc6a9\ud569\ub2c8\ub2e4. Changing the URL field name URL \uc785\ub825\ub780\uc758 \uc774\ub984\uc740 'url'\ub85c \uae30\ubcf8 \uc124\uc815\ub429\ub2c8\ub2e4. URL_FIELD_NAME \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec\uc774\ub97c \uc804\uc5ed\uc73c\ub85c \uc7ac\uc815\uc758 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ListSerializer ListSerializer \ud074\ub798\uc2a4\ub294 \uc5ec\ub7ec \uac1c\uccb4\ub97c \ud55c \ubc88\uc5d0 serialize\ud558\uace0 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud558\ub294 \ub3d9\uc791\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c ListSerializer \ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud560 \ud544\uc694\ub294 \uc5c6\uc9c0\ub9cc \ub300\uc2e0 serializer\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c many=True \ub97c \uc804\ub2ec\ud574\uc57c\ud569\ub2c8\ub2e4. serializer\uac00 \uc778\uc2a4\ud134\uc2a4\ud654\ub418\uace0 many=True \uac00 \uc804\ub2ec\ub418\uba74 ListSerializer \uc778\uc2a4\ud134\uc2a4\uac00 \ub9cc\ub4e4\uc5b4\uc9d1\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c serializer \ud074\ub798\uc2a4\ub294 \ubd80\ubaa8 ListSerializer \uc758 \uc790\uc2dd\uc774\ub429\ub2c8\ub2e4. \ub2e4\uc74c \uc778\uc218\ub294 ListSerializer \ud544\ub4dc\ub098 many=True \ub85c \uc804\ub2ec\ub418\ub294 serializer\uc5d0\ub3c4 \uc804\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. allow_empty \uae30\ubcf8\uc801\uc73c\ub85c True \uc774\uc9c0\ub9cc \ube48 \uc785\ub825\uc744 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\uc73c\ub824\uba74 False \ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Customizing ListSerializer behavior ListSerializer \ub3d9\uc791\uc744 \uc0ac\uc6a9\uc790 \uc815\uc758\ud558\ub824\ub294 \uacbd\uc6b0\uac00 \uba87 \uac00\uc9c0 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\uc815 \uc694\uc18c\uac00 \ubaa9\ub85d\uc758 \ub2e4\ub978 \uc694\uc18c\uc640 \ucda9\ub3cc\ud558\uc9c0 \uc54a\ub294\uc9c0 \ud655\uc778\ud558\ub294 \ub4f1 \ubaa9\ub85d\uc758 \ud2b9\uc815 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc81c\uacf5\ud558\ub824\uace0\ud569\ub2c8\ub2e4. \uc5ec\ub7ec \uac1d\uccb4\uc758 \uc791\uc131 \ub610\ub294 \uc5c5\ub370\uc774\ud2b8 \ub3d9\uc791\uc744 \uc0ac\uc6a9\uc790 \uc815\uc758\ud558\ub824\uace0\ud569\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 serializer \uba54\ud0c0 \ud074\ub798\uc2a4\uc5d0\uc11c list_serializer_class \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec many=True \uac00 \uc804\ub2ec \ub420 \ub54c \uc0ac\uc6a9\ub418\ub294 \ud074\ub798\uc2a4\ub97c \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class CustomListSerializer(serializers.ListSerializer): ... class CustomSerializer(serializers.Serializer): ... class Meta: list_serializer_class = CustomListSerializer Customizing multiple create(\uc5ec\ub7ec \uc791\uc131 \uc0ac\uc6a9\uc790 \uc815\uc758) \uc5ec\ub7ec \uac1d\uccb4 \uc0dd\uc131\uc744\uc704\ud55c \uae30\ubcf8 \uad6c\ud604\uc740 \ubaa9\ub85d\uc758 \uac01 \ud56d\ubaa9\uc5d0 \ub300\ud574 .create() \ub97c \ud638\ucd9c\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc744 \uc0ac\uc6a9\uc790 \uc815\uc758\ud558\ub824\uba74 many=True \uac00 \uc804\ub2ec \ub420 \ub54c \uc0ac\uc6a9\ub418\ub294 ListSerializer \ud074\ub798\uc2a4\uc5d0\uc11c .create() \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\uc790 \uc815\uc758\ud574\uc57c\ud569\ub2c8\ub2e4. class BookListSerializer(serializers.ListSerializer): def create(self, validated_data): books = [Book(**item) for item in validated_data] return Book.objects.bulk_create(books) class BookSerializer(serializers.Serializer): ... class Meta: list_serializer_class = BookListSerializer Customizing multiple update(\uc5ec\ub7ec \uc5c5\ub370\uc774\ud2b8 \ub9de\ucda4 \uc124\uc815) \uae30\ubcf8\uc801\uc73c\ub85c ListSerializer \ud074\ub798\uc2a4\ub294 \ub2e4\uc911 \uc5c5\ub370\uc774\ud2b8\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc0bd\uc785 \ubc0f \uc0ad\uc81c\uc5d0 \ub300\ud574 \uc608\uc0c1\ub418\ub294 \ub3d9\uc791\uc774 \ubaa8\ud638\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uc5ec\ub7ec \uc5c5\ub370\uc774\ud2b8\ub97c \uc9c0\uc6d0\ud558\ub824\uba74 \uba85\uc2dc\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud574\uc57c\ud569\ub2c8\ub2e4. \uc5ec\ub7ec \uac1c\uc758 \uc5c5\ub370\uc774\ud2b8 \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \ub54c \ub2e4\uc74c \uc0ac\ud56d\uc744 \uc5fc\ub450\uc5d0 \ub450\uc2ed\uc2dc\uc624. \ub370\uc774\ud130 \ubaa9\ub85d\uc758 \uac01 \ud56d\ubaa9\uc5d0 \ub300\ud574 \uc5b4\ub5a4 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5c5\ub370\uc774\ud2b8\ud574\uc57c\ud558\ub294\uc9c0 \uc5b4\ub5bb\uac8c \uacb0\uc815\ud569\ub2c8\uae4c? \uc0bd\uc785\uc744 \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud574\uc57c\ud569\ub2c8\uae4c? \uadf8\uac83\ub4e4\uc740 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc2b5\ub2c8\uae4c? \uc544\ub2c8\uba74 \uc0c8\ub85c\uc6b4 objects\ub97c \ub9cc\ub4dc\ub098\uc694? \uc81c\uac70\ubb3c\uc740 \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud574\uc57c\ud569\ub2c8\uae4c? \uac1d\uccb4 \uc0ad\uc81c \ub610\ub294 \uad00\uacc4 \uc81c\uac70\ub97c \uc758\ubbf8\ud569\ub2c8\uae4c? \uadf8\ub4e4\uc740 \uc870\uc6a9\ud788 \ubb34\uc2dc\ud574\uc57c\ud569\ub2c8\uae4c, \uc544\ub2c8\uba74 \ubb34\ud6a8\ud569\ub2c8\uae4c? \uc8fc\ubb38\uc740 \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud574\uc57c\ud569\ub2c8\uae4c? \ub450 \ud56d\ubaa9\uc758 \uc704\uce58 \ubcc0\uacbd\uc740 \uc0c1\ud0dc \ubcc0\uacbd\uc744 \uc758\ubbf8\ud569\ub2c8\uae4c \uc544\ub2c8\uba74 \ubb34\uc2dc\ub429\ub2c8\uae4c? \uc778\uc2a4\ud134\uc2a4 serializer\uc5d0 \uba85\uc2dc\uc801\uc73c\ub85c id \ud544\ub4dc\ub97c \ucd94\uac00\ud574\uc57c\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc0dd\uc131\ub41c id \ud544\ub4dc\ub294 read_only \ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uc774\ub85c \uc778\ud574 \uc5c5\ub370\uc774\ud2b8\uc2dc \uc81c\uac70\ub429\ub2c8\ub2e4. \uba85\uc2dc\uc801\uc73c\ub85c \uc120\uc5b8\ud558\uba74 \ubaa9\ub85d serializer\uc758 update \uba54\uc18c\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \uc5ec\ub7ec \uc5c5\ub370\uc774\ud2b8\ub97c \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc608\uc785\ub2c8\ub2e4. class BookListSerializer(serializers.ListSerializer): def update(self, instance, validated_data): # Maps for id->instance and id->data item. book_mapping = {book.id: book for book in instance} data_mapping = {item['id']: item for item in validated_data} # Perform creations and updates. ret = [] for book_id, data in data_mapping.items(): book = book_mapping.get(book_id, None) if book is None: ret.append(self.child.create(data)) else: ret.append(self.child.update(book, data)) # Perform deletions. for book_id, book in book_mapping.items(): if book_id not in data_mapping: book.delete() return ret class BookSerializer(serializers.Serializer): # We need to identify elements in the list using their primary key, # so use a writable field here, rather than the default which would be read-only. id = serializers.IntegerField() ... id = serializers.IntegerField(required=False) class Meta: list_serializer_class = BookListSerializer REST \ud504\ub808\uc784\uc6cc\ud06c2\uc5d0 \uc788\ub294 allow_add_remove \ub3d9\uc791\uacfc \uc720\uc0ac\ud55c \uc5c5\ub370\uc774\ud2b8 \uc791\uc5c5\uc5d0 \ub300\ud55c \uac83\uc740 3.1 \ub9b4\ub9ac\uc2a4\uc5d0 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Customizing ListSerializer initialization (ListSerializer \ucd08\uae30\ud654 \uc0ac\uc6a9\uc790 \uc815\uc758) many=True \uac00 \uc788\ub294 serializer\uac00 \uc778\uc2a4\ud134\uc2a4\ud654\ub418\uba74 \uc790\uc2dd serializer \ud074\ub798\uc2a4\uc640 \uc0c1\uc704 ListSerializer \ud074\ub798\uc2a4 \ubaa8\ub450\uc5d0 \ub300\ud574 .__ init __() \uba54\uc11c\ub4dc\uc5d0 \uc804\ub2ec\ud560 \uc778\uc218 \ubc0f \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \uacb0\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. \ub514\ud3f4\ud2b8\uc758 \u200b\u200b\uad6c\ud604\uc740, validator \ub97c \uc81c\uc678 \ud574, \uc591\ucabd \ubaa8\ub450\uc758 \ud074\ub798\uc2a4\uc5d0 \ubaa8\ub4e0 \uc778\uc218\ub97c \uac74\ub124\uc8fc\ub294 \uac83\uc785\ub2c8\ub2e4. \uc591\ucabd \ubaa8\ub450\ub294 customizer \ud0a4\uc6cc\ub4dc\uc758 \uc778\uc218\uc785\ub2c8\ub2e4. \uc591\ucabd \ubaa8\ub450, \uc544\uc774\ub514 serializer \ud074\ub798\uc2a4\ub97c \ub300\uc0c1\uc73c\ub85c\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub54c\ub54c\ub85c many=True \uac00 \uc804\ub2ec \ub420 \ub54c \ud558\uc704 \ud074\ub798\uc2a4\uc640 \ubd80\ubaa8 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ud654 \ubc29\ubc95\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. many_init \ud074\ub798\uc2a4 \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 \uadf8\ub807\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. @classmethod def many_init(cls, *args, **kwargs): # Instantiate the child serializer. kwargs['child'] = cls() # Instantiate the parent list serializer. return CustomListSerializer(*args, **kwargs) BaseSerializer BaseSerializer \ub294 serializer\uc640 deserializer \uc2a4\ud0c0\uc77c\uc744 \uc27d\uac8c \uc9c0\uc6d0\ud558\ub294\ub370 \uc0ac\uc6a9\ud560\uc218 \uc788\ub294 \ub300\uc548\uc785\ub2c8\ub2e4. \uc774 \ud074\ub798\uc2a4\ub294 Serializer \ud074\ub798\uc2a4\uc640 \uac19\uc740 \uae30\ubcf8 API\ub97c \uad6c\ud604\ud569\ub2c8\ub2e4. .date - \ubc1c\uc2e0 \uae30\ubcf4 \ud45c\ud604\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. .is_valid() - \ub4e4\uc5b4\uc624\ub294 \ub370\uc774\ud130\ub97c serializer \ud574\uc81c\uc640 \uac80\uc99d\ud569\ub2c8\ub2e4. .validated_data - \uac80\uc99d \ub41c \uc218\uc2e0 \ub370\uc774\ud130\ub97c \ub9ac\ud134\ud569\ub2c8\ub2e4. .errors - \uac80\uc99d \uc911\uc5d0 \uc5d0\ub7ec\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. .save() - \uac80\uc99d \ub41c \ub370\uc774\ud130\ub97c \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4. serializer \ud074\ub798\uc2a4\uc5d0\uc11c \uc9c0\uc6d0\ud560 \uae30\ub2a5\uc5d0 \ub530\ub77c \ubb34\uc2dc\ud560 \uc218\uc788\ub294 \ub124 \uac00\uc9c0 \uba54\uc11c\ub4dc\uac00 \uc788\uc2b5\ub2c8\ub2e4. .to_representation() - \uc77d\uae30 \uc870\uc791\uc744 \uc704\ud574 serializer\ub97c \uc9c0\uc6d0\ud558\ub824\uba74 \uc774\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc138\uc694. .to_internal_value() - \uc4f0\uae30 \uc870\uc791\uc744 \uc704\ud574 deserializer\ub97c \uc9c0\uc6d0\ud558\ub824\uba74 \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc138\uc694. .create() , .update() - \uc778\uc2a4\ud134\uc2a4 \uc800\uc7a5\uc744 \uc9c0\uc6d0\ud558\uae30 \uc704\ud574 \uc774\ub4e4 \uc911 \ud558\ub098\ub098 \ub458\ub2e4 \ubb34\uc2dc\ud558\uc138\uc694. \uc774 \ud074\ub798\uc2a4\ub294 Serializer \ud074\ub798\uc2a4\uc640 \ub3d9\uc77c\ud55c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc81c\uacf5\ud558\uae30 \ub54c\ubb38\uc5d0 \uc77c\ubc18 Serializer \ub610\ub294 ModelSerializer \uc5d0\uc11c \uc0ac\uc6a9\ud558\ub358 \uac83\uacfc \ub611\uac19\uc774 \uae30\uc874 CBV\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. BaseSerializer \ud074\ub798\uc2a4\ub294 browsable API\uc5d0\uc11c HTML \uc591\uc2dd\uc744 \uc0dd\uc131\ud558\uc9c0 \uc54a\ub294\ub2e4\ub294 \uc810\uc5d0\uc11c \uc8fc\ubaa9\ud560 \uac83\uc785\ub2c8\ub2e4. \uc774\ub294 \ubc18\ud658\ud558\ub294 \ub370\uc774\ud130\uc5d0 \uac01 \ud544\ub4dc\ub97c \uc801\uc808\ud55c HTML \uc785\ub825\uc73c\ub85c \ub80c\ub354\ub9c1 \ud560 \uc218 \uc788\ub294 \ubaa8\ub4e0 \ud544\ub4dc \uc815\ubcf4\ub97c \ud3ec\ud568\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. Read-only BaseSerializer classes BaseSerializer \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc77d\uae30 \uc804\uc6a9 serializer\ub97c \uad6c\ud604\ud558\ub824\uba74 .to_representation() \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud574\uc57c\ud569\ub2c8\ub2e4. \uac04\ub2e8\ud55c Django \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\ub294 \uc608\uc81c\ub97c \uc0b4\ud3b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. class HighScore(models.Model): created = models.DateTimeField(auto_now_add=True) player_name = models.CharField(max_length=10) score = models.IntegerField() HighScore \uc778\uc2a4\ud134\uc2a4\ub97c \uc6d0\uc2dc \ub370\uc774\ud130 \uc720\ud615\uc73c\ub85c \ubcc0\ud658\ud558\uae30\uc704\ud55c \uc77d\uae30 \uc804\uc6a9 serializer \ucee8\ubc84\ud130\ub97c \ub9cc\ub4dc\ub294 \uac83\uc740 \uac04\ub2e8\ud569\ub2c8\ub2e4. class HighScoreSerializer(serializers.BaseSerializer): def to_representation(self, obj): return { 'score': obj.score, 'player_name': obj.player_name } \uc774\uc81c \uc774 \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub2e8\uc77c HighScore \uc778\uc2a4\ud134\uc2a4\ub97c serializer \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. @api_view(['GET']) def high_score(request, pk): instance = HighScore.objects.get(pk=pk) serializer = HighScoreSerializer(instance) return Response(serializer.data) \ub610\ub294 \uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5ec\ub7ec \uc778\uc2a4\ud134\uc2a4\ub97c serializer\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. @api_view(['GET']) def all_high_scores(request): queryset = HighScore.objects.order_by('-score') serializer = HighScoreSerializer(queryset, many=True) return Response(serializer.data) Read-write BaseSerializer classes \uc77d\uae30-\uc4f0\uae30 serializer\ub97c \ub9cc\ub4e4\ub824\uba74 \uba3c\uc800 .to_internal_value() \uba54\uc11c\ub4dc\ub97c \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\ub97c \uad6c\uc131\ud558\ub294\ub370 \uc0ac\uc6a9 \ub420 \uc720\ud6a8\uc131\uc774 \uc788\ub294 \uac12\uc744 \ubc18\ud658\ud558\uace0 \uc81c\uacf5\ub41c \ub370\uc774\ud130\uac00 \uc798\ubabb\ub41c \ud615\uc2dd\uc778 \uacbd\uc6b0 ValidationError\ub97c \ubc1c\uc0dd\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. .to_internal_value() \ub97c \uad6c\ud604\ud558\uba74 serializer\uc5d0\uc11c \uae30\ubcf8 \uc720\ud6a8\uc131 \uac80\uc0ac API\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\uba70 .is_valid() , .validated_data \ubc0f .errors \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. .save() \ub3c4 \uc9c0\uc6d0\ud558\ub824\uba74 .create() \ubc0f .update() \uba54\uc18c\ub4dc \uc911 \ud558\ub098 \ub610\ub294 \ubaa8\ub450\ub97c \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \uc77d\uae30-\uc4f0\uae30 \uc791\uc5c5\uc744 \ubaa8\ub450 \uc9c0\uc6d0\ud558\ub3c4\ub85d \uc5c5\ub370\uc774\ud2b8 \ub41c \uc774\uc804\uc758 HighScoreSerializer \uc758 \uc804\uccb4 \uc608\uc81c\uc785\ub2c8\ub2e4. class HighScoreSerializer(serializers.BaseSerializer): def to_internal_value(self, data): score = data.get('score') player_name = data.get('player_name') # Perform the data validation. if not score: raise ValidationError({ 'score': 'This field is required.' }) if not player_name: raise ValidationError({ 'player_name': 'This field is required.' }) if len(player_name) > 10: raise ValidationError({ 'player_name': 'May not be more than 10 characters.' }) # Return the validated values. This will be available as # the `.validated_data` property. return { 'score': int(score), 'player_name': player_name } def to_representation(self, obj): return { 'score': obj.score, 'player_name': obj.player_name } def create(self, validated_data): return HighScore.objects.create(**validated_data) Creating new base classes BaseSerializer \ud074\ub798\uc2a4\ub294 \ud2b9\uc815 serializer \uc2a4\ud0c0\uc77c\uc744 \ucc98\ub9ac\ud558\uac70\ub098 \ub300\uccb4 \uc800\uc7a5 \uc7a5\uce58 \ubc31\uc5d4\ub4dc\uc640 \ud1b5\ud569\ud558\uae30 \uc704\ud574 \uc0c8 generic serializer \ud074\ub798\uc2a4\ub97c \uad6c\ud604\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0\ub3c4 \uc720\uc6a9\ud569\ub2c8\ub2e4. \ub2e4\uc74c \ud074\ub798\uc2a4\ub294 \uc784\uc758\uc758 \uac1d\uccb4\ub97c \uae30\ubcf8 \uc790\ub8cc\ud615\uc73c\ub85c \uac15\uc81c \ubcc0\ud658 \ud560 \uc218 \uc788\ub294 \uc77c\ubc18 serializer \ucee8\ubc84\ud130\uc758 \uc608\uc785\ub2c8\ub2e4. class ObjectSerializer(serializers.BaseSerializer): \"\"\" A read-only serializer that coerces arbitrary complex objects into primitive representations. \"\"\" def to_representation(self, obj): for attribute_name in dir(obj): attribute = getattr(obj, attribute_name) if attribute_name('_'): # Ignore private attributes. pass elif hasattr(attribute, '__call__'): # Ignore methods and other callables. pass elif isinstance(attribute, (str, int, bool, float, type(None))): # Primitive types can be passed through unmodified. output[attribute_name] = attribute elif isinstance(attribute, list): # Recursively deal with items in lists. output[attribute_name] = [ self.to_representation(item) for item in attribute ] elif isinstance(attribute, dict): # Recursively deal with items in dictionaries. output[attribute_name] = { str(key): self.to_representation(value) for key, value in attribute.items() } else: # Force anything else to its string representation. output[attribute_name] = str(attribute) Advanced serializer usage (\uace0\uae09 \uc0ac\uc6a9\ubc95) Overriding serialization and deserialization behavior serializer \ud074\ub798\uc2a4\uc758 serialization, deserialization \ub610\ub294 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \ubcc0\uacbd\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 .to_representation() \ub610\ub294 .to_internal_value() \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\ud569\ub2c8\ub2e4. \uc720\uc6a9\ud55c \uc774\uc720\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc0c8\ub85c\uc6b4 serializer \uae30\ubcf8 \ud074\ub798\uc2a4\uc5d0 \ub300\ud55c \uc0c8\ub85c\uc6b4 \ub3d9\uc791\uc744 \ucd94\uac00 \uae30\uc874 \ud074\ub798\uc2a4\uc758 \ub3d9\uc791\uc744 \uc57d\uac04 \uc218\uc815\ud569\ub2c8\ub2e4. \ub9ce\uc740 \uc591\uc758 \ub370\uc774\ud130\ub97c \ubc18\ud658\ud558\uba70 \uc790\uc8fc \uc561\uc11c\uc2a4\ub418\ub294 API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 serializer \uc131\ub2a5 \ud5a5\uc0c1 \uc774 \uba54\uc18c\ub4dc\uc758 \uc11c\uba85\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. .to_representation(self, obj) serializer\uac00 \ud544\uc694\ud55c \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\ub97c \uac00\uc838\uc640\uc11c \uc6d0\uc2dc \ud45c\ud604\uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774\uac83\uc740 \ub0b4\uc7a5 \ud30c\uc774\uc36c \ub370\uc774\ud130 \uc720\ud615\uc758 \uad6c\uc870\ub97c \ubc18\ud658\ud558\ub294 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \ucc98\ub9ac \ud560 \uc218 \uc788\ub294 \uc815\ud655\ud55c \uc720\ud615\uc740 API\uc5d0 \ub300\ud574 \uad6c\uc131\ud55c \ub80c\ub354\ub9c1 \ud074\ub798\uc2a4\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. .to_internal_value(self, data) \uac80\uc99d\ub418\uc9c0 \uc54a\uc740 \ub370\uc774\ud130\ub97c \uc785\ub825 \ubc1b\uc544 serializer.validated_data \ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc720\ud6a8\uc131\uc774 \uac80\uc0ac \ub41c \ub370\uc774\ud130\ub97c \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. serializer \ud074\ub798\uc2a4\uc5d0\uc11c .save() \uac00 \ud638\ucd9c\ub418\uba74 \ubc18\ud658 \uac12\ub3c4 .create() \ub610\ub294 .update() \uba54\uc11c\ub4dc\uc5d0 \uc804\ub2ec\ub429\ub2c8\ub2e4. \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc2e4\ud328\ud558\uba74 \uba54\uc11c\ub4dc\ub294 serializers.ValidationError (\uc624\ub958)\ub97c \ubc1c\uc0dd\uc2dc\ucf1c\uc57c\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc5ec\uae30\uc5d0 \uc788\ub294 errors \uc778\uc218\ub294 \ud544\ub4dc \uc774\ub984\uc744 \uc624\ub958 \uba54\uc138\uc9c0\uc5d0 \ub9e4\ud551\ud558\ub294 dict\uc785\ub2c8\ub2e4. \uc774 \uba54\uc18c\ub4dc\uc5d0 \uc804\ub2ec \ub41c data \uc778\uc218\ub294 \uc77c\ubc18\uc801\uc73c\ub85c request.data \uc758 \uac12\uc774\ubbc0\ub85c, \uc81c\uacf5\ud558\ub294 \ub370\uc774\ud130 \uc720\ud615\uc740 API\uc5d0 \ub300\ud574 \uad6c\uc131\ud55c \ud30c\uc11c \ud074\ub798\uc2a4\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. Serializer Inheritance (\uc0c1\uc18d) Django \ud3fc\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc0c1\uc18d\uc744 \ud1b5\ud574 serializer\ub97c \ud655\uc7a5\ud558\uace0 \ub2e4\uc2dc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ub9ce\uc740 \uc218\uc758 serializer\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ubd80\ubaa8 \ud074\ub798\uc2a4\uc758 \uacf5\ud1b5 \ud544\ub4dc \ub610\ub294 \uba54\uc11c\ub4dc \uc9d1\ud569\uc744 \uc120\uc5b8 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74: class MyBaseSerializer(Serializer): my_field = serializers.CharField() def validate_my_field(self): ... class MySerializer(MyBaseSerializer): ... Django\uc758 Model \uacfc ModelForm \ud074\ub798\uc2a4\ucc98\ub7fc, serializer\uc758 \ub0b4\ubd80 Meta \ud074\ub798\uc2a4\ub294 \ubd80\ubaa8\uc758 \ub0b4\ubd80 Meta \ud074\ub798\uc2a4\ub97c \uc0c1\uc18d\ubc1b\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Meta \ud074\ub798\uc2a4\uac00 \ubd80\ubaa8 \ud074\ub798\uc2a4\uc5d0\uc11c \uc0c1\uc18d \ubc1b\uae30\ub97c \uc6d0\ud55c\ub2e4\uba74 \uba85\uc2dc\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: class AccountSerializer(MyBaseSerializer): class Meta(MyBaseSerializer.Meta): model = Account \uc77c\ubc18\uc801\uc73c\ub85c \ub0b4\ubd80 \uba54\ud0c0 \ud074\ub798\uc2a4\uc5d0\uc11c\ub294 \uc0c1\uc18d\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 \ubaa8\ub4e0 \uc635\uc158\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc120\uc5b8\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub610\ud55c \ub2e4\uc74c\uacfc \uac19\uc740 \uc8fc\uc758\uc0ac\ud56d\uc774 serializer \uc0c1\uc18d\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc778 Python \uc774\ub984 \ud574\uc11d \uaddc\uce59\uc774 \uc801\uc6a9\ub429\ub2c8\ub2e4. Meta \ub0b4\ubd80 \ud074\ub798\uc2a4\ub97c \uc120\uc5b8\ud558\ub294 \uc5ec\ub7ec \uae30\ubcf8 \ud074\ub798\uc2a4\uac00 \uc788\ub294 \uacbd\uc6b0, \uccab\ubc88\uc9f8 \ud074\ub798\uc2a4\ub9cc \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774\uac83\uc740 \uc790\ub140\uc758 \uba54\ud0c0\uac00 \uc874\uc7ac\ud55c\ub2e4\uba74 \uba54\ud0c0\ub97c \uc758\ubbf8\ud558\uace0, \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uccab\ubc88\uc9f8 \ubd80\ubaa8\uc758 \uba54\ud0c0\ub97c \uc758\ubbf8\ud569\ub2c8\ub2e4. \ud558\uc704 \ud074\ub798\uc2a4\uc5d0\uc11c \uc774\ub984\uc744 \uc5c6\uc74c\uc73c\ub85c \uc124\uc815\ud558\uc5ec \ubd80\ubaa8 \ud074\ub798\uc2a4\uc5d0\uc11c \uc0c1\uc18d \ub41c Field \ub97c \uc120\uc5b8\uc73c\ub85c \uc81c\uac70 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class MyBaseSerializer(ModelSerializer): my_field = serializers.CharField() class MySerializer(MyBaseSerializer): my_field = None \uadf8\ub7ec\ub098 \uc774 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uc0c1\uc704 \ud074\ub798\uc2a4\uc5d0 \uc758\ud574 \uc120\uc5b8\uc801\uc73c\ub85c \uc815\uc758 \ub41c \ud544\ub4dc\uc5d0\uc11c \uc120\ud0dd \ud574\uc7ac \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 ModelSerializer \uac00 \ub514\ud3f4\ud2b8 \ud544\ub4dc\ub97c \uc0dd\uc131\ud558\ub294 \uac83\uc744 \ub9c9\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4.\uae30\ubcf8 \ud544\ub4dc\uc5d0\uc11c \uc120\ud0dd\ud574\uc81c\ud558\ub824\uba74 Specifying which fields to include \ub97c \ucc38\uc870\ud558\uc138\uc694. Dynamically modifying fields (\ub3d9\uc801\uc73c\ub85c \ud544\ub4dc\ub97c \uc218\uc815) serializer\uac00 \ucd08\uae30\ud654\ub418\uba74 serializer\uc5d0\uc11c \uc124\uc815\ub41c \ud544\ub4dc dict\uc5d0 .fields \ud2b9\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc561\uc11c\uc2a4 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc18d\uc131\uc5d0 \uc561\uc11c\uc2a4\ud558\uace0 \uc218\uc815\ud558\uba74 serializer \ucee8\ubc84\ud130\ub97c \ub3d9\uc801\uc73c\ub85c \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. fields \uc778\uc218\ub97c \uc9c1\uc811 \uc218\uc815\ud558\uba74 serializer \uc120\uc5b8 \uc2dc\uc810\uc774 \uc544\ub2cc \ub7f0\ud0c0\uc784\uc2dc serializer \ud544\ub4dc\uc758 \uc778\uc218 \ubcc0\uacbd\uacfc \uac19\uc740 \ud765\ubbf8\ub85c\uc6b4 \uc791\uc5c5\uc744 \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Example \uc608\ub97c \ub4e4\uc5b4, serializer\uc5d0\uc11c \ucd08\uae30\ud654\ud560 \ub54c \uc0ac\uc6a9\ud560 \ud544\ub4dc\ub97c \uc124\uc815\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 serializer \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class DynamicFieldsModelSerializer(serializers.ModelSerializer): \"\"\" A ModelSerializer that takes an additional `fields` argument that controls which fields should be displayed. \"\"\" def __init__(self, *args, **kwargs): # Don't pass the 'fields' arg up to the superclass fields = kwargs.pop('fields', None) # Instantiate the superclass normally super(DynamicFieldsModelSerializer, self).__init__(*args, **kwargs) if fields is not None: # Drop any fields that are not specified in the `fields` argument. allowed = set(fields) existing = set(self.fields.keys()) for field_name in existing - allowed: self.fields.pop(field_name) \uc774\ub807\uac8c \ud558\uba74 \ub2e4\uc74c\uc744 \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. >>> class UserSerializer(DynamicFieldsModelSerializer): >>> class Meta: >>> model = User >>> fields = ('id', 'username', 'email') >>> >>> print UserSerializer(user) {'id': 2, 'username': 'jonwatts', 'email': 'jon@example.com'} >>> >>> print UserSerializer(user, fields=('id', 'email')) {'id': 2, 'email': 'jon@example.com'} Customizing the default fields REST \ud504\ub808\uc784\uc6cc\ud06c2\uc5d0\uc11c\ub294 \uac1c\ubc1c\uc790\uac00 ModelSerializer \ud074\ub798\uc2a4\uac00 \uae30\ubcf8 \ud544\ub4dc set\uc744 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uc7ac\uc815\uc758 \ud560 \uc218 \uc788\ub294 API\ub97c \uc81c\uacf5\ud588\uc2b5\ub2c8\ub2e4. \uc774 API\uc5d0\ub294 .get_field() , get_pk_field() \uc640 \uadf8\uc678\uc758 \uba54\uc18c\ub4dc\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc serializer\uac00 \uadfc\ubcf8\uc801\uc73c\ub85c 3.0\uc73c\ub85c \ub2e4\uc2dc \ub514\uc790\uc778 \ub418\uc5c8\uae30 \ub54c\ubb38\uc5d0 \uc774 API\ub294 \ub354\uc774\uc0c1 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc0dd\uc131 \ub41c \ud544\ub4dc\ub294 \uc5ec\uc804\ud788 \uc218\uc815\ud560 \uc218 \uc788\uc9c0\ub9cc \uc18c\uc2a4\ucf54\ub4dc\ub97c \ucc38\uc870\ud574\uc57c\ud558\uba70, \ubcc0\uacbd\uc0ac\ud56d\uc774 API\uc758 \ube44\uacf5\uac1c \ube44\ud2b8\uc5d0 \ud574\ub2f9\ud558\uba74 \ubcc0\uacbd \ub420 \uc218 \uc788\uc74c\uc744 \uc54c\uace0 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. Third party packages \ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4. Django REST marshmallow Django-rest-marshmallow \ud328\ud0a4\uc9c0\ub294 \ud30c\uc774\uc36c marshmallow \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2dc\ub9ac\uc5bc\ub77c\uc774\uc800\uc758 \ub300\uccb4 \uad6c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c serializers\uc640 \ub3d9\uc77c\ud55c API\ub97c \uc81c\uacf5\ud558\uba70, \uc77c\ubd80 use-cases\ub294 drop-in \ub300\uccb4\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Serpy Serpy \ud328\ud0a4\uc9c0\ub294 \uc18d\ub3c4 \ud5a5\uc0c1\uc744 \uc704\ud574 \ub9cc\ub4e4\uc5b4\uc9c4 serializer\uc758 \ub300\uc548 \uad6c\ud604\uc785\ub2c8\ub2e4. Serpy\uc740 \ubcf5\uc7a1\ud55c \ub370\uc774\ud130 \uc720\ud615\uc744 \ub2e8\uc21c\ud55c \uae30\ubcf8 \uc720\ud615\uc73c\ub85c serializer\ud569\ub2c8\ub2e4. \uae30\ubcf8 \uc720\ud615\uc740 JSON \uc774\ub098 \ud544\uc694\ud55c \ub2e4\ub978 \ud615\uc2dd\uc73c\ub85c \uc27d\uac8c \ubcc0\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. MongoengineModelSerializer django-rest-framework-mongoengine \ud328\ud0a4\uc9c0\ub294 MongiEngineModelSerializer serializer \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud558\uc5ec MongoDB\ub97c Django REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \uc800\uc7a5\uc18c \uacc4\uce35\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \uc9c0\uc6d0\ud569\ub2c8\ub2e4. GeoFeatureModelSerializer django-rest-framework-gis \ud328\ud0a4\uc9c0\ub294 GeoJSON\uc744 \uc77d\uae30\uc640 \uc4f0\uae30 \uc791\uc5c5 \ubaa8\ub450 \uc9c0\uc6d0\ud558\ub294 GeoFeatureModelSerializer Serializer \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. HStoreSerializer django-rest-framework-hstore \ud328\ud0a4\uc9c0\ub294 django-hstore DictionaryField \ubaa8\ub378 \ud544\ub4dc\uc640 schema-mode \uae30\ub2a5\uc744 \uc9c0\uc6d0\ud558\ub294 HStoreSerializer \ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Dynamic REST Dynamic-Rest \ud328\ud0a4\uc9c0\ub294 ModelSerializer \ubc0f ModelViewSet \uc778\ud130\ud398\uc774\uc2a4\ub97c \ud655\uc7a5\ud558\uace0 \ud544\ud130\ub9c1, \uc815\ub82c, serializer\uc5d0\uc11c \uc815\uc758\ud55c \ubaa8\ub4e0 \ud544\ub4dc\uc640 \uad00\uacc4\ub97c \ud3ec\ud568/\uc81c\uc678\ud558\ub294 API \ucffc\ub9ac parameter\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4. Dynamic Fields Mixin drf_dynamic-fields \ud328\ud0a4\uc9c0\ub294 serializer\ub2f9 \ud544\ub4dc\ub97c URL parameter\ub85c \uc9c0\uc815\ub41c \uc11c\ube0c \uc138\ud2b8\ub85c \ub3d9\uc801\uc73c\ub85c \uc81c\ud55c\ud558\uae30 \uc704\ud574 mixin\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. DRF FlexFields drf-flex-fields \ud328\ud0a4\uc9c0\ub294 ModelSerializer \ubc0f ModelViewSet\uc744 \ud655\uc7a5\ud558\uc5ec \ud544\ub4dc\ub97c \ub3d9\uc801\uc73c\ub85c \uc124\uc815\ud558\uace0 \uae30\ubcf8 \ud544\ub4dc\ub97c \uc911\ucca9 \ubaa8\ub378\ub85c \ud655\uc7a5\ud558\ub294\ub370, \uc77c\ubc18\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \uae30\ub2a5\uc744 URL parameter \ubc0f serializer \ud074\ub798\uc2a4 \uc815\uc758\uc5d0\uc11c \ubaa8\ub450 \uc81c\uacf5\ud569\ub2c8\ub2e4. Serializer Extensions django-rest-framework-serializer-extensions \ud328\ud0a4\uc9c0\ub294 \ubcf4\uae30/\uc694\uccad \ub2e8\uc704\ub85c \ud544\ub4dc\ub97c \uc815\uc758 \ud560 \uc218\uc788\uac8c \ud558\uc5ec serializer\ub97c DRY \ud560 \uc218 \uc788\ub294 \ub3c4\uad6c \ubaa8\uc74c\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ud544\ub4dc\ub97c \ud5c8\uc6a9 \ubaa9\ub85d\uc5d0 \ucd94\uac00\ud558\uace0 \ube14\ub799\ub9ac\uc2a4\ud2b8\uc5d0 \uc62c\ub9b4 \uc218 \uc788\uc73c\uba70 \uc790\uc2dd serializer\ub97c \uc120\ud0dd\uc801\uc73c\ub85c \ud655\uc7a5 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. HTML JSON Forms html-json-forms \ud328\ud0a4\uc9c0\ub294 HTML JSON Form specification (\ube44\ud65c\uc131)\uc5d0 \ub530\ub77c <form> \uc81c\ucd9c\uc744 \ucc98\ub9ac\ud558\ub294 \uc54c\uace0\ub9ac\uc998 \ubc0f serializer\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. serializer\ub294 HTML \ub0b4\uc5d0\uc11c \uc784\uc758\ub85c \uc911\ucca9 \ub41c JSON \uad6c\uc870\ub97c \uc27d\uac8c \ucc98\ub9ac\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, <input name=\"item[0][id]\" value=\"5\"> \ub294 {\"items\": [{\"id\": \"5\"}]} \uc73c\ub85c \ud574\uc11d\ub429\ub2c8\ub2e4. DRF-Base64 DRF-Base64 \ub294 base64 \uc778\ucf54\ub529 \ud30c\uc77c\uc744 \uc5c5\ub85c\ub4dc\ub97c \ucc98\ub9ac\ud558\ub294 \uc77c\ub828\uc758 \ud544\ub4dc\uc640 model serializers\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. QueryFields djangorestframework-queryfields \ub97c \uc0ac\uc6a9\ud558\uba74 API \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ud3ec\ud568/\uc81c\uc678 \uac80\uc0c9\uc5b4 parameter\ub97c \ud1b5\ud574 \uc751\ub2f5\uc5d0\uc11c \uc5b4\ub5a4 \ud544\ub4dc\ub97c \ubcf4\ub0bc\uc9c0 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DRF Writable Nested drf-writable-nested \ud328\ud0a4\uc9c0\ub294 \uc911\ucca9 \ub41c \uad00\ub828 \ub370\uc774\ud130\ub85c \ubaa8\ub378\uc744 \uc791\uc131/\uc5c5\ub370\uc774\ud2b8 \ud560 \uc218 \uc788\ub294 \uc4f0\uae30 \uac00\ub2a5\ud55c \uc911\ucca9 model serializer\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Serializers"},{"location":"Serializers/#django-rest-framework-serializers","text":"_\"Expanding the usefulness of the serializers is something that we would like to address. However, it's not a trivial problem, and it will take some serious design work.\" \"serializer\uc758 \uc720\uc6a9\uc131\uc744 \ud655\uc7a5\ud558\ub294 \uac83\uc740 \uc6b0\ub9ac\uac00 \ub2e4\ub8e8\uace0\uc790 \ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub098, \uadf8\uac83\uc740 \uc0ac\uc18c\ud55c \ubb38\uc81c\uac00 \uc544\ub2c8\uba70. \uc2ec\uac01\ud55c \ub514\uc790\uc778 \uc791\uc5c5\uc744 \ud544\uc694\ub85c \ud569\ub2c8\ub2e4.\" \u2014 Russell Keith-Magee _","title":"Django REST framework - Serializers"},{"location":"Serializers/#serializers","text":"Serializers\ub294 \ucffc\ub9ac\uc14b\ub4e4 \ubc0f \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc640 \uac19\uc740 \ubcf5\uc7a1\ud55c \ub370\uc774\ud130\ub97c JSON , XML \ub610\ub294 \uae30\ud0c0 \ucee8\ud150\ud2b8 \uc720\ud615\uc73c\ub85c \uc27d\uac8c \ub80c\ub354\ub9c1 \ud560 \uc218 \uc788\ub294 Python \uae30\ubcf8 \ub370\uc774\ud130 \uc720\ud615\uc73c\ub85c \ubcc0\ud658\ud574 \uc90d\ub2c8\ub2e4. \ub610\ud55c serializer\ub294 deserialization\uc744 \uc81c\uacf5\ud558\uc5ec, \ub4e4\uc5b4\uc624\ub294 \ub370\uc774\ud130\uc758 \uc720\ud6a8\uc131\uc744 \ucc98\uc74c \ud655\uc778\ud55c \ud6c4\uc5d0 \uad6c\ubb38 \ubd84\uc11d \ub41c \ub370\uc774\ud130\ub97c \ubcf5\ud569 \ud615\uc2dd\uc73c\ub85c \ub2e4\uc2dc \ubcc0\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DJango \uc5d0\uc11c Client \uc73c\ub85c \ubcf5\uc7a1\ud55c \ub370\uc774\ud130(\ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4 \ub4f1)\ub97c \ubcf4\ub0b4\ub824\uba74 'string'\uc73c\ub85c \ubcc0\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \uc774 \ubcc0\ud658\uc744 serializer \ub77c\uace0 \ud569\ub2c8\ub2e4. \ubc18\ub300\ub85c client \uc758 'string'\uc744 Djagno\ub85c \ubc1b\uc744 \ub54c Python \uae30\ubcf8 \ub370\uc774\ud130 \uc720\ud615\uc73c\ub85c \ubc1b\uc544\uc57c \ud558\ub294\ub370 \uc774 \ubcc0\ud658\uc744 deserializer \ub77c\uace0 \ud569\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 serializers\ub294 Django\uc758 Form \ubc0f modelForm \ud074\ub798\uc2a4\uc640 \ub9e4\uc6b0 \uc720\uc0ac\ud558\uac8c \uc791\ub3d9\ud569\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 ModelSerializer (\ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc640 \ucffc\ub9ac\uc14b\uc744 \ub2e4\ub8e8\ub294 \uc2dc\ub9ac\uc5bc\ub77c\uc774\uc800\ub97c \uc0dd\uc131\ud558\uae30 \uc720\uc6a9\ud55c \ud074\ub798\uc2a4)\ubfd0\ub9cc \uc544\ub2c8\ub77c \uc751\ub2f5\uc758 \ucd9c\ub825\uc744 \uc81c\uc5b4\ud558\ub294 \uac15\ub825\ud558\uace0 \uc77c\ubc18\uc801\uc778 \ubc29\ubc95\uc744 \uc81c\uacf5\ud558\ub294 Serializer \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Serializers"},{"location":"Serializers/#declaring-serializers","text":"\uc608\uc81c\ub97c \uc704\ud574 \uc0ac\uc6a9\ud560 \uac04\ub2e8\ud55c \uac1d\uccb4\ub97c \ub9cc\ub4e4\uc5b4 \ubd05\ub2c8\ub2e4. from datetime import datetime class Comment(object): def __init__(self, email, content, created=None): self.email = email self.content = content self.created = created or datetime.now() comment = Comment(email='leila@example.com', content='foo bar') comment \uac1d\uccb4\uc5d0 \ud574\ub2f9\ud558\ub294 \ub370\uc774\ud130\ub97c serializer \ubc0f deserializer\ud654\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 serializer\ub97c \uc120\uc5b8\ud569\ub2c8\ub2e4. serializer\ub97c \uc120\uc5b8\ud558\uba74 \uc591\uc2dd\uc744 \uc120\uc5b8\ud558\ub294 \uac83\uacfc \ub9e4\uc6b0 \uc720\uc0ac\ud569\ub2c8\ub2e4. from rest_framework import serializers class CommentSerializer(serializers.Serializer): email = serializers.EmailField() content = serializers.CharField(max_length=200) created = serializers.DateTimeField()","title":"Declaring Serializers"},{"location":"Serializers/#serializing-objects","text":"CommentSerializer \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc8fc\uc11d \ub610\ub294 \uc8fc\uc11d \ubaa9\ub85d\uc744 serializer \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \ub9d0\ud558\uba74, Serializer \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 Form \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uacfc \ube44\uc2b7\ud569\ub2c8\ub2e4. serializer = CommentSerializer(comment) serializer.data # {'email': 'leila@example.com', 'content': 'foo bar', 'created': '2016-01-27T15:17:10.375877'} \uc774 \uc2dc\uc810\uc5d0\uc11c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\ub97c \ud30c\uc774\uc36c \uae30\ubcf8 \ub370\uc774\ud130 \uc720\ud615\uc73c\ub85c \ubcc0\ud658\ud588\uc2b5\ub2c8\ub2e4. serializer \uacfc\uc815\uc744 \ub9c8\ubb34\ub9ac\ud558\uae30 \uc704\ud574 \ub370\uc774\ud130\ub97c json \uc73c\ub85c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. from rest_framework.renderers import JSONRenderer json = JSONRenderer().render(serializer.data) json # b'{\"email\":\"leila@example.com\",\"content\":\"foo bar\",\"created\":\"2016-01-27T15:17:10.375877\"}'","title":"Serializing objects"},{"location":"Serializers/#deserializing-objects","text":"Deserialization\ub3c4 \ube44\uc2b7\ud569\ub2c8\ub2e4. \uba3c\uc800 \ud30c\uc774\uc36c \ub370\uc774\ud130 \ud615\uc2dd\uc73c\ub85c \uc2a4\ud2b8\ub9bc\uc744 \ud30c\uc2f1\ud569\ub2c8\ub2e4. from django.utils.six import BytesIO from rest_framework.parsers import JSONParser stream = BytesIO(json) data = JSONParser().parse(stream) \uadf8\ub7f0 \ub2e4\uc74c \uae30\ubcf8 \ub370\uc774\ud130 \uc720\ud615\uc744 \uac80\uc99d \ub41c \ub370\uc774\ud130 dict\ub85c \ubcf5\uc6d0\ud569\ub2c8\ub2e4. serializer = CommentSerializer(data=data) serializer.is_valid() # True serializer.validated_data # {'content': 'foo bar', 'email': 'leila@example.com', 'created': datetime.datetime(2012, 08, 22, 16, 20, 09, 822243)}","title":"Deserializing objects"},{"location":"Serializers/#saving-instances","text":"\uc720\ud6a8\uc131\uc774 \uac80\uc0ac \ub41c \ub370\uc774\ud130\ub97c \uae30\ubc18\uc73c\ub85c \uc644\uc804\ud55c \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud558\ub824\uba74, .create() , update() \uba54\uc18c\ub4dc \uc911 \ud558\ub098\ub098 \ub458 \ubaa8\ub450\ub97c \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class CommentSerializer(serializers.Serializer): email = serializers.EmailField() content = serializers.CharField(max_length=200) created = serializers.DateTimeField() def create(self, validated_data): return Comment(**validated_data) def update(self, instance, validated_data): instance.email = validated_data.get('email', instance.email) instance.content = validated_data.get('content', instance.content) instance.created = validated_data.get('created', instance.created) return instance \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\uac00 Django \ubaa8\ub378\uacfc \uc77c\uce58\ud558\ub294 \uacbd\uc6b0 \uc774 \uba54\uc18c\ub4dc\uac00 \uac1d\uccb4\ub97c \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc800\uc7a5\ud558\ub3c4\ub85d \ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, Comment \uac00 Django \ubaa8\ub378\uc778 \uacbd\uc6b0 \uba54\uc18c\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. def create(self, validated_data): return Comment.objects.create(**validated_data) def update(self, instance, validated_data): instance.email = validated_data.get('email', instance.email) instance.content = validated_data.get('content', instance.content) instance.created = validated_data.get('created', instance.created) instance.save() return instance \uc774\uc81c \ud14c\uc774\ud130\ub97c deserializer \ud560 \ub54c .save() \ub97c \ud638\ucd9c\ud558\uc5ec \uc720\ud6a8\uc131\uc774 \uac80\uc0ac\ub41c \ub370\uc774\ud130\ub97c \uae30\ubc18\uc73c\ub85c \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. comment = serializer.save() .save() \ub97c \ud638\ucd9c\ud558\uba74 serializer \ud074\ub798\uc2a4\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c \uae30\uc874 \uc778\uc2a4\ud134\uc2a4\uac00 \uc804\ub2ec\ub418\uc5c8\ub294\uc9c0 \uc5ec\ubd80\uc5d0 \ub530\ub77c \uc0c8 \uc778\uc2a4\ud130\uc2a4\ub97c \ub9cc\ub4e4\uac70\ub098 \uae30\uc874 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4. # .save() will create a new instance. serializer = CommentSerializer(data=data) # .save() will update the existing `comment` instance. serializer = CommentSerializer(comment, data=data) .create() \ubc0f .update() \uba54\uc11c\ub4dc\ub294 \ubaa8\ub450 \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. serializer \ud074\ub798\uc2a4\uc758 \uc720\uc0ac \ucf00\uc774\uc2a4\uc5d0 \ub530\ub77c \ud558\ub098 \ub610\ub294 \ub458 \ubaa8\ub450 \uad6c\ud604 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Saving instances"},{"location":"Serializers/#save","text":"\ub54c\ub85c\ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \uc800\uc7a5\ud558\ub294 \uc2dc\uc810\uc5d0 \ubdf0 \ucf54\ub4dc\uac00 \ub370\uc774\ud130\ub97c \ucd94\uac00\ud560 \uc218 \uc788\uc5b4\uc57c\ud569\ub2c8\ub2e4. \uc774 \ucd94\uac00 \ub370\uc774\ud130\uc5d0\ub294 \ud604\uc7ac \uc0ac\uc6a9\uc790, \ud604\uc7ac \uc2dc\uac04 \ub610\ub294 \uc694\uccad \ub370\uc774\ud130\uc758 \uc77c\ubd80\uac00 \uc544\ub2cc \ub2e4\ub978 \uc815\ubcf4\uac00 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. .save() \ub97c \ud638\ucd9c \ud560 \ub54c \ucd94\uac00 \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \ud3ec\ud568\uc2dc\ucf1c\uc11c \uadf8\ub807\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. serializer.save(owner=request.user) \ucd94\uac00 \ud0a4\uc6cc\ub4dc \uc778\uc218\ub294 .create() \ub610\ub294 .update() \uac00 \ud638\ucd9c \ub420 \ub54c validated_data \uc778\uc218\uc5d0 \ud3ec\ud568\ub429\ub2c8\ub2e4.","title":"\ucd94\uac00 \uc18d\uc131\uc744 .save()\uc5d0 \uc804\ub2ec\ud569\ub2c8\ub2e4."},{"location":"Serializers/#save_1","text":"\uc5b4\ub5a4 \uacbd\uc6b0\uc5d0\ub294 .create() \ubc0f .update() \uba54\uc18c\ub4dc \uc774\ub984\uc774 \uc758\ubbf8\uac00 \uc5c6\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ubb38\uc758 \uc591\uc2dd\uc5d0\uc11c \uc0c8 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4dc\ub294 \ub300\uc2e0 email\uc774\ub098 \ub2e4\ub978 \uba54\uc138\uc9c0\ub97c \ubcf4\ub0c5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uacbd\uc6b0\uc5d0 \ub300\uc2e0 .save() \ub97c \uc9c1\uc811 \uc77d\uace0 \ubb34\uc2dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class ContactForm(serializers.Serializer): email = serializers.EmailField() message = serializers.CharField() def save(self): email = self.validated_data['email'] message = self.validated_data['message'] send_email(from=email, message=message) \uc704\uc758 \uacbd\uc6b0 serializer\uc758 .validated_data \uc18d\uc131\uc5d0 \uc9c1\uc811 \uc561\uc11c\uc2a4\ud574\uc57c \ud569\ub2c8\ub2e4.","title":".save()\ub97c \uc9c1\uc811 \uc7ac\uc815\uc758 \ud558\uc138\uc694."},{"location":"Serializers/#validation","text":"\ub370\uc774\ud130\ub97c deserializer \ud560 \ub54c \uc720\ud6a8\uc131\uc774 \uac80\uc0ac \ub41c \ub370\uc774\ud130\uc5d0 \uc561\uc11c\uc2a4\ud558\uae30 \uc804\uc5d0 \ud56d\uc0c1 is_valid() \ub97c \ud638\ucd9c\ud558\uac70\ub098 \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\ub97c \uc800\uc7a5\ud574\uc57c \ud569\ub2c8\ub2e4. \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uba74, .errors \uc18d\uc131\uc5d0\ub294 \uacb0\uacfc \uc624\ub958 \uba54\uc138\uc9c0\ub97c \ub098\ud0c0\ub0b4\ub294 dict\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: serializer = CommentSerializer(data={'email': 'foobar', 'content': 'baz'}) serializer.is_valid() # False serializer.errors # {'email': [u'Enter a valid e-mail address.'], 'created': [u'This field is required.']} dict\uc758 \uac01 \ud0a4\ub294 \ud544\ub4dc \uc774\ub984\uc774\uba70, \uac12\uc740 \ud574\ub2f9 \ud544\ub4dc\uc5d0 \ud574\ub2f9\ud558\ub294 \uc624\ub958 \uba54\uc2dc\uc9c0\uc758 \ubb38\uc790\uc5f4 \ubaa9\ub85d\uc785\ub2c8\ub2e4. non_field_errors \ud0a4\uac00 \uc788\uc744 \uc218\ub3c4 \uc788\uace0 \uc77c\ubc18\uc801\uc778 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4. non_field_errors \ud0a4\uc758 \uc774\ub984\uc740 REST \ud504\ub808\uc784 \uc6cc\ud06c \uc124\uc815\uc758 NON_FIELD_ERRORS_KEY \uc744 \uc0ac\uc6a9\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc815\uc758 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud56d\ubaa9 \ubaa9\ub85d\uc744 deserializer \ud560 \ub54c \uc624\ub958\ub294 \uac01 deserializer\ud654 \ud56d\ubaa9\uc744 \ub098\ud0c0\ub0b4\ub294 dict \ubaa9\ub85d\uc73c\ub85c \ubc18\ud658\ub429\ub2c8\ub2e4.","title":"Validation"},{"location":"Serializers/#_1","text":".is_valid() \uba54\uc11c\ub4dc\ub294 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uac00 \uc788\ub294 \uacbd\uc6b0 serializers.ValidationError \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0a4\ub294 \uc120\ud0dd\uc801 raise_exception \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc608\uc678\ub294 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uae30\ubcf8 \uc608\uc678 \ucc98\ub9ac\uae30\uc5d0\uc11c \uc790\ub3d9\uc73c\ub85c \ucc98\ub9ac\ub418\uba70, \uae30\ubcf8\uc801\uc73c\ub85c HTTP 400 ad Request \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. # Return a 400 response if the data was invalid. serializer.is_valid(raise_exception=True)","title":"\uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \ub370\uc774\ud130\uc5d0 \ub300\ud55c \uc608\uc678 \ubc1c\uc0dd"},{"location":"Serializers/#_2","text":"Serializer \uc11c\ube0c \ud074\ub798\uc2a4\uc5d0 .validate_<field_name> \uba54\uc18c\ub4dc\ub97c \ucd94\uac00\ud558\uc5ec custom \ud544\ub4dc \ub808\ubca8 \uc720\ud6a8\uc131 \uac80\uc99d\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uac83\ub4e4\uc740 Django form\uc758 .clean_<field_name> \uba54\uc18c\ub4dc\uc640 \ube44\uc2b7\ud569\ub2c8\ub2e4. \uc774 \uba54\uc18c\ub4dc\ub294 \uc778\uc218\uac00 \ud544\uc694\ud558\uba70, \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \ud544\uc694\ud55c \ud544\ub4dc \uac12\uc785\ub2c8\ub2e4. validate_<field_name> \uba54\uc18c\ub4dc\ub294 \uc720\ud6a8\ud55c \uac12\uc744 \ubc18\ud658\ud558\uac70\ub098 serializers.ValidationError \ub97c \ubc1c\uc0dd\uc2dc\ucf1c\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: from rest_framework import serializers class BlogPostSerializer(serializers.Serializer): title = serializers.CharField(max_length=100) content = serializers.CharField() def validate_title(self, value): \"\"\" Check that the blog post is about Django. \"\"\" if 'django' not in value.lower(): raise serializers.ValidationError(\"Blog post is not about Django\") return value NOTE : <field_name> \uc774 required=False parameter\ub97c \uc0ac\uc6a9\ud558\uc5ec serializer \uc5d0\uc11c \uc120\uc5b8 \ub41c \uacbd\uc6b0, \ud544\ub4dc\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc73c\uba74 \uc774 \uc720\ud6a8\uc131 \uac80\uc0ac \ub2e8\uacc4\uac00 \uc218\ud589\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"\ud544\ub4dc \ub808\ubca8 \uac80\uc99d"},{"location":"Serializers/#_3","text":"\uc5ec\ub7ec \ud544\ub4dc\uc5d0 \ub300\ud55c \uc561\uc11c\uc2a4\uac00 \ud544\uc694\ud55c \ub2e4\ub978 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \ud558\ub824\uba74, Serializer \uc11c\ube0c \ud074\ub798\uc2a4\uc5d0 .validate() \uba54\uc18c\ub4dc\ub97c \ucd94\uac00\ud558\uc138\uc694. \uc774 \uba54\uc18c\ub4dc\ub294 \ud544\ub4dc \uac12\uc758 dict\uc778 \ub2e8\uc77c \uc778\uc218\ub97c \ucde8\ud569\ub2c8\ub2e4. \ud544\uc694\ud55c \uacbd\uc6b0 ValidationError \ub97c \ubc1c\uc0dd\uc2dc\ud0a4\uac70\ub098 \uc720\ud6a8\uc131 \uac80\uc0ac \ub41c \uac12\uc744 \ubc18\ud658\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74: from rest_framework import serializers class EventSerializer(serializers.Serializer): description = serializers.CharField(max_length=100) start = serializers.DateTimeField() finish = serializers.DateTimeField() def validate(self, data): \"\"\" Check that the start is before the stop. \"\"\" if data['start'] > data['finish']: raise serializers.ValidationError(\"finish must occur after start\") return data","title":"\uac1d\uccb4 \uc218\uc900 \uc720\ud6a8\uc131 \uac80\uc0ac"},{"location":"Serializers/#validators","text":"Serializer\uc758 \uac1c\ubcc4 \ud544\ub4dc\ub294 \ud544\ub4dc \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc120\uc5b8\ud568\uc73c\ub85c\uc368 \uc720\ud6a8\uc131 \uac80\uc0ac\uae30\uc5d0 \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. def multiple_of_ten(value): if value % 10 != 0: raise serializers.ValidationError('Not a multiple of ten') class GameRecord(serializers.Serializer): score = IntegerField(validators=[multiple_of_ten]) ... \ub610\ud55c Serializer \ud074\ub798\uc2a4\uc5d0\ub294 \uc804\uccb4 \ud544\ub4dc \ub370\uc774\ud130 \uc9d1\ud569\uc5d0 \uc801\uc6a9\ub418\ub294 \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc720\ud6a8\uc131 \uac80\uc0ac\uae30\uac00 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc720\ud6a8\uc131 \uac80\uc0ac\uae30\ub294 Meta \ud074\ub798\uc2a4\uc5d0 \uc120\uc5b8\ud568\uc73c\ub85c\uc368 \ud3ec\ud568\ub429\ub2c8\ub2e4. class EventSerializer(serializers.Serializer): name = serializers.CharField() room_number = serializers.IntegerField(choices=[101, 102, 103, 201]) date = serializers.DateField() class Meta: # Each room only has one event per day. validators = UniqueTogetherValidator( queryset=Event.objects.all(), fields=['room_number', 'date'] ) \ub354 \ub9ce\uc740 \uc815\ubcf4\ub294 validators documentation \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"Validators (\uac80\uc0ac\uae30)"},{"location":"Serializers/#accessing-the-initial-data-and-instance","text":"serializer \uc778\uc2a4\ud134\uc2a4\uc5d0 \ucd08\uae30 \uac1d\uccb4 \ub610\ub294 \ucffc\ub9ac\uc14b\uc744 \uc804\ub2ec \ud560 \ub54c \uac1d\uccb4\ub294 .instance \ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4. \ucd08\uae30 \uac1d\uccb4\uac00 \uc804\ub2ec\ub418\uc9c0 \uc54a\uc73c\uba74 .instance \uc18d\uc131\uc774 None \uc774 \ub429\ub2c8\ub2e4. \ub370\uc774\ud130\ub97c serializer \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc804\ub2ec \ud560 \ub54c \uc218\uc815\ub418\uc9c0 \uc54a\uc740 \ub370\uc774\ud130\ub294 .initial_data \ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4. data \ud0a4\uc6cc\ub4dc \uc778\uc218\uac00 \uc804\ub2ec\ub418\uc9c0 \uc54a\uc73c\uba74 .initial_data \uc18d\uc131\uc774 \uc874\uc7ac \ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"Accessing the initial data and instance (\ucd08\uae30 \ub370\uc774\ud130 \ubc0f \uc778\uc2a4\ud134\uc2a4 \uc561\uc11c\uc2a4)"},{"location":"Serializers/#partial-updates","text":"\uae30\ubcf8\uc801\uc73c\ub85c serializer\ub294 \ubaa8\ub4e0 \ud544\uc218 \ud544\ub4dc\uc5d0 \uac12\uc744 \uc804\ub2ec\ud574\uc57c\ud558\uba70 \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. partial \uc5c5\ub370\uc774\ud2b8\ub97c \ud5c8\uc6a9\ud558\uae30 \uc704\ud574 partial \uc778\uc218\ub97c \uc0ac\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. # Update `comment` with partial data serializer = CommentSerializer(comment, data={'content': u'foo bar'}, partial=True)","title":"Partial updates (\ubd80\ubd84 \uc5c5\ub370\uc774\ud2b8)"},{"location":"Serializers/#dealing-with-nested-objects","text":"\uc55e\uc758 \uc608\uc81c\ub294 \ub2e8\uc21c\ud55c \ub370\uc774\ud130 \uc720\ud615\ub9cc\uc744 \uac00\uc9c4 \uac1d\uccb4\ub97c \ub2e4\ub8e8\ub294 \uacbd\uc6b0\uc5d0\ub294 \ubb38\uc81c\uac00 \uc5c6\uc9c0\ub9cc \uac1d\uccb4\uc758 \uc77c\ubd80 \uc18d\uc131\uc774 \ubb38\uc790\uc5f4, \ub0a0\uc9dc \ub610\ub294 \uc815\uc218\uc640 \uac19\uc740 \ub2e8\uc21c\ud55c \ub370\uc774\ud130 \uc720\ud615\uc774 \uc544\ub2cc \ubcf5\uc7a1\ud55c \uac1d\uccb4\ub97c \ud45c\ud604\ud560 \uc218 \uc788\uc5b4\uc57c\ud558\ub294 \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4. Serializer \ud074\ub798\uc2a4 \uc790\uccb4\ub294 Field \uc720\ud615\uc774\uba70, \ud55c \uac1d\uccb4 \uc720\ud615\uc774 \ub2e4\ub978 \uac1d\uccb4 \uc720\ud615 \ub0b4\uc5d0 \uc911\ucca9\ub418\uc5b4\uc788\ub294 \uad00\uacc4\ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class UserSerializer(serializers.Serializer): email = serializers.EmailField() username = serializers.CharField(max_length=100) class CommentSerializer(serializers.Serializer): user = UserSerializer() content = serializers.CharField(max_length=200) created = serializers.DateTimeField() \uc911\ucca9 \ub41c \ud45c\ud604\uc774 None \uac12\uc744 \uc120\ud0dd\uc801\uc73c\ub85c \ubc1b\uc544 \ub4e4\uc77c \uc218 \uc788\uc73c\uba74 required=False \ud50c\ub798\uadf8\ub97c \uc911\ucca9 \ub41c serializer\uc5d0 \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4. lass CommentSerializer(serializers.Serializer): user = UserSerializer(required=False) # May be an anonymous user. content = serializers.CharField(max_length=200) created = serializers.DateTimeField() \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc911\ucca9 \ud45c\ud604\uc774 \ud56d\ubaa9 \ubaa9\ub85d\uc774\uc5b4\uc57c\ud558\ub294 \uacbd\uc6b0 \uc911\ucca9 \ub41c serializer\uc5d0 many=True \ud50c\ub798\uadf8\ub97c \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4. class CommentSerializer(serializers.Serializer): user = UserSerializer(required=False) edits = EditItemSerializer(many=True) # A nested list of 'edit' items. content = serializers.CharField(max_length=200) created = serializers.DateTimeField()","title":"Dealing with nested objects (\uc911\ucca9\ub41c \uac1d\uccb4 \ub2e4\ub8e8\uae30)"},{"location":"Serializers/#writable-nested-representations","text":"\ub370\uc774\ud130\uc758 deserializer\ub97c \uc9c0\uc6d0\ud558\ub294 \uc911\ucca9 \ub41c \ud45c\ud604\uc744 \ucc98\ub9ac\ud560 \ub54c, \uc911\ucca9 \ub41c \uac1d\uccb4\uc758 \uc624\ub958\ub294 \uc911\ucca9 \ub41c \uac1d\uccb4\uc758 \ud544\ub4dc \uc774\ub984 \uc544\ub798\uc5d0 \uc911\ucca9\ub429\ub2c8\ub2e4. serializer = CommentSerializer(data={'user': {'email': 'foobar', 'username': 'doe'}, 'content': 'baz'}) serializer.is_valid() # False serializer.errors # {'user': {'email': [u'Enter a valid e-mail address.']}, 'created': [u'This field is required.']} \ube44\uc2b7\ud558\uac8c, .validated_data \uc18d\uc131\uc740 \uc911\ucca9 \ub41c \ub370\uc774\ud130 \uad6c\uc870\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4.","title":"Writable nested representations (\uc4f0\uae30 \uac00\ub2a5\ud55c \uc911\ucca9 \ud45c\ud604)"},{"location":"Serializers/#create","text":"\uc4f0\uae30 \uac00\ub2a5\ud55c \uc911\ucca9 \ud45c\ud604\uc744 \uc9c0\uc6d0\ud558\ub824\uba74 \uc5ec\ub7ec \uac1d\uccb4\ub97c \uc800\uc7a5\ud558\ub294 .create() \ub610\ub294 .update() \uba54\uc18c\ub4dc\ub97c \uc791\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \ub2e4\uc74c \uc608\uc81c\ub294 \uc911\ucca9 \ub41c \ud504\ub85c\ud544 \uac1d\uccb4\uac00 \uc788\ub294 \uc0ac\uc6a9\uc790 \ub9cc\ub4e4\uae30\ub97c \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. class UserSerializer(serializers.ModelSerializer): profile = ProfileSerializer() class Meta: model = User fields = ('username', 'email', 'profile') def create(self, validated_data): profile_data = validated_data.pop('profile') user = User.objects.create(**validated_data) Profile.objects.create(user=user, **profile_data) return user","title":"\uc911\ucca9 \ub41c \ud45c\ud604\uc744 \uc704\ud55c .create() \uba54\uc18c\ub4dc \uc791\uc131\ud558\uae30"},{"location":"Serializers/#update","text":"\uc5c5\ub370\uc774\ud2b8\uc758 \uacbd\uc6b0, \uad00\uacc4 \uc5c5\ub370\uc774\ud2b8\ub97c \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc2e0\uc911\ud558\uac8c \uc0dd\uac01\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uad00\uacc4\uc5d0 \ub300\ud55c \ub370\uc774\ud130\uac00 \uc5c6\uac70\ub098 \uc81c\uacf5\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc5b4\ub5a4 \uc77c\uc774 \uc77c\uc5b4\ub098\uc57c \ud560\uae4c\uc694? \uad00\uacc4\ub97c \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c NULL \ub85c \uc124\uc815\ud558\uc138\uc694. \uc5f0\uad00\ub41c \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ad\uc81c\ud558\uc138\uc694. \ub370\uc774\ud130\ub97c \ubb34\uc2dc\ud558\uace0 \uc778\uc2a4\ud134\uc2a4\ub97c \uc788\ub294 \uadf8\ub300\ub85c \ub450\uc138\uc694. \uc720\ud6a8\uc131 \uac80\uc99d \uc624\ub958\ub97c \ubc1c\uc0dd\uc2dc\ud0a4\uc138\uc694. \ub2e4\uc74c\uc740 \uc774\uc804 UserSerializer \ud074\ub798\uc2a4\uc758 update() \uba54\uc18c\ub4dc \uc608\uc81c\uc785\ub2c8\ub2e4. def update(self, instance, validated_data): profile_data = validated_data.pop('profile') # Unless the application properly enforces that this field is # always set, the follow could raise a `DoesNotExist`, which # would need to be handled. profile = instance.profile instance.username = validated_data.get('username', instance.username) instance.email = validated_data.get('email', instance.email) instance.save() profile.is_premium_member = profile_data.get( 'is_premium_member', profile.is_premium_member ) profile.has_support_contract = profile_data.get( 'has_support_contract', profile.has_support_contract ) profile.save() return instance \uc911\ucca9 \ub41c \uc0dd\uc131 \ubc0f \uc5c5\ub370\uc774\ud2b8\uc758 \ub3d9\uc791\uc774 \uc560\ub9e4\ud560 \uc218 \uc788\uace0, \uad00\ub828 \ubaa8\ub378\uac04\uc5d0 \ubcf5\uc7a1\ud55c \uc885\uc18d\uc131\uc774 \ud544\uc694\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 REST \ud504\ub808\uc784\uc6cc\ud06c3 \uc5d0\uc11c\ub294 \uc774\ub7ec\ud55c \uba54\uc11c\ub4dc\ub97c \ud56d\uc0c1 \uba85\uc2dc\uc801\uc744 \uc791\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc744 ModelSerializer , .create() , .update() \uba54\uc18c\ub4dc\ub294 \uc4f0\uae30 \uac00\ub2a5\ud55c \uc911\ucca9 \ud45c\ud604\ub370 \ub300\ud55c \uc9c0\uc6d0\uc744 \ud3ec\ud568\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc790\ub3d9\uc73c\ub85c \uae30\uc785 \uac00\ub2a5\ud55c \uc911\ucca9 \ud45c\ud604\uc758 \uc77c\ubd80\ub97c \uc11c\ud3ec\ud2b8\ud558\ub294 \ud328\ud0a4\uc9c0\uac00 3.1 \ub9b4\ub9ac\uc2a4\uc640 \ud568\uaed8 \ub9b4\ub9ac\uc2a4 \ub420 \uac00\ub2a5\uc131\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc911\ucca9 \ub41c \ud45c\ud604\uc744 \uc704\ud574 .update()\uba54\uc18c\ub4dc \uc791\uc131\ud558\uae30"},{"location":"Serializers/#_4","text":"serializer\uc5d0 \uc5ec\ub7ec \uad00\ub828 \uc778\uc2a4\ud134\uc2a4\ub97c \uc800\uc7a5\ud558\ub294 \ub300\uc2e0 \uc62c\ubc14\ub978 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\ub294 custom \ubaa8\ub378 \uad00\ub9ac\uc790 \ud074\ub798\uc2a4\ub97c \uc791\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, User \uc778\uc2a4\ud134\uc2a4\uc640 Profile \uc778\uc2a4\ud134\uc2a4\uac00 \ud56d\uc0c1 \uc30d\uc73c\ub85c \ud568\uaed8 \uc0dd\uc131\ub418\ub3c4\ub85d\ud558\uace0 \ud558\uace0 \uc2f6\ub2e4\uace0 \uac00\uc815\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc774 custom \ub9e4\ub2c8\uc800 \ud074\ub798\uc2a4\ub97c \uc791\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class UserManager(models.Manager): ... def create(self, username, email, is_premium_member=False, has_support_contract=False): user = User(username=username, email=email) user.save() profile = Profile( user=user, is_premium_member=is_premium_member, has_support_contract=has_support_contract ) profile.save() return user \uc774 \uad00\ub9ac\uc790 \ud074\ub798\uc2a4\ub294 \uc774\uc81c \uc804\ubcf4\ub2e4 \ud6cc\ub96d\ud558\uac8c \uc0ac\uc6a9\uc790 \uc778\uc2a4\ud134\uc2a4\uc640 \ud504\ub85c\ud544 \uc778\uc2a4\ud134\uc2a4\uac00 \ud56d\uc0c1 \ub3d9\uc2dc\uc5d0 \uc0dd\uc131\ub41c\ub2e4\ub294 \uc0ac\uc2e4\uc744 \ucea1\uc290\ud654\ud569\ub2c8\ub2e4. serializer \ud074\ub798\uc2a4\uc758 .create() \uba54\uc11c\ub4dc\ub97c \uc0c8 \uad00\ub9ac\uc790 \ub9e4\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ub2e4\uc2dc \uc791\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. def create(self, validated_data): return User.objects.create( username=validated_data['username'], email=validated_data['email'] is_premium_member=validated_data['profile']['is_premium_member'] has_support_contract=validated_data['profile']['has_support_contract'] ) \uc774 \uc811\uadfc\ubc95\uc5d0 \ub300\ud55c \ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 model managers \uc640 this blogpost on using model and manager classes \uc744 \ucc38\uc870\ud558\uc138\uc694.","title":"\ubaa8\ub378 \uad00\ub9ac\uc790 \ud074\ub798\uc2a4\uc5d0\uc11c \uad00\ub828 \uc778\uc2a4\ud134\uc2a4 \uc800\uc7a5 \ucc98\ub9ac"},{"location":"Serializers/#dealing-with-multiple-objects","text":"Serializer \ud074\ub798\uc2a4\ub294 \uac1d\uccb4 \ubaa9\ub85d\uc758 serializer \ub610\ub294 deserializer\ub97c \ucc98\ub9ac \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"Dealing with multiple objects"},{"location":"Serializers/#serializer","text":"\ub2e8\uc77c \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4 \ub300\uc2e0 \ucffc\ub9ac\uc14b \ub610\ub294 \uac1d\uccb4 \ubaa9\ub85d\uc744 serializer\ud558\ub824\uba74 serializer\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c many=True \ud50c\ub798\uadf8\ub97c \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\ub984 serializer \ud560 \ucffc\ub9ac\uc14b\uc774\ub098 \uac1d\uccb4 \ubaa9\ub85d\uc744 \uc804\ub2ec \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. queryset = Book.objects.all() serializer = BookSerializer(queryset, many=True) serializer.data # [ # {'id': 0, 'title': 'The electric kool-aid acid test', 'author': 'Tom Wolfe'}, # {'id': 1, 'title': 'If this is a man', 'author': 'Primo Levi'}, # {'id': 2, 'title': 'The wind-up bird chronicle', 'author': 'Haruki Murakami'} # ]","title":"\uc5ec\ub7ec \uac1d\uccb4 serializer"},{"location":"Serializers/#deserializer","text":"\uc5ec\ub7ec \uac1d\uccb4\ub97c deserializer\ud654\ud558\ub294 \uae30\ubcf8\ub3d9\uc791\uc740 \uac1d\uccb4 \uc0dd\uc131\uc744 \uc9c0\uc6d0\ud558\uc9c0\ub9cc \uc5ec\ub7ec \uac1d\uccb4 \uc5c5\ub370\uc774\ud2b8\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uacbd\uc6b0 \uc911 \ud558\ub098\ub97c \uc9c0\uc6d0\ud558\uac70\ub098 \uc0ac\uc6a9\uc790 \uc9c0\uc815\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c\ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 ListSerializer \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"\uc5ec\ub7ec \uac1d\uccb4\ub97c deserializer"},{"location":"Serializers/#including-extra-context","text":"serializer\ub418\uace0 \uc788\ub294 \uac1d\uccb4\uc5d0 \ucd94\uac00\ub85c, serializer\uc5d0 \uc5ec\ubd84\uc758 \ubb38\ub9e5\uc744 \uc81c\uacf5 \ud560 \ud544\uc694\uac00 \uc774\ub294 \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ud55c \uac00\uc9c0 \uc77c\ubc18\uc801\uc778 \uacbd\uc6b0\ub294 \ud558\uc774\ud37c\ub9c1\ud06c \ub41c \uad00\uacc4\ub97c \ud3ec\ud568\ud558\ub294 serializer\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc774\uba70, serializer\uac00 \ud604\uc7ac \uc694\uccad\uc5d0 \uc561\uc11c\uc2a4\ud558\uc5ec \uc815\uaddc\ud654 \ub41c URL\uc744 \uc81c\ub300\ub85c \uc0dd\uc131 \ud560 \uc218 \uc788\uc5b4\uc57c\ud569\ub2c8\ub2e4. serializer\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c \ucee8\ud14d\uc2a4\ud2b8 \uc778\uc218\ub97c \uc804\ub2ec\ud558\uc5ec \uc784\uc758\uc758 \ucd94\uac00 \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc81c\uacf5 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: serializer = AccountSerializer(account, context={'request': request}) serializer.data # {'id': 6, 'owner': u'denvercoder9', 'created': datetime.datetime(2013, 2, 12, 09, 44, 56, 678870), 'details': 'http://example.com/accounts/6/details'} \ucee8\ud14d\uc2a4\ub4dc dict\uc740 \uc0ac\uc6a9\uc790 \uc815\uc758 .to_representation() \uba54\uc18c\ub4dc\uc640 \uac19\uc740 serializer \ud544\ub4dc \ub85c\uc9c1 \ub0b4\uc5d0\uc11c self.context \uc18d\uc131\uc5d0 \uc561\uc11c\uc2a4\ud558\uc5ec \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Including extra context (\ucd94\uac00 \ubb38\ub9e5 \ud3ec\ud568)"},{"location":"Serializers/#modelserializer","text":"\uc885\uc885 Django \ubaa8\ub378 \uc815\uc758\uc640 \ubc00\uc811\ud558\uac8c \ub9e4\ud551\ub418\ub294 serializer \ud074\ub798\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. ModelSerializer \ud074\ub798\uc2a4\ub294 \ubaa8\ub378 \ud544\ub4dc\uc5d0 \ud574\ub2f9\ud558\ub294 \ud544\ub4dc\uac00 \uc788\ub294 Serializer \ud074\ub798\uc2a4\ub97c \uc790\ub3d9\uc744 \ub9cc\ub4e4 \uc218 \uc788\ub294 \uc9c0\ub984\uae38\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. ModelSerializer \ud074\ub798\uc2a4\ub294 \ub2e4\uc74c\uc744 \uc81c\uc678\ud558\uace0\ub294 \uc77c\ubc18 Serializer \ud074\ub798\uc2a4\uc640 \ub3d9\uc77c\ud569\ub2c8\ub2e4. \ubaa8\ub378\uc744 \uae30\ubc18\uc73c\ub85c \uc77c\ub828\uc758 \ud544\ub4dc\uac00 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub429\ub2c8\ub2e4. unique_together validator\uc640 \uac19\uc740 serializer\uc5d0 \ub300\ud55c validator\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud569\ub2c8\ub2e4. .create() \uc640 .update() \uc758 \uac04\ub2e8\ud55c \uae30\ubcf8 \uad6c\ud604\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. ModelSerializer \uc120\uc5b8\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. class AccountSerializer(serializers.ModelSerializer): class Meta: model = Account fields = ('id', 'account_name', 'users', 'created') \uae30\ubcf8\uc801\uc73c\ub85c \ud074\ub798\uc2a4\uc758 \ubaa8\ub4e0 \ubaa8\ub378 \ud544\ub4dc\ub294 \ud574\ub2f9 serializer \ud544\ub4dc\uc5d0 \ub9e4\ud551\ub429\ub2c8\ub2e4. \ubaa8\ub378\uc758 \uc678\ub798 \ud0a4\uc640 \uac19\uc740 \uad00\uacc4\ub294 PrimaryKeyRelatedField \uc5d0 \ub9e4\ud551\ub429\ub2c8\ub2e4. \uc5ed\uc9c1\ub82c\ud654 \uad00\uacc4 \ubb38\uc11c \uc5d0 \uba85\uc2dc\ub41c\ub300\ub85c \uba85\uc2dd\uc801\uc73c\ub85c \ud3ec\ud568\ub418\uc9c0 \uc54a\uc73c\uba74 \uae30\ubcf8\uc801\uc73c\ub85c \uc5ed\uad00\uacc4\uac00 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"ModelSerializer"},{"location":"Serializers/#inspecting-a-modelserializer-modelserializer","text":"Serializer \ud074\ub798\uc2a4\ub294 \uc720\uc6a9\ud55c \ud544\ub4dc \ud45c\ud604 \ubb38\uc790\uc5f4\uc744 \uc0dd\uc131\ud558\ubbc0\ub85c, \ud544\ub4dc\uc758 \uc0c1\ud0dc\ub97c \uc644\uc804\ud788 \uac80\uc0ac \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub418\ub294 \ud544\ub4dc \ubc0f \uc720\ud6a8\uc131 \uac80\uc0ac\uae30\ub4e4\uc744 \uacb0\uc815\ud558\ub824\ub294 ModelSerializer \ub85c \uc791\uc5c5 \ud560 \ub54c \ud2b9\ud788 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\ub824\uba74, Django \uc258\uc744 \uc5f4\uc5b4\uc11c serializer \ud074\ub798\uc2a4\ub97c \uac00\uc838\uc640\uc11c \uc778\uc2a4\ud134\uc2a4\ud654\ud558\uace0, \uac1d\uccb4 \ud45c\ud604\uc744 \ucd9c\ub825\ud558\uc138\uc694. >>> from myapp.serializers import AccountSerializer >>> serializer = AccountSerializer() >>> print(repr(serializer)) AccountSerializer(): id = IntegerField(label='ID', read_only=True) name = CharField(allow_blank=True, max_length=100, required=False) owner = PrimaryKeyRelatedField(queryset=User.objects.all())","title":"Inspecting a ModelSerializer (ModelSerializer\uc744 \uac80\uc0ac)"},{"location":"Serializers/#specifying-which-fields-to-include","text":"\uae30\ubcf8 \ud544\ub4dc\uc758 \ud558\uc704 \uc9d1\ud569\uc744 \ubaa8\ub378 serializer\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0 ModelForm \uc5d0\uc11c\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 \uc635\uc158\uc744 \uc81c\uc678\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. fields \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec serializer\ud574\uc57c\ud558\ub294 \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c\ud558\uba74 \ubaa8\ub378\uc774 \ubcc0\uacbd \ub420 \ub54c \uc2e4\uc218\ub85c \ub370\uc774\ud130\uac00 \ub178\ucd9c \ub420 \uac00\ub2a5\uc131\uc774 \uc904\uc5b4 \ub4ed\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class AccountSerializer(serializers.ModelSerializer): class Meta: model = Account fields = ('id', 'account_name', 'users', 'created') \ub610\ud55c fields \uc18d\uc131\uc744 \ud2b9\uc218 \uac12 '__all__' \uc73c\ub85c \uc124\uc815\ud558\uc5ec \ubaa8\ub378\uc758 \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc57c \ud568\uc744 \ub098\ud0c0\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub4e4 \ub4e4\uba74: class AccountSerializer(serializers.ModelSerializer): class Meta: model = Account fields = '__all__' serializer\uc5d0\uc11c \uc81c\uc678 \ud560 \ud544\ub4dc \ubaa9\ub85d\uc5d0 exclude \uc18d\uc131\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class AccountSerializer(serializers.ModelSerializer): class Meta: model = Account exclude = ('users',) \uc704\uc758 \uc608\uc5d0\uc11c \uacc4\uc815 \ubaa8\ub378\uc5d0 account_name , users , created \ud544\ub4dc\uac00 3\uac1c \uc788\ub294 \uacbd\uc6b0, account_name \ud544\ub4dc\uac00 \ub9cc\ub4e4\uc5b4\uc9c0\uace0 serializer\ub418\ub3c4\ub85d \uc0dd\uc131\ub429\ub2c8\ub2e4. \ud544\ub4dc \ubc0f \uc81c\uc678 \uc18d\uc131\uc758 \uc774\ub984\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \ubaa8\ub378 \ud074\ub798\uc2a4\uc758 \ubaa8\ub378 \ud544\ub4dc\uc5d0 \ub9e4\ud551\ub429\ub2c8\ub2e4. \ub610\ub294 \ud544\ub4dc \uc635\uc158\uc758 \uc774\ub984\uc740 \ubaa8\ub378 \ud074\ub798\uc2a4\uc5d0 \uc874\uc7ac\ud558\ub294 \uc778\uc218\ub97c \ucde8\ud558\uc9c0 \uc54a\ub294 \uc18d\uc131\uc774\ub098 \uba54\uc11c\ub4dc\uc5d0 \ub9e4\ud551 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Specifying which fields to include (\ud3ec\ud568 \ud560 \ud544\ub4dc \uc9c0\uc815)"},{"location":"Serializers/#specifying-nested-serialization-serializer","text":"\uae30\ubcf8 ModelSerializer \ub294 \uad00\uacc4\uc5d0 \uae30\ubcf8 \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc depth \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc911\ucca9 \ub41c \ud45c\ud604\uc744 \uc27d\uac8c \uc0dd\uc131 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. class AccountSerializer(serializers.ModelSerializer): class Meta: model = Account fields = ('id', 'account_name', 'users', 'created') depth = 1 depth \uc635\uc158\uc740 flat \ud45c\ud604\uc73c\ub85c \ub418\ub3cc\ub9ac\uae30 \uc804\uc5d0 \ud0d0\uc0c9\ud574\uc57c\ud558\ub294 \uad00\uacc4\uc758 \uae4a\uc774\ub97c \ub098\ud0c0\ub0b4\ub294 \uc815\uc218 \uac12\uc73c\ub85c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. serializer\uac00 \uc218\ud589\ub418\ub294 \ubc29\uc2dd\uc744 \uc0ac\uc6a9\uc790 \uc815\uc758\ud558\ub824\uba74 \ud544\ub4dc\ub97c \uc9c1\uc811 \uc815\uc758\ud574\uc57c\ud569\ub2c8\ub2e4.","title":"Specifying nested serialization (\uc911\ucca9 \ub41c serializer \uc9c0\uc815)"},{"location":"Serializers/#specifying-fields-explicitly","text":"ModelSerializer \uc5d0 \ucd94\uac00 \ud544\ub4dc\ub97c \ucd94\uac00\ud558\uac70\ub098 Serializer \ud074\ub798\uc2a4\uc5d0\uc11c\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud074\ub798\uc2a4\uc758 \ud544\ub4dc\ub97c \uc120\uc5b8\ud558\uc5ec \uae30\ubcf8 \ud544\ub4dc\ub97c \uc7ac\uc815\uc758 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class AccountSerializer(serializers.ModelSerializer): url = serializers.CharField(source='get_absolute_url', read_only=True) groups = serializers.PrimaryKeyRelatedField(many=True) class Meta: model = Account \ucd94\uac00 \ud544\ub4dc\ub294 \ubaa8\ub378\uc758 \ubaa8\ub4e0 \uc18d\uc131 \ub610\ub294 \ud638\ucd9c \uac00\ub2a5 \ud56d\ubaa9\uc5d0 \ud574\ub2f9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Specifying fields explicitly (\uba85\uc2dc\uc801\uc73c\ub85c \ud544\ub4dc \uc9c0\uc815\ud558\uae30)"},{"location":"Serializers/#specifying-read-only-fields","text":"\uc5ec\ub7ec \ud544\ub4dc\ub97c \uc77d\uae30 \uc804\uc6a9\uc73c\ub85c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \ud544\ub4dc\ub294 read_only=True \ud2b9\uc131\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \ucd94\uac00\ud558\ub294 \ub300\uc2e0, \ubc14\ub85c\uac00\uae30 \uba54\ud0c0 \uc635\uc158\uc778 read_only_fields \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc635\uc158\uc740 \ud544\ub4dc \uc774\ub984\uc758 \ubaa9\ub85d\uc774\ub098 \ud29c\ud50c\uc774\uc5b4\uc57c\ud558\uba70 \ub2e4\uc74c\uacfc \uac19\uc774 \uc120\uc5b8\ub429\ub2c8\ub2e4. class AccountSerializer(serializers.ModelSerializer): class Meta: model = Account fields = ('id', 'account_name', 'users', 'created') read_only_fields = ('account_name',) editable=False set\uacfc AutoField \ud544\ub4dc\uac00 \uc788\ub294 \ubaa8\ub378 \ud544\ub4dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc77d\uae30 \uc804\uc6a9\uc73c\ub85c \uc124\uc815\ub418\uba70, read_only_fields \uc635\uc158\uc5d0 \ucd94\uac00 \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. Note : \uc77d\uae30 \uc804\uc6a9 \ud544\ub4dc\uac00 \ubaa8\ub378 \uc218\uc900\uc5d0\uc11c unique_together \uc81c\uc57d \uc870\uac74\uc758 \uc77c\ubd80\uc778 \ud2b9\ubcc4\ud55c \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \ud544\ub4dc\ub294 \uc81c\uc57d \uc870\uac74\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud558\uae30 \uc704\ud574 serializer \ud074\ub798\uc2a4\uc5d0\uc11c \ud544\uc694\ud558\uc9c0\ub9cc \uc0ac\uc6a9\uc790\uac00 \ud3b8\uc9d1\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc57c\ud569\ub2c8\ub2e4. \uc774\ub97c \ucc98\ub9ac\ud558\ub294 \uc62c\ubc14\ub978 \ubc29\ubc95\uc740 read_only=True \uc640 default=... \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \uc81c\uacf5\ud558\uc5ec serializer\uc5d0\uc11c \ud544\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ud55c\uac00\uc9c0 \uc608\ub294 \ud604\uc7ac \uc778\uc99d \ub41c \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \uc77d\uae30 \uc804\uc6a9 \uad00\uacc4\uc774\uba70\ub2e4\ub978 \uc2dd\ubcc4\uc790\uc640 \uace0\uc720\ud569\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \uc0ac\uc6a9\uc790 \ud544\ub4dc\ub97c \ub2e4\uc74c\uacfc \uac19\uc774 \uc120\uc5b8\ud569\ub2c8\ub2e4. user = serializers.PrimaryKeyRelatedField(read_only=True, default=serializers.CurrentUserDefault()) \ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud558\uc138\uc694.. Validators Documentation , UniqueTogetherValidator , CurrentUserDefault","title":"Specifying read only fields (\uc77d\uae30 \uc804\uc6a9 \ud544\ub4dc \uc9c0\uc815\ud558\uae30)"},{"location":"Serializers/#additional-keyword-arguments","text":"\ub610\ud55c extra_kwargs \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud544\ub4dc\uc5d0 \uc784\uc758\uc758 \ucd94\uac00 \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\ub294 \ub2e8\ucd95\ud0a4\uac00 \uc788\uc2b5\ub2c8\ub2e4. read_only_fields \uc758 \uacbd\uc6b0\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c, \uc774\uac83\uc740 serializer\uc5d0\uc11c \ud544\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc120\uc5b8 \ud560 \ud544\uc694\uac00 \uc5c6\uc74c\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \uc774 \uc635\uc158\uc740 \ud544\ub4dc \uc774\ub984\uc744 \ud0a4\uc6cc\ub4dc \uc778\uc218 dict\uc5d0 \ub9e4\ud551\ud558\ub294 dict\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74: class CreateUserSerializer(serializers.ModelSerializer): class Meta: model = User fields = ('email', 'username', 'password') extra_kwargs = {'password': {'write_only': True}} def create(self, validated_data): user = User( email=validated_data['email'], username=validated_data['username'] ) user.set_password(validated_data['password']) user.save() return user","title":"Additional keyword arguments (\ucd94\uac00 \ud0a4\uc6cc\ub4dc \uc778\uc218)"},{"location":"Serializers/#relational-fields","text":"\ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\ub97c serializer \ud560 \ub54c \uad00\uacc4\ub97c \ub098\ud0c0\ub0b4\uae30 \uc704\ud574 \uc120\ud0dd\ud560 \uc218 \uc788\ub294 \uc5ec\ub7ec \ubc29\ubc95\ub4e4\uc774 \uc788\uc2b5\ub2c8\ub2e4. ModelSerializer \uc758 \uae30\ubcf8 \ud45c\ud604\uc740 \uad00\ub828 \uc778\uc2a4\ud134\uc2a4\uc758 \uae30\ubcf8 \ud0a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub2e4\ub978 \ud45c\ud604\uc740 \ud558\uc774\ud37c\ub9c1\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec serializer, \uc644\uc804\ud55c \uc911\ucca9 \ud45c\ud604\uc744 serializer,\uc0ac\uc6a9\uc790 \uc815\uc758 \ud45c\ud604\uc744 \uc0ac\uc6a9\ud558\uc5ec serializer\ud558\ub294 \uac83\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 serializer relations \ucc38\uc870\ud558\uc138\uc694.","title":"Relational fields"},{"location":"Serializers/#customizing-field-mappings","text":"ModelSerializer \ud074\ub798\uc2a4\ub294 serializer\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c serializer \ud544\ub4dc\uac00 \uc790\ub3d9\uc73c\ub85c \uacb0\uc815\ub418\ub294 \ubc29\uc2dd\uc744 \ubcc0\uacbd\ud558\uae30 \uc704\ud574 \uc7ac\uc815\uc758 \ud560 \uc218 \uc788\ub294 API\ub3c4 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c ModelSerializer\uac00 \uae30\ubcf8\uc801\uc73c\ub85c \ud544\uc694\ud55c \ud544\ub4dc\ub97c \uc0dd\uc131\ud558\uc9c0 \uc54a\uc73c\uba74 \ud074\ub798\uc2a4\uc5d0 \uba85\uc2dc\uc801\uc73c\ub85c \ucd94\uac00\ud558\uac70\ub098 \ub300\uc2e0 \uc77c\ubc18 Serializer\ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uacbd\uc6b0\uc5d0 \ub530\ub77c \ud2b9\uc815 \ubaa8\ub378\uc5d0 \ub300\ud574 serializer \ud544\ub4dc\uac00 \uc0dd\uc131\ub418\ub294 \ubc29\uc2dd\uc744 \uc815\uc758\ud558\ub294 \uc0c8 \uae30\ubcf8 \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. .serializer_field_mapping Django \ubaa8\ub378 \ud074\ub798\uc2a4\uc640 REST \ud504\ub808\uc784\uc6cc\ud06c serializer \ud074\ub798\uc2a4\uc758 \ub9e4\ud551. \uc774 \ub9f5\ud551\uc744 \uacb9\uccd0 \uc4f0\uba74 \uac01 \ubaa8\ub378 \ud074\ub798\uc2a4\uc5d0 \uc0ac\uc6a9\ud574\ub7b4 \ud558\ub294 \uae30\ubcf8 serializer \ud074\ub798\uc2a4\ub97c \ubcc0\uacbd \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. .serializer_related_field \uc774 \uc18d\uc131\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \uad00\uacc4\ud615 \ud544\ub4dc\uc5d0 \uc0ac\uc6a9\ub418\ub294 serializer \ud544\ub4dc \ud074\ub798\uc2a4\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. ModelSerializer \uc758 \uacbd\uc6b0 \uae30\ubcf8\uac12\uc740 PrimaryKeyRelatedField \uc785\ub2c8\ub2e4. HyperlinkedModelSerializer \uc774 \uae30\ubcf8\uac12\uc774 serializers.HyperlinkedRelatedField \uc785\ub2c8\ub2e4. serializer_url_field serializer\uc758 url \ud544\ub4dc\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 serializer \ud544\ub4dc \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. serializers.HyperlinkedIdentityField \uac00 \uae30\ubcf8\uac12\uc785\ub2c8\ub2e4. serializer_choice_field serializer\uc758 \uc120\ud0dd \ud544\ub4dc\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 serializer \ud544\ub4dc \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. serializers.ChoiceField \uac00 \uae30\ubcf8\uac12\uc785\ub2c8\ub2e4.","title":"Customizing field mappings (\uc0ac\uc6a9\uc790 \uc815\uc758 \ud544\ub4dc \ub9e4\ud551)"},{"location":"Serializers/#the-field_class-and-field_kwargs-api","text":"\ub2e4\uc74c \uba54\uc11c\ub4dc\ub294 serializer\uc5d0 \uc790\ub3d9\uc73c\ub85c \ud3ec\ud568\ub418\uc5b4\uc57c \ud558\ub294 \uac01 \ud544\ub4dc\uc758 \ud074\ub798\uc2a4 \ubc0f \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \uacb0\uc815\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc774 \uba54\uc18c\ub4dc\ub4e4\uc740 \uac01\uac01 (field_class, field_kwargs) \uc758 \ub450 \ud29c\ud50c\uc744 \ub9ac\ud134\ud574\uc57c\ud569\ub2c8\ub2e4. .build_standard_field(self, field_name, model_field) \ud45c\uc900 \ubaa8\ub378 \ud544\ub4dc\uc5d0 \ub9e4\ud551\ub418\ub294 serializer \ud544\ub4dc\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \ub514\ud3f4\ud2b8\uc758 \uad6c\ud604\uc740 serializer_field_mapping \uc18d\uc131\uc5d0 \uadfc\uac70\ud55c serializer \ud074\ub798\uc2a4\ub97c \ub3cc\ub824\uc90d\ub2c8\ub2e4. .build_relational_field(self, field_name, relation_info) \uad00\uacc4\ud615 \ubaa8\ub378 \ud544\ub4dc\uc5d0 \ub9e4\ud551\ub418\ub294 serializer \ud544\ub4dc\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \ub514\ud3f4\ud2b8\uc758 \u200b\u200b\uad6c\ud604\uc740 serializer_relational_field \uc18d\uc131\uc5d0 \uadfc\uac70\ud55c serializer \ud074\ub798\uc2a4\ub97c \ub3cc\ub824\uc90d\ub2c8\ub2e4. relation_info \uc778\uc218\ub294 \uba85\uba85 \ub41c \ud29c\ud50c\uc774\uba70 model_field , related_model , to_many \ubc0f has_through_model \uc18d\uc131\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. .build_nested_field(self, field_name, relation_info, nested_depth) depth \uc635\uc158\uc774 \uc124\uc815 \ub41c \uacbd\uc6b0, \uad00\uacc4\ud615 \ubaa8\ub378 \ud544\ub4dc\uc5d0 \ub9e4\ud551\ub418\ub294 serializer \ud544\ub4dc\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uae30\ubcf8 \uad6c\ud604\uc740 ModelSerializer \ub610\ub294 HtperlinkedModelSerializer \ub97c \uae30\ubc18\uc73c\ub85c \uc911\ucca9 \ub41c serializer \ud074\ub798\uc2a4\ub97c \ub3d9\uc801\uc73c\ub85c \ub9cc\ub4ed\ub2c8\ub2e4. nested_delth \ub294 depth \uc635\uacac\uc758 \uac12\uc5d0\uc11c 1\uc744 \ube80 \uac12\uc785\ub2c8\ub2e4. relation_info \uc778\uc218\ub294 \uba85\uba85 \ub41c \ud29c\ud50c\uc774\uba70, model_field , related_model , to_many , has_through_model \uc18d\uc131\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. .build_property_field(self, field_name, model_class) \ubaa8\ub378 \ud074\ub798\uc2a4\uc758 \uc18d\uc131 \ub610\ub294 \uc778\uc218\uac00 \uc5c6\ub294 \uba54\uc11c\ub4dc\uc5d0 \ub9e4\ud551\ub418\ub294 serializer \ud544\ub4dc\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uae30\ubcf8 \uad6c\ud604\uc740 readOnlyField \ud074\ub798\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. .build_url_field(self, field_name, model_class) serializer \uc790\uc2e0\uc758 url \ud544\ub4dc\uc5d0 \ub300\ud55c serializer \ud544\ub4dc\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uae30\ubcf8 \uad6c\ud604\uc740 HyperlinkedIdentityField \ud074\ub798\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. .build_unknown_field(self, field_name, model_class) \ud544\ub4dc \uc774\ub984\uc774 \ubaa8\ub378 \ud544\ub4dc \ub610\ub294 \ubaa8\ub378 \uc18d\uc131\uc5d0 \ub9e4\ud551\ub418\uc9c0 \uc54a\uc558\uc744 \ub54c \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc11c\ube0c \ud074\ub798\uc2a4\uc5d0 \uc758\ud574 \uc774 \ub3d9\uc791\uc744 \uc0ac\uc6a9\uc790 \uc815\uc758\ud574\ub3c4, \uae30\ubcf8 \uad6c\ud604\uc5d0\uc11c\ub294 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4.","title":"The field_class and field_kwargs API"},{"location":"Serializers/#hyperlinkedmodelserializer","text":"HyperlinkedModelSerializer \ud074\ub798\uc2a4\ub294 \uae30\ubcf8 \ud0a4\uac00 \uc544\ub2cc \uad00\uacc4\ub97c \ub098\ud0c0 \ub0b4\uae30 \uc704\ud574 \ud558\uc774\ud37c \ub9c1\ud06c\ub97c \uc0ac\uc6a9\ud55c\ub2e4\ub294 \uc810\uc744 \uc81c\uc678\ud558\uace0\ub294 ModelSerializer \ud074\ub798\uc2a4\uc640 \uc720\uc0ac\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c serializer\uc5d0\ub294 \uae30\ubcf8 \ud0a4 \ud544\ub4dc \ub300\uc2e0 url \ud544\ub4dc\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. url \ud544\ub4dc\ub294 HyperlinkedIdentityField serializer \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud45c\ud604\ub418\uba70 \ubaa8\ub378\uc758 \ubaa8\ub4e0 \uad00\uacc4\ub294 HyperlinkedRelatedField serializer \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uae30\ubcf8 \ud0a4\ub97c fields \uc635\uc158\uc5d0 \ucd94\uac00\ud558\uc5ec \uba85\uc2dc\uc801\uc73c\ub85c \ud3ec\ud568\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class AccountSerializer(serializers.HyperlinkedModelSerializer): class Meta: model = Account fields = ('url', 'id', 'account_name', 'users', 'created')","title":"HyperlinkedModelSerializer"},{"location":"Serializers/#absolute-and-relative-urls","text":"HyperlinkedModelSerializer \ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c\ub294 \ud604\uc7ac request \uc744 serializer \ucee8\ud14d\uc2a4\ud2b8\uc5d0 \ud3ec\ud568\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74: serializer = AccountSerializer(queryset, context={'request': request}) \uc774\ub807\uac8c\ud558\uba74 \ud558\uc774\ud37c\ub9c1\ud06c\uc5d0 \uc801\uc808\ud55c \ud638\uc2a4\ud2b8 \uc774\ub984\uc774 \ud3ec\ud568\ub420 \uc218 \uc788\uc73c\ubbc0\ub85c \uacb0\uacfc \ud45c\ud604\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \uc815\uaddc\ud654 \ub41c URL\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. http://api.example.com/accounts/1/ \ub2e4\uc74c\uacfc \uac19\uc740 \uc0c1\ub300 URL\uc774 \uc544\ub2d9\ub2c8\ub2e4. /accounts/1/ \uc0c1\ub300 URL\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 serializer \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c { 'request': None} \uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc804\ub2ec\ud574\uc57c\ud569\ub2c8\ub2e4.","title":"Absolute and relative URLs"},{"location":"Serializers/#how-hyperlinked-views-are-determined","text":"\ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ud558\uc774\ud37c\ub9c1\ud06c\ud558\uae30 \uc704\ud574 \uc5b4\ub5a4 \ubdf0\ub97c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294\uc9c0 \uacb0\uc815 \ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \ud558\uc774\ud37c\ub9c1\ud06c\ub294 '{model_name} -detail' \uc2a4\ud0c0\uc77c\uacfc view \uc774\ub984\uacfc \uc77c\uce58\ud574\uc57c\ud558\uba70 pk \ud0a4\uc6cc\ub4dc \uc778\uc218\ub85c \uc778\uc2a4\ud134\uc2a4\ub97c \ucc3e\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc774 extra_kwargs \uc124\uc815\uc5d0\uc11c view_name \uacfc lookup_field \uc635\uc158 \uc911 \ud558\ub098 \ub610\ub294 \ub458 \ubaa8\ub450\ub97c \uc0ac\uc6a9\ud558\uc5ec URL \ud544\ub4dc view \uc774\ub984 \ubc0f \uc870\ud68c \ud544\ub4dc\ub97c \ubb34\uc2dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class AccountSerializer(serializers.HyperlinkedModelSerializer): class Meta: model = Account fields = ('account_url', 'account_name', 'users', 'created') extra_kwargs = { 'url': {'view_name': 'accounts', 'lookup_field': 'account_name'}, 'users': {'lookup_field': 'username'} } \ub610\ub294 serializer\uc5d0\uc11c \ud544\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class AccountSerializer(serializers.HyperlinkedModelSerializer): url = serializers.HyperlinkedIdentityField( view_name='accounts', lookup_field='slug' ) users = serializers.HyperlinkedRelatedField( view_name='user-detail', lookup_field='username', many=True, read_only=True ) class Meta: model = Account fields = ('url', 'account_name', 'users', 'created') tip : \ud558\uc774\ud37c \ub9c1\ud06c\ub85c \ud45c\uc2dc\ub41c \ud45c\ud604\uacfc URL conf\ub97c \uc801\uc808\ud558\uac8c \uc77c\uce58\uc2dc\ud0a4\ub294 \uac83\uc740 \ub54c\ub85c\ub294 \uc57d\uac04\uc758 \uc2e4\uc218 \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. HyperlinkedModelSerializer \uc778\uc2a4\ud134\uc2a4\uc758 repr \uc744 \uc778\uc1c4\ud558\ub294 \uac83\uc740 \uad00\uacc4\uac00 \ub9e4\ud551 \ud560 \uac83\uc73c\ub85c \uc608\uc0c1\ub418\ub294 \ubdf0 \uc774\ub984\uacfc \uc870\ud68c \ud544\ub4dc\ub97c \uc815\ud655\ud558\uac8c \uac80\uc0ac\ud558\ub294 \ub370 \ud2b9\ud788 \uc720\uc6a9\ud569\ub2c8\ub2e4.","title":"How hyperlinked views are determined (\ud558\uc774\ud37c\ub9c1\ud06c\ub85c \uc5f0\uacb0\ub41c \ubdf0\uac00 \uacb0\uc815\ub418\ub294 \ubc29\ubc95)"},{"location":"Serializers/#changing-the-url-field-name","text":"URL \uc785\ub825\ub780\uc758 \uc774\ub984\uc740 'url'\ub85c \uae30\ubcf8 \uc124\uc815\ub429\ub2c8\ub2e4. URL_FIELD_NAME \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec\uc774\ub97c \uc804\uc5ed\uc73c\ub85c \uc7ac\uc815\uc758 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Changing the URL field name"},{"location":"Serializers/#listserializer","text":"ListSerializer \ud074\ub798\uc2a4\ub294 \uc5ec\ub7ec \uac1c\uccb4\ub97c \ud55c \ubc88\uc5d0 serialize\ud558\uace0 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud558\ub294 \ub3d9\uc791\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c ListSerializer \ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud560 \ud544\uc694\ub294 \uc5c6\uc9c0\ub9cc \ub300\uc2e0 serializer\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c many=True \ub97c \uc804\ub2ec\ud574\uc57c\ud569\ub2c8\ub2e4. serializer\uac00 \uc778\uc2a4\ud134\uc2a4\ud654\ub418\uace0 many=True \uac00 \uc804\ub2ec\ub418\uba74 ListSerializer \uc778\uc2a4\ud134\uc2a4\uac00 \ub9cc\ub4e4\uc5b4\uc9d1\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c serializer \ud074\ub798\uc2a4\ub294 \ubd80\ubaa8 ListSerializer \uc758 \uc790\uc2dd\uc774\ub429\ub2c8\ub2e4. \ub2e4\uc74c \uc778\uc218\ub294 ListSerializer \ud544\ub4dc\ub098 many=True \ub85c \uc804\ub2ec\ub418\ub294 serializer\uc5d0\ub3c4 \uc804\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. allow_empty \uae30\ubcf8\uc801\uc73c\ub85c True \uc774\uc9c0\ub9cc \ube48 \uc785\ub825\uc744 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\uc73c\ub824\uba74 False \ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"ListSerializer"},{"location":"Serializers/#customizing-listserializer-behavior","text":"ListSerializer \ub3d9\uc791\uc744 \uc0ac\uc6a9\uc790 \uc815\uc758\ud558\ub824\ub294 \uacbd\uc6b0\uac00 \uba87 \uac00\uc9c0 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\uc815 \uc694\uc18c\uac00 \ubaa9\ub85d\uc758 \ub2e4\ub978 \uc694\uc18c\uc640 \ucda9\ub3cc\ud558\uc9c0 \uc54a\ub294\uc9c0 \ud655\uc778\ud558\ub294 \ub4f1 \ubaa9\ub85d\uc758 \ud2b9\uc815 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc81c\uacf5\ud558\ub824\uace0\ud569\ub2c8\ub2e4. \uc5ec\ub7ec \uac1d\uccb4\uc758 \uc791\uc131 \ub610\ub294 \uc5c5\ub370\uc774\ud2b8 \ub3d9\uc791\uc744 \uc0ac\uc6a9\uc790 \uc815\uc758\ud558\ub824\uace0\ud569\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 serializer \uba54\ud0c0 \ud074\ub798\uc2a4\uc5d0\uc11c list_serializer_class \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec many=True \uac00 \uc804\ub2ec \ub420 \ub54c \uc0ac\uc6a9\ub418\ub294 \ud074\ub798\uc2a4\ub97c \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class CustomListSerializer(serializers.ListSerializer): ... class CustomSerializer(serializers.Serializer): ... class Meta: list_serializer_class = CustomListSerializer","title":"Customizing ListSerializer behavior"},{"location":"Serializers/#customizing-multiple-create","text":"\uc5ec\ub7ec \uac1d\uccb4 \uc0dd\uc131\uc744\uc704\ud55c \uae30\ubcf8 \uad6c\ud604\uc740 \ubaa9\ub85d\uc758 \uac01 \ud56d\ubaa9\uc5d0 \ub300\ud574 .create() \ub97c \ud638\ucd9c\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc744 \uc0ac\uc6a9\uc790 \uc815\uc758\ud558\ub824\uba74 many=True \uac00 \uc804\ub2ec \ub420 \ub54c \uc0ac\uc6a9\ub418\ub294 ListSerializer \ud074\ub798\uc2a4\uc5d0\uc11c .create() \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\uc790 \uc815\uc758\ud574\uc57c\ud569\ub2c8\ub2e4. class BookListSerializer(serializers.ListSerializer): def create(self, validated_data): books = [Book(**item) for item in validated_data] return Book.objects.bulk_create(books) class BookSerializer(serializers.Serializer): ... class Meta: list_serializer_class = BookListSerializer","title":"Customizing multiple create(\uc5ec\ub7ec \uc791\uc131 \uc0ac\uc6a9\uc790 \uc815\uc758)"},{"location":"Serializers/#customizing-multiple-update","text":"\uae30\ubcf8\uc801\uc73c\ub85c ListSerializer \ud074\ub798\uc2a4\ub294 \ub2e4\uc911 \uc5c5\ub370\uc774\ud2b8\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc0bd\uc785 \ubc0f \uc0ad\uc81c\uc5d0 \ub300\ud574 \uc608\uc0c1\ub418\ub294 \ub3d9\uc791\uc774 \ubaa8\ud638\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uc5ec\ub7ec \uc5c5\ub370\uc774\ud2b8\ub97c \uc9c0\uc6d0\ud558\ub824\uba74 \uba85\uc2dc\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud574\uc57c\ud569\ub2c8\ub2e4. \uc5ec\ub7ec \uac1c\uc758 \uc5c5\ub370\uc774\ud2b8 \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \ub54c \ub2e4\uc74c \uc0ac\ud56d\uc744 \uc5fc\ub450\uc5d0 \ub450\uc2ed\uc2dc\uc624. \ub370\uc774\ud130 \ubaa9\ub85d\uc758 \uac01 \ud56d\ubaa9\uc5d0 \ub300\ud574 \uc5b4\ub5a4 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5c5\ub370\uc774\ud2b8\ud574\uc57c\ud558\ub294\uc9c0 \uc5b4\ub5bb\uac8c \uacb0\uc815\ud569\ub2c8\uae4c? \uc0bd\uc785\uc744 \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud574\uc57c\ud569\ub2c8\uae4c? \uadf8\uac83\ub4e4\uc740 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc2b5\ub2c8\uae4c? \uc544\ub2c8\uba74 \uc0c8\ub85c\uc6b4 objects\ub97c \ub9cc\ub4dc\ub098\uc694? \uc81c\uac70\ubb3c\uc740 \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud574\uc57c\ud569\ub2c8\uae4c? \uac1d\uccb4 \uc0ad\uc81c \ub610\ub294 \uad00\uacc4 \uc81c\uac70\ub97c \uc758\ubbf8\ud569\ub2c8\uae4c? \uadf8\ub4e4\uc740 \uc870\uc6a9\ud788 \ubb34\uc2dc\ud574\uc57c\ud569\ub2c8\uae4c, \uc544\ub2c8\uba74 \ubb34\ud6a8\ud569\ub2c8\uae4c? \uc8fc\ubb38\uc740 \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud574\uc57c\ud569\ub2c8\uae4c? \ub450 \ud56d\ubaa9\uc758 \uc704\uce58 \ubcc0\uacbd\uc740 \uc0c1\ud0dc \ubcc0\uacbd\uc744 \uc758\ubbf8\ud569\ub2c8\uae4c \uc544\ub2c8\uba74 \ubb34\uc2dc\ub429\ub2c8\uae4c? \uc778\uc2a4\ud134\uc2a4 serializer\uc5d0 \uba85\uc2dc\uc801\uc73c\ub85c id \ud544\ub4dc\ub97c \ucd94\uac00\ud574\uc57c\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc0dd\uc131\ub41c id \ud544\ub4dc\ub294 read_only \ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uc774\ub85c \uc778\ud574 \uc5c5\ub370\uc774\ud2b8\uc2dc \uc81c\uac70\ub429\ub2c8\ub2e4. \uba85\uc2dc\uc801\uc73c\ub85c \uc120\uc5b8\ud558\uba74 \ubaa9\ub85d serializer\uc758 update \uba54\uc18c\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \uc5ec\ub7ec \uc5c5\ub370\uc774\ud2b8\ub97c \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc608\uc785\ub2c8\ub2e4. class BookListSerializer(serializers.ListSerializer): def update(self, instance, validated_data): # Maps for id->instance and id->data item. book_mapping = {book.id: book for book in instance} data_mapping = {item['id']: item for item in validated_data} # Perform creations and updates. ret = [] for book_id, data in data_mapping.items(): book = book_mapping.get(book_id, None) if book is None: ret.append(self.child.create(data)) else: ret.append(self.child.update(book, data)) # Perform deletions. for book_id, book in book_mapping.items(): if book_id not in data_mapping: book.delete() return ret class BookSerializer(serializers.Serializer): # We need to identify elements in the list using their primary key, # so use a writable field here, rather than the default which would be read-only. id = serializers.IntegerField() ... id = serializers.IntegerField(required=False) class Meta: list_serializer_class = BookListSerializer REST \ud504\ub808\uc784\uc6cc\ud06c2\uc5d0 \uc788\ub294 allow_add_remove \ub3d9\uc791\uacfc \uc720\uc0ac\ud55c \uc5c5\ub370\uc774\ud2b8 \uc791\uc5c5\uc5d0 \ub300\ud55c \uac83\uc740 3.1 \ub9b4\ub9ac\uc2a4\uc5d0 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Customizing multiple update(\uc5ec\ub7ec \uc5c5\ub370\uc774\ud2b8 \ub9de\ucda4 \uc124\uc815)"},{"location":"Serializers/#customizing-listserializer-initialization-listserializer","text":"many=True \uac00 \uc788\ub294 serializer\uac00 \uc778\uc2a4\ud134\uc2a4\ud654\ub418\uba74 \uc790\uc2dd serializer \ud074\ub798\uc2a4\uc640 \uc0c1\uc704 ListSerializer \ud074\ub798\uc2a4 \ubaa8\ub450\uc5d0 \ub300\ud574 .__ init __() \uba54\uc11c\ub4dc\uc5d0 \uc804\ub2ec\ud560 \uc778\uc218 \ubc0f \ud0a4\uc6cc\ub4dc \uc778\uc218\ub97c \uacb0\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. \ub514\ud3f4\ud2b8\uc758 \u200b\u200b\uad6c\ud604\uc740, validator \ub97c \uc81c\uc678 \ud574, \uc591\ucabd \ubaa8\ub450\uc758 \ud074\ub798\uc2a4\uc5d0 \ubaa8\ub4e0 \uc778\uc218\ub97c \uac74\ub124\uc8fc\ub294 \uac83\uc785\ub2c8\ub2e4. \uc591\ucabd \ubaa8\ub450\ub294 customizer \ud0a4\uc6cc\ub4dc\uc758 \uc778\uc218\uc785\ub2c8\ub2e4. \uc591\ucabd \ubaa8\ub450, \uc544\uc774\ub514 serializer \ud074\ub798\uc2a4\ub97c \ub300\uc0c1\uc73c\ub85c\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub54c\ub54c\ub85c many=True \uac00 \uc804\ub2ec \ub420 \ub54c \ud558\uc704 \ud074\ub798\uc2a4\uc640 \ubd80\ubaa8 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ud654 \ubc29\ubc95\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. many_init \ud074\ub798\uc2a4 \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 \uadf8\ub807\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. @classmethod def many_init(cls, *args, **kwargs): # Instantiate the child serializer. kwargs['child'] = cls() # Instantiate the parent list serializer. return CustomListSerializer(*args, **kwargs)","title":"Customizing ListSerializer initialization (ListSerializer \ucd08\uae30\ud654 \uc0ac\uc6a9\uc790 \uc815\uc758)"},{"location":"Serializers/#baseserializer","text":"BaseSerializer \ub294 serializer\uc640 deserializer \uc2a4\ud0c0\uc77c\uc744 \uc27d\uac8c \uc9c0\uc6d0\ud558\ub294\ub370 \uc0ac\uc6a9\ud560\uc218 \uc788\ub294 \ub300\uc548\uc785\ub2c8\ub2e4. \uc774 \ud074\ub798\uc2a4\ub294 Serializer \ud074\ub798\uc2a4\uc640 \uac19\uc740 \uae30\ubcf8 API\ub97c \uad6c\ud604\ud569\ub2c8\ub2e4. .date - \ubc1c\uc2e0 \uae30\ubcf4 \ud45c\ud604\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. .is_valid() - \ub4e4\uc5b4\uc624\ub294 \ub370\uc774\ud130\ub97c serializer \ud574\uc81c\uc640 \uac80\uc99d\ud569\ub2c8\ub2e4. .validated_data - \uac80\uc99d \ub41c \uc218\uc2e0 \ub370\uc774\ud130\ub97c \ub9ac\ud134\ud569\ub2c8\ub2e4. .errors - \uac80\uc99d \uc911\uc5d0 \uc5d0\ub7ec\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. .save() - \uac80\uc99d \ub41c \ub370\uc774\ud130\ub97c \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4. serializer \ud074\ub798\uc2a4\uc5d0\uc11c \uc9c0\uc6d0\ud560 \uae30\ub2a5\uc5d0 \ub530\ub77c \ubb34\uc2dc\ud560 \uc218\uc788\ub294 \ub124 \uac00\uc9c0 \uba54\uc11c\ub4dc\uac00 \uc788\uc2b5\ub2c8\ub2e4. .to_representation() - \uc77d\uae30 \uc870\uc791\uc744 \uc704\ud574 serializer\ub97c \uc9c0\uc6d0\ud558\ub824\uba74 \uc774\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc138\uc694. .to_internal_value() - \uc4f0\uae30 \uc870\uc791\uc744 \uc704\ud574 deserializer\ub97c \uc9c0\uc6d0\ud558\ub824\uba74 \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc138\uc694. .create() , .update() - \uc778\uc2a4\ud134\uc2a4 \uc800\uc7a5\uc744 \uc9c0\uc6d0\ud558\uae30 \uc704\ud574 \uc774\ub4e4 \uc911 \ud558\ub098\ub098 \ub458\ub2e4 \ubb34\uc2dc\ud558\uc138\uc694. \uc774 \ud074\ub798\uc2a4\ub294 Serializer \ud074\ub798\uc2a4\uc640 \ub3d9\uc77c\ud55c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc81c\uacf5\ud558\uae30 \ub54c\ubb38\uc5d0 \uc77c\ubc18 Serializer \ub610\ub294 ModelSerializer \uc5d0\uc11c \uc0ac\uc6a9\ud558\ub358 \uac83\uacfc \ub611\uac19\uc774 \uae30\uc874 CBV\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. BaseSerializer \ud074\ub798\uc2a4\ub294 browsable API\uc5d0\uc11c HTML \uc591\uc2dd\uc744 \uc0dd\uc131\ud558\uc9c0 \uc54a\ub294\ub2e4\ub294 \uc810\uc5d0\uc11c \uc8fc\ubaa9\ud560 \uac83\uc785\ub2c8\ub2e4. \uc774\ub294 \ubc18\ud658\ud558\ub294 \ub370\uc774\ud130\uc5d0 \uac01 \ud544\ub4dc\ub97c \uc801\uc808\ud55c HTML \uc785\ub825\uc73c\ub85c \ub80c\ub354\ub9c1 \ud560 \uc218 \uc788\ub294 \ubaa8\ub4e0 \ud544\ub4dc \uc815\ubcf4\ub97c \ud3ec\ud568\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.","title":"BaseSerializer"},{"location":"Serializers/#read-only-baseserializer-classes","text":"BaseSerializer \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc77d\uae30 \uc804\uc6a9 serializer\ub97c \uad6c\ud604\ud558\ub824\uba74 .to_representation() \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud574\uc57c\ud569\ub2c8\ub2e4. \uac04\ub2e8\ud55c Django \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\ub294 \uc608\uc81c\ub97c \uc0b4\ud3b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. class HighScore(models.Model): created = models.DateTimeField(auto_now_add=True) player_name = models.CharField(max_length=10) score = models.IntegerField() HighScore \uc778\uc2a4\ud134\uc2a4\ub97c \uc6d0\uc2dc \ub370\uc774\ud130 \uc720\ud615\uc73c\ub85c \ubcc0\ud658\ud558\uae30\uc704\ud55c \uc77d\uae30 \uc804\uc6a9 serializer \ucee8\ubc84\ud130\ub97c \ub9cc\ub4dc\ub294 \uac83\uc740 \uac04\ub2e8\ud569\ub2c8\ub2e4. class HighScoreSerializer(serializers.BaseSerializer): def to_representation(self, obj): return { 'score': obj.score, 'player_name': obj.player_name } \uc774\uc81c \uc774 \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub2e8\uc77c HighScore \uc778\uc2a4\ud134\uc2a4\ub97c serializer \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. @api_view(['GET']) def high_score(request, pk): instance = HighScore.objects.get(pk=pk) serializer = HighScoreSerializer(instance) return Response(serializer.data) \ub610\ub294 \uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5ec\ub7ec \uc778\uc2a4\ud134\uc2a4\ub97c serializer\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. @api_view(['GET']) def all_high_scores(request): queryset = HighScore.objects.order_by('-score') serializer = HighScoreSerializer(queryset, many=True) return Response(serializer.data)","title":"Read-only BaseSerializer classes"},{"location":"Serializers/#read-write-baseserializer-classes","text":"\uc77d\uae30-\uc4f0\uae30 serializer\ub97c \ub9cc\ub4e4\ub824\uba74 \uba3c\uc800 .to_internal_value() \uba54\uc11c\ub4dc\ub97c \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\ub97c \uad6c\uc131\ud558\ub294\ub370 \uc0ac\uc6a9 \ub420 \uc720\ud6a8\uc131\uc774 \uc788\ub294 \uac12\uc744 \ubc18\ud658\ud558\uace0 \uc81c\uacf5\ub41c \ub370\uc774\ud130\uac00 \uc798\ubabb\ub41c \ud615\uc2dd\uc778 \uacbd\uc6b0 ValidationError\ub97c \ubc1c\uc0dd\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. .to_internal_value() \ub97c \uad6c\ud604\ud558\uba74 serializer\uc5d0\uc11c \uae30\ubcf8 \uc720\ud6a8\uc131 \uac80\uc0ac API\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\uba70 .is_valid() , .validated_data \ubc0f .errors \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. .save() \ub3c4 \uc9c0\uc6d0\ud558\ub824\uba74 .create() \ubc0f .update() \uba54\uc18c\ub4dc \uc911 \ud558\ub098 \ub610\ub294 \ubaa8\ub450\ub97c \uad6c\ud604\ud574\uc57c\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \uc77d\uae30-\uc4f0\uae30 \uc791\uc5c5\uc744 \ubaa8\ub450 \uc9c0\uc6d0\ud558\ub3c4\ub85d \uc5c5\ub370\uc774\ud2b8 \ub41c \uc774\uc804\uc758 HighScoreSerializer \uc758 \uc804\uccb4 \uc608\uc81c\uc785\ub2c8\ub2e4. class HighScoreSerializer(serializers.BaseSerializer): def to_internal_value(self, data): score = data.get('score') player_name = data.get('player_name') # Perform the data validation. if not score: raise ValidationError({ 'score': 'This field is required.' }) if not player_name: raise ValidationError({ 'player_name': 'This field is required.' }) if len(player_name) > 10: raise ValidationError({ 'player_name': 'May not be more than 10 characters.' }) # Return the validated values. This will be available as # the `.validated_data` property. return { 'score': int(score), 'player_name': player_name } def to_representation(self, obj): return { 'score': obj.score, 'player_name': obj.player_name } def create(self, validated_data): return HighScore.objects.create(**validated_data)","title":"Read-write BaseSerializer classes"},{"location":"Serializers/#creating-new-base-classes","text":"BaseSerializer \ud074\ub798\uc2a4\ub294 \ud2b9\uc815 serializer \uc2a4\ud0c0\uc77c\uc744 \ucc98\ub9ac\ud558\uac70\ub098 \ub300\uccb4 \uc800\uc7a5 \uc7a5\uce58 \ubc31\uc5d4\ub4dc\uc640 \ud1b5\ud569\ud558\uae30 \uc704\ud574 \uc0c8 generic serializer \ud074\ub798\uc2a4\ub97c \uad6c\ud604\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0\ub3c4 \uc720\uc6a9\ud569\ub2c8\ub2e4. \ub2e4\uc74c \ud074\ub798\uc2a4\ub294 \uc784\uc758\uc758 \uac1d\uccb4\ub97c \uae30\ubcf8 \uc790\ub8cc\ud615\uc73c\ub85c \uac15\uc81c \ubcc0\ud658 \ud560 \uc218 \uc788\ub294 \uc77c\ubc18 serializer \ucee8\ubc84\ud130\uc758 \uc608\uc785\ub2c8\ub2e4. class ObjectSerializer(serializers.BaseSerializer): \"\"\" A read-only serializer that coerces arbitrary complex objects into primitive representations. \"\"\" def to_representation(self, obj): for attribute_name in dir(obj): attribute = getattr(obj, attribute_name) if attribute_name('_'): # Ignore private attributes. pass elif hasattr(attribute, '__call__'): # Ignore methods and other callables. pass elif isinstance(attribute, (str, int, bool, float, type(None))): # Primitive types can be passed through unmodified. output[attribute_name] = attribute elif isinstance(attribute, list): # Recursively deal with items in lists. output[attribute_name] = [ self.to_representation(item) for item in attribute ] elif isinstance(attribute, dict): # Recursively deal with items in dictionaries. output[attribute_name] = { str(key): self.to_representation(value) for key, value in attribute.items() } else: # Force anything else to its string representation. output[attribute_name] = str(attribute)","title":"Creating new base classes"},{"location":"Serializers/#advanced-serializer-usage","text":"","title":"Advanced serializer usage (\uace0\uae09 \uc0ac\uc6a9\ubc95)"},{"location":"Serializers/#overriding-serialization-and-deserialization-behavior","text":"serializer \ud074\ub798\uc2a4\uc758 serialization, deserialization \ub610\ub294 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \ubcc0\uacbd\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 .to_representation() \ub610\ub294 .to_internal_value() \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\ud569\ub2c8\ub2e4. \uc720\uc6a9\ud55c \uc774\uc720\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc0c8\ub85c\uc6b4 serializer \uae30\ubcf8 \ud074\ub798\uc2a4\uc5d0 \ub300\ud55c \uc0c8\ub85c\uc6b4 \ub3d9\uc791\uc744 \ucd94\uac00 \uae30\uc874 \ud074\ub798\uc2a4\uc758 \ub3d9\uc791\uc744 \uc57d\uac04 \uc218\uc815\ud569\ub2c8\ub2e4. \ub9ce\uc740 \uc591\uc758 \ub370\uc774\ud130\ub97c \ubc18\ud658\ud558\uba70 \uc790\uc8fc \uc561\uc11c\uc2a4\ub418\ub294 API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 serializer \uc131\ub2a5 \ud5a5\uc0c1 \uc774 \uba54\uc18c\ub4dc\uc758 \uc11c\uba85\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. .to_representation(self, obj) serializer\uac00 \ud544\uc694\ud55c \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\ub97c \uac00\uc838\uc640\uc11c \uc6d0\uc2dc \ud45c\ud604\uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774\uac83\uc740 \ub0b4\uc7a5 \ud30c\uc774\uc36c \ub370\uc774\ud130 \uc720\ud615\uc758 \uad6c\uc870\ub97c \ubc18\ud658\ud558\ub294 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \ucc98\ub9ac \ud560 \uc218 \uc788\ub294 \uc815\ud655\ud55c \uc720\ud615\uc740 API\uc5d0 \ub300\ud574 \uad6c\uc131\ud55c \ub80c\ub354\ub9c1 \ud074\ub798\uc2a4\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. .to_internal_value(self, data) \uac80\uc99d\ub418\uc9c0 \uc54a\uc740 \ub370\uc774\ud130\ub97c \uc785\ub825 \ubc1b\uc544 serializer.validated_data \ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc720\ud6a8\uc131\uc774 \uac80\uc0ac \ub41c \ub370\uc774\ud130\ub97c \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. serializer \ud074\ub798\uc2a4\uc5d0\uc11c .save() \uac00 \ud638\ucd9c\ub418\uba74 \ubc18\ud658 \uac12\ub3c4 .create() \ub610\ub294 .update() \uba54\uc11c\ub4dc\uc5d0 \uc804\ub2ec\ub429\ub2c8\ub2e4. \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc2e4\ud328\ud558\uba74 \uba54\uc11c\ub4dc\ub294 serializers.ValidationError (\uc624\ub958)\ub97c \ubc1c\uc0dd\uc2dc\ucf1c\uc57c\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc5ec\uae30\uc5d0 \uc788\ub294 errors \uc778\uc218\ub294 \ud544\ub4dc \uc774\ub984\uc744 \uc624\ub958 \uba54\uc138\uc9c0\uc5d0 \ub9e4\ud551\ud558\ub294 dict\uc785\ub2c8\ub2e4. \uc774 \uba54\uc18c\ub4dc\uc5d0 \uc804\ub2ec \ub41c data \uc778\uc218\ub294 \uc77c\ubc18\uc801\uc73c\ub85c request.data \uc758 \uac12\uc774\ubbc0\ub85c, \uc81c\uacf5\ud558\ub294 \ub370\uc774\ud130 \uc720\ud615\uc740 API\uc5d0 \ub300\ud574 \uad6c\uc131\ud55c \ud30c\uc11c \ud074\ub798\uc2a4\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4.","title":"Overriding serialization and deserialization behavior"},{"location":"Serializers/#serializer-inheritance","text":"Django \ud3fc\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc0c1\uc18d\uc744 \ud1b5\ud574 serializer\ub97c \ud655\uc7a5\ud558\uace0 \ub2e4\uc2dc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ub9ce\uc740 \uc218\uc758 serializer\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ubd80\ubaa8 \ud074\ub798\uc2a4\uc758 \uacf5\ud1b5 \ud544\ub4dc \ub610\ub294 \uba54\uc11c\ub4dc \uc9d1\ud569\uc744 \uc120\uc5b8 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74: class MyBaseSerializer(Serializer): my_field = serializers.CharField() def validate_my_field(self): ... class MySerializer(MyBaseSerializer): ... Django\uc758 Model \uacfc ModelForm \ud074\ub798\uc2a4\ucc98\ub7fc, serializer\uc758 \ub0b4\ubd80 Meta \ud074\ub798\uc2a4\ub294 \ubd80\ubaa8\uc758 \ub0b4\ubd80 Meta \ud074\ub798\uc2a4\ub97c \uc0c1\uc18d\ubc1b\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Meta \ud074\ub798\uc2a4\uac00 \ubd80\ubaa8 \ud074\ub798\uc2a4\uc5d0\uc11c \uc0c1\uc18d \ubc1b\uae30\ub97c \uc6d0\ud55c\ub2e4\uba74 \uba85\uc2dc\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608: class AccountSerializer(MyBaseSerializer): class Meta(MyBaseSerializer.Meta): model = Account \uc77c\ubc18\uc801\uc73c\ub85c \ub0b4\ubd80 \uba54\ud0c0 \ud074\ub798\uc2a4\uc5d0\uc11c\ub294 \uc0c1\uc18d\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 \ubaa8\ub4e0 \uc635\uc158\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc120\uc5b8\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub610\ud55c \ub2e4\uc74c\uacfc \uac19\uc740 \uc8fc\uc758\uc0ac\ud56d\uc774 serializer \uc0c1\uc18d\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc778 Python \uc774\ub984 \ud574\uc11d \uaddc\uce59\uc774 \uc801\uc6a9\ub429\ub2c8\ub2e4. Meta \ub0b4\ubd80 \ud074\ub798\uc2a4\ub97c \uc120\uc5b8\ud558\ub294 \uc5ec\ub7ec \uae30\ubcf8 \ud074\ub798\uc2a4\uac00 \uc788\ub294 \uacbd\uc6b0, \uccab\ubc88\uc9f8 \ud074\ub798\uc2a4\ub9cc \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774\uac83\uc740 \uc790\ub140\uc758 \uba54\ud0c0\uac00 \uc874\uc7ac\ud55c\ub2e4\uba74 \uba54\ud0c0\ub97c \uc758\ubbf8\ud558\uace0, \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uccab\ubc88\uc9f8 \ubd80\ubaa8\uc758 \uba54\ud0c0\ub97c \uc758\ubbf8\ud569\ub2c8\ub2e4. \ud558\uc704 \ud074\ub798\uc2a4\uc5d0\uc11c \uc774\ub984\uc744 \uc5c6\uc74c\uc73c\ub85c \uc124\uc815\ud558\uc5ec \ubd80\ubaa8 \ud074\ub798\uc2a4\uc5d0\uc11c \uc0c1\uc18d \ub41c Field \ub97c \uc120\uc5b8\uc73c\ub85c \uc81c\uac70 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class MyBaseSerializer(ModelSerializer): my_field = serializers.CharField() class MySerializer(MyBaseSerializer): my_field = None \uadf8\ub7ec\ub098 \uc774 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uc0c1\uc704 \ud074\ub798\uc2a4\uc5d0 \uc758\ud574 \uc120\uc5b8\uc801\uc73c\ub85c \uc815\uc758 \ub41c \ud544\ub4dc\uc5d0\uc11c \uc120\ud0dd \ud574\uc7ac \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 ModelSerializer \uac00 \ub514\ud3f4\ud2b8 \ud544\ub4dc\ub97c \uc0dd\uc131\ud558\ub294 \uac83\uc744 \ub9c9\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4.\uae30\ubcf8 \ud544\ub4dc\uc5d0\uc11c \uc120\ud0dd\ud574\uc81c\ud558\ub824\uba74 Specifying which fields to include \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"Serializer Inheritance (\uc0c1\uc18d)"},{"location":"Serializers/#dynamically-modifying-fields","text":"serializer\uac00 \ucd08\uae30\ud654\ub418\uba74 serializer\uc5d0\uc11c \uc124\uc815\ub41c \ud544\ub4dc dict\uc5d0 .fields \ud2b9\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc561\uc11c\uc2a4 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc18d\uc131\uc5d0 \uc561\uc11c\uc2a4\ud558\uace0 \uc218\uc815\ud558\uba74 serializer \ucee8\ubc84\ud130\ub97c \ub3d9\uc801\uc73c\ub85c \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. fields \uc778\uc218\ub97c \uc9c1\uc811 \uc218\uc815\ud558\uba74 serializer \uc120\uc5b8 \uc2dc\uc810\uc774 \uc544\ub2cc \ub7f0\ud0c0\uc784\uc2dc serializer \ud544\ub4dc\uc758 \uc778\uc218 \ubcc0\uacbd\uacfc \uac19\uc740 \ud765\ubbf8\ub85c\uc6b4 \uc791\uc5c5\uc744 \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Dynamically modifying fields (\ub3d9\uc801\uc73c\ub85c \ud544\ub4dc\ub97c \uc218\uc815)"},{"location":"Serializers/#example","text":"\uc608\ub97c \ub4e4\uc5b4, serializer\uc5d0\uc11c \ucd08\uae30\ud654\ud560 \ub54c \uc0ac\uc6a9\ud560 \ud544\ub4dc\ub97c \uc124\uc815\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 serializer \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class DynamicFieldsModelSerializer(serializers.ModelSerializer): \"\"\" A ModelSerializer that takes an additional `fields` argument that controls which fields should be displayed. \"\"\" def __init__(self, *args, **kwargs): # Don't pass the 'fields' arg up to the superclass fields = kwargs.pop('fields', None) # Instantiate the superclass normally super(DynamicFieldsModelSerializer, self).__init__(*args, **kwargs) if fields is not None: # Drop any fields that are not specified in the `fields` argument. allowed = set(fields) existing = set(self.fields.keys()) for field_name in existing - allowed: self.fields.pop(field_name) \uc774\ub807\uac8c \ud558\uba74 \ub2e4\uc74c\uc744 \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. >>> class UserSerializer(DynamicFieldsModelSerializer): >>> class Meta: >>> model = User >>> fields = ('id', 'username', 'email') >>> >>> print UserSerializer(user) {'id': 2, 'username': 'jonwatts', 'email': 'jon@example.com'} >>> >>> print UserSerializer(user, fields=('id', 'email')) {'id': 2, 'email': 'jon@example.com'}","title":"Example"},{"location":"Serializers/#customizing-the-default-fields","text":"REST \ud504\ub808\uc784\uc6cc\ud06c2\uc5d0\uc11c\ub294 \uac1c\ubc1c\uc790\uac00 ModelSerializer \ud074\ub798\uc2a4\uac00 \uae30\ubcf8 \ud544\ub4dc set\uc744 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uc7ac\uc815\uc758 \ud560 \uc218 \uc788\ub294 API\ub97c \uc81c\uacf5\ud588\uc2b5\ub2c8\ub2e4. \uc774 API\uc5d0\ub294 .get_field() , get_pk_field() \uc640 \uadf8\uc678\uc758 \uba54\uc18c\ub4dc\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc serializer\uac00 \uadfc\ubcf8\uc801\uc73c\ub85c 3.0\uc73c\ub85c \ub2e4\uc2dc \ub514\uc790\uc778 \ub418\uc5c8\uae30 \ub54c\ubb38\uc5d0 \uc774 API\ub294 \ub354\uc774\uc0c1 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc0dd\uc131 \ub41c \ud544\ub4dc\ub294 \uc5ec\uc804\ud788 \uc218\uc815\ud560 \uc218 \uc788\uc9c0\ub9cc \uc18c\uc2a4\ucf54\ub4dc\ub97c \ucc38\uc870\ud574\uc57c\ud558\uba70, \ubcc0\uacbd\uc0ac\ud56d\uc774 API\uc758 \ube44\uacf5\uac1c \ube44\ud2b8\uc5d0 \ud574\ub2f9\ud558\uba74 \ubcc0\uacbd \ub420 \uc218 \uc788\uc74c\uc744 \uc54c\uace0 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.","title":"Customizing the default fields"},{"location":"Serializers/#third-party-packages","text":"\ub2e4\uc74c\uc758 \ud0c0\uc0ac \ud328\ud0a4\uc9c0\ub3c4 \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"Third party packages"},{"location":"Serializers/#django-rest-marshmallow","text":"Django-rest-marshmallow \ud328\ud0a4\uc9c0\ub294 \ud30c\uc774\uc36c marshmallow \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2dc\ub9ac\uc5bc\ub77c\uc774\uc800\uc758 \ub300\uccb4 \uad6c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c serializers\uc640 \ub3d9\uc77c\ud55c API\ub97c \uc81c\uacf5\ud558\uba70, \uc77c\ubd80 use-cases\ub294 drop-in \ub300\uccb4\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Django REST marshmallow"},{"location":"Serializers/#serpy","text":"Serpy \ud328\ud0a4\uc9c0\ub294 \uc18d\ub3c4 \ud5a5\uc0c1\uc744 \uc704\ud574 \ub9cc\ub4e4\uc5b4\uc9c4 serializer\uc758 \ub300\uc548 \uad6c\ud604\uc785\ub2c8\ub2e4. Serpy\uc740 \ubcf5\uc7a1\ud55c \ub370\uc774\ud130 \uc720\ud615\uc744 \ub2e8\uc21c\ud55c \uae30\ubcf8 \uc720\ud615\uc73c\ub85c serializer\ud569\ub2c8\ub2e4. \uae30\ubcf8 \uc720\ud615\uc740 JSON \uc774\ub098 \ud544\uc694\ud55c \ub2e4\ub978 \ud615\uc2dd\uc73c\ub85c \uc27d\uac8c \ubcc0\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Serpy"},{"location":"Serializers/#mongoenginemodelserializer","text":"django-rest-framework-mongoengine \ud328\ud0a4\uc9c0\ub294 MongiEngineModelSerializer serializer \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud558\uc5ec MongoDB\ub97c Django REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \uc800\uc7a5\uc18c \uacc4\uce35\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \uc9c0\uc6d0\ud569\ub2c8\ub2e4.","title":"MongoengineModelSerializer"},{"location":"Serializers/#geofeaturemodelserializer","text":"django-rest-framework-gis \ud328\ud0a4\uc9c0\ub294 GeoJSON\uc744 \uc77d\uae30\uc640 \uc4f0\uae30 \uc791\uc5c5 \ubaa8\ub450 \uc9c0\uc6d0\ud558\ub294 GeoFeatureModelSerializer Serializer \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"GeoFeatureModelSerializer"},{"location":"Serializers/#hstoreserializer","text":"django-rest-framework-hstore \ud328\ud0a4\uc9c0\ub294 django-hstore DictionaryField \ubaa8\ub378 \ud544\ub4dc\uc640 schema-mode \uae30\ub2a5\uc744 \uc9c0\uc6d0\ud558\ub294 HStoreSerializer \ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"HStoreSerializer"},{"location":"Serializers/#dynamic-rest","text":"Dynamic-Rest \ud328\ud0a4\uc9c0\ub294 ModelSerializer \ubc0f ModelViewSet \uc778\ud130\ud398\uc774\uc2a4\ub97c \ud655\uc7a5\ud558\uace0 \ud544\ud130\ub9c1, \uc815\ub82c, serializer\uc5d0\uc11c \uc815\uc758\ud55c \ubaa8\ub4e0 \ud544\ub4dc\uc640 \uad00\uacc4\ub97c \ud3ec\ud568/\uc81c\uc678\ud558\ub294 API \ucffc\ub9ac parameter\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4.","title":"Dynamic REST"},{"location":"Serializers/#dynamic-fields-mixin","text":"drf_dynamic-fields \ud328\ud0a4\uc9c0\ub294 serializer\ub2f9 \ud544\ub4dc\ub97c URL parameter\ub85c \uc9c0\uc815\ub41c \uc11c\ube0c \uc138\ud2b8\ub85c \ub3d9\uc801\uc73c\ub85c \uc81c\ud55c\ud558\uae30 \uc704\ud574 mixin\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Dynamic Fields Mixin"},{"location":"Serializers/#drf-flexfields","text":"drf-flex-fields \ud328\ud0a4\uc9c0\ub294 ModelSerializer \ubc0f ModelViewSet\uc744 \ud655\uc7a5\ud558\uc5ec \ud544\ub4dc\ub97c \ub3d9\uc801\uc73c\ub85c \uc124\uc815\ud558\uace0 \uae30\ubcf8 \ud544\ub4dc\ub97c \uc911\ucca9 \ubaa8\ub378\ub85c \ud655\uc7a5\ud558\ub294\ub370, \uc77c\ubc18\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \uae30\ub2a5\uc744 URL parameter \ubc0f serializer \ud074\ub798\uc2a4 \uc815\uc758\uc5d0\uc11c \ubaa8\ub450 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"DRF FlexFields"},{"location":"Serializers/#serializer-extensions","text":"django-rest-framework-serializer-extensions \ud328\ud0a4\uc9c0\ub294 \ubcf4\uae30/\uc694\uccad \ub2e8\uc704\ub85c \ud544\ub4dc\ub97c \uc815\uc758 \ud560 \uc218\uc788\uac8c \ud558\uc5ec serializer\ub97c DRY \ud560 \uc218 \uc788\ub294 \ub3c4\uad6c \ubaa8\uc74c\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ud544\ub4dc\ub97c \ud5c8\uc6a9 \ubaa9\ub85d\uc5d0 \ucd94\uac00\ud558\uace0 \ube14\ub799\ub9ac\uc2a4\ud2b8\uc5d0 \uc62c\ub9b4 \uc218 \uc788\uc73c\uba70 \uc790\uc2dd serializer\ub97c \uc120\ud0dd\uc801\uc73c\ub85c \ud655\uc7a5 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Serializer Extensions"},{"location":"Serializers/#html-json-forms","text":"html-json-forms \ud328\ud0a4\uc9c0\ub294 HTML JSON Form specification (\ube44\ud65c\uc131)\uc5d0 \ub530\ub77c <form> \uc81c\ucd9c\uc744 \ucc98\ub9ac\ud558\ub294 \uc54c\uace0\ub9ac\uc998 \ubc0f serializer\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. serializer\ub294 HTML \ub0b4\uc5d0\uc11c \uc784\uc758\ub85c \uc911\ucca9 \ub41c JSON \uad6c\uc870\ub97c \uc27d\uac8c \ucc98\ub9ac\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, <input name=\"item[0][id]\" value=\"5\"> \ub294 {\"items\": [{\"id\": \"5\"}]} \uc73c\ub85c \ud574\uc11d\ub429\ub2c8\ub2e4.","title":"HTML JSON Forms"},{"location":"Serializers/#drf-base64","text":"DRF-Base64 \ub294 base64 \uc778\ucf54\ub529 \ud30c\uc77c\uc744 \uc5c5\ub85c\ub4dc\ub97c \ucc98\ub9ac\ud558\ub294 \uc77c\ub828\uc758 \ud544\ub4dc\uc640 model serializers\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"DRF-Base64"},{"location":"Serializers/#queryfields","text":"djangorestframework-queryfields \ub97c \uc0ac\uc6a9\ud558\uba74 API \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ud3ec\ud568/\uc81c\uc678 \uac80\uc0c9\uc5b4 parameter\ub97c \ud1b5\ud574 \uc751\ub2f5\uc5d0\uc11c \uc5b4\ub5a4 \ud544\ub4dc\ub97c \ubcf4\ub0bc\uc9c0 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"QueryFields"},{"location":"Serializers/#drf-writable-nested","text":"drf-writable-nested \ud328\ud0a4\uc9c0\ub294 \uc911\ucca9 \ub41c \uad00\ub828 \ub370\uc774\ud130\ub85c \ubaa8\ub378\uc744 \uc791\uc131/\uc5c5\ub370\uc774\ud2b8 \ud560 \uc218 \uc788\ub294 \uc4f0\uae30 \uac00\ub2a5\ud55c \uc911\ucca9 model serializer\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"DRF Writable Nested"},{"location":"Settings/","text":"Django REST Framework - Settings \"Namespaces are one honking great idea - let's do more of those!\" \"\ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud6cc\ub96d\ud55c \uc544\uc774\ub514\uc5b4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. let's do more of those!\" \u2014 The Zen of Python Settings REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \ubaa8\ub4e0 \uc124\uc815\uc740 REST_FRAMEWORK \ub77c\ub294 \ub2e8\uc77c Django \uc124\uc815\uc5d0 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ud504\ub85c\uc81d\ud2b8\uc758 settings.py \ud30c\uc77c\uc5d0\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \ub0b4\uc6a9\uc774 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_RENDERER_CLASSES': ( 'rest_framework.renderers.JSONRenderer', ), 'DEFAULT_PARSER_CLASSES': ( 'rest_framework.parsers.JSONParser', ) } Accessing settings \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 API \uc124\uc815\uac12\uc5d0 \uc561\uc11c\uc2a4\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 api_settings \uac1d\uccb4\ub97c \uc0ac\uc6a9\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74. from rest_framework.settings import api_settings print api_settings.DEFAULT_AUTHENTICATION_CLASSES api_settings \uac1d\uccb4\ub294 \uc0ac\uc6a9\uc790\uac00 \uc815\uc758\ud55c \uc124\uc815\uc744 \ud655\uc778\ud558\uace0 \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uae30\ubcf8\uac12\uc744 fall back\ud569\ub2c8\ub2e4. \ud074\ub798\uc2a4\ub97c \ucc38\uc870\ud558\uae30 \uc704\ud574 string import path\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \uc124\uc815\uc740 \ubb38\uc790\uc5f4 \ub9ac\ud130\ub7f4 \ub300\uc2e0 \ucc38\uc870 \ub41c \ud074\ub798\uc2a4\ub97c \uc790\ub3d9\uc73c\ub85c \uac00\uc838\uc624\uace0 \ubc18\ud658\ud569\ub2c8\ub2e4. API Reference API policy settings \ub2e4\uc74c \uc124\uc815\uc740 \uae30\ubcf8 API \uc815\ucc45\uc744 \uc81c\uc5b4\ud558\uba70 \ubaa8\ub4e0 APIView CBV \ub610\ub294 @api_view FBV\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4. DEFAULT_RENDERER_CLASSES Response \uac1d\uccb4\ub97c \ubc18\ud658\ud560 \ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 renderer\uc758 \uae30\ubcf8 set\uc744 \uacb0\uc815\ud558\ub294 rederer \ud074\ub798\uc2a4\uc758 list \ub610\ub294 tuple\uc785\ub2c8\ub2e4. Default: ( 'rest_framework.renderers.JSONRenderer', 'rest_framework.renderers.BrowsableAPIRenderer', ) DEFAULT_PARSER_CLASSES request.data \uc18d\uc131\uc5d0 \uc561\uc11c\uc2a4 \ud560 \ub54c \uc0ac\uc6a9\ub418\ub294 parser\uc758 \uae30\ubcf8 set\uc744 \uacb0\uc815\ud558\ub294 parser \ud074\ub798\uc2a4\uc758 list \ub610\ub294 tuple\uc785\ub2c8\ub2e4. Default: ( 'rest_framework.parsers.JSONParser', 'rest_framework.parsers.FormParser', 'rest_framework.parsers.MultiPartParser' ) DEFAULT_AUTHENTICATION_CLASSES request.user \ub610\ub294 request.auth \ub4f1\ub85d \uc815\ubcf4\uc5d0 \uc561\uc11c\uc2a4\ud560 \ub54c \uc0ac\uc6a9\ub418\ub294 \uc778\uc99d\uc790\uc758 \uae30\ubcf8 set\uc744 \ud310\ubcc4\ud558\ub294 authentication \ud074\ub798\uc2a4\uc758 list \ub610\ub294 tuple\uc785\ub2c8\ub2e4. Default: ( 'rest_framework.authentication.SessionAuthentication', 'rest_framework.authentication.BasicAuthentication' ) DEFAULT_PERMISSION_CLASSES view\uc758 \uc2dc\uc791\uc5d0 \uccb4\ud06c \ub41c \uad8c\ud55c\uc758 \uae30\ubcf8 set\uc744 \uacb0\uc815\ud558\ub294 permission \ud074\ub798\uc2a4\uc758 list \ub610\ub294 tuple\uc785\ub2c8\ub2e4. permission\uc740 list\uc758 \ubaa8\ub4e0 \ud074\ub798\uc2a4\uc5d0\uc11c \ubd80\uc5ec\ud574\uc57c\ud569\ub2c8 \ub2e4. Default: ( 'rest_framework.permissions.AllowAny', ) DEFAULT_THROTTLE_CLASSES view\uc758 \uc2dc\uc791\uc5d0\uc11c \uc810\uac80\ub418\ub294 \uae30\ubcf8 throttle set\uc744 \uacb0\uc815\ud558\ub294 throttle \ud074\ub798\uc2a4\uc758 list \ub610\ub294 tuple\uc785\ub2c8\ub2e4. Default: () DEFAULT_CONTENT_NEGOTIATION_CLASS \ub4e4\uc5b4\uc624\ub294 request\uc5d0 \ub530\ub77c rederer\uac00 response\uc5d0 \ub300\ud574 \uc120\ud0dd\ub418\ub294 \ubc29\ubc95\uc744 \uacb0\uc815\ud558\ub294 content negotiation \ud074\ub798\uc2a4 \uc785\ub2c8\ub2e4. Default: 'rest_framework.negotiation.DefaultContentNegotiation' Generic view settings \ub2e4\uc74c \uc124\uc815\uc740 generic CBV\uc758 \ub3d9\uc791\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4. DEFAULT_PAGINATION_SERIALIZER_CLASS \uc774 \uc124\uc815\uc740 \uc81c\uac70\ub418\uc5c8\uc2b5\ub2c8\ub2e4. pagination API\ub294 \ucd9c\ub825 \ud615\uc2dd\uc744 \uacb0\uc815\ud558\uae30 \uc704\ud574 serializer\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc73c\ubbc0\ub85c \ub300\uc2e0 \ucd9c\ub825 \ud615\uc2dd \uc81c\uc5b4 \ubc29\ubc95\uc744 \uc9c0\uc815\ud558\uae30 \uc704\ud574 pagination \ud074\ub798\uc2a4\uc758 `'get_paginated_response`` \uba54\uc11c\ub4dc\ub97c \ub300\uccb4\ud574\uc57c\ud569\ub2c8\ub2e4. DEFAULT_FILTER_BACKENDS generic \ud544\ud130\ub9c1\uc5d0 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 filter backend \ud074\ub798\uc2a4 list\uc785\ub2c8\ub2e4. None \uc73c\ub85c \uc124\uc815\ud558\uba74 generic \ud544\ud130\ub9c1\uc774 \ube44\ud65c\uc131\ud654\ub429\ub2c8\ub2e4. PAGINATE_BY \uc774 \uc124\uc815\uc740 \uc81c\uac70 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. pagination \uc2a4\ud0c0\uc77c \uc124\uc815\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc9c0\uce68\uc740 setting the pagination style \ub97c \ucc38\uc870\ud558\uc138\uc694. PAGE_SIZE pagination\uc5d0 \uc0ac\uc6a9\ud560 \uae30\ubcf8 \ud398\uc774\uc9c0 \ud06c\uae30\uc785\ub2c8\ub2e4. None \uc73c\ub85c \uc124\uc815\ud558\uba74 \uae30\ubcf8\uc801\uc73c\ub85c pagination\uc774 \ube44\ud65c\uc131\ud654\ub429\ub2c8\ub2e4. Default: None PAGINATE_BY_PARAM \uc774 \uc124\uc815\uc740 \uc81c\uac70 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. pagination \uc2a4\ud0c0\uc77c \uc124\uc815\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc9c0\uce68\uc740 setting the pagination style \ub97c \ucc38\uc870\ud558\uc138\uc694. MAX_PAGINATE_BY \uc774 \uc124\uc815\uc740 \uc9c0\uc6d0 \uc911\ub2e8 \uc608\uc815\uc785\ub2c8\ub2e4. pagination \uc2a4\ud0c0\uc77c \uc124\uc815\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc9c0\uce68\uc740 setting the pagination style \ub97c \ucc38\uc870\ud558\uc138\uc694. SEARCH_PARAM SearchFilter \uac00 \uc0ac\uc6a9\ud558\ub294 \uac80\uc0c9\uc5b4\ub97c \uc9c0\uc815\ud558\ub294\ub370 \uc0ac\uc6a9 \ud560 \uc218 \uc788\ub294 \uac80\uc0c9\uc5b4 parameter\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. Default: search ORDERING_PARAM OrderingFilter \uc5d0 \uc758\ud574 \ubc18\ud658 \ub41c \uacb0\uacfc\uc758 \uc21c\uc11c\ub97c \uc9c0\uc815\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucffc\ub9ac parameter\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. Default: ordering Versioning settings DEFAULT_VERSION \ubc84\uc804 \uc815\ubcf4\uac00 \uc5c6\ub294 \uacbd\uc6b0 request.version \uc5d0 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \uac12\uc785\ub2c8\ub2e4. Default: None ALLOWED_VERSIONS \uc774 \uac12\uc744 \uc124\uc815\ud558\uba74 \ubc84\uc804 \uccb4\uacc4\uc5d0 \uc758\ud574 \ubc18\ud658 \ub420 \uc218 \uc788\ub294 \ubc84\uc804 set\uc774 \uc81c\ud55c\ub418\uba70, \uc81c\uacf5\ub41c \ubc84\uc804\uc774 \uc774 set\uc5d0 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc73c\uba74 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. Default: none VERSION_PARAM \ubbf8\ub514\uc5b4 \ud0c0\uc785 \ub610\ub294 URL \ucffc\ub9ac parameter\uc640 \uac19\uc774 \ubaa8\ub4e0 \ubc84\uc83c \uc9c0\uc815 parameter\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. Default: version Authentication settings \ub2e4\uc74c \uc124\uc815\uc740 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc758 \ub3d9\uc791\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4. UNAUTHENTICATED_USER \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc5d0 \ub300\ud574 request.user \ub97c \ucd08\uae30\ud654\ud558\ub294\ub370 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. Default: django.contrib.auth.models.AnonymousUser UNAUTHENTICATED_TOKEN \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc5d0 \ub300\ud574 request.auth \ub97c \ucd08\uae30\ud654\ud558\ub294\ub370 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. default: None -- Test settings \ub2e4\uc74c \uc124\uc815\uc740 APIRequestFactory \ubc0f APIClient\uc758 \ub3d9\uc791\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4. TEST_REQUEST_DEFAULT_FORMAT \ud14c\uc2a4\ud2b8 \uc694\uccad\uc744 \ud560\ub54c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \uae30\ubcf8 \ud615\uc2dd\uc785\ub2c8\ub2e4. \uc774 \uac12\uc740 TEST_REQUEST_RENDERER_CLASSES \uc124\uc815\uc758 renderer \ud074\ub798\uc2a4 \uc911 \ud558\ub098\uc758 \ud615\uc2dd\uacfc \uc77c\uce58\ud574\uc57c\ud569\ub2c8\ub2e4. Default: 'multipart' TEST_REQUEST_RENDERER_CLASSES \ud14c\uc2a4\ud2b8 \uc694\uccad\uc744 \uc791\uc131\ud560 \ub54c \uc9c0\uc6d0\ub418\ub294 renderer \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. client.post('/users', {'username': 'jamie'}, format='json') \uc774\ub7ec\ud55c renderer \ud074\ub798\uc2a4\uc758 \ud615\uc2dd\uc740 \ud14c\uc2a4\ud2b8 \uc694\uccad\uc744 \uad6c\uc131 \ud560 \ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Default: ( 'rest_framework.renderers.MultiPartRenderer', 'rest_framework.renderers.JSONRenderer' ) Schema generation controls SCHEMA_COERCE_PATH_PK \uc774\uac83\uc744 \uc124\uc815\ud558\uba74 schema path parameter\ub97c \uc0dd\uc131\ud560 \ub54c URL conf\uc758 'pk' \uc2dd\ubcc4\uc790\ub97c \uc2e4\uc81c \ud544\ub4dc \uc774\ub984\uc73c\ub85c \ub9e4\ud551\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c 'id' \uac00 \ub429\ub2c8\ub2e4. \uc774\uac83\uc740 \"indentifer\"\uac00 \uc880 \ub354 \uc77c\ubc18\uc801\uc778 \uac1c\ub150\uc778 \ubc18\uba74 \"primary key\"\ub294 \uc138\ubd80 \uc0ac\ud56d\uc774\ubbc0\ub85c \ubcf4\ub2e4 \uc801\ud569\ud55c \ud45c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Default: True SCHEMA_COERCE_METHOD_NAMES \uc774\uac83\uc774 \uc124\uc815\ub418\uba74 \ub0b4\ubd80 viewset \uba54\uc18c\ub4dc \uc774\ub984\uc744 schema generation\uc5d0 \uc0ac\uc6a9 \ub518 \uc678\ubd80 \uc561\uc158 \uc774\ub984\uc5d0 \ub9e4\ud551\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774\uac83\uc740 \ucf54\ub4dc \ubca0\uc774\uc2a4\uc5d0\uc11c \ub0b4\ubd80\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \uac83\ubcf4\ub2e4 \uc678\ubd80 \ud45c\ud604\uc5d0 \ub354 \uc801\ud569\ud55c \uc774\ub984\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uac8c \ud574\uc90d\ub2c8\ub2e4. Default: {'retrieve': 'read', 'destroy': 'delete'} Content type controls URL_FORMAT_OVERRIDE \uae30\ubcf8 content negotiation Accept \uc744 \uc624\ubc84\ub77c\uc774\ub4dc\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 URL parameter\uc758 \uc774\ub984 \uc694\uccad URL\uc5d0\uc11c format=... \ucffc\ub9ac parameter\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud5e4\ub354\uc758 \ub3d9\uc791\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uc608: http://example.com/organizations/?format=csv \uc774 \uc124\uc815 \uac12\uc774 None \uc774\uba74 URL \ud615\uc2dd \uc624\ubc84\ub77c\uc774\ub4dc\uac00 \ube44\ud65c\uc131\ud654 \ub429\ub2c8\ub2e4. Default: 'format' FORMAT_SUFFIX_KWARG format suffix\ub97c \uc81c\uacf5\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 URL conf\uc758 parameter \uc774\ub984\uc785\ub2c8\ub2e4. \uc774 \uc124\uc815\uc740 format_suffix_pattern`\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc811\ubbf8\uc0ac\ub85c \ub41c URL\ud328\ud134\uc744 \ud3ec\ud568\ud560 \ub54c \uc801\uc6a9\ub429\ub2c8\ub2e4. \uc608: http://example.com/organizations.csv/ Default: 'format' Date and time formatting \ub2e4\uc74c \uc124\uc815\uc740 \ub0a0\uc9dc \ubc0f \uc2dc\uac04 \ud45c\ud604\uc744 \ud30c\uc2f1\ud558\uace0 \ub80c\ub354\ub9c1\ud558\ub294 \ubc29\ubc95\uc744 \uc81c\uc5b4\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. DATETIME_FORMAT DateTimeField Serializer \ud544\ub4dc\uc758 \ucd9c\ub825\uc744 \ub80c\ub354\ub9c1\ud558\uae30 \uc704\ud574 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \ud615\uc2dd \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. None \uc774\uba74 DateTimeField serializer \ud544\ub4dc\ub294 Python datetime \uac1d\uccb4\ub97c \ubc18\ud658\ud558\uace0, datetime \uc778\ucf54\ub529\uc740 \ub80c\ub354\ub7ec\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. None , 'iso-8601' \ub610\ub294 Python strftime format \ud615\uc2dd \ubb38\uc790\uc5f4 \uc8fc \ud558\ub098 \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Default: 'iso-8601' DATETIME_INPUT_FORMATS DateTimeField serializer \ud544\ub4dc\uc5d0 \ub300\ud55c \uc785\ub825\uc744 \ud30c\uc2f1\ud558\uae30\uc704\ud574 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud615\uc2dd\ubb38\uc790\uc5f4 list\uc785\ub2c8\ub2e4. \ubb38\uc790\uc5f4 'iso-8601' \ub610\ub294 python strftime format \ud615\uc2dd \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568\ud558\ub294 list\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Default: ['iso-8601'] DATE_FORMAT DateField serializer\ud544\ub4dc\uc758 \ucd9c\ub825\uc744 \ub80c\ub354\ub9c1\ud558\uae30 \uc704\ud574 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud615\uc2dd \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. None \uc774\uba74 DateField serializer \ud544\ub4dc\ub294 Python date \uac1d\uccb4\ub97c \ubc18\ud658\ud558\uace0 \ub0a0\uc9dc \uc778\ucf54\ub529\uc740 \ub80c\ub354\ub7ec\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. None , 'iso-8601' \ub610\ub294 python strftime format \ud615\uc2dd \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568\ud558\ub294 list\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Default: ['iso-8601'] DATE_INPUT_FORMATS DateField serializer \ud544\ub4dc\uc5d0 \ub300\ud55c \uc785\ub825\uc744 \ud30c\uc2f1\ud558\uae30 \uc704\ud574 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud615\uc2dd \ubb38\uc790\uc5f4 list\uc785\ub2c8\ub2e4. \ubb38\uc790\uc5f4 'iso-8601' \ub610\ub294 python strftime format \ud615\uc2dd \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568\ud558\ub294 list\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Default: ['iso-8601'] TIME_FORMAT TimeField serializer \ud544\ub4dc\uc758 \ucd9c\ub825\uc744 \ub80c\ub354\ub9c1 \ud560 \ub54c \uae30\ubcf8\uc800\uae0d\ub85c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud615\uc2dd \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. None \uc774\uba74 TimeField serializer \ud544\ub4dc\ub294 Python time \uac1d\uccb4\ub97c \ubc18\ud658\ud558\uace0 time \uc778\ucf54\ub529\uc740 \ub80c\ub354\ub7ec\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. None , 'iso-8601' \ub610\ub294 python strftime format \ud615\uc2dd \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568\ud558\ub294 list\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Default: ['iso-8601'] TIME_INPUT_FORMATS TimeField serializer \ud544\ub4dc\uc5d0 \ub300\ud55c \uc785\ub825\uc744 \ud30c\uc2f1\ud558\uae30 \uc704\ud574 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \ud615\uc2dd \ubb38\uc790\uc5f4 list\uc785\ub2c8\ub2e4. \ubb38\uc790\uc5f4 'iso-8601' \ub610\ub294 python strftime format \ud615\uc2dd \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568\ud558\ub294 list\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Default: ['iso-8601'] Encodings UNICODE_JSON True \ub85c \uc124\uc815\ud558\uba74, JSON response\uac00 response\uc5d0 \uc720\ub2c8\ucf54\ub4dc \ubb38\uc790\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. {\"unicode black star\":\"\u2605\"} False \ub85c \uc124\uc815\ud558\uba74 JSON response\uac00 \ub2e4\uc74c\uacfc \uac19\uc774 non-ascii \ubb38\uc790\ub97c \uc774\uc2a4\ucf00\uc774\ud504\ud569\ub2c8\ub2e4. {\"unicode black star\":\"\\u2605\"} \ub450 \uc2a4\ud0c0\uc77c \ubaa8\ub450 RFC 4627 \uc744 \uc900\uc218\ud558\uba70 \uad6c\ubb38\uc801\uc73c\ub85c \uc720\ud6a8\ud55c JSON\uc785\ub2c8\ub2e4. \uc720\ub2c8\ucf54\ub4dc \uc2a4\ud0c0\uc77c\uc740 API \uc751\ub2f5\uc744 \uac80\uc0ac\ud560 \ub54c\ubcf4\ub2e4 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uce5c\uc219\ud55c \uac83\uc73c\ub85c \uc120\ud638\ub429\ub2c8\ub2e4. Default: True COMPACT_JSON True \ub85c \uc124\uc815\ud558\uba74 JSON response sms ':' \uacfc ',' \ubb38\uc790 \ub2e4\uc74c\uc5d0 \uacf5\ubc31\uc5c6\uc774 \uac04\uacb0\ud55c \ud45c\ud604\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. {\"is_admin\":false,\"email\":\"jane@example\"} False \ub85c \uc124\uc815\ud558\uba74 JSON \uc751\ub2f5\uc774 \ub2e4\uc74c\uacfc \uac19\uc774 \uc57d\uac04 \ub354 \uc790\uc138\ud55c \ud45c\ud604\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. {\"is_admin\": false, \"email\": \"jane@example\"} \uae30\ubcf8 \uc2a4\ud0c0\uc77c\uc740 Heroku's API design guidelines \uc5d0 \ub530\ub77c \ucd95\uc18c \ub41c \uc751\ub2f5\uc744 \ubc18\ud658\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. Default: True COERCE_DECIMAL_TO_STRING \uae30\uc874 decimal(10\uc9c4) type\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\ub294 API \ud45c\ud604\uc5d0\uc11c decimal \uc624\ube0c\uc81d\ud2b8\ub97c \ub9ac\ud134\ud560 \ub54c, \uc77c\ubc18\uc801\uc73c\ub85c \uac12\uc744 \ubb38\uc790\uc5f4\ub85c \ub9ac\ud134\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \ubc14\uc774\ub108\ub9ac \ubd80\ub3d9 \uc18c\uc218\uc810 \uad6c\ud604\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \uc815\ubc00\ub3c4\uc758 \uc190\uc2e4\uc744 \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. True \ub85c \uc124\uc815\ud558\uba74 serializer DecimalField \ud074\ub798\uc2a4\uac00 Decimal \uac1d\uccb4 \ub300\uc2e0 \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. False \ub85c \uc124\uc815\ud558\uba74, serializer\ub294 Decimal \uac1d\uccb4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774 \uac1d\uccb4\ub294 \uae30\ubcf8 JSON \uc778\ucf54\ub354\uac00 float\uc73c\ub85c \ubc18\ud658\ud569\ub2c8\ub2e4. Default: True View names and descriptions \ub2e4\uc74c \uc124\uc815\uc740 OPTIONS \uc694\uccad\uc5d0 \ub300\ud55c \uc751\ub2f5 \ubc0f Browsable API\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \uac83\uacfc \uac19\uc774 \ubdf0 \uc774\ub984 \ubc0f \uc124\uba85\uc744 \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. VIEW_NAME_FUNCTION \ubdf0 \uc774\ub984\uc744 \uc0dd\uc131\ud560 \ub54c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud568\uc218\ub97c \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. \uc774\uac83\uc740 \ub2e4\uc74c \uc2dc\uadf8\ub2c8\ucc98\uac00 \uc788\ub294 \ud568\uc218\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. view_name(cls, suffix=None) cls : \ubdf0 \ud074\ub798\uc2a4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774\ub984 \ud568\uc218\ub294 cls.__name__ \uc5d0 \uc561\uc11c\uc2a4\ud558\uc5ec \uc124\uba85\uc801\uc778 \uc774\ub984\uc744 \uc0dd\uc131 \ud560 \ub54c \ud074\ub798\uc2a4 \uc774\ub984\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4. suffix : viewset\uc5d0\uc11c \uac1c\ubcc4 \ubdf0\ub97c \uad6c\ubcc4 \ud560 \ub54c \uc0ac\uc6a9\ub418\ub294 \uc120\ud0dd\uc801 suffix Default: 'rest_framework.views.get_view_name' VIEW_DESCRIPTION_FUNCTION \ubdf0 \uc124\uba85\uc744 \uc0dd\uc131 \ud560 \ub54c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud568\uc218\ub97c \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. \uae30\ubcf8 \uc124\uc815 \uac12 \uc774\uc678\uc758 \ud0dc\uadf8 \uc2a4\ud0c0\uc77c\uc744 \uc9c0\uc6d0\ud558\ub3c4\ub85d \uc774 \uc124\uc815\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \ubcfc \uc218 \uc788\ub294 API\ub85c \ucd9c\ub825\ub418\ub294 \ubdf0 \ubb38\uc11c \ubb38\uc790\uc5f4\uc758 rst \ub9c8\ud06c\uc5c5\uc744 \uc9c0\uc6d0\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 \ub2e4\uc74c \uc2dc\uadf8\ub2c8\ucc98\uac00 \uc788\ub294 \ud568\uc218\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. view_description(cls, html=False) cls : \ubdf0 \ud074\ub798\uc2a4. \uc77c\ubc18\uc801\uc73c\ub85c \uc124\uba85 \ud568\uc218\ub294 cls.__doc__ \uc5d0 \uc561\uc11c\uc2a4\ud558\uc5ec \uc124\uba85\uc744 \uc0dd\uc131 \ud560 \ub54c \ud074\ub798\uc2a4\uc758 \ubb38\uc11c\ud654 \ubb38\uc790\uc5f4\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4. html : HTML \ucd9c\ub825\uc774 \ud544\uc694\ud55c\uc9c0 \ub098\ud0c0\ub0b4\ub294 boolean\uc785\ub2c8\ub2e4. \ud0d0\uc0c9 \uac00\ub2a5\ud55c API\uc5d0\uc11c \uc0ac\uc6a9\ub418\uba74 True \uc774\uace0, OPTIONS \uc751\ub2f5\uc744 \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ub418\uba74 False \uc785\ub2c8\ub2e4. Default: 'rest_framework.views.get_view_description' HTML Select Field cutoffs Browsable API\uc5d0\uc11c \uad00\uacc4\ud615 \ud544\ub4dc\ub97c \ub80c\ub354\ub9c1\ud558\uae30 \uc704\ud55c \uc120\ud0dd \ud544\ub4dc \ucef7\uc624\ud504 \uc5d0 \ub300\ud55c \uc804\uc5ed \uc124\uc815\uc785\ub2c8\ub2e4. HTML_SELECT_CUTOFF html_cutoff \uac12\uc758 \uc804\uc5ed \uc124\uc815\uc785\ub2c8\ub2e4. \uc815\uc218\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. Default: 1000 HTML_SELECT_CUTOFF_TEXT html_cutoff_text \uc758 \uc804\uc5ed \uc124\uc815\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. Default: \"More than {count} items...\" Miscellaneous settings EXCEPTION_HANDLER \uc9c0\uc815\ub41c \uc608\uc678\uc5d0 \ub300\ud55c \uc751\ub2f5\uc744 \ubc18\ud658\ud560 \ub54c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud568\uc218\ub97c \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. \uc774 \ud568\uc218\uac00 None \uc744 \ubc18\ud658\ud558\uba74 500 error\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774 \uc124\uc815\uc740 \uae30\ubcf8 {\"detail\": \"Failure...\"} \uc751\ub2f5 \uc774\uc678\uc758 \uc624\ub958 \uc751\ub2f5\uc744 \uc9c0\uc6d0\ud558\ub3c4\ub85d \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 {\"errors\": [{\"message\": \"Failure...\", \"code\": \"\"} ...]} \uc640 \uac19\uc740 API \uc751\ub2f5\uc744 \uc81c\uacf5\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 \ub2e4\uc74c \uc2dc\uadf8\ub2c8\ucc98\uac00 \uc788\ub294 \ud568\uc218\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. exception_handler(exc, context) exc : \uc608\uc678 Default: 'rest_framework.views.exception_handler' NON_FIELD_ERRORS_KEY \ud2b9\uc815 \ud544\ub4dc\ub97c \ucc38\uc870\ud558\uc9c0 \uc54a\uace0 \uc77c\ubc18\uc801\uc778 \uc624\ub958\uc778 serializer \uc624\ub958\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud0a4\ub97c \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. Default: 'non_field_errors' URL_FIELD_NAME HyperlinkedModelSerializer \uc5d0 \uc758\ud574 \uc0dd\uc131 \ub41c URL \ud544\ub4dc\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud0a4\ub97c \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. Default: 'url' NUM_PROXIES API\uac00 \uc2e4\ud589\ub418\ub294 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \ud504\ub85d\uc2dc \uc218\ub97c \uc9c0\uc815\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 0 \uc774\uc0c1\uc758 \uc815\uc218\uc785\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 throttling\uc744 \ud1b5\ud574 \ud074\ub77c\uc774\uc5b8\ud2b8 IP \uc8fc\uc18c\ub97c \ubcf4\ub2e4 \uc815\ud655\ud558\uac8c \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. None \uc73c\ub85c \uc124\uc815\ud558\uba74 \ub35c \uc5c4\uaca9\ud55c IP \ub9e4\uce6d\uc774 throttle \ud074\ub798\uc2a4\uc5d0\uc11c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Default: None","title":"Settings"},{"location":"Settings/#django-rest-framework-settings","text":"\"Namespaces are one honking great idea - let's do more of those!\" \"\ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud6cc\ub96d\ud55c \uc544\uc774\ub514\uc5b4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. let's do more of those!\" \u2014 The Zen of Python","title":"Django REST Framework - Settings"},{"location":"Settings/#settings","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \ubaa8\ub4e0 \uc124\uc815\uc740 REST_FRAMEWORK \ub77c\ub294 \ub2e8\uc77c Django \uc124\uc815\uc5d0 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ud504\ub85c\uc81d\ud2b8\uc758 settings.py \ud30c\uc77c\uc5d0\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \ub0b4\uc6a9\uc774 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_RENDERER_CLASSES': ( 'rest_framework.renderers.JSONRenderer', ), 'DEFAULT_PARSER_CLASSES': ( 'rest_framework.parsers.JSONParser', ) }","title":"Settings"},{"location":"Settings/#accessing-settings","text":"\ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 API \uc124\uc815\uac12\uc5d0 \uc561\uc11c\uc2a4\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 api_settings \uac1d\uccb4\ub97c \uc0ac\uc6a9\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74. from rest_framework.settings import api_settings print api_settings.DEFAULT_AUTHENTICATION_CLASSES api_settings \uac1d\uccb4\ub294 \uc0ac\uc6a9\uc790\uac00 \uc815\uc758\ud55c \uc124\uc815\uc744 \ud655\uc778\ud558\uace0 \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uae30\ubcf8\uac12\uc744 fall back\ud569\ub2c8\ub2e4. \ud074\ub798\uc2a4\ub97c \ucc38\uc870\ud558\uae30 \uc704\ud574 string import path\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \uc124\uc815\uc740 \ubb38\uc790\uc5f4 \ub9ac\ud130\ub7f4 \ub300\uc2e0 \ucc38\uc870 \ub41c \ud074\ub798\uc2a4\ub97c \uc790\ub3d9\uc73c\ub85c \uac00\uc838\uc624\uace0 \ubc18\ud658\ud569\ub2c8\ub2e4.","title":"Accessing settings"},{"location":"Settings/#api-reference","text":"","title":"API Reference"},{"location":"Settings/#api-policy-settings","text":"\ub2e4\uc74c \uc124\uc815\uc740 \uae30\ubcf8 API \uc815\ucc45\uc744 \uc81c\uc5b4\ud558\uba70 \ubaa8\ub4e0 APIView CBV \ub610\ub294 @api_view FBV\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4.","title":"API policy settings"},{"location":"Settings/#default_renderer_classes","text":"Response \uac1d\uccb4\ub97c \ubc18\ud658\ud560 \ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 renderer\uc758 \uae30\ubcf8 set\uc744 \uacb0\uc815\ud558\ub294 rederer \ud074\ub798\uc2a4\uc758 list \ub610\ub294 tuple\uc785\ub2c8\ub2e4. Default: ( 'rest_framework.renderers.JSONRenderer', 'rest_framework.renderers.BrowsableAPIRenderer', )","title":"DEFAULT_RENDERER_CLASSES"},{"location":"Settings/#default_parser_classes","text":"request.data \uc18d\uc131\uc5d0 \uc561\uc11c\uc2a4 \ud560 \ub54c \uc0ac\uc6a9\ub418\ub294 parser\uc758 \uae30\ubcf8 set\uc744 \uacb0\uc815\ud558\ub294 parser \ud074\ub798\uc2a4\uc758 list \ub610\ub294 tuple\uc785\ub2c8\ub2e4. Default: ( 'rest_framework.parsers.JSONParser', 'rest_framework.parsers.FormParser', 'rest_framework.parsers.MultiPartParser' )","title":"DEFAULT_PARSER_CLASSES"},{"location":"Settings/#default_authentication_classes","text":"request.user \ub610\ub294 request.auth \ub4f1\ub85d \uc815\ubcf4\uc5d0 \uc561\uc11c\uc2a4\ud560 \ub54c \uc0ac\uc6a9\ub418\ub294 \uc778\uc99d\uc790\uc758 \uae30\ubcf8 set\uc744 \ud310\ubcc4\ud558\ub294 authentication \ud074\ub798\uc2a4\uc758 list \ub610\ub294 tuple\uc785\ub2c8\ub2e4. Default: ( 'rest_framework.authentication.SessionAuthentication', 'rest_framework.authentication.BasicAuthentication' )","title":"DEFAULT_AUTHENTICATION_CLASSES"},{"location":"Settings/#default_permission_classes","text":"view\uc758 \uc2dc\uc791\uc5d0 \uccb4\ud06c \ub41c \uad8c\ud55c\uc758 \uae30\ubcf8 set\uc744 \uacb0\uc815\ud558\ub294 permission \ud074\ub798\uc2a4\uc758 list \ub610\ub294 tuple\uc785\ub2c8\ub2e4. permission\uc740 list\uc758 \ubaa8\ub4e0 \ud074\ub798\uc2a4\uc5d0\uc11c \ubd80\uc5ec\ud574\uc57c\ud569\ub2c8 \ub2e4. Default: ( 'rest_framework.permissions.AllowAny', )","title":"DEFAULT_PERMISSION_CLASSES"},{"location":"Settings/#default_throttle_classes","text":"view\uc758 \uc2dc\uc791\uc5d0\uc11c \uc810\uac80\ub418\ub294 \uae30\ubcf8 throttle set\uc744 \uacb0\uc815\ud558\ub294 throttle \ud074\ub798\uc2a4\uc758 list \ub610\ub294 tuple\uc785\ub2c8\ub2e4. Default: ()","title":"DEFAULT_THROTTLE_CLASSES"},{"location":"Settings/#default_content_negotiation_class","text":"\ub4e4\uc5b4\uc624\ub294 request\uc5d0 \ub530\ub77c rederer\uac00 response\uc5d0 \ub300\ud574 \uc120\ud0dd\ub418\ub294 \ubc29\ubc95\uc744 \uacb0\uc815\ud558\ub294 content negotiation \ud074\ub798\uc2a4 \uc785\ub2c8\ub2e4. Default: 'rest_framework.negotiation.DefaultContentNegotiation'","title":"DEFAULT_CONTENT_NEGOTIATION_CLASS"},{"location":"Settings/#generic-view-settings","text":"\ub2e4\uc74c \uc124\uc815\uc740 generic CBV\uc758 \ub3d9\uc791\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4.","title":"Generic view settings"},{"location":"Settings/#default_pagination_serializer_class","text":"\uc774 \uc124\uc815\uc740 \uc81c\uac70\ub418\uc5c8\uc2b5\ub2c8\ub2e4. pagination API\ub294 \ucd9c\ub825 \ud615\uc2dd\uc744 \uacb0\uc815\ud558\uae30 \uc704\ud574 serializer\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc73c\ubbc0\ub85c \ub300\uc2e0 \ucd9c\ub825 \ud615\uc2dd \uc81c\uc5b4 \ubc29\ubc95\uc744 \uc9c0\uc815\ud558\uae30 \uc704\ud574 pagination \ud074\ub798\uc2a4\uc758 `'get_paginated_response`` \uba54\uc11c\ub4dc\ub97c \ub300\uccb4\ud574\uc57c\ud569\ub2c8\ub2e4.","title":"DEFAULT_PAGINATION_SERIALIZER_CLASS"},{"location":"Settings/#default_filter_backends","text":"generic \ud544\ud130\ub9c1\uc5d0 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 filter backend \ud074\ub798\uc2a4 list\uc785\ub2c8\ub2e4. None \uc73c\ub85c \uc124\uc815\ud558\uba74 generic \ud544\ud130\ub9c1\uc774 \ube44\ud65c\uc131\ud654\ub429\ub2c8\ub2e4.","title":"DEFAULT_FILTER_BACKENDS"},{"location":"Settings/#paginate_by","text":"\uc774 \uc124\uc815\uc740 \uc81c\uac70 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. pagination \uc2a4\ud0c0\uc77c \uc124\uc815\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc9c0\uce68\uc740 setting the pagination style \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"PAGINATE_BY"},{"location":"Settings/#page_size","text":"pagination\uc5d0 \uc0ac\uc6a9\ud560 \uae30\ubcf8 \ud398\uc774\uc9c0 \ud06c\uae30\uc785\ub2c8\ub2e4. None \uc73c\ub85c \uc124\uc815\ud558\uba74 \uae30\ubcf8\uc801\uc73c\ub85c pagination\uc774 \ube44\ud65c\uc131\ud654\ub429\ub2c8\ub2e4. Default: None","title":"PAGE_SIZE"},{"location":"Settings/#paginate_by_param","text":"\uc774 \uc124\uc815\uc740 \uc81c\uac70 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. pagination \uc2a4\ud0c0\uc77c \uc124\uc815\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc9c0\uce68\uc740 setting the pagination style \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"PAGINATE_BY_PARAM"},{"location":"Settings/#max_paginate_by","text":"\uc774 \uc124\uc815\uc740 \uc9c0\uc6d0 \uc911\ub2e8 \uc608\uc815\uc785\ub2c8\ub2e4. pagination \uc2a4\ud0c0\uc77c \uc124\uc815\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc9c0\uce68\uc740 setting the pagination style \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"MAX_PAGINATE_BY"},{"location":"Settings/#search_param","text":"SearchFilter \uac00 \uc0ac\uc6a9\ud558\ub294 \uac80\uc0c9\uc5b4\ub97c \uc9c0\uc815\ud558\ub294\ub370 \uc0ac\uc6a9 \ud560 \uc218 \uc788\ub294 \uac80\uc0c9\uc5b4 parameter\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. Default: search","title":"SEARCH_PARAM"},{"location":"Settings/#ordering_param","text":"OrderingFilter \uc5d0 \uc758\ud574 \ubc18\ud658 \ub41c \uacb0\uacfc\uc758 \uc21c\uc11c\ub97c \uc9c0\uc815\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucffc\ub9ac parameter\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. Default: ordering","title":"ORDERING_PARAM"},{"location":"Settings/#versioning-settings","text":"","title":"Versioning settings"},{"location":"Settings/#default_version","text":"\ubc84\uc804 \uc815\ubcf4\uac00 \uc5c6\ub294 \uacbd\uc6b0 request.version \uc5d0 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \uac12\uc785\ub2c8\ub2e4. Default: None","title":"DEFAULT_VERSION"},{"location":"Settings/#allowed_versions","text":"\uc774 \uac12\uc744 \uc124\uc815\ud558\uba74 \ubc84\uc804 \uccb4\uacc4\uc5d0 \uc758\ud574 \ubc18\ud658 \ub420 \uc218 \uc788\ub294 \ubc84\uc804 set\uc774 \uc81c\ud55c\ub418\uba70, \uc81c\uacf5\ub41c \ubc84\uc804\uc774 \uc774 set\uc5d0 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc73c\uba74 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. Default: none","title":"ALLOWED_VERSIONS"},{"location":"Settings/#version_param","text":"\ubbf8\ub514\uc5b4 \ud0c0\uc785 \ub610\ub294 URL \ucffc\ub9ac parameter\uc640 \uac19\uc774 \ubaa8\ub4e0 \ubc84\uc83c \uc9c0\uc815 parameter\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. Default: version","title":"VERSION_PARAM"},{"location":"Settings/#authentication-settings","text":"\ub2e4\uc74c \uc124\uc815\uc740 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc758 \ub3d9\uc791\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4.","title":"Authentication settings"},{"location":"Settings/#unauthenticated_user","text":"\uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc5d0 \ub300\ud574 request.user \ub97c \ucd08\uae30\ud654\ud558\ub294\ub370 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. Default: django.contrib.auth.models.AnonymousUser","title":"UNAUTHENTICATED_USER"},{"location":"Settings/#unauthenticated_token","text":"\uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc5d0 \ub300\ud574 request.auth \ub97c \ucd08\uae30\ud654\ud558\ub294\ub370 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. default: None --","title":"UNAUTHENTICATED_TOKEN"},{"location":"Settings/#test-settings","text":"\ub2e4\uc74c \uc124\uc815\uc740 APIRequestFactory \ubc0f APIClient\uc758 \ub3d9\uc791\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4.","title":"Test settings"},{"location":"Settings/#test_request_default_format","text":"\ud14c\uc2a4\ud2b8 \uc694\uccad\uc744 \ud560\ub54c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \uae30\ubcf8 \ud615\uc2dd\uc785\ub2c8\ub2e4. \uc774 \uac12\uc740 TEST_REQUEST_RENDERER_CLASSES \uc124\uc815\uc758 renderer \ud074\ub798\uc2a4 \uc911 \ud558\ub098\uc758 \ud615\uc2dd\uacfc \uc77c\uce58\ud574\uc57c\ud569\ub2c8\ub2e4. Default: 'multipart'","title":"TEST_REQUEST_DEFAULT_FORMAT"},{"location":"Settings/#test_request_renderer_classes","text":"\ud14c\uc2a4\ud2b8 \uc694\uccad\uc744 \uc791\uc131\ud560 \ub54c \uc9c0\uc6d0\ub418\ub294 renderer \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. client.post('/users', {'username': 'jamie'}, format='json') \uc774\ub7ec\ud55c renderer \ud074\ub798\uc2a4\uc758 \ud615\uc2dd\uc740 \ud14c\uc2a4\ud2b8 \uc694\uccad\uc744 \uad6c\uc131 \ud560 \ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Default: ( 'rest_framework.renderers.MultiPartRenderer', 'rest_framework.renderers.JSONRenderer' )","title":"TEST_REQUEST_RENDERER_CLASSES"},{"location":"Settings/#schema-generation-controls","text":"","title":"Schema generation controls"},{"location":"Settings/#schema_coerce_path_pk","text":"\uc774\uac83\uc744 \uc124\uc815\ud558\uba74 schema path parameter\ub97c \uc0dd\uc131\ud560 \ub54c URL conf\uc758 'pk' \uc2dd\ubcc4\uc790\ub97c \uc2e4\uc81c \ud544\ub4dc \uc774\ub984\uc73c\ub85c \ub9e4\ud551\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c 'id' \uac00 \ub429\ub2c8\ub2e4. \uc774\uac83\uc740 \"indentifer\"\uac00 \uc880 \ub354 \uc77c\ubc18\uc801\uc778 \uac1c\ub150\uc778 \ubc18\uba74 \"primary key\"\ub294 \uc138\ubd80 \uc0ac\ud56d\uc774\ubbc0\ub85c \ubcf4\ub2e4 \uc801\ud569\ud55c \ud45c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Default: True","title":"SCHEMA_COERCE_PATH_PK"},{"location":"Settings/#schema_coerce_method_names","text":"\uc774\uac83\uc774 \uc124\uc815\ub418\uba74 \ub0b4\ubd80 viewset \uba54\uc18c\ub4dc \uc774\ub984\uc744 schema generation\uc5d0 \uc0ac\uc6a9 \ub518 \uc678\ubd80 \uc561\uc158 \uc774\ub984\uc5d0 \ub9e4\ud551\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774\uac83\uc740 \ucf54\ub4dc \ubca0\uc774\uc2a4\uc5d0\uc11c \ub0b4\ubd80\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \uac83\ubcf4\ub2e4 \uc678\ubd80 \ud45c\ud604\uc5d0 \ub354 \uc801\ud569\ud55c \uc774\ub984\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uac8c \ud574\uc90d\ub2c8\ub2e4. Default: {'retrieve': 'read', 'destroy': 'delete'}","title":"SCHEMA_COERCE_METHOD_NAMES"},{"location":"Settings/#content-type-controls","text":"","title":"Content type controls"},{"location":"Settings/#url_format_override","text":"\uae30\ubcf8 content negotiation Accept \uc744 \uc624\ubc84\ub77c\uc774\ub4dc\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 URL parameter\uc758 \uc774\ub984 \uc694\uccad URL\uc5d0\uc11c format=... \ucffc\ub9ac parameter\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud5e4\ub354\uc758 \ub3d9\uc791\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uc608: http://example.com/organizations/?format=csv \uc774 \uc124\uc815 \uac12\uc774 None \uc774\uba74 URL \ud615\uc2dd \uc624\ubc84\ub77c\uc774\ub4dc\uac00 \ube44\ud65c\uc131\ud654 \ub429\ub2c8\ub2e4. Default: 'format'","title":"URL_FORMAT_OVERRIDE"},{"location":"Settings/#format_suffix_kwarg","text":"format suffix\ub97c \uc81c\uacf5\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 URL conf\uc758 parameter \uc774\ub984\uc785\ub2c8\ub2e4. \uc774 \uc124\uc815\uc740 format_suffix_pattern`\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc811\ubbf8\uc0ac\ub85c \ub41c URL\ud328\ud134\uc744 \ud3ec\ud568\ud560 \ub54c \uc801\uc6a9\ub429\ub2c8\ub2e4. \uc608: http://example.com/organizations.csv/ Default: 'format'","title":"FORMAT_SUFFIX_KWARG"},{"location":"Settings/#date-and-time-formatting","text":"\ub2e4\uc74c \uc124\uc815\uc740 \ub0a0\uc9dc \ubc0f \uc2dc\uac04 \ud45c\ud604\uc744 \ud30c\uc2f1\ud558\uace0 \ub80c\ub354\ub9c1\ud558\ub294 \ubc29\ubc95\uc744 \uc81c\uc5b4\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.","title":"Date and time formatting"},{"location":"Settings/#datetime_format","text":"DateTimeField Serializer \ud544\ub4dc\uc758 \ucd9c\ub825\uc744 \ub80c\ub354\ub9c1\ud558\uae30 \uc704\ud574 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \ud615\uc2dd \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. None \uc774\uba74 DateTimeField serializer \ud544\ub4dc\ub294 Python datetime \uac1d\uccb4\ub97c \ubc18\ud658\ud558\uace0, datetime \uc778\ucf54\ub529\uc740 \ub80c\ub354\ub7ec\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. None , 'iso-8601' \ub610\ub294 Python strftime format \ud615\uc2dd \ubb38\uc790\uc5f4 \uc8fc \ud558\ub098 \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Default: 'iso-8601'","title":"DATETIME_FORMAT"},{"location":"Settings/#datetime_input_formats","text":"DateTimeField serializer \ud544\ub4dc\uc5d0 \ub300\ud55c \uc785\ub825\uc744 \ud30c\uc2f1\ud558\uae30\uc704\ud574 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud615\uc2dd\ubb38\uc790\uc5f4 list\uc785\ub2c8\ub2e4. \ubb38\uc790\uc5f4 'iso-8601' \ub610\ub294 python strftime format \ud615\uc2dd \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568\ud558\ub294 list\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Default: ['iso-8601']","title":"DATETIME_INPUT_FORMATS"},{"location":"Settings/#date_format","text":"DateField serializer\ud544\ub4dc\uc758 \ucd9c\ub825\uc744 \ub80c\ub354\ub9c1\ud558\uae30 \uc704\ud574 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud615\uc2dd \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. None \uc774\uba74 DateField serializer \ud544\ub4dc\ub294 Python date \uac1d\uccb4\ub97c \ubc18\ud658\ud558\uace0 \ub0a0\uc9dc \uc778\ucf54\ub529\uc740 \ub80c\ub354\ub7ec\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. None , 'iso-8601' \ub610\ub294 python strftime format \ud615\uc2dd \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568\ud558\ub294 list\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Default: ['iso-8601']","title":"DATE_FORMAT"},{"location":"Settings/#date_input_formats","text":"DateField serializer \ud544\ub4dc\uc5d0 \ub300\ud55c \uc785\ub825\uc744 \ud30c\uc2f1\ud558\uae30 \uc704\ud574 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud615\uc2dd \ubb38\uc790\uc5f4 list\uc785\ub2c8\ub2e4. \ubb38\uc790\uc5f4 'iso-8601' \ub610\ub294 python strftime format \ud615\uc2dd \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568\ud558\ub294 list\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Default: ['iso-8601']","title":"DATE_INPUT_FORMATS"},{"location":"Settings/#time_format","text":"TimeField serializer \ud544\ub4dc\uc758 \ucd9c\ub825\uc744 \ub80c\ub354\ub9c1 \ud560 \ub54c \uae30\ubcf8\uc800\uae0d\ub85c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud615\uc2dd \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. None \uc774\uba74 TimeField serializer \ud544\ub4dc\ub294 Python time \uac1d\uccb4\ub97c \ubc18\ud658\ud558\uace0 time \uc778\ucf54\ub529\uc740 \ub80c\ub354\ub7ec\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. None , 'iso-8601' \ub610\ub294 python strftime format \ud615\uc2dd \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568\ud558\ub294 list\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Default: ['iso-8601']","title":"TIME_FORMAT"},{"location":"Settings/#time_input_formats","text":"TimeField serializer \ud544\ub4dc\uc5d0 \ub300\ud55c \uc785\ub825\uc744 \ud30c\uc2f1\ud558\uae30 \uc704\ud574 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \ud615\uc2dd \ubb38\uc790\uc5f4 list\uc785\ub2c8\ub2e4. \ubb38\uc790\uc5f4 'iso-8601' \ub610\ub294 python strftime format \ud615\uc2dd \ubb38\uc790\uc5f4\uc744 \ud3ec\ud568\ud558\ub294 list\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Default: ['iso-8601']","title":"TIME_INPUT_FORMATS"},{"location":"Settings/#encodings","text":"","title":"Encodings"},{"location":"Settings/#unicode_json","text":"True \ub85c \uc124\uc815\ud558\uba74, JSON response\uac00 response\uc5d0 \uc720\ub2c8\ucf54\ub4dc \ubb38\uc790\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. {\"unicode black star\":\"\u2605\"} False \ub85c \uc124\uc815\ud558\uba74 JSON response\uac00 \ub2e4\uc74c\uacfc \uac19\uc774 non-ascii \ubb38\uc790\ub97c \uc774\uc2a4\ucf00\uc774\ud504\ud569\ub2c8\ub2e4. {\"unicode black star\":\"\\u2605\"} \ub450 \uc2a4\ud0c0\uc77c \ubaa8\ub450 RFC 4627 \uc744 \uc900\uc218\ud558\uba70 \uad6c\ubb38\uc801\uc73c\ub85c \uc720\ud6a8\ud55c JSON\uc785\ub2c8\ub2e4. \uc720\ub2c8\ucf54\ub4dc \uc2a4\ud0c0\uc77c\uc740 API \uc751\ub2f5\uc744 \uac80\uc0ac\ud560 \ub54c\ubcf4\ub2e4 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uce5c\uc219\ud55c \uac83\uc73c\ub85c \uc120\ud638\ub429\ub2c8\ub2e4. Default: True","title":"UNICODE_JSON"},{"location":"Settings/#compact_json","text":"True \ub85c \uc124\uc815\ud558\uba74 JSON response sms ':' \uacfc ',' \ubb38\uc790 \ub2e4\uc74c\uc5d0 \uacf5\ubc31\uc5c6\uc774 \uac04\uacb0\ud55c \ud45c\ud604\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. {\"is_admin\":false,\"email\":\"jane@example\"} False \ub85c \uc124\uc815\ud558\uba74 JSON \uc751\ub2f5\uc774 \ub2e4\uc74c\uacfc \uac19\uc774 \uc57d\uac04 \ub354 \uc790\uc138\ud55c \ud45c\ud604\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. {\"is_admin\": false, \"email\": \"jane@example\"} \uae30\ubcf8 \uc2a4\ud0c0\uc77c\uc740 Heroku's API design guidelines \uc5d0 \ub530\ub77c \ucd95\uc18c \ub41c \uc751\ub2f5\uc744 \ubc18\ud658\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. Default: True","title":"COMPACT_JSON"},{"location":"Settings/#coerce_decimal_to_string","text":"\uae30\uc874 decimal(10\uc9c4) type\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\ub294 API \ud45c\ud604\uc5d0\uc11c decimal \uc624\ube0c\uc81d\ud2b8\ub97c \ub9ac\ud134\ud560 \ub54c, \uc77c\ubc18\uc801\uc73c\ub85c \uac12\uc744 \ubb38\uc790\uc5f4\ub85c \ub9ac\ud134\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \ubc14\uc774\ub108\ub9ac \ubd80\ub3d9 \uc18c\uc218\uc810 \uad6c\ud604\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \uc815\ubc00\ub3c4\uc758 \uc190\uc2e4\uc744 \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. True \ub85c \uc124\uc815\ud558\uba74 serializer DecimalField \ud074\ub798\uc2a4\uac00 Decimal \uac1d\uccb4 \ub300\uc2e0 \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. False \ub85c \uc124\uc815\ud558\uba74, serializer\ub294 Decimal \uac1d\uccb4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774 \uac1d\uccb4\ub294 \uae30\ubcf8 JSON \uc778\ucf54\ub354\uac00 float\uc73c\ub85c \ubc18\ud658\ud569\ub2c8\ub2e4. Default: True","title":"COERCE_DECIMAL_TO_STRING"},{"location":"Settings/#view-names-and-descriptions","text":"\ub2e4\uc74c \uc124\uc815\uc740 OPTIONS \uc694\uccad\uc5d0 \ub300\ud55c \uc751\ub2f5 \ubc0f Browsable API\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \uac83\uacfc \uac19\uc774 \ubdf0 \uc774\ub984 \ubc0f \uc124\uba85\uc744 \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.","title":"View names and descriptions"},{"location":"Settings/#view_name_function","text":"\ubdf0 \uc774\ub984\uc744 \uc0dd\uc131\ud560 \ub54c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud568\uc218\ub97c \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. \uc774\uac83\uc740 \ub2e4\uc74c \uc2dc\uadf8\ub2c8\ucc98\uac00 \uc788\ub294 \ud568\uc218\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. view_name(cls, suffix=None) cls : \ubdf0 \ud074\ub798\uc2a4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774\ub984 \ud568\uc218\ub294 cls.__name__ \uc5d0 \uc561\uc11c\uc2a4\ud558\uc5ec \uc124\uba85\uc801\uc778 \uc774\ub984\uc744 \uc0dd\uc131 \ud560 \ub54c \ud074\ub798\uc2a4 \uc774\ub984\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4. suffix : viewset\uc5d0\uc11c \uac1c\ubcc4 \ubdf0\ub97c \uad6c\ubcc4 \ud560 \ub54c \uc0ac\uc6a9\ub418\ub294 \uc120\ud0dd\uc801 suffix Default: 'rest_framework.views.get_view_name'","title":"VIEW_NAME_FUNCTION"},{"location":"Settings/#view_description_function","text":"\ubdf0 \uc124\uba85\uc744 \uc0dd\uc131 \ud560 \ub54c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud568\uc218\ub97c \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. \uae30\ubcf8 \uc124\uc815 \uac12 \uc774\uc678\uc758 \ud0dc\uadf8 \uc2a4\ud0c0\uc77c\uc744 \uc9c0\uc6d0\ud558\ub3c4\ub85d \uc774 \uc124\uc815\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \ubcfc \uc218 \uc788\ub294 API\ub85c \ucd9c\ub825\ub418\ub294 \ubdf0 \ubb38\uc11c \ubb38\uc790\uc5f4\uc758 rst \ub9c8\ud06c\uc5c5\uc744 \uc9c0\uc6d0\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 \ub2e4\uc74c \uc2dc\uadf8\ub2c8\ucc98\uac00 \uc788\ub294 \ud568\uc218\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. view_description(cls, html=False) cls : \ubdf0 \ud074\ub798\uc2a4. \uc77c\ubc18\uc801\uc73c\ub85c \uc124\uba85 \ud568\uc218\ub294 cls.__doc__ \uc5d0 \uc561\uc11c\uc2a4\ud558\uc5ec \uc124\uba85\uc744 \uc0dd\uc131 \ud560 \ub54c \ud074\ub798\uc2a4\uc758 \ubb38\uc11c\ud654 \ubb38\uc790\uc5f4\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4. html : HTML \ucd9c\ub825\uc774 \ud544\uc694\ud55c\uc9c0 \ub098\ud0c0\ub0b4\ub294 boolean\uc785\ub2c8\ub2e4. \ud0d0\uc0c9 \uac00\ub2a5\ud55c API\uc5d0\uc11c \uc0ac\uc6a9\ub418\uba74 True \uc774\uace0, OPTIONS \uc751\ub2f5\uc744 \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ub418\uba74 False \uc785\ub2c8\ub2e4. Default: 'rest_framework.views.get_view_description'","title":"VIEW_DESCRIPTION_FUNCTION"},{"location":"Settings/#html-select-field-cutoffs","text":"Browsable API\uc5d0\uc11c \uad00\uacc4\ud615 \ud544\ub4dc\ub97c \ub80c\ub354\ub9c1\ud558\uae30 \uc704\ud55c \uc120\ud0dd \ud544\ub4dc \ucef7\uc624\ud504 \uc5d0 \ub300\ud55c \uc804\uc5ed \uc124\uc815\uc785\ub2c8\ub2e4.","title":"HTML Select Field cutoffs"},{"location":"Settings/#html_select_cutoff","text":"html_cutoff \uac12\uc758 \uc804\uc5ed \uc124\uc815\uc785\ub2c8\ub2e4. \uc815\uc218\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. Default: 1000","title":"HTML_SELECT_CUTOFF"},{"location":"Settings/#html_select_cutoff_text","text":"html_cutoff_text \uc758 \uc804\uc5ed \uc124\uc815\uc744 \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. Default: \"More than {count} items...\"","title":"HTML_SELECT_CUTOFF_TEXT"},{"location":"Settings/#miscellaneous-settings","text":"","title":"Miscellaneous settings"},{"location":"Settings/#exception_handler","text":"\uc9c0\uc815\ub41c \uc608\uc678\uc5d0 \ub300\ud55c \uc751\ub2f5\uc744 \ubc18\ud658\ud560 \ub54c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud568\uc218\ub97c \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. \uc774 \ud568\uc218\uac00 None \uc744 \ubc18\ud658\ud558\uba74 500 error\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774 \uc124\uc815\uc740 \uae30\ubcf8 {\"detail\": \"Failure...\"} \uc751\ub2f5 \uc774\uc678\uc758 \uc624\ub958 \uc751\ub2f5\uc744 \uc9c0\uc6d0\ud558\ub3c4\ub85d \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 {\"errors\": [{\"message\": \"Failure...\", \"code\": \"\"} ...]} \uc640 \uac19\uc740 API \uc751\ub2f5\uc744 \uc81c\uacf5\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 \ub2e4\uc74c \uc2dc\uadf8\ub2c8\ucc98\uac00 \uc788\ub294 \ud568\uc218\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. exception_handler(exc, context) exc : \uc608\uc678 Default: 'rest_framework.views.exception_handler'","title":"EXCEPTION_HANDLER"},{"location":"Settings/#non_field_errors_key","text":"\ud2b9\uc815 \ud544\ub4dc\ub97c \ucc38\uc870\ud558\uc9c0 \uc54a\uace0 \uc77c\ubc18\uc801\uc778 \uc624\ub958\uc778 serializer \uc624\ub958\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud0a4\ub97c \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. Default: 'non_field_errors'","title":"NON_FIELD_ERRORS_KEY"},{"location":"Settings/#url_field_name","text":"HyperlinkedModelSerializer \uc5d0 \uc758\ud574 \uc0dd\uc131 \ub41c URL \ud544\ub4dc\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ud0a4\ub97c \ub098\ud0c0\ub0b4\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. Default: 'url'","title":"URL_FIELD_NAME"},{"location":"Settings/#num_proxies","text":"API\uac00 \uc2e4\ud589\ub418\ub294 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \ud504\ub85d\uc2dc \uc218\ub97c \uc9c0\uc815\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 0 \uc774\uc0c1\uc758 \uc815\uc218\uc785\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 throttling\uc744 \ud1b5\ud574 \ud074\ub77c\uc774\uc5b8\ud2b8 IP \uc8fc\uc18c\ub97c \ubcf4\ub2e4 \uc815\ud655\ud558\uac8c \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. None \uc73c\ub85c \uc124\uc815\ud558\uba74 \ub35c \uc5c4\uaca9\ud55c IP \ub9e4\uce6d\uc774 throttle \ud074\ub798\uc2a4\uc5d0\uc11c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Default: None","title":"NUM_PROXIES"},{"location":"Status_Codes/","text":"Django REST Framework - Status Codes \"418 I'm a teapot - Any attempt to brew coffee with a teapot should result in the error code \"418 I'm a teapot\". The resulting entity body MAY be short and stout.\" \"418 \uc800\ub294 \uc8fc\uc804\uc790\uc785\ub2c8\ub2e4 - \uc8fc\uc804\uc790\ub85c \ucee4\ud53c\ub97c \uc591\uc870\ud558\ub824\uace0\ud558\uba74 \"418 \ub098\ub294 \uc8fc\uc804\uc790\uc785\ub2c8\ub2e4\"\ub77c\ub294 \uc624\ub958 \ucf54\ub4dc\uac00 \ub098\ud0c0\ub0a9\ub2c8\ub2e4. \uadf8 \uacb0\uacfc\ub85c \uc0dd\uc131 \ub41c \uc2e4\uc81c \ubab8\uccb4\ub294 \uc9e7\uace0 \ud2bc\ud2bc \ud560 \uc218 \uc788\ub2e4.\" \u2014 RFC 2324, Hyper Text Coffee Pot Control Protocol Status Codes \uc751\ub2f5\uc5d0 \ubca0\uc5b4 \uc0c1\ud0dc \ucf54\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc88b\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\ub294 \ub354 \ub9ce\uc740 \ucf54\ub4dc\ub97c \ubcf4\ub2e4 \uba85\ud655\ud558\uace0 \uc77d\uae30 \uc27d\uac8c \ub9cc\ub4dc\ub294\ub370 \uc0ac\uc6a9 \ud560 \uc218 \uc788\ub294 \uba85\uba85 \ub41c \uc0c1\uc218 set\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework import status from rest_framework.response import Response def empty_view(self): content = {'please move along': 'nothing to see here'} return Response(content, status=status.HTTP_404_NOT_FOUND) status \ubaa8\ub4c8\uc5d0 \ud3ec\ud568\ub41c HTTP status code\uc758 full set\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \ubaa8\ub4c8\uc5d0\ub294 status code\uac00 \uc8fc\uc5b4\uc9c4 \ubc94\uc704\uc5d0 \uc788\ub294\uc9c0 \ud14c\uc2a4\ud2b8\ud558\uae30 \uc704\ud55c helper \ud568\uc218 set\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework import status from rest_framework.test import APITestCase class ExampleTestCase(APITestCase): def test_url_root(self): url = reverse('index') response = self.client.get(url) self.assertTrue(status.is_success(response.status_code)) HTTP status code\uc758 \uc62c\ubc14\ub978 \uc0ac\uc6a9\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 RFC 2616 \uc640 RFC 6585 \ub97c \ucc38\uc870\uc0ac\ud5e4\uc694. Informational - 1xx \uc774 status code \ud074\ub798\uc2a4\ub294 \uc7a0\uc815\uc801\uc778 \uc751\ub2f5\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\ub294 1xx status code\uac00 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. HTTP_100_CONTINUE HTTP_101_SWITCHING_PROTOCOLS Successful - 2xx \uc774 status code \ud074\ub798\uc2a4\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc694\uccad\uc774 \uc131\uacf5\uc801\uc73c\ub85c \uc218\uc2e0, \uc774\ud574, \uc2b9\uc778\ub418\uc5c8\uc74c\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. HTTP_200_OK HTTP_201_CREATED HTTP_202_ACCEPTED HTTP_203_NON_AUTHORITATIVE_INFORMATION HTTP_204_NO_CONTENT HTTP_205_RESET_CONTENT HTTP_206_PARTIAL_CONTENT HTTP_207_MULTI_STATUS Redirection - 3xx \uc774 status code \ud074\ub798\uc2a4\ub294 \uc694\uccad\uc744 \uc218\ud589\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\uc790 \uc5d0\uc774\uc804\ud2b8\uac00 \ucd94\uac00 \uc870\uce58\ub97c \ucde8\ud574\uc57c \ud568\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. HTTP_300_MULTIPLE_CHOICES HTTP_301_MOVED_PERMANENTLY HTTP_302_FOUND HTTP_303_SEE_OTHER HTTP_304_NOT_MODIFIED HTTP_305_USE_PROXY HTTP_306_RESERVED HTTP_307_TEMPORARY_REDIRECT Client Error - 4xx 4xx \ud074\ub798\uc2a4\uc758 status code\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc624\ub958\uac00 \uc788\ub294 \uac83\uc73c\ub85c \ubcf4\uc774\ub294 \uacbd\uc6b0\ub97c \uc704\ud55c \uac83\uc785\ub2c8\ub2e4. HEAD request\uc5d0 \uc751\ub2f5 \ud560 \ub54c\ub97c \uc81c\uc678\ud558\uace0, \uc11c\ubc84 SHOULD\ub294 \uc624\ub958 \uc0c1\ud669\uc5d0 \ub300\ud55c \uc124\uba85\uacfc \uc77c\uc2dc\uc801\uc778 \uac83\uc778\uc9c0 \uc9c0\uc18d\uc801\uc778 \uac83\uc778\uc9c0\ub97c \ud3ec\ud568\ud55c \uc5d4\ud2f0\ud2f0\ub97c \ud3ec\ud568\ud574\uc57c\ud569\ub2c8\ub2e4. HTTP_400_BAD_REQUEST HTTP_401_UNAUTHORIZED HTTP_402_PAYMENT_REQUIRED HTTP_403_FORBIDDEN HTTP_404_NOT_FOUND HTTP_405_METHOD_NOT_ALLOWED HTTP_406_NOT_ACCEPTABLE HTTP_407_PROXY_AUTHENTICATION_REQUIRED HTTP_408_REQUEST_TIMEOUT HTTP_409_CONFLICT HTTP_410_GONE HTTP_411_LENGTH_REQUIRED HTTP_412_PRECONDITION_FAILED HTTP_413_REQUEST_ENTITY_TOO_LARGE HTTP_414_REQUEST_URI_TOO_LONG HTTP_415_UNSUPPORTED_MEDIA_TYPE HTTP_416_REQUESTED_RANGE_NOT_SATISFIABLE HTTP_417_EXPECTATION_FAILED HTTP_422_UNPROCESSABLE_ENTITY HTTP_423_LOCKED HTTP_424_FAILED_DEPENDENCY HTTP_428_PRECONDITION_REQUIRED HTTP_429_TOO_MANY_REQUESTS HTTP_431_REQUEST_HEADER_FIELDS_TOO_LARGE HTTP_451_UNAVAILABLE_FOR_LEGAL_REASONS Server Error - 5xx \uc22b\uc790 \"5\"\ub85c \uc2dc\uc791\ud558\ub294 response status code\ub294 \uc11c\ubc84\uc5d0 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uac70\ub098 \uc694\uccad\uc744 \uc218\ud589 \ud560 \uc218 \uc5c6\ub2e4\ub294 \uac83\uc744 \uc54c\uace0\uc788\ub294 \uacbd\uc6b0\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. HEAD requset\uc5d0 \uc751\ub2f5\ud560 \ub54c\ub97c \uc81c\uc678\ud558\uace0, \uc11c\ubc84 SHOULD \ub294 \uc624\ub958 \uc0c1\ud669\uc5d0 \ub300\ud55c \uc124\uba85\uacfc \uc77c\uc2dc\uc801\uc778\uc9c0 \uac83\uc778\uc9c0 \uc9c0\uc18d\uc801\uc778 \uac83\uc778\uc9c0\ub97c \ud3ec\ud568\ud55c \uc5d4\ud2f0\ud2f0\ub97c \ud3ec\ud568\ud574\uc57c\ud569\ub2c8\ub2e4. HTTP_500_INTERNAL_SERVER_ERROR HTTP_501_NOT_IMPLEMENTED HTTP_502_BAD_GATEWAY HTTP_503_SERVICE_UNAVAILABLE HTTP_504_GATEWAY_TIMEOUT HTTP_505_HTTP_VERSION_NOT_SUPPORTED HTTP_507_INSUFFICIENT_STORAGE HTTP_511_NETWORK_AUTHENTICATION_REQUIRED Helper functions \ub2e4\uc74c helper \ud568\uc218\ub294 \uc751\ub2f5 \ucf54\ub4dc\uc758 \ubc94\uc8fc\ub97c \uc2dd\ubcc4\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. is_informational() # 1xx is_success() # 2xx is_redirect() # 3xx is_client_error() # 4xx is_server_error() # 5xx","title":"Status codes"},{"location":"Status_Codes/#django-rest-framework-status-codes","text":"\"418 I'm a teapot - Any attempt to brew coffee with a teapot should result in the error code \"418 I'm a teapot\". The resulting entity body MAY be short and stout.\" \"418 \uc800\ub294 \uc8fc\uc804\uc790\uc785\ub2c8\ub2e4 - \uc8fc\uc804\uc790\ub85c \ucee4\ud53c\ub97c \uc591\uc870\ud558\ub824\uace0\ud558\uba74 \"418 \ub098\ub294 \uc8fc\uc804\uc790\uc785\ub2c8\ub2e4\"\ub77c\ub294 \uc624\ub958 \ucf54\ub4dc\uac00 \ub098\ud0c0\ub0a9\ub2c8\ub2e4. \uadf8 \uacb0\uacfc\ub85c \uc0dd\uc131 \ub41c \uc2e4\uc81c \ubab8\uccb4\ub294 \uc9e7\uace0 \ud2bc\ud2bc \ud560 \uc218 \uc788\ub2e4.\" \u2014 RFC 2324, Hyper Text Coffee Pot Control Protocol","title":"Django REST Framework - Status Codes"},{"location":"Status_Codes/#status-codes","text":"\uc751\ub2f5\uc5d0 \ubca0\uc5b4 \uc0c1\ud0dc \ucf54\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc88b\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\ub294 \ub354 \ub9ce\uc740 \ucf54\ub4dc\ub97c \ubcf4\ub2e4 \uba85\ud655\ud558\uace0 \uc77d\uae30 \uc27d\uac8c \ub9cc\ub4dc\ub294\ub370 \uc0ac\uc6a9 \ud560 \uc218 \uc788\ub294 \uba85\uba85 \ub41c \uc0c1\uc218 set\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework import status from rest_framework.response import Response def empty_view(self): content = {'please move along': 'nothing to see here'} return Response(content, status=status.HTTP_404_NOT_FOUND) status \ubaa8\ub4c8\uc5d0 \ud3ec\ud568\ub41c HTTP status code\uc758 full set\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \ubaa8\ub4c8\uc5d0\ub294 status code\uac00 \uc8fc\uc5b4\uc9c4 \ubc94\uc704\uc5d0 \uc788\ub294\uc9c0 \ud14c\uc2a4\ud2b8\ud558\uae30 \uc704\ud55c helper \ud568\uc218 set\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework import status from rest_framework.test import APITestCase class ExampleTestCase(APITestCase): def test_url_root(self): url = reverse('index') response = self.client.get(url) self.assertTrue(status.is_success(response.status_code)) HTTP status code\uc758 \uc62c\ubc14\ub978 \uc0ac\uc6a9\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 RFC 2616 \uc640 RFC 6585 \ub97c \ucc38\uc870\uc0ac\ud5e4\uc694.","title":"Status Codes"},{"location":"Status_Codes/#informational-1xx","text":"\uc774 status code \ud074\ub798\uc2a4\ub294 \uc7a0\uc815\uc801\uc778 \uc751\ub2f5\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\ub294 1xx status code\uac00 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. HTTP_100_CONTINUE HTTP_101_SWITCHING_PROTOCOLS","title":"Informational - 1xx"},{"location":"Status_Codes/#successful-2xx","text":"\uc774 status code \ud074\ub798\uc2a4\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc694\uccad\uc774 \uc131\uacf5\uc801\uc73c\ub85c \uc218\uc2e0, \uc774\ud574, \uc2b9\uc778\ub418\uc5c8\uc74c\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. HTTP_200_OK HTTP_201_CREATED HTTP_202_ACCEPTED HTTP_203_NON_AUTHORITATIVE_INFORMATION HTTP_204_NO_CONTENT HTTP_205_RESET_CONTENT HTTP_206_PARTIAL_CONTENT HTTP_207_MULTI_STATUS","title":"Successful - 2xx"},{"location":"Status_Codes/#redirection-3xx","text":"\uc774 status code \ud074\ub798\uc2a4\ub294 \uc694\uccad\uc744 \uc218\ud589\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\uc790 \uc5d0\uc774\uc804\ud2b8\uac00 \ucd94\uac00 \uc870\uce58\ub97c \ucde8\ud574\uc57c \ud568\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. HTTP_300_MULTIPLE_CHOICES HTTP_301_MOVED_PERMANENTLY HTTP_302_FOUND HTTP_303_SEE_OTHER HTTP_304_NOT_MODIFIED HTTP_305_USE_PROXY HTTP_306_RESERVED HTTP_307_TEMPORARY_REDIRECT","title":"Redirection - 3xx"},{"location":"Status_Codes/#client-error-4xx","text":"4xx \ud074\ub798\uc2a4\uc758 status code\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc624\ub958\uac00 \uc788\ub294 \uac83\uc73c\ub85c \ubcf4\uc774\ub294 \uacbd\uc6b0\ub97c \uc704\ud55c \uac83\uc785\ub2c8\ub2e4. HEAD request\uc5d0 \uc751\ub2f5 \ud560 \ub54c\ub97c \uc81c\uc678\ud558\uace0, \uc11c\ubc84 SHOULD\ub294 \uc624\ub958 \uc0c1\ud669\uc5d0 \ub300\ud55c \uc124\uba85\uacfc \uc77c\uc2dc\uc801\uc778 \uac83\uc778\uc9c0 \uc9c0\uc18d\uc801\uc778 \uac83\uc778\uc9c0\ub97c \ud3ec\ud568\ud55c \uc5d4\ud2f0\ud2f0\ub97c \ud3ec\ud568\ud574\uc57c\ud569\ub2c8\ub2e4. HTTP_400_BAD_REQUEST HTTP_401_UNAUTHORIZED HTTP_402_PAYMENT_REQUIRED HTTP_403_FORBIDDEN HTTP_404_NOT_FOUND HTTP_405_METHOD_NOT_ALLOWED HTTP_406_NOT_ACCEPTABLE HTTP_407_PROXY_AUTHENTICATION_REQUIRED HTTP_408_REQUEST_TIMEOUT HTTP_409_CONFLICT HTTP_410_GONE HTTP_411_LENGTH_REQUIRED HTTP_412_PRECONDITION_FAILED HTTP_413_REQUEST_ENTITY_TOO_LARGE HTTP_414_REQUEST_URI_TOO_LONG HTTP_415_UNSUPPORTED_MEDIA_TYPE HTTP_416_REQUESTED_RANGE_NOT_SATISFIABLE HTTP_417_EXPECTATION_FAILED HTTP_422_UNPROCESSABLE_ENTITY HTTP_423_LOCKED HTTP_424_FAILED_DEPENDENCY HTTP_428_PRECONDITION_REQUIRED HTTP_429_TOO_MANY_REQUESTS HTTP_431_REQUEST_HEADER_FIELDS_TOO_LARGE HTTP_451_UNAVAILABLE_FOR_LEGAL_REASONS","title":"Client Error - 4xx"},{"location":"Status_Codes/#server-error-5xx","text":"\uc22b\uc790 \"5\"\ub85c \uc2dc\uc791\ud558\ub294 response status code\ub294 \uc11c\ubc84\uc5d0 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uac70\ub098 \uc694\uccad\uc744 \uc218\ud589 \ud560 \uc218 \uc5c6\ub2e4\ub294 \uac83\uc744 \uc54c\uace0\uc788\ub294 \uacbd\uc6b0\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. HEAD requset\uc5d0 \uc751\ub2f5\ud560 \ub54c\ub97c \uc81c\uc678\ud558\uace0, \uc11c\ubc84 SHOULD \ub294 \uc624\ub958 \uc0c1\ud669\uc5d0 \ub300\ud55c \uc124\uba85\uacfc \uc77c\uc2dc\uc801\uc778\uc9c0 \uac83\uc778\uc9c0 \uc9c0\uc18d\uc801\uc778 \uac83\uc778\uc9c0\ub97c \ud3ec\ud568\ud55c \uc5d4\ud2f0\ud2f0\ub97c \ud3ec\ud568\ud574\uc57c\ud569\ub2c8\ub2e4. HTTP_500_INTERNAL_SERVER_ERROR HTTP_501_NOT_IMPLEMENTED HTTP_502_BAD_GATEWAY HTTP_503_SERVICE_UNAVAILABLE HTTP_504_GATEWAY_TIMEOUT HTTP_505_HTTP_VERSION_NOT_SUPPORTED HTTP_507_INSUFFICIENT_STORAGE HTTP_511_NETWORK_AUTHENTICATION_REQUIRED","title":"Server Error - 5xx"},{"location":"Status_Codes/#helper-functions","text":"\ub2e4\uc74c helper \ud568\uc218\ub294 \uc751\ub2f5 \ucf54\ub4dc\uc758 \ubc94\uc8fc\ub97c \uc2dd\ubcc4\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. is_informational() # 1xx is_success() # 2xx is_redirect() # 3xx is_client_error() # 4xx is_server_error() # 5xx","title":"Helper functions"},{"location":"Testing/","text":"Django REST Framework - Testing \"Code without tests is broken as designed.\" \"\ud14c\uc2a4\ud2b8\uac00 \uc5c6\ub294 \ucf54\ub4dc\ub294 \uc758\ub3c4 \ud55c\ub300\ub85c \uc791\ub3d9\ud558\uc9c0 \uc54a\ub294\ub2e4.\" - Jacob Kaplan-Moss REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 Django\uc758 \uae30\uc874 \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\ub97c \ud655\uc7a5\ud558\uace0, API Requests \uc791\uc131\uc5d0 \ub300\ud55c \uc9c0\uc6d0\uc744 \ud5a5\uc0c1\uc2dc\ud0a4\ub294 \uc11c\ud3ec\ud2b8 \ud074\ub798\uc2a4\ub97c \ud3ec\ud568\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. APIRequestFactory Django\uc758 \uae30\uc874 RequestFactory \ud074\ub798\uc2a4\ub97c \ud655\uc7a5\ud569\ub2c8\ub2e4. Creating test requests APIRequestFactory \ud074\ub798\uc2a4\ub294 Django\uc758 \ud45c\uc900 RequestFactory \ud074\ub798\uc2a4\uc640 \uac70\uc758 \ub3d9\uc77c\ud55c API\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc989 \ud45c\uc900 .get() , .post() , .put() , .patch() , .delete() , .head() \ubc0f .options() \uba54\uc11c\ub4dc\ub97c \ubaa8\ub450 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. rom rest_framework.test import APIRequestFactory # \ud45c\uc900 `RequestFactory` API\uc744 \uc0ac\uc6a9\u314e\uc5ec POST request form\uc744 \ub9cc\ub4e0\ub2e4. factory = APIRequestFactory() request = factory.post('/notes/', {'title': 'new idea'}) Using the format argument post , put , patch \uc640 \uac19\uc740 requests\ub97c \ub9cc\ub4dc\ub294 \uba54\uc11c\ub4dc\uc5d0\ub294 content type\uc744 \uc0ac\uc6a9\ud558\uc5ec requests\ub97c \uc27d\uac8c \uc0dd\uc131 \ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 argument\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. # Create a JSON POST request factory = APIRequestFactory() request = factory.post('/notes/', {'title': 'new idea'}, format='json') \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud615\uc2dd\uc740 multipart \uc640 json \uc785\ub2c8\ub2e4. Django\uc758 \uae30\uc874 RequestFactory \uc640\uc758 \ud638\ud658\uc131\uc744 \uc704\ud574 \uae30\ubcf8 \ud615\uc2dd\uc740 multipart \uc785\ub2c8\ub2e4. \ub354 \ub9ce\uc740 \ud615\uc2dd\uc5d0 \ub300\ud55c \uc815\ubcf4\ub294 configuration section \uc744 \ucc38\uc870\ud558\uc138\uc694. Explicitly encoding the request body request \ubcf8\ubb38\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc778\ucf54\ub529\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 context_type \ud50c\ub798\uadf8\ub97c \uc124\uc815\ud558\uc5ec request \ubcf8\ubb38\uc744 \uc778\ucf54\ub529\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. request = factory.post('/notes/', json.dumps({'title': 'new idea'}), content_type='application/json') PUT and PATCH with form data Django\uc758 RequestFactory \uc640 REST \ud504\ub808\uc784 \uc6cc\ud06c\uc758 APIRequestFactory \uc0ac\uc774\uc5d0 \uc8fc\ubaa9\ud560 \ub9cc\ud55c \ucc28\uc774\uc810\uc740 \ub2e4\uc911 \ud30c\ud2b8 \uc591\uc2dd \ub370\uc774\ud130\uac00 .post() \uc774\uc678\uc758 \uba54\uc18c\ub4dc\ub85c \uc778\ucf54\ub529\ub41c\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, APIRequestFactory \ub97c \uc0ac\uc6a9\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 put \uc694\uccad\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. factory = APIRequestFactory() request = factory.put('/notes/547/', {'title': 'remember to email dave'}) Django\uc758 RequestFactory \ub97c \uc0ac\uc6a9\ud558\uba74 \uba85\uc2dc\uc801\uc73c\ub85c \ub370\uc774\ud130\ub97c \uc9c1\uc811 \uc778\ucf54\ub529\ud574\uc57c\ud569\ub2c8\ub2e4. from django.test.client import encode_multipart, RequestFactory factory = RequestFactory() data = {'title': 'remember to email dave'} content = encode_multipart('BoUnDaRyStRiNg', data) content_type = 'multipart/form-data; boundary=BoUnDaRyStRiNg' request = factory.put('/notes/547/', content, content_type=content_type) Forcing authentication RequestFactory \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc9c1\uc811 \ubdf0\ub97c \ud14c\uc2a4\ud2b8 \ud560 \ub54c\ub294 \uc778\uc99d\uc790\uaca9 \uc99d\uba85\uc744 \uc791\uc131\ud558\uc9c0\uc54a\uace0 \uc9c1\uc811 \uc790\uaca9\uc694\uccad\uc744 \uc778\uc99d\ud558\ub294 \uac83\uc774 \ud3b8\ub9ac\ud569\ub2c8\ub2e4. \uac15\uc81c \uc694\uccad\uc744 \uc778\uc99d\ud558\ub824\uba74 force_authenticate() \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624. from rest_framework.test import force_authenticate factory = APIRequestFactory() user = User.objects.get(username='olivia') view = AccountDetail.as_view() # Make an authenticated request to the view... request = factory.get('/accounts/django-superstars/') force_authenticate(request, user=user) response = view(request) \uc774 \uba54\uc18c\ub4dc\uc758 \uc11c\uba85\uc740 force_authenticate(request, user = None, token = None) \uc785\ub2c8\ub2e4. \uc804\ud654\ub97c \uac78 \ub54c \uc0ac\uc6a9\uc790\uc640 \ud1a0\ud070 \uc911 \ud558\ub098 \ub610\ub294 \ub458 \ubaa8\ub450\uac00 \uc124\uc815 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ud1a0\ud070\uc744 \uc0ac\uc6a9\ud558\uc5ec \uac15\uc81c\ub85c \uc778\uc99d\ud558\ub294 \uacbd\uc6b0 \ub2e4\uc74c\uacfc \uac19\uc774 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. user = User.objects.get(username='olivia') request = factory.get('/accounts/django-superstars/') force_authenticate(request, user=user, token=user.token) Note : APIRequestFactory \ub97c \uc0ac\uc6a9\ud560 \ub54c \ubc18\ud658\ub418\ub294 \uac1d\uccb4\ub294 Django\uc758 \ud45c\uc900 HttpRequest \uc774\uba70, REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 Request \uac1d\uccb4\ub294 \uc544\ub2c8\uba70 \ubdf0\uac00 \ud638\ucd9c \ub41c \ud6c4\uc5d0\ub9cc \u200b\u200b\uc0dd\uc131\ub429\ub2c8\ub2e4. \uc989, request \uac1d\uccb4\uc5d0 \uc9c1\uc811 \uc18d\uc131\uc744 \uc124\uc815\ud558\uba74 \ud56d\uc0c1 \uc6d0\ud558\ub294 \uacb0\uacfc\ub97c \uc5bb\uc744 \uc218 \uc5c6\uc744 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, .token \uc744 \uc9c1\uc811 \uc124\uc815\ud574\ub3c4 \uc544\ubb34 \ud6a8\uacfc\ub3c4 \uc5c6\uc73c\uba70 \uc138\uc120 \uc778\uc99d\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 .user \ub97c \uc9c1\uc811 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. # Request\uc740`SessionAuthentication`\uc774 \uc0ac\uc6a9 \uc911\uc77c \ub54c\uc5d0 \ub9cc \uc778\uc99d\ud569\ub2c8\ub2e4. request = factory.get('/accounts/django-superstars/') request.user = user response = view(request) Forcing CSRF validation \uae30\ubcf8\uc801\uc73c\ub85c APIRequestFactory \uc73c\ub85c \uc0dd\uc131 \ub41c request\uc5d0\ub294 REST \ud504\ub808\uc784\uc6cc\ud06c \ubdf0\uc5d0 \uc804\ub2ec \ub420 \ub54c CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc218\ud589\ud574\uc57c\ud558\ub294 \uacbd\uc6b0, \ud329\ud1a0\ub9ac\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c enforce_csrf_checks \ud50c\ub798\uadf8\ub97c \uc124\uc815\ud558\uba74\ub429\ub2c8\ub2e4. factory = APIRequestFactory(enforce_csrf_checks=True) Note : Django\uc758 \ud45c\uc900 RequestFactory \ub294 \uc774 \uc635\uc158\uc744 \ud3ec\ud568\ud560 \ud544\uc694\uac00 \uc5c6\ub2e4\ub294 \uc0ac\uc2e4\uc5d0 \uc8fc\ubaa9\ud574\uc57c \ud569\ub2c8\ub2e4. Django\ub97c \uc0ac\uc6a9\ud560 \ub54c \ubdf0\ub97c \uc9c1\uc811 \ud14c\uc2a4\ud2b8 \ud560 \ub54c \uc2e4\ud589\ub418\uc9c0 \uc54a\ub294 \ubbf8\ub4e4\uc6e8\uc5b4\uc5d0\uc11c CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc218\ud589\ub418\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud560 \ub54c \ubdf0 \ub0b4\ubd80\uc5d0\uc11c CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc218\ud589\ub418\ubbc0\ub85c \uc694\uccad \ud329\ud1a0\ub9ac\ub294 \ubdf0 \uc218\uc900\uc758 CSRF \uac80\uc0ac\ub97c \ube44\ud65c\uc131\ud654\ud574\uc57c\ud569\ub2c8\ub2e4. APIClient Django\uc758 \uae30\uc874 Client \ud074\ub798\uc2a4\ub97c \ud655\uc7a5\ud569\ub2c8\ub2e4. Making requests APIClient \ud074\ub798\uc2a4\ub294 DJango\uc758 \ud45c\uc900 Client\ud074\ub798\uc2a4\uc640 \ub3d9\uc77c\ud55c \uc694\uccad \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc989, .get() , .post() , .put() , .patch() , .delete() , .head() , .options() \uba54\uc11c\ub4dc\ub97c \ubaa8\ub450 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.test import APIClient client = APIClient() client.post('/notes/', {'title': 'new idea'}, format='json') \ub354 \ub9cc\uc740 \uc815\ubcf4\ub294 configuration section \ub97c \ucc38\uc870\ud558\uc138\uc694. Authenticating .login(**kwargs) login \uba54\uc18c\ub4dc\ub294 Django\uc758 Cilent \ud074\ub798\uc2a4\uc640 \ub611\uac19\uc774 \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 SessionAuthentication \uc774 \ud3ec\ud568\ub41c \ubaa8\ub4e0 views\uc5d0 \ub300\ud55c \uc694\uccad\uc744 \uc778\uc99d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. # Make all requests in the context of a logged in session. client = APIClient() client.login(username='lauren', password='secret') \ub85c\uadf8\uc544\uc6c3\ud558\ub824\uba74 logout \uba54\uc18c\ub4dc\ub97c \ud638\ucd9c\ud558\uc138\uc694. # Log out client.logout() login \uba54\uc18c\ub4dc\ub294 AJAX API \uc640\uc758 \uc0c1\ud638 \uc791\uc6a9\uc744 \ud3ec\ud568\ud558\ub294 \uc6f9 \uc0ac\uc774\ud2b8\uc640 \uac19\uc774 \uc138\uc158 \uc778\uc99d\uc744 \uc0ac\uc6a9\ud558\ub294 API\ub97c \ud14c\uc2a4\ud2b8\ud558\ub294\ub370 \uc801\ud569\ud569\ub2c8\ub2e4. .credentials(**kwargs) credentials \uba54\uc18c\ub4dc\ub294 \ud14c\uc2a4\ud2b8 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ubaa8\ub4e0 \ud6c4\uc18d \uc694\uccad\uc5d0 \ud3ec\ud568 \ud560 \ud5e4\ub354\ub97c \uc124\uc815\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.authtoken.models import Token from rest_framework.test import APIClient # Include an appropriate `Authorization:` header on all requests. token = Token.objects.get(user__username='lauren') client = APIClient() client.credentials(HTTP_AUTHORIZATION='Token ' + token.key) credentials \ub97c \ub2e4\uc2dc \ud638\ucd9c\ud558\uba74 \uae30\uc874 credentials \uc744 \ub36e\uc5b4 \uc501\ub2c8\ub2e4. \uc778\uc218\uc5c6\uc774 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\uc5ec \uae30\uc874 credentials \uc758 \uc124\uc815\uc744 \ud574\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. # Stop including any credentials client.credentials() credentials \ubc29\ubc95\uc740 \uae30\ubcf8\uc778\uc99d, OAuth1a\uacfc OAuth2 \uc778\uc99d \ubc0f \uac04\ub2e8\ud55c \ud1a0\ud070 \uc778\uc99d\uc2a4\ud0a4\ub9c8\uc640 \uac19\uc740 \uc778\uc99d \ud5e4\ub354\uac00 \ud544\uc694\ud55c API\ub97c \ud14c\uc2a4\ud2b8\ud558\ub294\ub370 \uc801\ud569\ud569\ub2c8\ub2e4. .force_authenticate(user=None, token=None) \ub54c\ub85c\ub294 \uc778\uc99d\uc744 \uc0dd\ub7b5\ud558\uace0 \ud14c\uc2a4\ud2b8 \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 \ubaa8\ub4e0 \uc694\uccad\uc744 \uc778\uc99d \ub41c \uac83\uc73c\ub85c \uc790\ub3d9\ucc98\ub9ac\ud558\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 API\ub97c \ud14c\uc2a4\ud2b8\ud558\uace0 \uc788\uc9c0\ub9cc \ud14c\uc2a4\ud2b8 \uc694\uccad\uc744 \ud558\uae30 \uc704\ud574 \uc720\ud6a8\ud55c \uc790\uaca9 \uc99d\uba85\uc744 \uc791\uc131\ud558\uc9c0 \uc54a\uc73c\ub824\ub294 \uacbd\uc6b0 \uc720\uc6a9\ud55c \ub2e8\ucd95\ud0a4\uc785\ub2c8\ub2e4. user = User.objects.get(username='lauren') client = APIClient() client.force_authenticate(user=user) \ud6c4\uc18d \uc694\uccad\uc744 \uc778\uc99d \ud574\uc81c\ud558\ub824\uba74 force_authenticate \ub97c \ud638\ucd9c\ud558\uc5ec \uc0ac\uc6a9\uc790/\ud1a0\ud070\uc744 None \uc73c\ub85c \uc124\uc815\ud558\uc138\uc694. client.force_authenticate(user=None) CSRF validation \uae30\ubcf8\uc801\uc73c\ub85c CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\ub294 APICLient\ub97c \uc0ac\uc6a9\ud560 \ub584 \uc801\ud569\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \ud65c\uc131\ud654\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 Client\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560\ub54c enforce_csrf_checks \ud50c\ub798\uadf8\ub97c \uc124\uc815\ud558\uba74 \ub429\ub2c8\ub2e4. client = APIClient(enforce_csrf_checks=True) \ud3c9\uc18c\ucc98\ub7fc CSRF \uc720\ud6a8\uc131\uac80\uc0ac\ub294 \uc138\uc158 \uc778\uc99d \ub41c views\uc5d0\ub9cc \uc801\uc6a9\ub429\ub2c8\ub2e4. \uc989, \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 login() \uc744 \ud638\ucd9c\ud558\ub824 \ub85c\uadf8\uc778\ud55c \uacbd\uc6b0\uc5d0\ub9cc CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc218\ud589\ub429\ub2c8\ub2e4. RequestsClient RESR \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\ub294 request (Python \ub77c\uc774\ube0c\ub7ec\ub9ac)\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \uc0c1\ud638 \uc791\uc6a9\ud558\ub294 client\ub3c4 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0 \uc720\uc6a9\ud558\uac8c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\ub85c \ub2e4\ub978 Python \uc11c\ube44\uc2a4\uc758 API\uc640\uc758 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uae30\ub300\ud558\uace0 \uc788\uc73c\uba70, client\uac00 \ubcfc \uc218 \uc788\ub294 \uac83\uacfc \ub3d9\uc77c\ud55c \uc218\uc900\uc5d0\uc11c \uc11c\ube44\uc2a4\ub97c \ud14c\uc2a4\ud2b8\ud558\ub824 \ud560 \ub54c \uc900\ube44 \ub610\ub294 \uc2e4\uc81c \ud658\uacbd\uc5d0 \ub300\ud574 \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ubc29\uc2dd\uc73c\ub85c \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud560 \ub54c (\"Live test\" \ucc38\uc870) \uc774\ub294 requests \uc138\uc158\uc744 \uc9c1\uc811 \uc0ac\uc6a9\ud558\ub294 \uac83\uacfc \ub3d9\uc77c\ud55c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. client = RequestsClient() response = client.get('http://testserver/users/') assert response.status_code == 200 requests client\uc5d0\uc11c\ub294 \uc815\uaddc\ud654 \ub41c URL\uc744 \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4. RequestsClient and working with the database RequestsClient \ud074\ub798\uc2a4\ub294 \uc11c\ube44\uc2a4 \uc778\ud130\ud398\uc774\uc2a4\ub9cc \uc0c1\ud638 \uc791\uc6a9\ud558\ub294 \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 Django \ud14c\uc2a4\ud2b8 \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\ubcf4\ub2e4 \uc870\uae08 \ub354 \uc5c4\uaca9\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uc0c1\ud638\uc791\uc6a9\uc774 API\ub97c \ud1b5\ud574 \uc774\ub8e8\uc5b4\uc838\uc57c\ud558\uae30 \ub584\ubb38\uc785\ub2c8\ub2e4. RequestsClient \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ubaa8\ub378\uacfc \uc9c1\uc811 \uc0c1\ud638 \uc791\uc6a9\ud558\ub294 \ub300\uc2e0 \ud14c\uc2a4\ud2b8 \uc124\uc815 \ubc0f \uacb0\uacfc \uc8fc\uc7a5(?)\uc744 \uc77c\ubc18 API \ud638\ucd9c\ub85c \uc218\ud589\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, Customer.objects.count () == 3 \ub97c \ud655\uc778\ud558\ub294 \ub300\uc2e0 customers \ub9c8\uc9c0\ub9c9\uc810\uc744 \ub098\uc5f4\ud558\uace0 3\uac1c\uc758 \ub808\ucf54\ub4dc\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694. Headers & Authentication custom \ud5e4\ub354\uc640 \uc778\uc99d\uc790\uaca9 \uc99d\uba85\uc740 requests.Session \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud560 \ub54c\uc640 \ub3d9\uc77c\ud55c \ubc29\uc2dd\uc73c\ub85c \uc81c\uacf5 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from requests.auth import HTTPBasicAuth client.auth = HTTPBasicAuth('user', 'pass') client.headers.update({'x-test': 'true'}) CSRF SessionAuthentication \uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 POST , PUT , PATCH , DELETE \uc694\uccad\uc5d0 \ub300\ud574 CSRF \ud1a0\ud070\uc744 \ud3ec\ud568\ud574\uc57c\ud569\ub2c8\ub2e4. JavaScript \uae30\ubc18\uc758 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc0ac\uc6a9\ud558\ub294 \uac83\uacfc \ub3d9\uc77c\ud55c \ud750\ub984\uc73c\ub85c \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba3c\uc800 CRSF \ud1a0\ud070\uc744 \uc5bb\uae30 \uc704\ud574 GET \uc694\uccad\uc744 \ud558\uace0 \ub2e4\uc74c \uc694\uccad\uc5d0 \ud1a0\ud070\uc744 \uc81c\uc2dc\ud558\uc2ed\uc2dc\uc624. client = RequestsClient() # Obtain a CSRF token. response = client.get('/homepage/') assert response.status_code == 200 csrftoken = response.cookies['csrftoken'] # Interact with the API. response = client.post('/organisations/', json={ 'name': 'MegaCorp', 'status': 'active' }, headers={'X-CSRFToken': csrftoken}) assert response.status_code == 200 Live tests \uc2e0\uc911\ud558\uac8c \uc0ac\uc6a9\ud558\uba74 RequestsClient \uc640 CoreAPIClient \uac00 \ubaa8\ub450 \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c \uc2e4\ud589\ub418\uac70\ub098 \uc900\ube44 \uc11c\ubc84 \ub610\ub294 \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0 \uc9c1\uc811 \uc2e4\ud589 \ub420 \uc218 \uc788\ub294 \ud14c\uc2a4\ud2b8 \uc0ac\ub840\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7fc \uc2a4\ud0c0\uc77c\ub85c \uba87 \uac00\uc9c0 \ud575\uc2ec \uae30\ub2a5 \uc911 \uc77c\ubd80\uc5d0 \ub300\ud55c \uae30\ubcf8 \ud14c\uc2a4\ud2b8\ub97c \ub9cc\ub4dc\ub294 \uac83\uc740 \uc2e4\uc81c \uc11c\ube44\uc2a4\ub97c \ud655\uc778\ud558\ub294 \uac15\ub825\ud55c \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc774\ub807\uac8c\ud558\ub824\uba74 \ud14c\uc2a4\ud2b8\uac00 \uace0\uac1d \ub370\uc774\ud130\uc5d0 \uc9c1\uc811 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\ub294 \ubc29\uc2dd\uc73c\ub85c \uc2e4\ud589\ub418\ub3c4\ub85d \uc124\uc815 \ubc0f \ud574\uc81c\ud558\ub294\ub370 \uc2e0\uc911\uc744 \uae30\ud574\uc57c\ud569\ub2c8\ub2e4. CoreAPIClient CoreAPIClient \ub97c \uc0ac\uc6a9\ud558\uba74 coreapi (Python \ud074\ub77c\uc774\uc5b8\ud2b8 \ub77c\uc774\ube0c\ub7ec\ub9ac)\ub97c \uc0ac\uc6a9\ud558\uc5ec API\uc640 \uc0c1\ud638 \uc791\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. # Fetch the API schema client = CoreAPIClient() schema = client.get('http://testserver/schema/') # Create a new organisation params = {'name': 'MegaCorp', 'status': 'active'} client.action(schema, ['organisations', 'create'], params) # Ensure that the organisation exists in the listing data = client.action(schema, ['organisations', 'list']) assert(len(data) == 1) assert(data == [{'name': 'MegaCorp', 'status': 'active'}]) Headers & Authentication Customs \ud5e4\ub354\uc640 \uc778\uc99d\uc740 RequestsClient \uc640 \ube44\uc2b7\ud55c \ubc29\uc2dd\uc73c\ub85c CoreAPIClient \uc640 \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from requests.auth import HTTPBasicAuth client = CoreAPIClient() client.session.auth = HTTPBasicAuth('user', 'pass') client.session.headers.update({'x-test': 'true'}) Test cases REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 DJango \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4 \ud074\ub798\uc2a4\ub97c \ubc18\uc601\ud558\uc9c0\ub9cc, Django\uc758 \uae30\ubcf8 \ud074\ub77c\uc774\uc5b8\ud2b8 \ub300\uc2e0 APIClient \ub97c \uc0ac\uc6a9\ud558\ub294 \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4 \ud074\ub798\uc2a4\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. APISimpleTestCase APITransactionTestCase APITestCase APILiveServerTestCase Example] Django \ud14c\uc2a4\ud2b8\ucf00\uc774\uc2a4 \ud074\ub798\uc2a4\ucc98\ub7fc REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4 \ud074\ub798\uc2a4 \uc911 \ud558\ub098\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. self.client \uc18d\uc131\uc740 APIClient \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4. from django.urls import reverse from rest_framework import status from rest_framework.test import APITestCase from myproject.apps.core.models import Account class AccountTests(APITestCase): def test_create_account(self): \"\"\" Ensure we can create a new account object. \"\"\" url = reverse('account-list') data = {'name': 'DabApps'} response = self.client.post(url, data, format='json') self.assertEqual(response.status_code, status.HTTP_201_CREATED) self.assertEqual(Account.objects.count(), 1) self.assertEqual(Account.objects.get().name, 'DabApps') Testing responses Checking the response data \ud14c\uc2a4\ud2b8 \uc751\ub2f5\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac \ud560 \ub54c \uc644\uc804\ud788 \ub80c\ub354\ub9c1 \ub41c \uc751\ub2f5\uc744 \uac80\uc0ac\ud558\ub294 \uac83\ubcf4\ub2e4 \uc751\ub2f5\uc774 \uc0dd\uc131 \ub41c \ub370\uc774\ud130\ub97c \uac80\uc0ac\ud558\ub294 \uac83\uc774 \ub354 \ud3b8\ub9ac\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, response.data \ub97c \uac80\uc0ac\ud558\ub294 \uac83\uc774 \ub354 \uc27d\uc2b5\ub2c8\ub2e4. response = self.client.get('/users/4/') self.assertEqual(response.data, {'id': 4, 'username': 'lauren'}) response.content \ub97c \uad6c\ubb38 \ubd84\uc11d\ud55c \uacb0\uacfc\ub97c \uac80\uc0ac\ud558\ub294 \ub300\uc2e0: response = self.client.get('/users/4/') self.assertEqual(json.loads(response.content), {'id': 4, 'username': 'lauren'}) Rendering responses APIRequestFactory \ub97c \uc0ac\uc6a9\ud558\uc5ec \ubdf0\ub97c \uc9c1\uc811 \ud14c\uc2a4\ud2b8\ud558\ub294 \uacbd\uc6b0, \ud15c\ud50c\ub9bf \uc751\ub2f5\uc758 \ub80c\ub354\ub9c1\uc774 Django\uc758 \ub0b4\ubd80 requests - response \uc5d0 \uc758\ud574 \uc218\ud589\ub418\uae30 \ub54c\ubb38\uc5d0 \ubc18\ud658\ub418\ub294 \uc751\ub2f5\uc740 \uc544\uc9c1 \ub80c\ub354\ub9c1\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. response.content \uc5d0 \uc561\uc138\uc2a4\ud558\ub824\uba74 \uba3c\uc800 \uc751\ub2f5\uc744 \ub80c\ub354\ub9c1\ud574\uc57c\ud569\ub2c8\ub2e4. view = UserDetail.as_view() request = factory.get('/users/4') response = view(request, pk='4') response.render() # Cannot access `response.content` without this. self.assertEqual(response.content, '{\"username\": \"lauren\", \"id\": 4}') Configuration Setting the default format \ud14c\uc2a4\ud2b8 \uc694\uccad\uc744\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uae30\ubcf8 \ud615\uc2dd\uc740 TEST_REQUEST_DEFAULT_FORMAT \uc124\uc815 \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ud14c\uc2a4\ud2b8 \uc694\uccad\uc744 \ud56d\uc0c1 JSON \uc744 \uc0ac\uc6a9\ud558\ub824\uba74 settings.py \ud30c\uc77c\uc5d0\uc11c \ub2e4\uc74c\uc744 \uc124\uc815\ud558\uc138\uc694. REST_FRAMEWORK = { ... 'TEST_REQUEST_DEFAULT_FORMAT': 'json' } Setting the available formats multipart \ub610\ub294 json \uc694\uccad \uc774\uc678\uc758 \uac83\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc694\uccad\uc744 \ud14c\uc2a4\ud2b8\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 TEST_REQUEST_RENDERER_CLASSES \uc124\uc815\uc744 \uc124\uc815\ud558\uc5ec \uc694\uccad\uc744 \ud14c\uc2a4\ud2b8 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ud14c\uc2a4\ud2b8 \uc694\uccad\uc5d0 format = 'html' \uc744 \ucd94\uac00\ud558\ub824\uba74 settings.py \ud30c\uc77c\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc740 \ub0b4\uc6a9\uc774 \ucd94\uac00\ud569\ub2c8\ub2e4. REST_FRAMEWORK = { ... 'TEST_REQUEST_RENDERER_CLASSES': ( 'rest_framework.renderers.MultiPartRenderer', 'rest_framework.renderers.JSONRenderer', 'rest_framework.renderers.TemplateHTMLRenderer' ) }","title":"Testing"},{"location":"Testing/#django-rest-framework-testing","text":"\"Code without tests is broken as designed.\" \"\ud14c\uc2a4\ud2b8\uac00 \uc5c6\ub294 \ucf54\ub4dc\ub294 \uc758\ub3c4 \ud55c\ub300\ub85c \uc791\ub3d9\ud558\uc9c0 \uc54a\ub294\ub2e4.\" - Jacob Kaplan-Moss REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 Django\uc758 \uae30\uc874 \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\ub97c \ud655\uc7a5\ud558\uace0, API Requests \uc791\uc131\uc5d0 \ub300\ud55c \uc9c0\uc6d0\uc744 \ud5a5\uc0c1\uc2dc\ud0a4\ub294 \uc11c\ud3ec\ud2b8 \ud074\ub798\uc2a4\ub97c \ud3ec\ud568\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.","title":"Django REST Framework - Testing"},{"location":"Testing/#apirequestfactory","text":"Django\uc758 \uae30\uc874 RequestFactory \ud074\ub798\uc2a4\ub97c \ud655\uc7a5\ud569\ub2c8\ub2e4.","title":"APIRequestFactory"},{"location":"Testing/#creating-test-requests","text":"APIRequestFactory \ud074\ub798\uc2a4\ub294 Django\uc758 \ud45c\uc900 RequestFactory \ud074\ub798\uc2a4\uc640 \uac70\uc758 \ub3d9\uc77c\ud55c API\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc989 \ud45c\uc900 .get() , .post() , .put() , .patch() , .delete() , .head() \ubc0f .options() \uba54\uc11c\ub4dc\ub97c \ubaa8\ub450 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. rom rest_framework.test import APIRequestFactory # \ud45c\uc900 `RequestFactory` API\uc744 \uc0ac\uc6a9\u314e\uc5ec POST request form\uc744 \ub9cc\ub4e0\ub2e4. factory = APIRequestFactory() request = factory.post('/notes/', {'title': 'new idea'})","title":"Creating test requests"},{"location":"Testing/#using-the-format-argument","text":"post , put , patch \uc640 \uac19\uc740 requests\ub97c \ub9cc\ub4dc\ub294 \uba54\uc11c\ub4dc\uc5d0\ub294 content type\uc744 \uc0ac\uc6a9\ud558\uc5ec requests\ub97c \uc27d\uac8c \uc0dd\uc131 \ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 argument\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. # Create a JSON POST request factory = APIRequestFactory() request = factory.post('/notes/', {'title': 'new idea'}, format='json') \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud615\uc2dd\uc740 multipart \uc640 json \uc785\ub2c8\ub2e4. Django\uc758 \uae30\uc874 RequestFactory \uc640\uc758 \ud638\ud658\uc131\uc744 \uc704\ud574 \uae30\ubcf8 \ud615\uc2dd\uc740 multipart \uc785\ub2c8\ub2e4. \ub354 \ub9ce\uc740 \ud615\uc2dd\uc5d0 \ub300\ud55c \uc815\ubcf4\ub294 configuration section \uc744 \ucc38\uc870\ud558\uc138\uc694.","title":"Using the format argument"},{"location":"Testing/#explicitly-encoding-the-request-body","text":"request \ubcf8\ubb38\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc778\ucf54\ub529\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 context_type \ud50c\ub798\uadf8\ub97c \uc124\uc815\ud558\uc5ec request \ubcf8\ubb38\uc744 \uc778\ucf54\ub529\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. request = factory.post('/notes/', json.dumps({'title': 'new idea'}), content_type='application/json')","title":"Explicitly encoding the request body"},{"location":"Testing/#put-and-patch-with-form-data","text":"Django\uc758 RequestFactory \uc640 REST \ud504\ub808\uc784 \uc6cc\ud06c\uc758 APIRequestFactory \uc0ac\uc774\uc5d0 \uc8fc\ubaa9\ud560 \ub9cc\ud55c \ucc28\uc774\uc810\uc740 \ub2e4\uc911 \ud30c\ud2b8 \uc591\uc2dd \ub370\uc774\ud130\uac00 .post() \uc774\uc678\uc758 \uba54\uc18c\ub4dc\ub85c \uc778\ucf54\ub529\ub41c\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, APIRequestFactory \ub97c \uc0ac\uc6a9\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 put \uc694\uccad\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. factory = APIRequestFactory() request = factory.put('/notes/547/', {'title': 'remember to email dave'}) Django\uc758 RequestFactory \ub97c \uc0ac\uc6a9\ud558\uba74 \uba85\uc2dc\uc801\uc73c\ub85c \ub370\uc774\ud130\ub97c \uc9c1\uc811 \uc778\ucf54\ub529\ud574\uc57c\ud569\ub2c8\ub2e4. from django.test.client import encode_multipart, RequestFactory factory = RequestFactory() data = {'title': 'remember to email dave'} content = encode_multipart('BoUnDaRyStRiNg', data) content_type = 'multipart/form-data; boundary=BoUnDaRyStRiNg' request = factory.put('/notes/547/', content, content_type=content_type)","title":"PUT and PATCH with form data"},{"location":"Testing/#forcing-authentication","text":"RequestFactory \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc9c1\uc811 \ubdf0\ub97c \ud14c\uc2a4\ud2b8 \ud560 \ub54c\ub294 \uc778\uc99d\uc790\uaca9 \uc99d\uba85\uc744 \uc791\uc131\ud558\uc9c0\uc54a\uace0 \uc9c1\uc811 \uc790\uaca9\uc694\uccad\uc744 \uc778\uc99d\ud558\ub294 \uac83\uc774 \ud3b8\ub9ac\ud569\ub2c8\ub2e4. \uac15\uc81c \uc694\uccad\uc744 \uc778\uc99d\ud558\ub824\uba74 force_authenticate() \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624. from rest_framework.test import force_authenticate factory = APIRequestFactory() user = User.objects.get(username='olivia') view = AccountDetail.as_view() # Make an authenticated request to the view... request = factory.get('/accounts/django-superstars/') force_authenticate(request, user=user) response = view(request) \uc774 \uba54\uc18c\ub4dc\uc758 \uc11c\uba85\uc740 force_authenticate(request, user = None, token = None) \uc785\ub2c8\ub2e4. \uc804\ud654\ub97c \uac78 \ub54c \uc0ac\uc6a9\uc790\uc640 \ud1a0\ud070 \uc911 \ud558\ub098 \ub610\ub294 \ub458 \ubaa8\ub450\uac00 \uc124\uc815 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ud1a0\ud070\uc744 \uc0ac\uc6a9\ud558\uc5ec \uac15\uc81c\ub85c \uc778\uc99d\ud558\ub294 \uacbd\uc6b0 \ub2e4\uc74c\uacfc \uac19\uc774 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. user = User.objects.get(username='olivia') request = factory.get('/accounts/django-superstars/') force_authenticate(request, user=user, token=user.token) Note : APIRequestFactory \ub97c \uc0ac\uc6a9\ud560 \ub54c \ubc18\ud658\ub418\ub294 \uac1d\uccb4\ub294 Django\uc758 \ud45c\uc900 HttpRequest \uc774\uba70, REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 Request \uac1d\uccb4\ub294 \uc544\ub2c8\uba70 \ubdf0\uac00 \ud638\ucd9c \ub41c \ud6c4\uc5d0\ub9cc \u200b\u200b\uc0dd\uc131\ub429\ub2c8\ub2e4. \uc989, request \uac1d\uccb4\uc5d0 \uc9c1\uc811 \uc18d\uc131\uc744 \uc124\uc815\ud558\uba74 \ud56d\uc0c1 \uc6d0\ud558\ub294 \uacb0\uacfc\ub97c \uc5bb\uc744 \uc218 \uc5c6\uc744 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, .token \uc744 \uc9c1\uc811 \uc124\uc815\ud574\ub3c4 \uc544\ubb34 \ud6a8\uacfc\ub3c4 \uc5c6\uc73c\uba70 \uc138\uc120 \uc778\uc99d\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 .user \ub97c \uc9c1\uc811 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. # Request\uc740`SessionAuthentication`\uc774 \uc0ac\uc6a9 \uc911\uc77c \ub54c\uc5d0 \ub9cc \uc778\uc99d\ud569\ub2c8\ub2e4. request = factory.get('/accounts/django-superstars/') request.user = user response = view(request)","title":"Forcing authentication"},{"location":"Testing/#forcing-csrf-validation","text":"\uae30\ubcf8\uc801\uc73c\ub85c APIRequestFactory \uc73c\ub85c \uc0dd\uc131 \ub41c request\uc5d0\ub294 REST \ud504\ub808\uc784\uc6cc\ud06c \ubdf0\uc5d0 \uc804\ub2ec \ub420 \ub54c CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc218\ud589\ud574\uc57c\ud558\ub294 \uacbd\uc6b0, \ud329\ud1a0\ub9ac\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560 \ub54c enforce_csrf_checks \ud50c\ub798\uadf8\ub97c \uc124\uc815\ud558\uba74\ub429\ub2c8\ub2e4. factory = APIRequestFactory(enforce_csrf_checks=True) Note : Django\uc758 \ud45c\uc900 RequestFactory \ub294 \uc774 \uc635\uc158\uc744 \ud3ec\ud568\ud560 \ud544\uc694\uac00 \uc5c6\ub2e4\ub294 \uc0ac\uc2e4\uc5d0 \uc8fc\ubaa9\ud574\uc57c \ud569\ub2c8\ub2e4. Django\ub97c \uc0ac\uc6a9\ud560 \ub54c \ubdf0\ub97c \uc9c1\uc811 \ud14c\uc2a4\ud2b8 \ud560 \ub54c \uc2e4\ud589\ub418\uc9c0 \uc54a\ub294 \ubbf8\ub4e4\uc6e8\uc5b4\uc5d0\uc11c CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc218\ud589\ub418\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud560 \ub54c \ubdf0 \ub0b4\ubd80\uc5d0\uc11c CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc218\ud589\ub418\ubbc0\ub85c \uc694\uccad \ud329\ud1a0\ub9ac\ub294 \ubdf0 \uc218\uc900\uc758 CSRF \uac80\uc0ac\ub97c \ube44\ud65c\uc131\ud654\ud574\uc57c\ud569\ub2c8\ub2e4.","title":"Forcing CSRF validation"},{"location":"Testing/#apiclient","text":"Django\uc758 \uae30\uc874 Client \ud074\ub798\uc2a4\ub97c \ud655\uc7a5\ud569\ub2c8\ub2e4.","title":"APIClient"},{"location":"Testing/#making-requests","text":"APIClient \ud074\ub798\uc2a4\ub294 DJango\uc758 \ud45c\uc900 Client\ud074\ub798\uc2a4\uc640 \ub3d9\uc77c\ud55c \uc694\uccad \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc989, .get() , .post() , .put() , .patch() , .delete() , .head() , .options() \uba54\uc11c\ub4dc\ub97c \ubaa8\ub450 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.test import APIClient client = APIClient() client.post('/notes/', {'title': 'new idea'}, format='json') \ub354 \ub9cc\uc740 \uc815\ubcf4\ub294 configuration section \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"Making requests"},{"location":"Testing/#authenticating","text":"","title":"Authenticating"},{"location":"Testing/#loginkwargs","text":"login \uba54\uc18c\ub4dc\ub294 Django\uc758 Cilent \ud074\ub798\uc2a4\uc640 \ub611\uac19\uc774 \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 SessionAuthentication \uc774 \ud3ec\ud568\ub41c \ubaa8\ub4e0 views\uc5d0 \ub300\ud55c \uc694\uccad\uc744 \uc778\uc99d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. # Make all requests in the context of a logged in session. client = APIClient() client.login(username='lauren', password='secret') \ub85c\uadf8\uc544\uc6c3\ud558\ub824\uba74 logout \uba54\uc18c\ub4dc\ub97c \ud638\ucd9c\ud558\uc138\uc694. # Log out client.logout() login \uba54\uc18c\ub4dc\ub294 AJAX API \uc640\uc758 \uc0c1\ud638 \uc791\uc6a9\uc744 \ud3ec\ud568\ud558\ub294 \uc6f9 \uc0ac\uc774\ud2b8\uc640 \uac19\uc774 \uc138\uc158 \uc778\uc99d\uc744 \uc0ac\uc6a9\ud558\ub294 API\ub97c \ud14c\uc2a4\ud2b8\ud558\ub294\ub370 \uc801\ud569\ud569\ub2c8\ub2e4.","title":".login(**kwargs)"},{"location":"Testing/#credentialskwargs","text":"credentials \uba54\uc18c\ub4dc\ub294 \ud14c\uc2a4\ud2b8 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ubaa8\ub4e0 \ud6c4\uc18d \uc694\uccad\uc5d0 \ud3ec\ud568 \ud560 \ud5e4\ub354\ub97c \uc124\uc815\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.authtoken.models import Token from rest_framework.test import APIClient # Include an appropriate `Authorization:` header on all requests. token = Token.objects.get(user__username='lauren') client = APIClient() client.credentials(HTTP_AUTHORIZATION='Token ' + token.key) credentials \ub97c \ub2e4\uc2dc \ud638\ucd9c\ud558\uba74 \uae30\uc874 credentials \uc744 \ub36e\uc5b4 \uc501\ub2c8\ub2e4. \uc778\uc218\uc5c6\uc774 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\uc5ec \uae30\uc874 credentials \uc758 \uc124\uc815\uc744 \ud574\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. # Stop including any credentials client.credentials() credentials \ubc29\ubc95\uc740 \uae30\ubcf8\uc778\uc99d, OAuth1a\uacfc OAuth2 \uc778\uc99d \ubc0f \uac04\ub2e8\ud55c \ud1a0\ud070 \uc778\uc99d\uc2a4\ud0a4\ub9c8\uc640 \uac19\uc740 \uc778\uc99d \ud5e4\ub354\uac00 \ud544\uc694\ud55c API\ub97c \ud14c\uc2a4\ud2b8\ud558\ub294\ub370 \uc801\ud569\ud569\ub2c8\ub2e4.","title":".credentials(**kwargs)"},{"location":"Testing/#force_authenticateusernone-tokennone","text":"\ub54c\ub85c\ub294 \uc778\uc99d\uc744 \uc0dd\ub7b5\ud558\uace0 \ud14c\uc2a4\ud2b8 \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 \ubaa8\ub4e0 \uc694\uccad\uc744 \uc778\uc99d \ub41c \uac83\uc73c\ub85c \uc790\ub3d9\ucc98\ub9ac\ud558\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 API\ub97c \ud14c\uc2a4\ud2b8\ud558\uace0 \uc788\uc9c0\ub9cc \ud14c\uc2a4\ud2b8 \uc694\uccad\uc744 \ud558\uae30 \uc704\ud574 \uc720\ud6a8\ud55c \uc790\uaca9 \uc99d\uba85\uc744 \uc791\uc131\ud558\uc9c0 \uc54a\uc73c\ub824\ub294 \uacbd\uc6b0 \uc720\uc6a9\ud55c \ub2e8\ucd95\ud0a4\uc785\ub2c8\ub2e4. user = User.objects.get(username='lauren') client = APIClient() client.force_authenticate(user=user) \ud6c4\uc18d \uc694\uccad\uc744 \uc778\uc99d \ud574\uc81c\ud558\ub824\uba74 force_authenticate \ub97c \ud638\ucd9c\ud558\uc5ec \uc0ac\uc6a9\uc790/\ud1a0\ud070\uc744 None \uc73c\ub85c \uc124\uc815\ud558\uc138\uc694. client.force_authenticate(user=None)","title":".force_authenticate(user=None, token=None)"},{"location":"Testing/#csrf-validation","text":"\uae30\ubcf8\uc801\uc73c\ub85c CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\ub294 APICLient\ub97c \uc0ac\uc6a9\ud560 \ub584 \uc801\ud569\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \ud65c\uc131\ud654\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 Client\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560\ub54c enforce_csrf_checks \ud50c\ub798\uadf8\ub97c \uc124\uc815\ud558\uba74 \ub429\ub2c8\ub2e4. client = APIClient(enforce_csrf_checks=True) \ud3c9\uc18c\ucc98\ub7fc CSRF \uc720\ud6a8\uc131\uac80\uc0ac\ub294 \uc138\uc158 \uc778\uc99d \ub41c views\uc5d0\ub9cc \uc801\uc6a9\ub429\ub2c8\ub2e4. \uc989, \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 login() \uc744 \ud638\ucd9c\ud558\ub824 \ub85c\uadf8\uc778\ud55c \uacbd\uc6b0\uc5d0\ub9cc CSRF \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc218\ud589\ub429\ub2c8\ub2e4.","title":"CSRF validation"},{"location":"Testing/#requestsclient","text":"RESR \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\ub294 request (Python \ub77c\uc774\ube0c\ub7ec\ub9ac)\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \uc0c1\ud638 \uc791\uc6a9\ud558\ub294 client\ub3c4 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0 \uc720\uc6a9\ud558\uac8c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\ub85c \ub2e4\ub978 Python \uc11c\ube44\uc2a4\uc758 API\uc640\uc758 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uae30\ub300\ud558\uace0 \uc788\uc73c\uba70, client\uac00 \ubcfc \uc218 \uc788\ub294 \uac83\uacfc \ub3d9\uc77c\ud55c \uc218\uc900\uc5d0\uc11c \uc11c\ube44\uc2a4\ub97c \ud14c\uc2a4\ud2b8\ud558\ub824 \ud560 \ub54c \uc900\ube44 \ub610\ub294 \uc2e4\uc81c \ud658\uacbd\uc5d0 \ub300\ud574 \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ubc29\uc2dd\uc73c\ub85c \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud560 \ub54c (\"Live test\" \ucc38\uc870) \uc774\ub294 requests \uc138\uc158\uc744 \uc9c1\uc811 \uc0ac\uc6a9\ud558\ub294 \uac83\uacfc \ub3d9\uc77c\ud55c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. client = RequestsClient() response = client.get('http://testserver/users/') assert response.status_code == 200 requests client\uc5d0\uc11c\ub294 \uc815\uaddc\ud654 \ub41c URL\uc744 \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"RequestsClient"},{"location":"Testing/#requestsclient-and-working-with-the-database","text":"RequestsClient \ud074\ub798\uc2a4\ub294 \uc11c\ube44\uc2a4 \uc778\ud130\ud398\uc774\uc2a4\ub9cc \uc0c1\ud638 \uc791\uc6a9\ud558\ub294 \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 Django \ud14c\uc2a4\ud2b8 \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\ubcf4\ub2e4 \uc870\uae08 \ub354 \uc5c4\uaca9\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uc0c1\ud638\uc791\uc6a9\uc774 API\ub97c \ud1b5\ud574 \uc774\ub8e8\uc5b4\uc838\uc57c\ud558\uae30 \ub584\ubb38\uc785\ub2c8\ub2e4. RequestsClient \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ubaa8\ub378\uacfc \uc9c1\uc811 \uc0c1\ud638 \uc791\uc6a9\ud558\ub294 \ub300\uc2e0 \ud14c\uc2a4\ud2b8 \uc124\uc815 \ubc0f \uacb0\uacfc \uc8fc\uc7a5(?)\uc744 \uc77c\ubc18 API \ud638\ucd9c\ub85c \uc218\ud589\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, Customer.objects.count () == 3 \ub97c \ud655\uc778\ud558\ub294 \ub300\uc2e0 customers \ub9c8\uc9c0\ub9c9\uc810\uc744 \ub098\uc5f4\ud558\uace0 3\uac1c\uc758 \ub808\ucf54\ub4dc\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694.","title":"RequestsClient and working with the database"},{"location":"Testing/#headers-authentication","text":"custom \ud5e4\ub354\uc640 \uc778\uc99d\uc790\uaca9 \uc99d\uba85\uc740 requests.Session \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud560 \ub54c\uc640 \ub3d9\uc77c\ud55c \ubc29\uc2dd\uc73c\ub85c \uc81c\uacf5 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from requests.auth import HTTPBasicAuth client.auth = HTTPBasicAuth('user', 'pass') client.headers.update({'x-test': 'true'})","title":"Headers &amp; Authentication"},{"location":"Testing/#csrf","text":"SessionAuthentication \uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 POST , PUT , PATCH , DELETE \uc694\uccad\uc5d0 \ub300\ud574 CSRF \ud1a0\ud070\uc744 \ud3ec\ud568\ud574\uc57c\ud569\ub2c8\ub2e4. JavaScript \uae30\ubc18\uc758 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc0ac\uc6a9\ud558\ub294 \uac83\uacfc \ub3d9\uc77c\ud55c \ud750\ub984\uc73c\ub85c \uc218\ud589 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba3c\uc800 CRSF \ud1a0\ud070\uc744 \uc5bb\uae30 \uc704\ud574 GET \uc694\uccad\uc744 \ud558\uace0 \ub2e4\uc74c \uc694\uccad\uc5d0 \ud1a0\ud070\uc744 \uc81c\uc2dc\ud558\uc2ed\uc2dc\uc624. client = RequestsClient() # Obtain a CSRF token. response = client.get('/homepage/') assert response.status_code == 200 csrftoken = response.cookies['csrftoken'] # Interact with the API. response = client.post('/organisations/', json={ 'name': 'MegaCorp', 'status': 'active' }, headers={'X-CSRFToken': csrftoken}) assert response.status_code == 200","title":"CSRF"},{"location":"Testing/#live-tests","text":"\uc2e0\uc911\ud558\uac8c \uc0ac\uc6a9\ud558\uba74 RequestsClient \uc640 CoreAPIClient \uac00 \ubaa8\ub450 \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c \uc2e4\ud589\ub418\uac70\ub098 \uc900\ube44 \uc11c\ubc84 \ub610\ub294 \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0 \uc9c1\uc811 \uc2e4\ud589 \ub420 \uc218 \uc788\ub294 \ud14c\uc2a4\ud2b8 \uc0ac\ub840\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7fc \uc2a4\ud0c0\uc77c\ub85c \uba87 \uac00\uc9c0 \ud575\uc2ec \uae30\ub2a5 \uc911 \uc77c\ubd80\uc5d0 \ub300\ud55c \uae30\ubcf8 \ud14c\uc2a4\ud2b8\ub97c \ub9cc\ub4dc\ub294 \uac83\uc740 \uc2e4\uc81c \uc11c\ube44\uc2a4\ub97c \ud655\uc778\ud558\ub294 \uac15\ub825\ud55c \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc774\ub807\uac8c\ud558\ub824\uba74 \ud14c\uc2a4\ud2b8\uac00 \uace0\uac1d \ub370\uc774\ud130\uc5d0 \uc9c1\uc811 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\ub294 \ubc29\uc2dd\uc73c\ub85c \uc2e4\ud589\ub418\ub3c4\ub85d \uc124\uc815 \ubc0f \ud574\uc81c\ud558\ub294\ub370 \uc2e0\uc911\uc744 \uae30\ud574\uc57c\ud569\ub2c8\ub2e4.","title":"Live tests"},{"location":"Testing/#coreapiclient","text":"CoreAPIClient \ub97c \uc0ac\uc6a9\ud558\uba74 coreapi (Python \ud074\ub77c\uc774\uc5b8\ud2b8 \ub77c\uc774\ube0c\ub7ec\ub9ac)\ub97c \uc0ac\uc6a9\ud558\uc5ec API\uc640 \uc0c1\ud638 \uc791\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. # Fetch the API schema client = CoreAPIClient() schema = client.get('http://testserver/schema/') # Create a new organisation params = {'name': 'MegaCorp', 'status': 'active'} client.action(schema, ['organisations', 'create'], params) # Ensure that the organisation exists in the listing data = client.action(schema, ['organisations', 'list']) assert(len(data) == 1) assert(data == [{'name': 'MegaCorp', 'status': 'active'}])","title":"CoreAPIClient"},{"location":"Testing/#headers-authentication_1","text":"Customs \ud5e4\ub354\uc640 \uc778\uc99d\uc740 RequestsClient \uc640 \ube44\uc2b7\ud55c \ubc29\uc2dd\uc73c\ub85c CoreAPIClient \uc640 \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from requests.auth import HTTPBasicAuth client = CoreAPIClient() client.session.auth = HTTPBasicAuth('user', 'pass') client.session.headers.update({'x-test': 'true'})","title":"Headers &amp; Authentication"},{"location":"Testing/#test-cases","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 DJango \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4 \ud074\ub798\uc2a4\ub97c \ubc18\uc601\ud558\uc9c0\ub9cc, Django\uc758 \uae30\ubcf8 \ud074\ub77c\uc774\uc5b8\ud2b8 \ub300\uc2e0 APIClient \ub97c \uc0ac\uc6a9\ud558\ub294 \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4 \ud074\ub798\uc2a4\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. APISimpleTestCase APITransactionTestCase APITestCase APILiveServerTestCase","title":"Test cases"},{"location":"Testing/#example","text":"Django \ud14c\uc2a4\ud2b8\ucf00\uc774\uc2a4 \ud074\ub798\uc2a4\ucc98\ub7fc REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4 \ud074\ub798\uc2a4 \uc911 \ud558\ub098\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. self.client \uc18d\uc131\uc740 APIClient \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4. from django.urls import reverse from rest_framework import status from rest_framework.test import APITestCase from myproject.apps.core.models import Account class AccountTests(APITestCase): def test_create_account(self): \"\"\" Ensure we can create a new account object. \"\"\" url = reverse('account-list') data = {'name': 'DabApps'} response = self.client.post(url, data, format='json') self.assertEqual(response.status_code, status.HTTP_201_CREATED) self.assertEqual(Account.objects.count(), 1) self.assertEqual(Account.objects.get().name, 'DabApps')","title":"Example]"},{"location":"Testing/#testing-responses","text":"","title":"Testing responses"},{"location":"Testing/#checking-the-response-data","text":"\ud14c\uc2a4\ud2b8 \uc751\ub2f5\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac \ud560 \ub54c \uc644\uc804\ud788 \ub80c\ub354\ub9c1 \ub41c \uc751\ub2f5\uc744 \uac80\uc0ac\ud558\ub294 \uac83\ubcf4\ub2e4 \uc751\ub2f5\uc774 \uc0dd\uc131 \ub41c \ub370\uc774\ud130\ub97c \uac80\uc0ac\ud558\ub294 \uac83\uc774 \ub354 \ud3b8\ub9ac\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, response.data \ub97c \uac80\uc0ac\ud558\ub294 \uac83\uc774 \ub354 \uc27d\uc2b5\ub2c8\ub2e4. response = self.client.get('/users/4/') self.assertEqual(response.data, {'id': 4, 'username': 'lauren'}) response.content \ub97c \uad6c\ubb38 \ubd84\uc11d\ud55c \uacb0\uacfc\ub97c \uac80\uc0ac\ud558\ub294 \ub300\uc2e0: response = self.client.get('/users/4/') self.assertEqual(json.loads(response.content), {'id': 4, 'username': 'lauren'})","title":"Checking the response data"},{"location":"Testing/#rendering-responses","text":"APIRequestFactory \ub97c \uc0ac\uc6a9\ud558\uc5ec \ubdf0\ub97c \uc9c1\uc811 \ud14c\uc2a4\ud2b8\ud558\ub294 \uacbd\uc6b0, \ud15c\ud50c\ub9bf \uc751\ub2f5\uc758 \ub80c\ub354\ub9c1\uc774 Django\uc758 \ub0b4\ubd80 requests - response \uc5d0 \uc758\ud574 \uc218\ud589\ub418\uae30 \ub54c\ubb38\uc5d0 \ubc18\ud658\ub418\ub294 \uc751\ub2f5\uc740 \uc544\uc9c1 \ub80c\ub354\ub9c1\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. response.content \uc5d0 \uc561\uc138\uc2a4\ud558\ub824\uba74 \uba3c\uc800 \uc751\ub2f5\uc744 \ub80c\ub354\ub9c1\ud574\uc57c\ud569\ub2c8\ub2e4. view = UserDetail.as_view() request = factory.get('/users/4') response = view(request, pk='4') response.render() # Cannot access `response.content` without this. self.assertEqual(response.content, '{\"username\": \"lauren\", \"id\": 4}')","title":"Rendering responses"},{"location":"Testing/#configuration","text":"","title":"Configuration"},{"location":"Testing/#setting-the-default-format","text":"\ud14c\uc2a4\ud2b8 \uc694\uccad\uc744\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uae30\ubcf8 \ud615\uc2dd\uc740 TEST_REQUEST_DEFAULT_FORMAT \uc124\uc815 \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ud14c\uc2a4\ud2b8 \uc694\uccad\uc744 \ud56d\uc0c1 JSON \uc744 \uc0ac\uc6a9\ud558\ub824\uba74 settings.py \ud30c\uc77c\uc5d0\uc11c \ub2e4\uc74c\uc744 \uc124\uc815\ud558\uc138\uc694. REST_FRAMEWORK = { ... 'TEST_REQUEST_DEFAULT_FORMAT': 'json' }","title":"Setting the default format"},{"location":"Testing/#setting-the-available-formats","text":"multipart \ub610\ub294 json \uc694\uccad \uc774\uc678\uc758 \uac83\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc694\uccad\uc744 \ud14c\uc2a4\ud2b8\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 TEST_REQUEST_RENDERER_CLASSES \uc124\uc815\uc744 \uc124\uc815\ud558\uc5ec \uc694\uccad\uc744 \ud14c\uc2a4\ud2b8 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ud14c\uc2a4\ud2b8 \uc694\uccad\uc5d0 format = 'html' \uc744 \ucd94\uac00\ud558\ub824\uba74 settings.py \ud30c\uc77c\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc740 \ub0b4\uc6a9\uc774 \ucd94\uac00\ud569\ub2c8\ub2e4. REST_FRAMEWORK = { ... 'TEST_REQUEST_RENDERER_CLASSES': ( 'rest_framework.renderers.MultiPartRenderer', 'rest_framework.renderers.JSONRenderer', 'rest_framework.renderers.TemplateHTMLRenderer' ) }","title":"Setting the available formats"},{"location":"Throttling/","text":"Django REST Framework - Throttling \"HTTP/1.1 420 Enhance Your Calm\" Twitter API rate limiting response Throttling (\uc81c\ud55c) Throttling\uc740 request\uac00 \uc2b9\uc778\ub418\uc5b4\uc57c\ud558\ub294\uc9c0 \uc5ec\ubd80\ub97c \uacb0\uc815\ud55c\ub2e4\ub294 \uc810\uc5d0\uc11c permissions\uc640 \uc720\uc0ac\ud569\ub2c8\ub2e4. Throttling\uc740 \uc784\uc2dc\uc0c1\ud0dc\ub97c \ub098\ud0c0\ub0b4\uba70 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 API\uc5d0 \ub300\ud574 \uc218\ud589 \ud560 \uc218 \uc788\ub294 request \ube48\ub3c4\uc218\ub97c \uc81c\uc5b4\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. permissions\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c, \uc5ec\ub7ec Throttle\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. API\uc5d0\ub294 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc5d0 \ub300\ud574 \uc81c\ud55c\uc801\uc73c\ub85c Throttle\uacfc \uc778\uc99d \ub41c \uc694\uccad\uc5d0 \ub300\ud55c \uc81c\ud55c\uc801\uc778 Throttle\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\uc815 \uc11c\ube44\uc2a4\uac00 \ud2b9\ud788 \ub9ac\uc18c\uc2a4\ub97c \uc7a1\uc544\uba39\uae30 \ub54c\ubb38\uc5d0 API\uc758 \ub2e4\uc591\ud55c \ubd80\ubd84\uc5d0 \ub2e4\ub978 \uc81c\uc57d\uc744 \ubd80\uacfc\ud574\uc57c\ud558\ub294 \uacbd\uc6b0, \uc5ec\ub7ec throttle\uc744 \uc0ac\uc6a9\ud558\ub294 \ub2e4\ub978 \uc2dc\ub098\ub9ac\uc624\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ubc84\uc2a4\ud2b8 \ube48\ub3c4\uc218 \uc81c\ud55c\uc640 \uc9c0\uc18d\uc801\uc778 \ube48\ub3c4\uc218 \uc81c\ud55c\uc744 \ub3d9\uc2dc\uc5d0 \uc801\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0, \uc5ec\ub7ec throttle\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ubd84\ub2f9 \ucd5c\ub300 60\uac1c\uc758 \uc694\uccad\uacfc \ud558\ub8e8\uc5d0 1000\uac1c\uc758 \uc694\uccad\uc73c\ub85c \uc0ac\uc6a9\uc790\ub97c \uc81c\ud55c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. throttle\uc740 \ubc18\ub4dc\uc2dc rate \uc81c\ud55c \uc694\uccad\uc744 \ucc38\uc870\ud558\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc2a4\ud1a0\ub9ac\uc9c0 \uc11c\ube44\uc2a4\ub294 \ub300\uc5ed\ud3ed\uc5d0 \ub300\ud574 \uc870\uc815\ud574\uc57c \ud560 \uc218\uace0 \uc788\uc73c\uba70, \uc720\ub8cc \ub370\uc774\ud130 \uc11c\ube44\uc2a4\ub294 \uc561\uc11c\uc2a4\ub418\ub294 \ud2b9\uc815 \ub808\ucf54\ub4dc \uc218\uc5d0 \ub300\ud574 \uc870\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. How throttling is determined \uc0ac\uc6a9 \uad8c\ud55c \ubc0f \uc778\uc99d\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 Throttling\uc740 \ud56d\uc0c1 \ud074\ub798\uc2a4 \ubaa9\ub85d\uc73c\ub85c \uc815\uc758\ub429\ub2c8\ub2e4. \ubdf0\uc758 \ubcf8\ubb38\uc744 \uc2e4\ud589\ud558\uae30 \uc804\uc5d0 list\uc758 \uac01 throttle\uc774 \uc810\uac80\ub429\ub2c8\ub2e4. throttle \ud655\uc778\uc774 \uc2e4\ud328\ud558\uba74 exceptions.Throttled \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uace0, \ubdf0 \ubcf8\ubb38\uc740 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Setting the throttling policy \uae30\ubcf8 throttling \uc815\ucc45\uc740 DEFAULT_THROTTLE_CLASSES \uc640 DEFAULT_THROTTLE_RATES \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\uc5ed\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74. REST_FRAMEWORK = { 'DEFAULT_THROTTLE_CLASSES': ( 'rest_framework.throttling.AnonRateThrottle', 'rest_framework.throttling.UserRateThrottle' ), 'DEFAULT_THROTTLE_RATES': { 'anon': '100/day', 'user': '1000/day' } } DEFAULT_THROTTLE_RATES \uc5d0 \uc0ac\uc6a9 \ub41c rate\uc5d0\ub294 throttle \uae30\uac04\uc73c\ub85c second , minute , hour , day \uc774 \ud3ec\ud568 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c APIView CBV\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubdf0 \ub2e8\uc704 \ub610\ub294 \ubdf0 \ub2e8\uc704\ubcc4 \uc870\uc808 \uc815\ucc45\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.response import Response from rest_framework.throttling import UserRateThrottle from rest_framework.views import APIView class ExampleView(APIView): throttle_classes = (UserRateThrottle,) def get(self, request, format=None): content = { 'status': 'request was permitted' } return Response(content) \ub610\ub294 FBV\uc640 \ud568\uaed8 @api_view \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 @api_view(['GET']) @throttle_classes([UserRateThrottle]) def example_view(request, format=None): content = { 'status': 'request was permitted' } return Response(content) How clients are identified(\ud074\ub77c\uc774\uc5b8\ud2b8 \uc2dd\ubcc4 \ubc29\ubc95) X-Forwarded_For \uc640 Remote-Addr HTTP \ud5e4\ub354\ub294 throttling\uc744 \uc704\ud574 \ud074\ub77c\uc774\uc5b8\ud2b8 IP\uc8fc\uc18c\ub97c \uace0\uc720\ud558\uac8c \uc2dd\ubcc4\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. X-Forwarded_For \ud5e4\ub354\uac00 \uc788\uc73c\uba74 \uc0ac\uc6a9\ub418\uace0, \uc5c6\uc73c\uba74 Remote-Addr \ud5e4\ub354 \uac12\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uace0\uc720\ud55c \ud074\ub77c\uc774\uc5b8\ud2b8 IP\uc8fc\uc18c\ub97c \uc5c4\uaca9\ud558\uac8c \uc2dd\ubcc4\ud574\uc57c\ud558\ub294 \uacbd\uc6b0, \uc6b0\uc120 NUM-PROXIES \uc124\uc815\uc744 \ud558\uc5ec API\uac00 \uc2e4\ud589\ub418\ub294 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \ud504\ub85d\uc2dc\uc758 \uc218\ub97c \uad6c\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774 \uc124\uc815\uc740 0 \uc774\uc0c1\uc758 \uc815\uc218\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. 0 \uc774 \uc544\ub2cc \uac12\uc73c\ub85c \uc124\uc815\ub41c \uacbd\uc6b0, \ud074\ub77c\uc774\uc5b8\ud2b8 IP\ub294 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \ud504\ub85d\uc2dc IP \uc8fc\uc18c\uac00 \uba3c\uc800 \uc81c\uc678\ub418\uba74 X-Forwarded-For \ud5e4\ub354\uc758 \ub9c8\uc9c0\ub9c9 IP \uc8fc\uc18c\ub85c \uc2dd\ubcc4\ub429\ub2c8\ub2e4. 0 \uc73c\ub85c \uc124\uc815\ud558\uba74 Remote-Addr \ud5e4\ub354\uac00 \ud56d\uc0c1 \uc2dd\ubcc4 IP\uc8fc\uc18c\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. NUM_PROXIES \uc124\uc815\uc744 \uad6c\uc131\ud558\uba74 \uace0\uc720\ud55c NAT'd \uac8c\uc774\ud2b8\uc6e8\uc774 \ub4a4\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ub2e8\uc77c \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c \ucc98\ub9ac \ub41c\ub2e4\ub294 \uac83\uc744 \uc774\ud574\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. X-Forwarded-For \ud5e4\ub354\uc758 \uc791\ub3d9 \ubc29\uc2dd \ubc0f \uc6d0\uaca9 \ud074\ub77c\uc774\uc5b8\ud2b8 IP \uc2dd\ubcc4 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc5ec\uae30 \ub97c \ucc38\uc870\ud558\uc138\uc694. Setting up the cache REST \ud504\ub808\uc784\uc6cc\ud06c\uac00 \uc81c\uacf5\ud558\ub294 throttle \ud074\ub798\uc2a4\ub294 Django\uc758 \uce90\uc2dc \ubc31\uc5d4\ub4dc\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc801\uc808\ud55c \uce90\uc2dc \uc124\uc815 \uc744 \uc9c0\uc815\ud588\ub294\uc9c0 \ud655\uc778\ud574\uc57c\ud569\ub2c8\ub2e4. LocMemCache \ubc31\uc5d4\ub4dc\uc758 \uae30\ubcf8\uac12\uc740 \uac04\ub2e8\ud55c \uc124\uc815\uc73c\ub85c \uad1c\ucc2e\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 cache documentation \uc744 \ucc38\uc870\ud558\uc138\uc694. default \uac00 \uc544\ub2cc \uce90\uc2dc\ub97c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \uacbd\uc6b0, custom throttle \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4\uace0 \uce90\uc2dc \uc18d\uc131\uc744 \uc124\uc815\ud558\uba74 \ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class CustomAnonRateThrottle(AnonRateThrottle): cache = get_cache('alternate') DEFAULT_THROTTLE_CLASSES \uc124\uc815 \ud0a4 \ub610\ub294 throttle_classes \ubdf0 \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec custom throttle \ud074\ub798\uc2a4\ub97c \uae30\uc5b5\ud574\uc57c\ub9cc \ud569\ub2c8\ub2e4. API Reference AnonRateThrottle AnonRateThrottle \uc740 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790\ub9cc \ucc28\ub2e8\ud569\ub2c8\ub2e4. \ub4e4\uc5b4\uc624\ub294 request\uc758 IP \uc8fc\uc18c\ub294 \uc81c\ud55c\ud560 \uace0\uc720 \ud0a4\ub97c \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ud5c8\uc6a9 \ub41c request \ub4f1\uae09\uc740 \ub2e4\uc74c \uc911 \ud558\ub098(\uc120\ud638\ub3c4\uc21c)\ub85c \uacb0\uc815\ub429\ub2c8\ub2e4. \ud074\ub798\uc2a4\uc758 rate property\ub294 AnonRateThrottle \uc744 \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uace0 property\ub97c \uc124\uc815\ud558\uc5ec \uc81c\uacf5 \ub420 \uc218 \uc788\ub2e4. DEFAULT_THROTTLE_RATES ['anon'] \uc124\uc815\uc785\ub2c8\ub2e4. AnonRateThrottle \ub294 \uc54c \uc218 \uc5c6\ub294 \ucd9c\ucc98\uc5d0\uc11c\uc758 request\uc758 \ube48\ub3c4\uc218\ub97c \uc81c\ud55c\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. UserRateThrottle UserRateThrottle \uc740 API\ub97c \ud1b5\ud574 \uc8fc\uc5b4\uc9c4 request rate\ub85c \uc0ac\uc6a9\uc790\ub97c \uc81c\ud55c\ud569\ub2c8\ub2e4. user ID\ub294 \uc81c\ud55c\ud560 \uace0\uc720 \ud0a4\ub97c \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 request\ub294 \ub4e4\uc5b4\uc624\ub294 request\uc758 IP \uc8fc\uc18c\uc5d0 \uace0\uc720\ud55c \uc81c\ud55c \ud0a4\ub97c \ub2e4\uc2dc \uc0dd\uc131\ud558\uc5ec \uac78\ub7ec\ub0c5\ub2c8\ub2e4. \ud5c8\uc6a9 \ub41c request rate\ub294 \ub2e4\uc74c \uc911 \ud558\ub098(\uc120\ud638\ub3c4 \uc21c)\ub85c \uacb0\uc815\ub429\ub2c8\ub2e4. \ud074\ub798\uc2a4\uc758 rate \uc18d\uc131\uc740 UserRateThrottle \uc744 \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uace0 property\ub97c \uc124\uc815\ud558\uc5ec \uc81c\uacf5 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DEFAULT_THROTTLE_RATES ['anon'] \uc124\uc815\uc785\ub2c8\ub2e4. API\uc5d0\ub294 \ub3d9\uc2dc\uc5d0 \uc5ec\ub7ec UserRAteThrottles \uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\ub824\uba74 UserRateThrottle \uc744 \ubb34\uc2dc\ud558\uace0 \uac01 \ud074\ub798\uc2a4\uc5d0 \ub300\ud574 \uace0\uc720\ud55c scope (\ubc94\uc704)\ub97c \uc124\uc815\ud558\uc138\uc694. \uc608\ub97c \ub4e4\uc5b4, \uc5ec\ub7ec \uc0ac\uc6a9\uc790 throttle rate\ub294 \ub2e4\uc74c \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uad6c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class BurstRateThrottle(UserRateThrottle): scope = 'burst' class SustainedRateThrottle(UserRateThrottle): scope = 'sustained' ...\uadf8\ub9ac\uace0 \ub2e4\uc74c \uc124\uc815\uc785\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_THROTTLE_CLASSES': ( 'example.throttles.BurstRateThrottle', 'example.throttles.SustainedRateThrottle' ), 'DEFAULT_THROTTLE_RATES': { 'burst': '60/min', 'sustained': '1000/day' } } UserRateThrottle \uc740 \uc0ac\uc6a9\uc790\ubcc4\ub85c \uac04\ub2e8\ud55c \uc804\uc5ed rate\ub97c \uc6d0\ud560 \ub54c \uc801\ud569\ud569\ub2c8\ub2e4. ScopedRateThrottle ScopeRateThrottle \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec API\uc758 \ud2b9\uc815 \ubd80\ubd84\uc5d0 \ub300\ud55c \uc561\uc11c\uc2a4\ub97c \uc81c\ud55c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 throttle\uc740 \uc561\uc11c\uc2a4\ub418\ub294 \ubdf0\uc5d0 .throttle_scope \uc18d\uc131\uc774 \ud3ec\ud568 \ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc801\uc6a9\ub429\ub2c8\ub2e4. \uace0\uc720\ud55c throttle \ud0a4\ub294 request\uc758 \"scope\"\ub97c \uace0\uc720\ud55c user ID \ub610\ub294 IP \uc8fc\uc18c\uc640 \uc5f0\uacb0\ud558\uc5ec \ud615\uc131\ud569\ub2c8\ub2e4. \ud5c8\uc6a9 \ub41c request rate\ub294 request \"scope\"\uc758 \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc5ec DEFAULT_THROTTLE_RATES \uc124\uc815\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c\uc758 \ubdf0\uac00 \uc8fc\uc5b4\uc9c4 \uacbd\uc6b0... class ContactListView(APIView): throttle_scope = 'contacts' ... class ContactDetailView(APIView): throttle_scope = 'contacts' ... class UploadView(APIView): throttle_scope = 'uploads' ... ...\uadf8\ub9ac\uace0 \ub2e4\uc74c \uc124\uc815\uc785\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_THROTTLE_CLASSES': ( 'rest_framework.throttling.ScopedRateThrottle', ), 'DEFAULT_THROTTLE_RATES': { 'contacts': '1000/day', 'uploads': '20/day' } } ContactListView \ub610\ub294 ContactDetailView \uc5d0 \ub300\ud55c \uc0ac\uc6a9\uc790 \uc694\uccad\uc740 \ud558\ub8e8\uc5d0 \ucd1d 1000 \uac1c\uc758 \uc694\uccad\uc73c\ub85c \uc81c\ud55c\ub429\ub2c8\ub2e4. UploadView \uc5d0 \ub300\ud55c \uc0ac\uc6a9\uc790 \uc694\uccad\uc740 \ud558\ub8e8\uc5d0 20 \uac74\uc73c\ub85c \uc81c\ud55c\ub429\ub2c8\ub2e4. Custom throttles custom throttle\uc744 \ub9cc\ub4e4\ub824\uba74 BaseThrottle \uc744 \uc7ac\uc815\uc758\ud558\uace0 .allow_request(self, request, view) \ub97c \uad6c\ud604\ud558\uc2ed\uc2dc\uc624. \uc774 \uba54\uc18c\ub4dc\ub294 \uc694\uccad\uc744 \ud5c8\uc6a9\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 True \ub97c \ubc18\ud658\ud558\uace0 \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 False \ub97c \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \uc120\ud0dd\uc801\uc73c\ub85c .wait() \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uad6c\ud604 \ub41c \uacbd\uc6b0 .wait() \ub294 \ub2e4\uc74c \uc694\uccad\uc744 \uc2dc\ub3c4\ud558\uae30 \uc804\uc5d0 \uae30\ub2e4\ub9ac\ub294 \uad8c\uc7a5 \uc2dc\uac04(\ucd08)\uc744 \ubc18\ud658\ud558\uac70\ub098 None \uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. .wait() \uba54\uc11c\ub4dc\ub294 .allow_request() \uac00 \uc774\uc804\uc5d0 False \ub97c \ubc18\ud658 \ud55c \uacbd\uc6b0\uc5d0\ub9cc \ud638\ucd9c\ub429\ub2c8\ub2e4. .wait() \uba54\uc11c\ub4dc\uac00 \uad6c\ud604\ub418\uace0 \uc694\uccad\uc774 \uc81c\ud55c\ub418\uba74 Retry-After \ud5e4\ub354\uac00 \uc751\ub2f5\uc5d0 \ud3ec\ud568\ub429\ub2c8\ub2e4. Example \ub2e4\uc74c\uc740 10\uc758 \uc694\uccad\ub9c8\ub2e4 1\uc744 \ubb34\uc791\uc704\ub85c \uc870\uc808\ud558\ub294 rate throttle\uc758 \uc608\uc785\ub2c8\ub2e4. import random class RandomRateThrottle(throttling.BaseThrottle): def allow_request(self, request, view): return random.randint(1, 10) != 1","title":"Throttling"},{"location":"Throttling/#django-rest-framework-throttling","text":"\"HTTP/1.1 420 Enhance Your Calm\" Twitter API rate limiting response","title":"Django REST Framework - Throttling"},{"location":"Throttling/#throttling","text":"Throttling\uc740 request\uac00 \uc2b9\uc778\ub418\uc5b4\uc57c\ud558\ub294\uc9c0 \uc5ec\ubd80\ub97c \uacb0\uc815\ud55c\ub2e4\ub294 \uc810\uc5d0\uc11c permissions\uc640 \uc720\uc0ac\ud569\ub2c8\ub2e4. Throttling\uc740 \uc784\uc2dc\uc0c1\ud0dc\ub97c \ub098\ud0c0\ub0b4\uba70 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 API\uc5d0 \ub300\ud574 \uc218\ud589 \ud560 \uc218 \uc788\ub294 request \ube48\ub3c4\uc218\ub97c \uc81c\uc5b4\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. permissions\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c, \uc5ec\ub7ec Throttle\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. API\uc5d0\ub294 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc694\uccad\uc5d0 \ub300\ud574 \uc81c\ud55c\uc801\uc73c\ub85c Throttle\uacfc \uc778\uc99d \ub41c \uc694\uccad\uc5d0 \ub300\ud55c \uc81c\ud55c\uc801\uc778 Throttle\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\uc815 \uc11c\ube44\uc2a4\uac00 \ud2b9\ud788 \ub9ac\uc18c\uc2a4\ub97c \uc7a1\uc544\uba39\uae30 \ub54c\ubb38\uc5d0 API\uc758 \ub2e4\uc591\ud55c \ubd80\ubd84\uc5d0 \ub2e4\ub978 \uc81c\uc57d\uc744 \ubd80\uacfc\ud574\uc57c\ud558\ub294 \uacbd\uc6b0, \uc5ec\ub7ec throttle\uc744 \uc0ac\uc6a9\ud558\ub294 \ub2e4\ub978 \uc2dc\ub098\ub9ac\uc624\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ubc84\uc2a4\ud2b8 \ube48\ub3c4\uc218 \uc81c\ud55c\uc640 \uc9c0\uc18d\uc801\uc778 \ube48\ub3c4\uc218 \uc81c\ud55c\uc744 \ub3d9\uc2dc\uc5d0 \uc801\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0, \uc5ec\ub7ec throttle\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ubd84\ub2f9 \ucd5c\ub300 60\uac1c\uc758 \uc694\uccad\uacfc \ud558\ub8e8\uc5d0 1000\uac1c\uc758 \uc694\uccad\uc73c\ub85c \uc0ac\uc6a9\uc790\ub97c \uc81c\ud55c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. throttle\uc740 \ubc18\ub4dc\uc2dc rate \uc81c\ud55c \uc694\uccad\uc744 \ucc38\uc870\ud558\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc2a4\ud1a0\ub9ac\uc9c0 \uc11c\ube44\uc2a4\ub294 \ub300\uc5ed\ud3ed\uc5d0 \ub300\ud574 \uc870\uc815\ud574\uc57c \ud560 \uc218\uace0 \uc788\uc73c\uba70, \uc720\ub8cc \ub370\uc774\ud130 \uc11c\ube44\uc2a4\ub294 \uc561\uc11c\uc2a4\ub418\ub294 \ud2b9\uc815 \ub808\ucf54\ub4dc \uc218\uc5d0 \ub300\ud574 \uc870\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Throttling (\uc81c\ud55c)"},{"location":"Throttling/#how-throttling-is-determined","text":"\uc0ac\uc6a9 \uad8c\ud55c \ubc0f \uc778\uc99d\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 Throttling\uc740 \ud56d\uc0c1 \ud074\ub798\uc2a4 \ubaa9\ub85d\uc73c\ub85c \uc815\uc758\ub429\ub2c8\ub2e4. \ubdf0\uc758 \ubcf8\ubb38\uc744 \uc2e4\ud589\ud558\uae30 \uc804\uc5d0 list\uc758 \uac01 throttle\uc774 \uc810\uac80\ub429\ub2c8\ub2e4. throttle \ud655\uc778\uc774 \uc2e4\ud328\ud558\uba74 exceptions.Throttled \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uace0, \ubdf0 \ubcf8\ubb38\uc740 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"How throttling is determined"},{"location":"Throttling/#setting-the-throttling-policy","text":"\uae30\ubcf8 throttling \uc815\ucc45\uc740 DEFAULT_THROTTLE_CLASSES \uc640 DEFAULT_THROTTLE_RATES \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\uc5ed\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74. REST_FRAMEWORK = { 'DEFAULT_THROTTLE_CLASSES': ( 'rest_framework.throttling.AnonRateThrottle', 'rest_framework.throttling.UserRateThrottle' ), 'DEFAULT_THROTTLE_RATES': { 'anon': '100/day', 'user': '1000/day' } } DEFAULT_THROTTLE_RATES \uc5d0 \uc0ac\uc6a9 \ub41c rate\uc5d0\ub294 throttle \uae30\uac04\uc73c\ub85c second , minute , hour , day \uc774 \ud3ec\ud568 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c APIView CBV\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubdf0 \ub2e8\uc704 \ub610\ub294 \ubdf0 \ub2e8\uc704\ubcc4 \uc870\uc808 \uc815\ucc45\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from rest_framework.response import Response from rest_framework.throttling import UserRateThrottle from rest_framework.views import APIView class ExampleView(APIView): throttle_classes = (UserRateThrottle,) def get(self, request, format=None): content = { 'status': 'request was permitted' } return Response(content) \ub610\ub294 FBV\uc640 \ud568\uaed8 @api_view \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 @api_view(['GET']) @throttle_classes([UserRateThrottle]) def example_view(request, format=None): content = { 'status': 'request was permitted' } return Response(content)","title":"Setting the throttling policy"},{"location":"Throttling/#how-clients-are-identified","text":"X-Forwarded_For \uc640 Remote-Addr HTTP \ud5e4\ub354\ub294 throttling\uc744 \uc704\ud574 \ud074\ub77c\uc774\uc5b8\ud2b8 IP\uc8fc\uc18c\ub97c \uace0\uc720\ud558\uac8c \uc2dd\ubcc4\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. X-Forwarded_For \ud5e4\ub354\uac00 \uc788\uc73c\uba74 \uc0ac\uc6a9\ub418\uace0, \uc5c6\uc73c\uba74 Remote-Addr \ud5e4\ub354 \uac12\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uace0\uc720\ud55c \ud074\ub77c\uc774\uc5b8\ud2b8 IP\uc8fc\uc18c\ub97c \uc5c4\uaca9\ud558\uac8c \uc2dd\ubcc4\ud574\uc57c\ud558\ub294 \uacbd\uc6b0, \uc6b0\uc120 NUM-PROXIES \uc124\uc815\uc744 \ud558\uc5ec API\uac00 \uc2e4\ud589\ub418\ub294 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \ud504\ub85d\uc2dc\uc758 \uc218\ub97c \uad6c\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774 \uc124\uc815\uc740 0 \uc774\uc0c1\uc758 \uc815\uc218\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. 0 \uc774 \uc544\ub2cc \uac12\uc73c\ub85c \uc124\uc815\ub41c \uacbd\uc6b0, \ud074\ub77c\uc774\uc5b8\ud2b8 IP\ub294 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \ud504\ub85d\uc2dc IP \uc8fc\uc18c\uac00 \uba3c\uc800 \uc81c\uc678\ub418\uba74 X-Forwarded-For \ud5e4\ub354\uc758 \ub9c8\uc9c0\ub9c9 IP \uc8fc\uc18c\ub85c \uc2dd\ubcc4\ub429\ub2c8\ub2e4. 0 \uc73c\ub85c \uc124\uc815\ud558\uba74 Remote-Addr \ud5e4\ub354\uac00 \ud56d\uc0c1 \uc2dd\ubcc4 IP\uc8fc\uc18c\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. NUM_PROXIES \uc124\uc815\uc744 \uad6c\uc131\ud558\uba74 \uace0\uc720\ud55c NAT'd \uac8c\uc774\ud2b8\uc6e8\uc774 \ub4a4\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ub2e8\uc77c \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c \ucc98\ub9ac \ub41c\ub2e4\ub294 \uac83\uc744 \uc774\ud574\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. X-Forwarded-For \ud5e4\ub354\uc758 \uc791\ub3d9 \ubc29\uc2dd \ubc0f \uc6d0\uaca9 \ud074\ub77c\uc774\uc5b8\ud2b8 IP \uc2dd\ubcc4 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc5ec\uae30 \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"How clients are identified(\ud074\ub77c\uc774\uc5b8\ud2b8 \uc2dd\ubcc4 \ubc29\ubc95)"},{"location":"Throttling/#setting-up-the-cache","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\uac00 \uc81c\uacf5\ud558\ub294 throttle \ud074\ub798\uc2a4\ub294 Django\uc758 \uce90\uc2dc \ubc31\uc5d4\ub4dc\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc801\uc808\ud55c \uce90\uc2dc \uc124\uc815 \uc744 \uc9c0\uc815\ud588\ub294\uc9c0 \ud655\uc778\ud574\uc57c\ud569\ub2c8\ub2e4. LocMemCache \ubc31\uc5d4\ub4dc\uc758 \uae30\ubcf8\uac12\uc740 \uac04\ub2e8\ud55c \uc124\uc815\uc73c\ub85c \uad1c\ucc2e\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 cache documentation \uc744 \ucc38\uc870\ud558\uc138\uc694. default \uac00 \uc544\ub2cc \uce90\uc2dc\ub97c \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \uacbd\uc6b0, custom throttle \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4\uace0 \uce90\uc2dc \uc18d\uc131\uc744 \uc124\uc815\ud558\uba74 \ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class CustomAnonRateThrottle(AnonRateThrottle): cache = get_cache('alternate') DEFAULT_THROTTLE_CLASSES \uc124\uc815 \ud0a4 \ub610\ub294 throttle_classes \ubdf0 \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec custom throttle \ud074\ub798\uc2a4\ub97c \uae30\uc5b5\ud574\uc57c\ub9cc \ud569\ub2c8\ub2e4.","title":"Setting up the cache"},{"location":"Throttling/#api-reference","text":"","title":"API Reference"},{"location":"Throttling/#anonratethrottle","text":"AnonRateThrottle \uc740 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790\ub9cc \ucc28\ub2e8\ud569\ub2c8\ub2e4. \ub4e4\uc5b4\uc624\ub294 request\uc758 IP \uc8fc\uc18c\ub294 \uc81c\ud55c\ud560 \uace0\uc720 \ud0a4\ub97c \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ud5c8\uc6a9 \ub41c request \ub4f1\uae09\uc740 \ub2e4\uc74c \uc911 \ud558\ub098(\uc120\ud638\ub3c4\uc21c)\ub85c \uacb0\uc815\ub429\ub2c8\ub2e4. \ud074\ub798\uc2a4\uc758 rate property\ub294 AnonRateThrottle \uc744 \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uace0 property\ub97c \uc124\uc815\ud558\uc5ec \uc81c\uacf5 \ub420 \uc218 \uc788\ub2e4. DEFAULT_THROTTLE_RATES ['anon'] \uc124\uc815\uc785\ub2c8\ub2e4. AnonRateThrottle \ub294 \uc54c \uc218 \uc5c6\ub294 \ucd9c\ucc98\uc5d0\uc11c\uc758 request\uc758 \ube48\ub3c4\uc218\ub97c \uc81c\ud55c\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4.","title":"AnonRateThrottle"},{"location":"Throttling/#userratethrottle","text":"UserRateThrottle \uc740 API\ub97c \ud1b5\ud574 \uc8fc\uc5b4\uc9c4 request rate\ub85c \uc0ac\uc6a9\uc790\ub97c \uc81c\ud55c\ud569\ub2c8\ub2e4. user ID\ub294 \uc81c\ud55c\ud560 \uace0\uc720 \ud0a4\ub97c \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 request\ub294 \ub4e4\uc5b4\uc624\ub294 request\uc758 IP \uc8fc\uc18c\uc5d0 \uace0\uc720\ud55c \uc81c\ud55c \ud0a4\ub97c \ub2e4\uc2dc \uc0dd\uc131\ud558\uc5ec \uac78\ub7ec\ub0c5\ub2c8\ub2e4. \ud5c8\uc6a9 \ub41c request rate\ub294 \ub2e4\uc74c \uc911 \ud558\ub098(\uc120\ud638\ub3c4 \uc21c)\ub85c \uacb0\uc815\ub429\ub2c8\ub2e4. \ud074\ub798\uc2a4\uc758 rate \uc18d\uc131\uc740 UserRateThrottle \uc744 \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uace0 property\ub97c \uc124\uc815\ud558\uc5ec \uc81c\uacf5 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DEFAULT_THROTTLE_RATES ['anon'] \uc124\uc815\uc785\ub2c8\ub2e4. API\uc5d0\ub294 \ub3d9\uc2dc\uc5d0 \uc5ec\ub7ec UserRAteThrottles \uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\ub824\uba74 UserRateThrottle \uc744 \ubb34\uc2dc\ud558\uace0 \uac01 \ud074\ub798\uc2a4\uc5d0 \ub300\ud574 \uace0\uc720\ud55c scope (\ubc94\uc704)\ub97c \uc124\uc815\ud558\uc138\uc694. \uc608\ub97c \ub4e4\uc5b4, \uc5ec\ub7ec \uc0ac\uc6a9\uc790 throttle rate\ub294 \ub2e4\uc74c \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uad6c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class BurstRateThrottle(UserRateThrottle): scope = 'burst' class SustainedRateThrottle(UserRateThrottle): scope = 'sustained' ...\uadf8\ub9ac\uace0 \ub2e4\uc74c \uc124\uc815\uc785\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_THROTTLE_CLASSES': ( 'example.throttles.BurstRateThrottle', 'example.throttles.SustainedRateThrottle' ), 'DEFAULT_THROTTLE_RATES': { 'burst': '60/min', 'sustained': '1000/day' } } UserRateThrottle \uc740 \uc0ac\uc6a9\uc790\ubcc4\ub85c \uac04\ub2e8\ud55c \uc804\uc5ed rate\ub97c \uc6d0\ud560 \ub54c \uc801\ud569\ud569\ub2c8\ub2e4.","title":"UserRateThrottle"},{"location":"Throttling/#scopedratethrottle","text":"ScopeRateThrottle \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec API\uc758 \ud2b9\uc815 \ubd80\ubd84\uc5d0 \ub300\ud55c \uc561\uc11c\uc2a4\ub97c \uc81c\ud55c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 throttle\uc740 \uc561\uc11c\uc2a4\ub418\ub294 \ubdf0\uc5d0 .throttle_scope \uc18d\uc131\uc774 \ud3ec\ud568 \ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc801\uc6a9\ub429\ub2c8\ub2e4. \uace0\uc720\ud55c throttle \ud0a4\ub294 request\uc758 \"scope\"\ub97c \uace0\uc720\ud55c user ID \ub610\ub294 IP \uc8fc\uc18c\uc640 \uc5f0\uacb0\ud558\uc5ec \ud615\uc131\ud569\ub2c8\ub2e4. \ud5c8\uc6a9 \ub41c request rate\ub294 request \"scope\"\uc758 \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc5ec DEFAULT_THROTTLE_RATES \uc124\uc815\uc5d0 \uc758\ud574 \uacb0\uc815\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c\uc758 \ubdf0\uac00 \uc8fc\uc5b4\uc9c4 \uacbd\uc6b0... class ContactListView(APIView): throttle_scope = 'contacts' ... class ContactDetailView(APIView): throttle_scope = 'contacts' ... class UploadView(APIView): throttle_scope = 'uploads' ... ...\uadf8\ub9ac\uace0 \ub2e4\uc74c \uc124\uc815\uc785\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_THROTTLE_CLASSES': ( 'rest_framework.throttling.ScopedRateThrottle', ), 'DEFAULT_THROTTLE_RATES': { 'contacts': '1000/day', 'uploads': '20/day' } } ContactListView \ub610\ub294 ContactDetailView \uc5d0 \ub300\ud55c \uc0ac\uc6a9\uc790 \uc694\uccad\uc740 \ud558\ub8e8\uc5d0 \ucd1d 1000 \uac1c\uc758 \uc694\uccad\uc73c\ub85c \uc81c\ud55c\ub429\ub2c8\ub2e4. UploadView \uc5d0 \ub300\ud55c \uc0ac\uc6a9\uc790 \uc694\uccad\uc740 \ud558\ub8e8\uc5d0 20 \uac74\uc73c\ub85c \uc81c\ud55c\ub429\ub2c8\ub2e4.","title":"ScopedRateThrottle"},{"location":"Throttling/#custom-throttles","text":"custom throttle\uc744 \ub9cc\ub4e4\ub824\uba74 BaseThrottle \uc744 \uc7ac\uc815\uc758\ud558\uace0 .allow_request(self, request, view) \ub97c \uad6c\ud604\ud558\uc2ed\uc2dc\uc624. \uc774 \uba54\uc18c\ub4dc\ub294 \uc694\uccad\uc744 \ud5c8\uc6a9\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 True \ub97c \ubc18\ud658\ud558\uace0 \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 False \ub97c \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. \uc120\ud0dd\uc801\uc73c\ub85c .wait() \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uad6c\ud604 \ub41c \uacbd\uc6b0 .wait() \ub294 \ub2e4\uc74c \uc694\uccad\uc744 \uc2dc\ub3c4\ud558\uae30 \uc804\uc5d0 \uae30\ub2e4\ub9ac\ub294 \uad8c\uc7a5 \uc2dc\uac04(\ucd08)\uc744 \ubc18\ud658\ud558\uac70\ub098 None \uc744 \ubc18\ud658\ud574\uc57c\ud569\ub2c8\ub2e4. .wait() \uba54\uc11c\ub4dc\ub294 .allow_request() \uac00 \uc774\uc804\uc5d0 False \ub97c \ubc18\ud658 \ud55c \uacbd\uc6b0\uc5d0\ub9cc \ud638\ucd9c\ub429\ub2c8\ub2e4. .wait() \uba54\uc11c\ub4dc\uac00 \uad6c\ud604\ub418\uace0 \uc694\uccad\uc774 \uc81c\ud55c\ub418\uba74 Retry-After \ud5e4\ub354\uac00 \uc751\ub2f5\uc5d0 \ud3ec\ud568\ub429\ub2c8\ub2e4.","title":"Custom throttles"},{"location":"Throttling/#example","text":"\ub2e4\uc74c\uc740 10\uc758 \uc694\uccad\ub9c8\ub2e4 1\uc744 \ubb34\uc791\uc704\ub85c \uc870\uc808\ud558\ub294 rate throttle\uc758 \uc608\uc785\ub2c8\ub2e4. import random class RandomRateThrottle(throttling.BaseThrottle): def allow_request(self, request, view): return random.randint(1, 10) != 1","title":"Example"},{"location":"Validators/","text":"Django REST Framework - Validators \"Validators can be useful for re-using validation logic between different types of fields.\" \"\uc720\ud6a8\uc131 \uac80\uc0ac\uae30\ub294 \ub2e4\ub978 \uc720\ud615\uc758 \ud544\ub4dc\uac04\uc5d0 \uc720\ud6a8\uc131 \uac80\uc0ac\ub17c\ub9ac\ub97c \ub2e4\uc2dc \uc0ac\uc6a9\ud558\ub294\ub370 \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\" \u2014 Django documentation Validators(\uc720\ud6a8\uc131 \uac80\uc0ac\uae30) \ub300\ubd80\ubd84 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \ucc98\ub9ac\ud558\ub294 \uacbd\uc6b0 \uae30\ubcf8 \ud544\ub4dc \uc720\ud6a8\uc131 \uac80\uc0ac\uc5d0 \uc758\uc874\ud558\uac70\ub098 serializer \ub610\ub294 \ud544\ub4dc \ud074\ub798\uc2a4\uc5d0 \ub300\ud55c \uba85\uc2dc\uc801\uc778 Validator \uba54\uc18c\ub4dc\ub97c \uc791\uc131\ud558\uae30\ub9cc \ud558\uba74 \ub429\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ub54c\ub54c\ub85c \uc720\ud6a8\uc131 \uac80\uc0ac \ub17c\ub9ac\ub97c \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \uad6c\uc131 \uc694\uc18c\uc5d0 \ubc30\uce58\ud558\uc5ec \ucf54\ub4dc \ubca0\uc774\uc2a4 \uc804\uccb4\uc5d0\uc11c \uc27d\uac8c \uc7ac\uc0ac\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc740 Validator \ud568\uc218\uc640 Validators \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Validation in REST framework Django\uc758 REST \ud504\ub808\uc784\uc6cc\ud06c serializer\uc758 validation\ub294 Django\uc758 ModelForm \ud074\ub798\uc2a4\uc5d0\uc11c validation\uc774 \uc791\ub3d9\ud558\ub294 \ubc29\uc2dd\uacfc \uc870\uae08 \ub2e4\ub974\uac8c \ucc98\ub9ac\ub429\ub2c8\ub2e4. ModelForm \uc744 \uc0ac\uc6a9\ud558\uba74 validation\uc774 \ubd80\ubd84\uc801\uc73c\ub85c form\uc5d0\uc11c \uc218\ud589\ub418\uace0, \ubd80\ubd84\uc801\uc73c\ub85c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc218\ud589\ub429\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud558\uba74 validation\uc740 \uc804\uccb4\uc801\uc73c\ub85c serializer\ud074\ub798\uc2a4\uc5d0\uc11c \uc218\ud589\ub429\ub2c8\ub2e4. \uc774\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uc774\uc720\ub85c \uc720\ub9ac\ud569\ub2c8\ub2e4. \uc801\uc808\ud55c \uad6c\ubd84\uc744 \uc81c\uacf5\ud558\uc5ec \ucf54\ub4dc \ub3d9\uc791\uc744 \ubcf4\ub2e4 \uba85\ud655\ud558\uac8c \ub9cc\ub4ed\ub2c8\ub2e4. shortcut ModelSerializer \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 \uba85\uc2dc\uc801 serializer\ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc27d\uac8c \uc804\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ModelSerializer \uc5d0 \uc0ac\uc6a9\ub418\ub294 \ubaa8\ub4e0 validation \ub3d9\uc791\uc740 \ubcf5\uc81c\uac00 \uac04\ub2e8\ud569\ub2c8\ub2e4. serializer \uc778\uc2a4\ud134\uc2a4\uc758 repr \uc744 \ucd9c\ub825(print)\ud558\uba74 validation \uaddc\uce59\uc774 \uc815\ud655\ud558\uac8c \ud45c\uc2dc\ub429\ub2c8\ub2e4. \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ucd94\uac00 \uc228\uaca8\uc9c4 validation \ub3d9\uc791\uc774 \ud638\ucd9c\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. ModelSerializer \ub97c \uc0ac\uc6a9\ud558\uba74 \ubaa8\ub4e0 \uac83\uc774 \uc790\ub3d9\uc73c\ub85c \ucc98\ub9ac\ub429\ub2c8\ub2e4. \ub300\uc2e0 Serializer\ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub4dc\ub86d\ub2e4\uc6b4\ud558\ub824\uba74 validation \uaddc\uce59\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. Example REST \ud504\ub808\uc784\uc6cc\ud06c\uac00 \uba85\uc2dc\uc801 validation\uc744 \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc758 \uc608\ub85c, \uace0\uc720\uc131 \uc81c\uc57d \uc870\uac74\uc774 \uc788\ub294 \ud544\ub4dc\uac00 \uc788\ub294 \uac04\ub2e8\ud55c \ubaa8\ub378 \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. class CustomerReportRecord(models.Model): time_raised = models.DateTimeField(default=timezone.now, editable=False) reference = models.CharField(unique=True, max_length=20) description = models.TextField() \ub2e4\uc74c\uc740 CustomReportRecord \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\uac70\ub098 \uc5c5\ub370\uc774\ud2b8\ud560 \ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uae30\ubcf8 ModelSerializer \uc785\ub2c8\ub2e4. class CustomerReportSerializer(serializers.ModelSerializer): class Meta: model = CustomerReportRecord manage.py shell\uc744 \uc0ac\uc6a9\ud558\uc5ec Django shell\uc744 \uc5f4\uba74 \uc774\uc81c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. >>> from project.example.serializers import CustomerReportSerializer >>> serializer = CustomerReportSerializer() >>> print(repr(serializer)) CustomerReportSerializer(): id = IntegerField(label='ID', read_only=True) time_raised = DateTimeField(read_only=True) reference = CharField(max_length=20, validators=[<UniqueValidator(queryset=CustomerReportRecord.objects.all())>]) description = CharField(style={'type': 'textarea'}) \uc5ec\uae30\uc11c \ud765\ubbf8\ub85c\uc6b4 \ubd80\ubd84\uc740 \ucc38\uc870\ud544\ub4dc\uc785\ub2c8\ub2e4. \uace0\uc720\uc131 \uc81c\uc57d\uc774 serializer \ud544\ub4dc\uc758 validator\uc5d0 \uc758\ud574 \uba85\uc2dc\uc801\uc73c\ub85c \uc801\uc6a9\ub418\uace0 \uc788\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \uba85\uc2dc\uc801\uc778 \uc2a4\ud0c0\uc77c \ub54c\ubb38\uc5d0 REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 Django\uc758 \ud575\uc2ec\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uba87\uac00\uc9c0 validator \ud074\ub798\uc2a4\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. \uc774 \ud074\ub798\uc2a4\ub4e4\uc740 \uc544\ub798\uc5d0 \uc790\uc138\ud788 \uc124\uba85\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. UniqueValidator validator\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub378 \ud544\ub4dc\uc5d0 unique=True \uc81c\uc57d \uc870\uac74\uc744 \uc801\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\ub098\uc758 \ud544\uc218 \uc778\uc218\uc640 \uc120\ud0dd\uc801 massages \uc778\uc218\ub97c \ucde8\ud569\ub2c8\ub2e4. queryset (\ud544\uc218) : \uc720\uc77c\uc131\uc744 \uac15\uc694\ud574\uc57c\ud558\ub294 queryset\uc785\ub2c8\ub2e4. massege : \uac80\uc99d\uc774 \uc2e4\ud328\ud588\uc744 \uacbd\uc6b0 \uc0ac\uc6a9\ud558\ub294 \uc5d0\ub7ec \uba54\uc138\uc9c0 lookup : \uac80\uc99d\ub418\uace0 \uc788\ub294 \uac12\uc744 \uac00\uc9c0\uace0 \uae30\uc874\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ucc3e\ub294\ub370 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 exact \uc785\ub2c8\ub2e4. \uc774 validator\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 serializer \ud544\ub4dc\uc5d0 \uc801\uc6a9\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. from rest_framework.validators import UniqueValidator slug = SlugField( max_length=100, validators=[UniqueValidator(queryset=BlogPost.objects.all())] ) UniqueTogetherValidator \uc774 validator\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0 unique_together \uc81c\uc57d \uc870\uac74\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 \ub450 \uac1c\uc758 \ud544\uc218 \uc778\uc218\uc640 \ub2e8\uc77c \uc120\ud0dd\uc801 messages \uc778\uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4. queryset (\ud544\uc218) : \uc720\uc77c\uc131\uc744 \uac15\uc694\ud574\uc57c\ud558\ub294 queryset\uc785\ub2c8\ub2e4. fields (\ud544\uc218) : \uace0\uc720\ud55c set\uc744 \ub9cc\ub4e4\uc5b4\uc57c \ud558\ub294 \ud544\ub4dc\uc774\ub984\uc758 list \ub610\ub294 tuple. \uc774\ub4e4\uc740 serializer \ud074\ub798\uc2a4\uc758 \ud544\ub4dc\ub85c \uc874\uc7ac\ud574\uc57c \ud569\ub2c8\ub2e4. message : \uac80\uc99d\uc5d0 \uc2e4\ud328\ud588\uc744 \uacbd\uc6b0 \uc0ac\uc6a9\ud558\ub294 \uc5d0\ub7ec \uba54\uc138\uc9c0 validator\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 serializer \ud074\ub798\uc2a4\uc5d0 \uc801\uc6a9\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. from rest_framework.validators import UniqueTogetherValidator class ExampleSerializer(serializers.Serializer): # ... class Meta: # ToDo items belong to a parent list, and have an ordering defined # by the 'position' field. No two items in a given list may share # the same position. validators = [ UniqueTogetherValidator( queryset=ToDoItem.objects.all(), fields=('list', 'position') ) ] Note : UniqueTogetherValidation \ud074\ub798\uc2a4\ub294 \ud56d\uc0c1 \uc801\uc6a9\ub418\ub294 \ubaa8\ub4e0 \ud544\ub4dc\uac00 \ud56d\uc0c1 \ud544\uc694\ud55c \uac83\uc73c\ub85c \ucc98\ub9ac\ub41c\ub2e4\ub294 \uc554\uc2dc\uc801 \uc81c\uc57d\uc870\uac74\uc744 \ubd80\uacfc\ud569\ub2c8\ub2e4. default \uac00 \uc788\ub294 \ud544\ub4dc\ub294 \uc0ac\uc6a9\uc790 \uc785\ub825\uc5d0\uc11c \uc0dd\ub7b5 \ub41c \uacbd\uc6b0\uc5d0\ub3c4 \ud56d\uc0c1 \uac12\uc744 \uc81c\uacf5\ud558\ubbc0\ub85c \uc608\uc678\uc785\ub2c8\ub2e4. UniqueForDateValidator UniqueForMonthValidator UniqueForYearValidator \uc774 validator\ub294 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud574 unique_for_date , unique_for_month , unique_for_year \uc81c\uc57d\uc870\uac74\uc744 \uc801\uc6a9\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. queryset (\ud544\uc218) : \uc720\uc77c\uc131\uc744 \uac15\uc694\ud574\uc57c\ud558\ub294 queryset\uc785\ub2c8\ub2e4. field (\ud544\uc218) : \uc9c0\uc815\ub41c \ub0a0\uc9dc \ubc94\uc704\uc758 \uace0\uc720\uc131\uc5d0 \ub300\ud55c \ud544\ub4dc \uc774\ub984\uc785\ub2c8\ub2e4. \uc774\uac83\uc740 serializer \ud074\ub798\uc2a4\uc758 \ud544\ub4dc\ub85c \uc874\uc7ac\ud574\uc57c\ud569\ub2c8\ub2e4. date_field (\ud544\uc218) : \uace0\uc720\uc131 \uc81c\ud55c \uc870\uac74\uc758 \ub0a0\uc9dc \ubc94\uc704\ub97c \uacb0\uc815\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \ud544\ub4dc \uc774\ub984\uc785\ub2c8\ub2e4. \uc774\uac83\uc740 serializer\ud074\ub798\uc2a4\uc758 \ud544\ub4dc\ub85c \uc874\uc7ac\ud574\uc57c \ud569\ub2c8\ub2e4. massege : \uac80\uc99d\uc774 \uc2e4\ud328\ud588\uc744 \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\ud558\ub294 \uc5d0\ub7ec \uba54\uc138\uc9c0 validator\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 serializer\ud074\ub798\uc2a4\uc5d0 \uc801\uc6a9\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. from rest_framework.validators import UniqueForYearValidator class ExampleSerializer(serializers.Serializer): # ... class Meta: # Blog posts should have a slug that is unique for the current year. validators = [ UniqueForYearValidator( queryset=BlogPostItem.objects.all(), field='slug', date_field='published' ) ] validation\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ub0a0\uc9dc \ud544\ub4dc\ub294 \ud56d\uc0c1 serializer\ud074\ub798\uc2a4\uc5d0 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. validation\uc774 \uc2e4\ud589\ub420 \ub54c\uae4c\uc9c0 \uae30\ubcf8\uac12\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uac12\uc774 \uc0dd\uc131\ub418\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \ubaa8\ub378 \ud074\ub798\uc2a4 default=... \uc5d0 \uc758\uc874\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. API\ub97c \uc5b4\ub5bb\uac8c \ub3d9\uc791\uc2dc\ud0a4\ub294\uc9c0\uc5d0 \ub530\ub77c \uc774 \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc2a4\ud0c0\uc77c\uc774 \uba87\uac00\uc9c0 \uc788\uc2b5\ub2c8\ub2e4. ModelSerializer \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c \uc0dd\uc131\ud558\ub294 \uae30\ubcf8\uac12\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc9c0\ub9cc serializer\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 \ubcf4\ub2e4 \uba85\uc2dc\uc801\uc778 \uc81c\uc5b4\ub97c \uc6d0\ud55c\ub2e4\uba74 \uc544\ub798\uc5d0 \uc124\uba85\ub41c \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\uc138\uc694. Using with a writable date field. (\uc4f0\uae30 \uac00\ub2a5\ud55c \ub0a0\uc9dc \ud544\ub4dc\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30) \ub0a0\uc9dc \ud544\ub4dc\ub97c \uc4f0\uae30 \uac00\ub2a5\ud558\uac8c\ud558\ub824\uba74, \uae30\ubcf8 \uc778\uc218\ub97c \uc124\uc815\ud558\uac70\ub098 required=True \ub97c \uc124\uc815\ud558\uc5ec \uc785\ub825 \ub370\uc774\ud130\uc5d0\uc11c \ud56d\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc57c\ud569\ub2c8\ub2e4. published = serializers.DateTimeField(required=True) Using with a read-only date field. (\uc77d\uae30 \uc804\uc6a9 \ub0a0\uc9dc \ud544\ub4dc\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30) \uc0ac\uc6a9\uc790\uac00 \ub0a0\uc9dc \ud544\ub4dc\ub97c \ubcfc \uc218\ub294 \uc788\uc9c0\ub9cc \ud3b8\uc9d1\ud560 \uc218\ub3c4 \uc5c6\ub3c4\ub85d \ud558\ub824\uba74 read_only=True \ub85c \uc124\uc815\ud558\uace0 \ucd94\uac00\ub85c default=... \uc778\uc218\ub97c \uc124\uc815\ud558\uc2ed\uc2dc\uc624. published = serializers.DateTimeField(read_only=True, default=timezone.now) \ud544\ub4dc\ub294 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc4f8 \uc218 \uc5c6\uc9c0\ub9cc \uae30\ubcf8\uac12\uc740 \uc5ec\uc804\ud788 validated_data \ub85c \uc804\ub2ec\ub429\ub2c8\ub2e4. Using with a hidden date field. (\uc228\uaca8\uc9c4 \ub0a0\uc9dc \ud544\ub4dc\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30) \uc0ac\uc6a9\uc790\uac00 \ub0a0\uc9dc \ud544\ub4dc\ub97c \uc644\uc804\ud788 \uc228\uae30\ub824\uba74 HiddenField \ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uc774 \ud544\ub4dc \ud0c0\uc785\uc740 \uc0ac\uc6a9\uc790 \uc785\ub825\uc744 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\uace0 \ub300\uc2e0 \ud56d\uc0c1 \uae30\ubcf8\uac12\uc744 serializer\uc758 validated_data \ub85c \ubc18\ud658\ud569\ub2c8\ub2e4. published = serializers.HiddenField(default=timezone.now) Note : UniqueFor<Range>Validation \ud074\ub798\uc2a4\ub294 \uc801\uc6a9\ub418\ub294 \ud544\ub4dc\uac00 \ud56d\uc0c1 \ud544\uc694\ud55c \uac83\uc73c\ub85c \ucc98\ub9ac\ub41c\ub2e4\ub294 \uc554\uc2dc\uc801 \uc81c\uc57d\uc870\uac74\uc744 \uc801\uc6a9\ud569\ub2c8\ub2e4. default \uac00 \uc788\ub294 \ud544\ub4dc\ub294 \uc0ac\uc6a9\uc790 \uc785\ub825\uc5d0\uc11c \uc0dd\ub7b5\ub41c \uacbd\uc6b0\uc5d0\ub3c4 \ud56d\uc0c1 \uac12\uc744 \uc81c\uacf5\ud558\ubbc0\ub85c \uc608\uc678\uc785\ub2c8\ub2e4. Advanced field defaults serializer\uc758 \uc5ec\ub7ec \ud544\ub4dc\uc5d0 \uc801\uc6a9\ub418\ub294 valistor\ub294 API \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc81c\uacf5\ud574\uc11c\ub294 \uc548\ub418\uc9c0\ub9cc validator\uc758 \uc785\ub825\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ud544\ub4dc \uc785\ub825\uc774 \ud544\uc694\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc720\ud615\uc758 validation\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub450\uac00\uc9c0 \ud328\ud134\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. HiddenField \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774 \ud544\ub4dc\ub294 validated_data \uc5d0 \uc788\uc9c0\ub9cc serializer \ucd9c\ub825 \ud45c\ud604\uc5d0\uc11c\ub294 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. read_only=True \uc640 \ud568\uaed8 \ud45c\uc900 \ud544\ub4dc\ub294 \uc0ac\uc6a9\ud558\uc9c0\ub9cc default=... \uc778\uc218\ub3c4 \ud3ec\ud568\ud569\ub2c8\ub2e4. \uc774 \ud544\ub4dc\ub294 serializer \ucd9c\ub825 \ud45c\ud604\uc5d0 \uc0ac\uc6a9\ub418\uc9c0\ub9cc \uc0ac\uc6a9\uc790\uac00 \uc9c1\uc811 \uc124\uc815\ud560 \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc774 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \uc720\uc6a9 \ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \uae30\ubcf8\uac12\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. CurrentUserDefault \ud604\uc7ac \uc0ac\uc6a9\uc790\ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uae30\ubcf8 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uc774\uac83\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc11c\ub294, serializer\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560\ub54c request \uac00 \ucee8\ud14d\uc2a4\ud2b8 dict\uc758 \uc77c\ubd80\ub85c \uc81c\uacf5\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. owner = serializers.HiddenField( default=serializers.CurrentUserDefault() ) CreateOnlyDefault \uc791\uc131 \uc870\uc791 \uc911 default\uc758 \uc778\uc218\ub9cc\uc744 \uc124\uc815\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uae30\ubcf8 \ud074\ub798\uc2a4. \uc5c5\ub370\uc774\ud2b8 \uc911 \ud544\ub4dc\ub294 \uc0dd\ub7b5\ub429\ub2c8\ub2e4. \uc774\uac83\uc740 \uc791\uc131 \uc791\uc5c5\uc911\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uae30\ubcf8\uac12\uc774\uac70\ub098 \ud638\ucd9c \uac00\ub2a5\ud55c \ub2e8\uc77c \uc778\uc218\ub97c \ucde8\ud569\ub2c8\ub2e4. created_at = serializers.DateTimeField( read_only=True, default=serializers.CreateOnlyDefault(timezone.now) ) Limitations of validators ModelSerializer \uc774 \uc0dd\uc131\ud558\ub294 \uae30\ubcf8 serializer \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \ub300\uc2e0 validation\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \ucc98\ub9ac\ud574\uc57c\ud558\ub294 \ubaa8\ud638\ud55c \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uacbd\uc6b0 serializerz Meta.valisators \uc18d\uc131\uc5d0 \ub300\ud55c \ube48 \ubaa9\ub85d\uc744 \uc9c0\uc815\ud558\uc5ec \uc790\ub3d9 \uc0dd\uc131 \ub41c validator\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Optional fields \uae30\ubcf8\uc801\uc73c\ub85c \"unique together\"validation\ub294 \ubaa8\ub4e0 \ud544\ub4dc\uac00 required=True \uc778\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \uacbd\uc6b0\uc5d0 \ub530\ub77c \ud544\ub4dc \uc911 \ud558\ub098\uc5d0 \uba85\uc2dc\uc801\uc73c\ub85c required=False \ub97c \uc801\uc6a9\ud558\uba74 \uc6d0\ud558\ub294 validation \ub3d9\uc791\uc774 \ubaa8\ud638\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \uc77c\ubc18\uc801\uc73c\ub85c serializer \ud074\ub798\uc2a4\uc5d0\uc11c validator\ub97c \uc81c\uc678\ud558\uace0, .validate() \uba54\uc11c\ub4dc\ub098 \ubdf0\uc5d0\uc11c validation \ub17c\ub9ac\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc791\uc131\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class BillingRecordSerializer(serializers.ModelSerializer): def validate(self, data): # Apply custom validation either here, or in the view. class Meta: fields = ('client', 'date', 'amount') extra_kwargs = {'client': {'required': 'False'}} validators = [] # Remove a default \"unique together\" constraint. Updating nested serializers \uae30\uc874 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc5c5\ub370\uc774\ud2b8\ub97c \uc801\uc6a9\ud560 \ub54c \uace0\uc720\uc131 validator\ub294 \ud604\uc7ac \uc778\uc2a4\ud134\uc2a4\ub97c \uace0\uc720\uc131 \uac80\uc0ac\uc5d0\uc11c \uc81c\uc678\ud569\ub2c8\ub2e4. \ud604\uc7ac \uc778\uc2a4\ud134\uc2a4\ub294 \uace0\uc720\uc131 \uac80\uc0ac\uc758 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \uc0ac\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc18d\uc131\uc740 serializer\uc758 \uc18d\uc131\uc73c\ub85c \uc874\uc7ac\ud558\uae30 \ub54c\ubb38\uc5d0 \ucc98\uc74c\uc5d0\ub294 serializer\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560\ub54c instance=... \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc804\ub2ec\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc911\ucca9 \ub41c serializer\uc5d0 \ub300\ud55c \uc5c5\ub370\uc774\ud2b8 \uc791\uc5c5\uc758 \uacbd\uc6b0 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc73c\ubbc0\ub85c \uc774 \ubc30\uc81c\ub97c \uc801\uc6a9\ud560 \ubc29\ubc95\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \ub9d0\ud558\uba74, serializer\ud074\ub798\uc2a4\uc5d0\uc11c validator\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc81c\uac70\ud558\uace0 validation \uc81c\uc57d \uc870\uac74\uc5d0 \ub300\ud55c \ucf54\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c .validate() \uba54\uc11c\ub4dc\ub098 \ubdf0\uc5d0 \uc791\uc131\ud558\ub824\uace0 \ud569\ub2c8\ub2e4. Debugging complex cases ModelSerializer \ud074\ub798\uc2a4\uac00 \uc5b4\ub5a4 \ub3d9\uc791\uc744 \ud558\ub294\uc9c0 \ud655\uc2e4\ud788 \ubaa8\ub97c \uacbd\uc6b0 manage.py \uc178\uc744 \uc2e4\ud589\ud558\uace0 serializer\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc778\uc1c4\ud558\uba74 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub418\ub294 \ud544\ub4dc\uc640 validator\ub97c \uac80\uc0ac \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. >>> serializer = MyComplexModelSerializer() >>> print(serializer) class MyComplexModelSerializer: my_fields = ... \ub610\ud55c \ubcf5\uc7a1\ud55c \uacbd\uc6b0\uc5d0\ub294 \uae30\ubcf8 ModelSerializer \ub3d9\uc791\uc744 \uc0ac\uc6a9\ud558\ub294 \ub300\uc2e0 serializer \ud074\ub798\uc2a4\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ud558\ub294 \uac83\uc774 \ub354 \ub098\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Writing custom validators Django\uc758 \uae30\uc874 validator\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 custom validator\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Function based validator\ub294 \uc544\ub9c8\ub3c4 \uc2e4\ud328\ud558\uba74 serializer.ValidationError \ub97c \ubc1c\uc0dd\uc2dc\ucf1c \ud638\ucd9c\ud569\ub2c8\ub2e4. def even_number(value): if value % 2 != 0: raise serializers.ValidationError('This field must be an even number.') Field-level validation Serializer \uc11c\ube0c \ud074\ub798\uc2a4\uc5d0 .validate_<field_name> \uba54\uc18c\ub4dc\ub97c \ucd94\uac00\ud558\uc5ec custom \ud544\ub4dc \ub808\ubca8 vallidation\uc744 \uc9c0\uc815 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Class-based \ud074\ub798\uc2a4 \uae30\ubc18 validator\ub97c \uc791\uc131\ud558\ub824\uba74 __call__ \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \ud074\ub798\uc2a4 \uae30\ubc18 validator\ub294 \ub3d9\uc791\uc744 \ub9e4\uac1c \ubcc0\uc218\ud654\ud558\uace0 \ub2e4\uc2dc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \uc720\uc6a9\ud569\ub2c8\ub2e4. class MultipleOf(object): def __init__(self, base): self.base = base def __call__(self, value): if value % self.base != 0: message = 'This field must be a multiple of %d.' % self.base raise serializers.ValidationError(message) Using set_context() \uc77c\ubd80 \uace0\uae09 \uc608\uc81c\uc5d0\uc11c\ub294 validator\ub97c \ucd94\uac00 \ucef4\ud14d\uc2a4\ud2b8\ub85c \uc0ac\uc6a9\ub418\ub294 serializer \ud544\ub4dc\ub85c \uc804\ub2ec\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub798\uc2a4 \uae30\ubc18\uc758 validator\uc5d0\uc11c set_context \uba54\uc11c\ub4dc\ub97c \uc120\uc5b8\ud558\uc5ec \uadf8\ub807\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. def set_context(self, serializer_field): # Determine if this is an update or a create operation. # In `__call__` we can then use that information to modify the validation behavior. self.is_update = serializer_field.parent.instance is not None","title":"Validators"},{"location":"Validators/#django-rest-framework-validators","text":"\"Validators can be useful for re-using validation logic between different types of fields.\" \"\uc720\ud6a8\uc131 \uac80\uc0ac\uae30\ub294 \ub2e4\ub978 \uc720\ud615\uc758 \ud544\ub4dc\uac04\uc5d0 \uc720\ud6a8\uc131 \uac80\uc0ac\ub17c\ub9ac\ub97c \ub2e4\uc2dc \uc0ac\uc6a9\ud558\ub294\ub370 \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\" \u2014 Django documentation","title":"Django REST Framework - Validators"},{"location":"Validators/#validators","text":"\ub300\ubd80\ubd84 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \ucc98\ub9ac\ud558\ub294 \uacbd\uc6b0 \uae30\ubcf8 \ud544\ub4dc \uc720\ud6a8\uc131 \uac80\uc0ac\uc5d0 \uc758\uc874\ud558\uac70\ub098 serializer \ub610\ub294 \ud544\ub4dc \ud074\ub798\uc2a4\uc5d0 \ub300\ud55c \uba85\uc2dc\uc801\uc778 Validator \uba54\uc18c\ub4dc\ub97c \uc791\uc131\ud558\uae30\ub9cc \ud558\uba74 \ub429\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ub54c\ub54c\ub85c \uc720\ud6a8\uc131 \uac80\uc0ac \ub17c\ub9ac\ub97c \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \uad6c\uc131 \uc694\uc18c\uc5d0 \ubc30\uce58\ud558\uc5ec \ucf54\ub4dc \ubca0\uc774\uc2a4 \uc804\uccb4\uc5d0\uc11c \uc27d\uac8c \uc7ac\uc0ac\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc740 Validator \ud568\uc218\uc640 Validators \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Validators(\uc720\ud6a8\uc131 \uac80\uc0ac\uae30)"},{"location":"Validators/#validation-in-rest-framework","text":"Django\uc758 REST \ud504\ub808\uc784\uc6cc\ud06c serializer\uc758 validation\ub294 Django\uc758 ModelForm \ud074\ub798\uc2a4\uc5d0\uc11c validation\uc774 \uc791\ub3d9\ud558\ub294 \ubc29\uc2dd\uacfc \uc870\uae08 \ub2e4\ub974\uac8c \ucc98\ub9ac\ub429\ub2c8\ub2e4. ModelForm \uc744 \uc0ac\uc6a9\ud558\uba74 validation\uc774 \ubd80\ubd84\uc801\uc73c\ub85c form\uc5d0\uc11c \uc218\ud589\ub418\uace0, \ubd80\ubd84\uc801\uc73c\ub85c \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc218\ud589\ub429\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud558\uba74 validation\uc740 \uc804\uccb4\uc801\uc73c\ub85c serializer\ud074\ub798\uc2a4\uc5d0\uc11c \uc218\ud589\ub429\ub2c8\ub2e4. \uc774\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uc774\uc720\ub85c \uc720\ub9ac\ud569\ub2c8\ub2e4. \uc801\uc808\ud55c \uad6c\ubd84\uc744 \uc81c\uacf5\ud558\uc5ec \ucf54\ub4dc \ub3d9\uc791\uc744 \ubcf4\ub2e4 \uba85\ud655\ud558\uac8c \ub9cc\ub4ed\ub2c8\ub2e4. shortcut ModelSerializer \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 \uba85\uc2dc\uc801 serializer\ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc27d\uac8c \uc804\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ModelSerializer \uc5d0 \uc0ac\uc6a9\ub418\ub294 \ubaa8\ub4e0 validation \ub3d9\uc791\uc740 \ubcf5\uc81c\uac00 \uac04\ub2e8\ud569\ub2c8\ub2e4. serializer \uc778\uc2a4\ud134\uc2a4\uc758 repr \uc744 \ucd9c\ub825(print)\ud558\uba74 validation \uaddc\uce59\uc774 \uc815\ud655\ud558\uac8c \ud45c\uc2dc\ub429\ub2c8\ub2e4. \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ucd94\uac00 \uc228\uaca8\uc9c4 validation \ub3d9\uc791\uc774 \ud638\ucd9c\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. ModelSerializer \ub97c \uc0ac\uc6a9\ud558\uba74 \ubaa8\ub4e0 \uac83\uc774 \uc790\ub3d9\uc73c\ub85c \ucc98\ub9ac\ub429\ub2c8\ub2e4. \ub300\uc2e0 Serializer\ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub4dc\ub86d\ub2e4\uc6b4\ud558\ub824\uba74 validation \uaddc\uce59\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"Validation in REST framework"},{"location":"Validators/#example","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\uac00 \uba85\uc2dc\uc801 validation\uc744 \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc758 \uc608\ub85c, \uace0\uc720\uc131 \uc81c\uc57d \uc870\uac74\uc774 \uc788\ub294 \ud544\ub4dc\uac00 \uc788\ub294 \uac04\ub2e8\ud55c \ubaa8\ub378 \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. class CustomerReportRecord(models.Model): time_raised = models.DateTimeField(default=timezone.now, editable=False) reference = models.CharField(unique=True, max_length=20) description = models.TextField() \ub2e4\uc74c\uc740 CustomReportRecord \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\uac70\ub098 \uc5c5\ub370\uc774\ud2b8\ud560 \ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uae30\ubcf8 ModelSerializer \uc785\ub2c8\ub2e4. class CustomerReportSerializer(serializers.ModelSerializer): class Meta: model = CustomerReportRecord manage.py shell\uc744 \uc0ac\uc6a9\ud558\uc5ec Django shell\uc744 \uc5f4\uba74 \uc774\uc81c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. >>> from project.example.serializers import CustomerReportSerializer >>> serializer = CustomerReportSerializer() >>> print(repr(serializer)) CustomerReportSerializer(): id = IntegerField(label='ID', read_only=True) time_raised = DateTimeField(read_only=True) reference = CharField(max_length=20, validators=[<UniqueValidator(queryset=CustomerReportRecord.objects.all())>]) description = CharField(style={'type': 'textarea'}) \uc5ec\uae30\uc11c \ud765\ubbf8\ub85c\uc6b4 \ubd80\ubd84\uc740 \ucc38\uc870\ud544\ub4dc\uc785\ub2c8\ub2e4. \uace0\uc720\uc131 \uc81c\uc57d\uc774 serializer \ud544\ub4dc\uc758 validator\uc5d0 \uc758\ud574 \uba85\uc2dc\uc801\uc73c\ub85c \uc801\uc6a9\ub418\uace0 \uc788\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \uba85\uc2dc\uc801\uc778 \uc2a4\ud0c0\uc77c \ub54c\ubb38\uc5d0 REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 Django\uc758 \ud575\uc2ec\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uba87\uac00\uc9c0 validator \ud074\ub798\uc2a4\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. \uc774 \ud074\ub798\uc2a4\ub4e4\uc740 \uc544\ub798\uc5d0 \uc790\uc138\ud788 \uc124\uba85\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.","title":"Example"},{"location":"Validators/#uniquevalidator","text":"validator\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub378 \ud544\ub4dc\uc5d0 unique=True \uc81c\uc57d \uc870\uac74\uc744 \uc801\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\ub098\uc758 \ud544\uc218 \uc778\uc218\uc640 \uc120\ud0dd\uc801 massages \uc778\uc218\ub97c \ucde8\ud569\ub2c8\ub2e4. queryset (\ud544\uc218) : \uc720\uc77c\uc131\uc744 \uac15\uc694\ud574\uc57c\ud558\ub294 queryset\uc785\ub2c8\ub2e4. massege : \uac80\uc99d\uc774 \uc2e4\ud328\ud588\uc744 \uacbd\uc6b0 \uc0ac\uc6a9\ud558\ub294 \uc5d0\ub7ec \uba54\uc138\uc9c0 lookup : \uac80\uc99d\ub418\uace0 \uc788\ub294 \uac12\uc744 \uac00\uc9c0\uace0 \uae30\uc874\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ucc3e\ub294\ub370 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 exact \uc785\ub2c8\ub2e4. \uc774 validator\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 serializer \ud544\ub4dc\uc5d0 \uc801\uc6a9\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. from rest_framework.validators import UniqueValidator slug = SlugField( max_length=100, validators=[UniqueValidator(queryset=BlogPost.objects.all())] )","title":"UniqueValidator"},{"location":"Validators/#uniquetogethervalidator","text":"\uc774 validator\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0 unique_together \uc81c\uc57d \uc870\uac74\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 \ub450 \uac1c\uc758 \ud544\uc218 \uc778\uc218\uc640 \ub2e8\uc77c \uc120\ud0dd\uc801 messages \uc778\uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4. queryset (\ud544\uc218) : \uc720\uc77c\uc131\uc744 \uac15\uc694\ud574\uc57c\ud558\ub294 queryset\uc785\ub2c8\ub2e4. fields (\ud544\uc218) : \uace0\uc720\ud55c set\uc744 \ub9cc\ub4e4\uc5b4\uc57c \ud558\ub294 \ud544\ub4dc\uc774\ub984\uc758 list \ub610\ub294 tuple. \uc774\ub4e4\uc740 serializer \ud074\ub798\uc2a4\uc758 \ud544\ub4dc\ub85c \uc874\uc7ac\ud574\uc57c \ud569\ub2c8\ub2e4. message : \uac80\uc99d\uc5d0 \uc2e4\ud328\ud588\uc744 \uacbd\uc6b0 \uc0ac\uc6a9\ud558\ub294 \uc5d0\ub7ec \uba54\uc138\uc9c0 validator\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 serializer \ud074\ub798\uc2a4\uc5d0 \uc801\uc6a9\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. from rest_framework.validators import UniqueTogetherValidator class ExampleSerializer(serializers.Serializer): # ... class Meta: # ToDo items belong to a parent list, and have an ordering defined # by the 'position' field. No two items in a given list may share # the same position. validators = [ UniqueTogetherValidator( queryset=ToDoItem.objects.all(), fields=('list', 'position') ) ] Note : UniqueTogetherValidation \ud074\ub798\uc2a4\ub294 \ud56d\uc0c1 \uc801\uc6a9\ub418\ub294 \ubaa8\ub4e0 \ud544\ub4dc\uac00 \ud56d\uc0c1 \ud544\uc694\ud55c \uac83\uc73c\ub85c \ucc98\ub9ac\ub41c\ub2e4\ub294 \uc554\uc2dc\uc801 \uc81c\uc57d\uc870\uac74\uc744 \ubd80\uacfc\ud569\ub2c8\ub2e4. default \uac00 \uc788\ub294 \ud544\ub4dc\ub294 \uc0ac\uc6a9\uc790 \uc785\ub825\uc5d0\uc11c \uc0dd\ub7b5 \ub41c \uacbd\uc6b0\uc5d0\ub3c4 \ud56d\uc0c1 \uac12\uc744 \uc81c\uacf5\ud558\ubbc0\ub85c \uc608\uc678\uc785\ub2c8\ub2e4.","title":"UniqueTogetherValidator"},{"location":"Validators/#uniquefordatevalidator","text":"","title":"UniqueForDateValidator"},{"location":"Validators/#uniqueformonthvalidator","text":"","title":"UniqueForMonthValidator"},{"location":"Validators/#uniqueforyearvalidator","text":"\uc774 validator\ub294 \ubaa8\ub378 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud574 unique_for_date , unique_for_month , unique_for_year \uc81c\uc57d\uc870\uac74\uc744 \uc801\uc6a9\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. queryset (\ud544\uc218) : \uc720\uc77c\uc131\uc744 \uac15\uc694\ud574\uc57c\ud558\ub294 queryset\uc785\ub2c8\ub2e4. field (\ud544\uc218) : \uc9c0\uc815\ub41c \ub0a0\uc9dc \ubc94\uc704\uc758 \uace0\uc720\uc131\uc5d0 \ub300\ud55c \ud544\ub4dc \uc774\ub984\uc785\ub2c8\ub2e4. \uc774\uac83\uc740 serializer \ud074\ub798\uc2a4\uc758 \ud544\ub4dc\ub85c \uc874\uc7ac\ud574\uc57c\ud569\ub2c8\ub2e4. date_field (\ud544\uc218) : \uace0\uc720\uc131 \uc81c\ud55c \uc870\uac74\uc758 \ub0a0\uc9dc \ubc94\uc704\ub97c \uacb0\uc815\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \ud544\ub4dc \uc774\ub984\uc785\ub2c8\ub2e4. \uc774\uac83\uc740 serializer\ud074\ub798\uc2a4\uc758 \ud544\ub4dc\ub85c \uc874\uc7ac\ud574\uc57c \ud569\ub2c8\ub2e4. massege : \uac80\uc99d\uc774 \uc2e4\ud328\ud588\uc744 \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\ud558\ub294 \uc5d0\ub7ec \uba54\uc138\uc9c0 validator\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 serializer\ud074\ub798\uc2a4\uc5d0 \uc801\uc6a9\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. from rest_framework.validators import UniqueForYearValidator class ExampleSerializer(serializers.Serializer): # ... class Meta: # Blog posts should have a slug that is unique for the current year. validators = [ UniqueForYearValidator( queryset=BlogPostItem.objects.all(), field='slug', date_field='published' ) ] validation\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ub0a0\uc9dc \ud544\ub4dc\ub294 \ud56d\uc0c1 serializer\ud074\ub798\uc2a4\uc5d0 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. validation\uc774 \uc2e4\ud589\ub420 \ub54c\uae4c\uc9c0 \uae30\ubcf8\uac12\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uac12\uc774 \uc0dd\uc131\ub418\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \ubaa8\ub378 \ud074\ub798\uc2a4 default=... \uc5d0 \uc758\uc874\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. API\ub97c \uc5b4\ub5bb\uac8c \ub3d9\uc791\uc2dc\ud0a4\ub294\uc9c0\uc5d0 \ub530\ub77c \uc774 \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc2a4\ud0c0\uc77c\uc774 \uba87\uac00\uc9c0 \uc788\uc2b5\ub2c8\ub2e4. ModelSerializer \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c \uc0dd\uc131\ud558\ub294 \uae30\ubcf8\uac12\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc9c0\ub9cc serializer\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 \ubcf4\ub2e4 \uba85\uc2dc\uc801\uc778 \uc81c\uc5b4\ub97c \uc6d0\ud55c\ub2e4\uba74 \uc544\ub798\uc5d0 \uc124\uba85\ub41c \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\uc138\uc694.","title":"UniqueForYearValidator"},{"location":"Validators/#using-with-a-writable-date-field","text":"\ub0a0\uc9dc \ud544\ub4dc\ub97c \uc4f0\uae30 \uac00\ub2a5\ud558\uac8c\ud558\ub824\uba74, \uae30\ubcf8 \uc778\uc218\ub97c \uc124\uc815\ud558\uac70\ub098 required=True \ub97c \uc124\uc815\ud558\uc5ec \uc785\ub825 \ub370\uc774\ud130\uc5d0\uc11c \ud56d\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc57c\ud569\ub2c8\ub2e4. published = serializers.DateTimeField(required=True)","title":"Using with a writable date field. (\uc4f0\uae30 \uac00\ub2a5\ud55c \ub0a0\uc9dc \ud544\ub4dc\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30)"},{"location":"Validators/#using-with-a-read-only-date-field","text":"\uc0ac\uc6a9\uc790\uac00 \ub0a0\uc9dc \ud544\ub4dc\ub97c \ubcfc \uc218\ub294 \uc788\uc9c0\ub9cc \ud3b8\uc9d1\ud560 \uc218\ub3c4 \uc5c6\ub3c4\ub85d \ud558\ub824\uba74 read_only=True \ub85c \uc124\uc815\ud558\uace0 \ucd94\uac00\ub85c default=... \uc778\uc218\ub97c \uc124\uc815\ud558\uc2ed\uc2dc\uc624. published = serializers.DateTimeField(read_only=True, default=timezone.now) \ud544\ub4dc\ub294 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc4f8 \uc218 \uc5c6\uc9c0\ub9cc \uae30\ubcf8\uac12\uc740 \uc5ec\uc804\ud788 validated_data \ub85c \uc804\ub2ec\ub429\ub2c8\ub2e4.","title":"Using with a read-only date field. (\uc77d\uae30 \uc804\uc6a9 \ub0a0\uc9dc \ud544\ub4dc\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30)"},{"location":"Validators/#using-with-a-hidden-date-field","text":"\uc0ac\uc6a9\uc790\uac00 \ub0a0\uc9dc \ud544\ub4dc\ub97c \uc644\uc804\ud788 \uc228\uae30\ub824\uba74 HiddenField \ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uc774 \ud544\ub4dc \ud0c0\uc785\uc740 \uc0ac\uc6a9\uc790 \uc785\ub825\uc744 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\uace0 \ub300\uc2e0 \ud56d\uc0c1 \uae30\ubcf8\uac12\uc744 serializer\uc758 validated_data \ub85c \ubc18\ud658\ud569\ub2c8\ub2e4. published = serializers.HiddenField(default=timezone.now) Note : UniqueFor<Range>Validation \ud074\ub798\uc2a4\ub294 \uc801\uc6a9\ub418\ub294 \ud544\ub4dc\uac00 \ud56d\uc0c1 \ud544\uc694\ud55c \uac83\uc73c\ub85c \ucc98\ub9ac\ub41c\ub2e4\ub294 \uc554\uc2dc\uc801 \uc81c\uc57d\uc870\uac74\uc744 \uc801\uc6a9\ud569\ub2c8\ub2e4. default \uac00 \uc788\ub294 \ud544\ub4dc\ub294 \uc0ac\uc6a9\uc790 \uc785\ub825\uc5d0\uc11c \uc0dd\ub7b5\ub41c \uacbd\uc6b0\uc5d0\ub3c4 \ud56d\uc0c1 \uac12\uc744 \uc81c\uacf5\ud558\ubbc0\ub85c \uc608\uc678\uc785\ub2c8\ub2e4.","title":"Using with a hidden date field. (\uc228\uaca8\uc9c4 \ub0a0\uc9dc \ud544\ub4dc\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30)"},{"location":"Validators/#advanced-field-defaults","text":"serializer\uc758 \uc5ec\ub7ec \ud544\ub4dc\uc5d0 \uc801\uc6a9\ub418\ub294 valistor\ub294 API \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc81c\uacf5\ud574\uc11c\ub294 \uc548\ub418\uc9c0\ub9cc validator\uc758 \uc785\ub825\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ud544\ub4dc \uc785\ub825\uc774 \ud544\uc694\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc720\ud615\uc758 validation\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub450\uac00\uc9c0 \ud328\ud134\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. HiddenField \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774 \ud544\ub4dc\ub294 validated_data \uc5d0 \uc788\uc9c0\ub9cc serializer \ucd9c\ub825 \ud45c\ud604\uc5d0\uc11c\ub294 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. read_only=True \uc640 \ud568\uaed8 \ud45c\uc900 \ud544\ub4dc\ub294 \uc0ac\uc6a9\ud558\uc9c0\ub9cc default=... \uc778\uc218\ub3c4 \ud3ec\ud568\ud569\ub2c8\ub2e4. \uc774 \ud544\ub4dc\ub294 serializer \ucd9c\ub825 \ud45c\ud604\uc5d0 \uc0ac\uc6a9\ub418\uc9c0\ub9cc \uc0ac\uc6a9\uc790\uac00 \uc9c1\uc811 \uc124\uc815\ud560 \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \uc774 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \uc720\uc6a9 \ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \uae30\ubcf8\uac12\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4.","title":"Advanced field defaults"},{"location":"Validators/#currentuserdefault","text":"\ud604\uc7ac \uc0ac\uc6a9\uc790\ub97c \ub098\ud0c0\ub0b4\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uae30\ubcf8 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uc774\uac83\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc11c\ub294, serializer\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560\ub54c request \uac00 \ucee8\ud14d\uc2a4\ud2b8 dict\uc758 \uc77c\ubd80\ub85c \uc81c\uacf5\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. owner = serializers.HiddenField( default=serializers.CurrentUserDefault() )","title":"CurrentUserDefault"},{"location":"Validators/#createonlydefault","text":"\uc791\uc131 \uc870\uc791 \uc911 default\uc758 \uc778\uc218\ub9cc\uc744 \uc124\uc815\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uae30\ubcf8 \ud074\ub798\uc2a4. \uc5c5\ub370\uc774\ud2b8 \uc911 \ud544\ub4dc\ub294 \uc0dd\ub7b5\ub429\ub2c8\ub2e4. \uc774\uac83\uc740 \uc791\uc131 \uc791\uc5c5\uc911\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uae30\ubcf8\uac12\uc774\uac70\ub098 \ud638\ucd9c \uac00\ub2a5\ud55c \ub2e8\uc77c \uc778\uc218\ub97c \ucde8\ud569\ub2c8\ub2e4. created_at = serializers.DateTimeField( read_only=True, default=serializers.CreateOnlyDefault(timezone.now) )","title":"CreateOnlyDefault"},{"location":"Validators/#limitations-of-validators","text":"ModelSerializer \uc774 \uc0dd\uc131\ud558\ub294 \uae30\ubcf8 serializer \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \ub300\uc2e0 validation\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \ucc98\ub9ac\ud574\uc57c\ud558\ub294 \ubaa8\ud638\ud55c \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uacbd\uc6b0 serializerz Meta.valisators \uc18d\uc131\uc5d0 \ub300\ud55c \ube48 \ubaa9\ub85d\uc744 \uc9c0\uc815\ud558\uc5ec \uc790\ub3d9 \uc0dd\uc131 \ub41c validator\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Limitations of validators"},{"location":"Validators/#optional-fields","text":"\uae30\ubcf8\uc801\uc73c\ub85c \"unique together\"validation\ub294 \ubaa8\ub4e0 \ud544\ub4dc\uac00 required=True \uc778\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \uacbd\uc6b0\uc5d0 \ub530\ub77c \ud544\ub4dc \uc911 \ud558\ub098\uc5d0 \uba85\uc2dc\uc801\uc73c\ub85c required=False \ub97c \uc801\uc6a9\ud558\uba74 \uc6d0\ud558\ub294 validation \ub3d9\uc791\uc774 \ubaa8\ud638\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \uc77c\ubc18\uc801\uc73c\ub85c serializer \ud074\ub798\uc2a4\uc5d0\uc11c validator\ub97c \uc81c\uc678\ud558\uace0, .validate() \uba54\uc11c\ub4dc\ub098 \ubdf0\uc5d0\uc11c validation \ub17c\ub9ac\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc791\uc131\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class BillingRecordSerializer(serializers.ModelSerializer): def validate(self, data): # Apply custom validation either here, or in the view. class Meta: fields = ('client', 'date', 'amount') extra_kwargs = {'client': {'required': 'False'}} validators = [] # Remove a default \"unique together\" constraint.","title":"Optional fields"},{"location":"Validators/#updating-nested-serializers","text":"\uae30\uc874 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc5c5\ub370\uc774\ud2b8\ub97c \uc801\uc6a9\ud560 \ub54c \uace0\uc720\uc131 validator\ub294 \ud604\uc7ac \uc778\uc2a4\ud134\uc2a4\ub97c \uace0\uc720\uc131 \uac80\uc0ac\uc5d0\uc11c \uc81c\uc678\ud569\ub2c8\ub2e4. \ud604\uc7ac \uc778\uc2a4\ud134\uc2a4\ub294 \uace0\uc720\uc131 \uac80\uc0ac\uc758 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \uc0ac\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc18d\uc131\uc740 serializer\uc758 \uc18d\uc131\uc73c\ub85c \uc874\uc7ac\ud558\uae30 \ub54c\ubb38\uc5d0 \ucc98\uc74c\uc5d0\ub294 serializer\ub97c \uc778\uc2a4\ud134\uc2a4\ud654 \ud560\ub54c instance=... \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc804\ub2ec\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc911\ucca9 \ub41c serializer\uc5d0 \ub300\ud55c \uc5c5\ub370\uc774\ud2b8 \uc791\uc5c5\uc758 \uacbd\uc6b0 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc73c\ubbc0\ub85c \uc774 \ubc30\uc81c\ub97c \uc801\uc6a9\ud560 \ubc29\ubc95\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \ub9d0\ud558\uba74, serializer\ud074\ub798\uc2a4\uc5d0\uc11c validator\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc81c\uac70\ud558\uace0 validation \uc81c\uc57d \uc870\uac74\uc5d0 \ub300\ud55c \ucf54\ub4dc\ub97c \uba85\uc2dc\uc801\uc73c\ub85c .validate() \uba54\uc11c\ub4dc\ub098 \ubdf0\uc5d0 \uc791\uc131\ud558\ub824\uace0 \ud569\ub2c8\ub2e4.","title":"Updating nested serializers"},{"location":"Validators/#debugging-complex-cases","text":"ModelSerializer \ud074\ub798\uc2a4\uac00 \uc5b4\ub5a4 \ub3d9\uc791\uc744 \ud558\ub294\uc9c0 \ud655\uc2e4\ud788 \ubaa8\ub97c \uacbd\uc6b0 manage.py \uc178\uc744 \uc2e4\ud589\ud558\uace0 serializer\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc778\uc1c4\ud558\uba74 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub418\ub294 \ud544\ub4dc\uc640 validator\ub97c \uac80\uc0ac \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. >>> serializer = MyComplexModelSerializer() >>> print(serializer) class MyComplexModelSerializer: my_fields = ... \ub610\ud55c \ubcf5\uc7a1\ud55c \uacbd\uc6b0\uc5d0\ub294 \uae30\ubcf8 ModelSerializer \ub3d9\uc791\uc744 \uc0ac\uc6a9\ud558\ub294 \ub300\uc2e0 serializer \ud074\ub798\uc2a4\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ud558\ub294 \uac83\uc774 \ub354 \ub098\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Debugging complex cases"},{"location":"Validators/#writing-custom-validators","text":"Django\uc758 \uae30\uc874 validator\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 custom validator\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Writing custom validators"},{"location":"Validators/#function-based","text":"validator\ub294 \uc544\ub9c8\ub3c4 \uc2e4\ud328\ud558\uba74 serializer.ValidationError \ub97c \ubc1c\uc0dd\uc2dc\ucf1c \ud638\ucd9c\ud569\ub2c8\ub2e4. def even_number(value): if value % 2 != 0: raise serializers.ValidationError('This field must be an even number.')","title":"Function based"},{"location":"Validators/#field-level-validation","text":"Serializer \uc11c\ube0c \ud074\ub798\uc2a4\uc5d0 .validate_<field_name> \uba54\uc18c\ub4dc\ub97c \ucd94\uac00\ud558\uc5ec custom \ud544\ub4dc \ub808\ubca8 vallidation\uc744 \uc9c0\uc815 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Field-level validation"},{"location":"Validators/#class-based","text":"\ud074\ub798\uc2a4 \uae30\ubc18 validator\ub97c \uc791\uc131\ud558\ub824\uba74 __call__ \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \ud074\ub798\uc2a4 \uae30\ubc18 validator\ub294 \ub3d9\uc791\uc744 \ub9e4\uac1c \ubcc0\uc218\ud654\ud558\uace0 \ub2e4\uc2dc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \uc720\uc6a9\ud569\ub2c8\ub2e4. class MultipleOf(object): def __init__(self, base): self.base = base def __call__(self, value): if value % self.base != 0: message = 'This field must be a multiple of %d.' % self.base raise serializers.ValidationError(message)","title":"Class-based"},{"location":"Validators/#using-set_context","text":"\uc77c\ubd80 \uace0\uae09 \uc608\uc81c\uc5d0\uc11c\ub294 validator\ub97c \ucd94\uac00 \ucef4\ud14d\uc2a4\ud2b8\ub85c \uc0ac\uc6a9\ub418\ub294 serializer \ud544\ub4dc\ub85c \uc804\ub2ec\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub798\uc2a4 \uae30\ubc18\uc758 validator\uc5d0\uc11c set_context \uba54\uc11c\ub4dc\ub97c \uc120\uc5b8\ud558\uc5ec \uadf8\ub807\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. def set_context(self, serializer_field): # Determine if this is an update or a create operation. # In `__call__` we can then use that information to modify the validation behavior. self.is_update = serializer_field.parent.instance is not None","title":"Using set_context()"},{"location":"Versioning/","text":"Django REST Framework - Versioning \"Versioning an interface is just a \"polite\" way to kill deployed clients.\" \"\uc778\ud130\ud398\uc774\uc2a4\uc758 \ubc84\uc804 \uad00\ub9ac\ub294 \ubc30\uce58 \ub41c \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc8fd\uc774\ub294 \"\uc815\uc911\ud55c\" \ubc29\ubc95 \uc77c \ubfd0\uc785\ub2c8\ub2e4.\" \u2014 Roy Fielding. Versioning (\ubc84\uc804\uad00\ub9ac) API \ubc84\uc804 \uad00\ub9ac\ub97c \ud1b5\ud574 \uc11c\ub85c \ub2e4\ub978 \ud074\ub77c\uc774\uc5b8\ud2b8 \uac04\uc758 \ub3d9\uc791\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ub2e4\uc591\ud55c \ubc84\uc804 \uad00\ub9ac \uccb4\uacc4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ubc84\uc804 \uc9c0\uc815\uc740 \uc218\uc2e0 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc694\uccad\uc5d0 \uc758\ud574 \uacb0\uc815\ub418\uba70 request URL\uc744 \uae30\ubc18\uc73c\ub85c\ud558\uac70\ub098 request \ud5e4\ub354\ub97c \uae30\ubc18\uc73c\ub85c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc84\uc804 \uad00\ub9ac\uc5d0 \uc811\uadfc\ud558\ub294\ub370\ub294 \uc5ec\ub7ec\uac00\uc9c0 \uc720\ud6a8\ud55c \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\ud788 \ubc84\uc804\uc744 \ubc97\uc5b4\ub09c \uc5ec\ub7ec \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uac00\uc9c4 \ub9e4\uc6b0 \uc7a5\uae30\uc801\uc778 \uc2dc\uc2a4\ud15c\uc744 \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1\ud558\ub294 \uacbd\uc6b0\uc5d0\ub294 \ubc84\uc804\uc774 \uc5c6\ub294 \uc2dc\uc2a4\ud15c\ub3c4 \uc801\ud569 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Versioning with REST framework API \ubc84\uc804 \uad00\ub9ac\uac00 \ud65c\uc131\ud654\ub418\uba74 request.version \uc18d\uc131\uc5d0\ub294 \ub4e4\uc5b4\uc624\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 request\uc5d0\uc11c \uc694\uccad \ub41c \ubc84\uc804\uc5d0 \ud574\ub2f9\ud558\ub294 \ubb38\uc790\uc5f4\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \ubc84\uc804 \uad00\ub9ac\ub294 \ud65c\uc131\ud654\ub418\uc5b4\uc788\uc9c0 \uc54a\uc73c\uba70 request.version \uc740 \ud56d\uc0c1 None \uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. Varying behavior based on the version API\ub3d9\uc791\uc744 \ubcc0\uacbd\ud558\ub294 \ubc29\ubc95\uc740 \uc6b0\ub9ac\uc5d0\uac8c \ub2ec\ub824\uc788\uc9c0\ub9cc \uc77c\ubc18\uc801\uc778 \ud55c\uac00\uc9c0 \uc608\ub294 \ucd5c\uc2e0 \ubc84\uc804\uc758 \ub2e4\ub978 serializer \uc2a4\ud0c0\uc77c\ub85c \uc804\ud658\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc608: def get_serializer_class(self): if self.request.version == 'v1': return AccountSerializerVersion1 return AccountSerializer Reversing URLs for versioned APIs REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ud3ec\ud568 \ub41c \uc5ed\uc21c \ud568\uc218\ub294 \ubc84\uc804 \uad00\ub9ac\uccb4\uacc4\uc640 \uad00\ub828\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ud604\uc7ac request\ub97c \ud0a4\uc6cc\ub4dc \uc778\uc218\ub85c \ud3ec\ud568\uc2dc\ucf1c\uc57c \ud569\ub2c8\ub2e4. from rest_framework.reverse import reverse reverse('bookings-list', request=request) \uc704\uc758 \ud568\uc218\ub294 \uc694\uccad \ubc84\uc804\uc5d0 \uc801\ud569\ud55c \ubaa8\ub4e0 URL \ubcc0\ud658\uc744 \uc801\uc6a9\ud569\ub2c8\ub2e4. \uc608: NamespacedVersioning \uc774 \uc0ac\uc6a9\ub418\uace0 API \ubc84\uc804\uc774 'v1'\uc778 \uacbd\uc6b0 \uc0ac\uc6a9 \ub41c URL \uc870\ud68c\ub294 http://example.org/v1/bookings/ \uacfc \uac19\uc740 URL\ub85c \ud574\uc11d \ub420 \uc218\uc788\ub294 'v1 : bookings-list' \uc785\ub2c8\ub2e4. QueryParameterVersioning \uc774 \uc0ac\uc6a9\ub418\uace0 API \ubc84\uc804\uc774 1.0 \uc778 \uacbd\uc6b0 \ubc18\ud658 \ub41c URL\uc740 http://example.org/bookings/?version=1.0 \uacfc \uac19\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Versioned APIs and hyperlinked serializers \ud558\uc774\ud37c \ub9c1\ud06c \ub41c serializer \uc2a4\ud0c0\uc77c\uc744 URL \uae30\ubc18 \ubc84\uc804 \uad00\ub9ac scheme\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud574\ub2f9 \uc694\uccad\uc744 \ucee8\ud14d\uc2a4\ud2b8\ub85c serializer\uc5d0 \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4. def get(self, request): queryset = Booking.objects.all() serializer = BookingsSerializer(queryset, many=True, context={'request': request}) return Response({'all_bookings': serializer.data}) \uc774\ub807\uac8c \ud558\uba74 \ubc18\ud658 \ub41c \ubaa8\ub4e0 URL\uc5d0 \uc801\uc808\ud55c \ubc84\uc804\uc774 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Configuring the versioning scheme \ubc84\uc804 \uad00\ub9ac scheme\ub294 DEFAULT_VERSIONING_CLASS \uc124\uc815 \ud0a4\ub85c \uc815\uc758\ub429\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.NamespaceVersioning' } \uba85\uc2dc\uc801\uc73c\ub85c \uc124\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 DEFAULT_VERSIONING_CLASS \uc758 \uac12\uc740 None \uc774 \ub429\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 request.version \uc18d\uc131\uc740 \ud56d\uc0c1 None \uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uac1c\ubcc4 view\uc5d0\uc11c versioning scheme\ub97c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc804\uc5ed\uc801\uc73c\ub85c single versioning scheme\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \ub354 \ud569\ub9ac\uc801\uc774\ubbc0\ub85c \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud574\uc57c\ud55c\ub2e4\uba74 versioning_class \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc138\uc694. class ProfileList(APIView): versioning_class = versioning.QueryParameterVersioning Other versioning settings \ub2e4\uc74c \uc124\uc815 \ud0a4\ub294 versioning\ub97c \uc81c\uc5b4\ud558\ub294\ub370\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. DEFAULT_VERSION : \ubc84\uc804 \uc815\ubcf4\uac00 \uc5c6\ub294 \uacbd\uc6b0 request.version \uc5d0 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \uac12\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 None \uc785\ub2c8\ub2e4. ALLOWED_VERSIONS : \uc774 \uac12\uc744 \uc124\uc815\ud558\uba74 versioning scheme\uc5d0\uc11c \ubc18\ud658 \ud560 \uc218 \uc788\ub294 \ubc84\uc804 \uc9d1\ud569\uc774 \uc81c\ud55c\ub418\uba70 \uc81c\uacf5\ub41c \ubc84\uc804\uc774 \uc774 \uc9d1\ud569\uc5d0 \uc5c6\ub294 \uacbd\uc6b0 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. DEFAULT_VERSION \uc124\uc815\uc5d0 \uc0ac\uc6a9 \ub41c \uac12\uc740 \ud56d\uc0c1 ALLOWED_VERSIONS set\uc758 \uc77c\ubd80\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4 (\ub2e8, None \uc774 \uc544\ub2cc \uacbd\uc6b0). \uae30\ubcf8\uac12\uc740 None \uc785\ub2c8\ub2e4. VERSION_PARAM : \ubbf8\ub514\uc5b4 \uc720\ud615 \ub610\ub294 URL \ucffc\ub9ac parameter\uc640 \uac19\uc774 \ubaa8\ub4e0 \ubc84\uc804 \uc9c0\uc815 parameter\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 'version' \uc785\ub2c8\ub2e4. \ub610\ud55c \uace0\uc720\ud55c versioning scheme\ub97c \uc815\uc758\ud558\uace0 default_version , allowed_version \ubc0f version_param \ud074\ub798\uc2a4 \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubc84\uc804 \ubcc4 \ub610\ub294 \ubdf0 set \ubcc4\ub85c \uc138 \uac00\uc9c0 \uac12\uc744 \ub354\ud55c \ubc84\uc804 \ud074\ub798\uc2a4\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, URLPathVersioning \ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \ud558\uc2ed\uc2dc\uc624. from rest_framework.versioning import URLPathVersioning from rest_framework.views import APIView class ExampleVersioning(URLPathVersioning): default_version = ... allowed_versions = ... version_param = ... class ExampleView(APIVIew): versioning_class = ExampleVersioning API Reference AcceptHeaderVersioning \uc774 scheme\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 Accept \ud5e4\ub354\uc758 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc758 \uc77c\ubd80\ub85c \ubc84\uc804\uc744 \uc9c0\uc815\ud558\ub3c4\ub85d \uc694\uad6c\ud569\ub2c8\ub2e4. \uc774 \ubc84\uc804\uc740 \uae30\ubcf8 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc744 \ubcf4\uc644\ud558\ub294 \ubbf8\ub514\uc5b4 \ud0c0\uc785 parameter\ub85c \ud3ec\ud568\ub429\ub2c8\ub2e4. \ub2e4\uc74c accept \ud5e4\ub354 versioning \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\ub294 HTTP request\uc758 \uc608\uc785\ub2c8\ub2e4. GET /bookings/ HTTP/1.1 Host: example.com Accept: application/json; version=1.0 \uc704\uc758 \uc608\uc81c request\uc5d0\uc11c request.version \uc18d\uc131\uc740 '1.0' \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. Accept \ud5e4\ub354\uc5d0 \uae30\ubc18\ud55c versioning\ub294 \uc77c\ubc18\uc801 \uc73c\ub85c \ubaa8\ubc94 \uc0ac\ub840 \ub85c \uac04\uc8fc\ub418\uc9c0\ub9cc \ud074\ub77c\uc774\uc5b8\ud2b8 \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub530\ub77c \ub2e4\ub978 \uc2a4\ud0c0\uc77c\uc774 \uc801\ud569\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Using accept headers with vendor media types \uc5c4\ubc00\ud788 \ub9d0\ud558\uc790\uba74 json \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc740 \ucd94\uac00 parameter \ub97c \ud3ec\ud568\ud558\ub294 \uac83\uc73c\ub85c \uc9c0\uc815\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc798 \uc815\uc758 \ub41c \uacf5\uac1c API\ub97c \uc791\uc131\ud558\ub294 \uacbd\uc6b0 vendor media type \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\ub824\uba74 custom \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc73c\ub85c JSON \uae30\ubc18 \ub80c\ub354\ub7ec\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ub80c\ub354\ub7ec\ub97c \uad6c\uc131\ud558\uc138\uc694. class BookingsAPIRenderer(JSONRenderer): media_type = 'application/vnd.megacorp.bookings+json' \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 request\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. GET /bookings/ HTTP/1.1 Host: example.com Accept: application/vnd.megacorp.bookings+json; version=1.0 URLPathVersioning \uc774 \uc2a4\ud0a4\ub9c8\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 URL \uacbd\ub85c\uc758 \uc77c\ubd80\ub85c \ubc84\uc804\uc744 \uc9c0\uc815\ud558\ub3c4\ub85d \uc694\uad6c\ud569\ub2c8\ub2e4. GET /v1/bookings/ HTTP/1.1 Host: example.com Accept: application/json URL conf\uc5d0\ub294 'version' \ud0a4\uc6cc\ub4dc \uc778\uc218\uac00 \uc788\ub294 \ubc84\uc804\uacfc \uc77c\uce58\ud558\ub294 \ud328\ud134\uc774 \ud3ec\ud568\ub418\uc5b4\uc57c\ud558\ubbc0\ub85c \uc774 \uc815\ubcf4\ub97c versioning scheme\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. urlpatterns = [ url( r'^(?P<version>(v1|v2))/bookings/$', bookings_list, name='bookings-list' ), url( r'^(?P<version>(v1|v2))/bookings/(?P<pk>[0-9]+)/$', bookings_detail, name='bookings-detail' ) ] NamespaceVersioning \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc774 scheme\ub294 URLPathVersioning \uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4. \uc720\uc77c\ud55c \ucc28\uc774\uc810\uc740 URL \ud0a4\uc6cc\ub4dc \uc778\uc218 \ub300\uc2e0 URL \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\ubbc0\ub85c Django \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \uc5b4\ub5bb\uac8c \uad6c\uc131\ub418\uc5b4 \uc788\ub294\uc9c0\uc785\ub2c8\ub2e4. GET /v1/something/ HTTP/1.1 Host: example.com Accept: application/json \uc774 scheme\uc5d0\uc11c request.version \uc18d\uc131\uc740 \ud2c0\uc5b4\uc624\ub294 request \uacbd\ub85c\uc640 \uc77c\uce58\ud558\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uae30\ubc18\uc73c\ub85c \uacb0\uc815\ub429\ub2c8\ub2e4. \ub2e4\uc74c \uc608\uc81c\uc5d0\uc11c\ub294 \uc11c\ub85c \ub2e4\ub978 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4 \uc544\ub798\uc5d0 \uac01\uac01 \ub2e4\ub978 \ub450\uac00\uc9c0 URL \uc811\ub450\uc5b4\uac00 \uc788\ub294 \uc77c\ub828\uc758 view\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. # bookings/urls.py urlpatterns = [ url(r'^$', bookings_list, name='bookings-list'), url(r'^(?P<pk>[0-9]+)/$', bookings_detail, name='bookings-detail') ] # urls.py urlpatterns = [ url(r'^v1/bookings/', include('bookings.urls', namespace='v1')), url(r'^v2/bookings/', include('bookings.urls', namespace='v2')) ] \uac04\ub2e8\ud55c versioning scheme\uac00 \ud544\uc694\ud558\ub2e4\uba74 URLPathVersioning \uacfc NamespaceVersioning \ubaa8\ub450 \ud569\ub9ac\uc801\uc785\ub2c8\ub2e4. HostNameVersioning hostname versioning scheme\uc5d0\uc11c\ub294 \ud074\ub77c\uc774\uc5b4\ud2bc\uac00 \uc694\uccad\ub41c \ubc84\uc804\uc744 URL\uc758 hostname\uc758 \uc77c\ubd80\ub85c \uc9c0\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub2e4\uc74c\uc740 http://v1.example.com/bookings/ URL\uc5d0 \ub300\ud55c HTTP \uc694\uccad\uc785\ub2c8\ub2e4. GET /bookings/ HTTP/1.1 Host: v1.example.com Accept: application/json \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uad6c\ud604\uc740 hostname\uc774 \ub2e4\uc74c\uacfc \uac19\uc740 \uac04\ub2e8\ud55c \uc815\uaddc\uc2dd\uacfc \uc77c\uce58 \ud560 \uac83\uc73c\ub85c \uae30\ub300\ud569\ub2c8\ub2e4. ^([a-zA-Z0-9]+)\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$ \uccab \ubc88\uc9f8 \uadf8\ub8f9\uc740 \ub300\uad04\ud638\ub85c \ubb36\uc5ec \uc788\uc73c\uba70 hostname\uc758 \uc77c\uce58\ud558\ub294 \ubd80\ubd84\uc784\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c 127.0.0.1 \uacfc \uac19\uc740 \uae30\uc874 IP\uc8fc\uc18c\uc5d0 \uc561\uc11c\uc2a4\ud558\ubbc0\ub85c HostNameVersioning scheme\ub294 \ub514\ubc84\uadf8 \ubaa8\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30\uac00 \uc5b4\ub824\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\ub294 custom subdomain \uc73c\ub85c localhost\uc5d0 \uc561\uc11c\uc2a4 \ud558\ub294 \ub2e4\uc591\ud55c \uc628\ub77c\uc778 \uc11c\ube44\uc2a4\uac00 \uc788\uc2b5\ub2c8\ub2e4. hostname versioning scheme\ub294 \uc5ec\ub7ec API \ubc84\uc804\uc5d0 \ub300\ud574 \uc11c\ub85c \ub2e4\ub978 DNS \ub808\ucf54\ub4dc\ub97c \uad6c\uc131\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \ub4e4\uc5b4\uc624\ub294 request\ub97c \ubc84\uc804\uc5d0 \ub530\ub77c \ub2e4\ub978 \uc11c\ubc84\ub85c \ub77c\uc6b0\ud305\ud574\uc57c\ud558\ub294 \uacbd\uc6b0\uc5d0 \ud2b9\ud788 \uc720\uc6a9\ud569\ub2c8\ub2e4. QueryParameterVersioning \uc774 \uc2a4\ud0a4\ub9c8\ub294 URL\uc5d0 \ucffc\ub9ac parameter\ub85c \ubc84\uc804\uc744 \ud3ec\ud568\ud558\ub294 \uac04\ub2e8\ud55c \uc2a4\ud0c0\uc77c\uc785\ub2c8\ub2e4. \uc608: GET /something/?version=0.1 HTTP/1.1 Host: example.com Accept: application/json Custom versioning schemes custom versioning scheme\ub97c \uad6c\ud604\ud558\ub824\uba74 BaseVersioning \ub97c \uc11c\ube0c \ud074\ub798\uc2a4\ud654\ud558\uace0 .determine_version \uba54\uc11c\ub4dc\ub97c \ub300\uccb4\ud558\uc138\uc694. Example \ub2e4\uc74c \uc608\uc5d0\uc11c\ub294 custom X-API-Version \ud5e4\uac70\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc694\uccad\ud55c \ubc84\uc804\uc744 \ud655\uc778\ud569\ub2c8\ub2e4. class XAPIVersionScheme(versioning.BaseVersioning): def determine_version(self, request, *args, **kwargs): return request.META.get('HTTP_X_API_VERSION', None) versioning scheme\uac00 request URL\uc744 \uae30\ubc18\uc73c\ub85c \ud558\ub294 \uacbd\uc6b0 \ubc84\uc804\uc774 \uc9c0\uc815\ub41c URL\uc758 \uacb0\uc815 \ubc29\ubc95\ub3c4 \ubcc0\uacbd\ud574\uc57c\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\ub824\uba74 \ud074\ub798\uc2a4\uc758 .reverse() \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\uc81c\ub294 \uc18c\uc2a4\ucf54\ub4dc\ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"Versioning"},{"location":"Versioning/#django-rest-framework-versioning","text":"\"Versioning an interface is just a \"polite\" way to kill deployed clients.\" \"\uc778\ud130\ud398\uc774\uc2a4\uc758 \ubc84\uc804 \uad00\ub9ac\ub294 \ubc30\uce58 \ub41c \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc8fd\uc774\ub294 \"\uc815\uc911\ud55c\" \ubc29\ubc95 \uc77c \ubfd0\uc785\ub2c8\ub2e4.\" \u2014 Roy Fielding.","title":"Django REST Framework - Versioning"},{"location":"Versioning/#versioning","text":"API \ubc84\uc804 \uad00\ub9ac\ub97c \ud1b5\ud574 \uc11c\ub85c \ub2e4\ub978 \ud074\ub77c\uc774\uc5b8\ud2b8 \uac04\uc758 \ub3d9\uc791\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ub2e4\uc591\ud55c \ubc84\uc804 \uad00\ub9ac \uccb4\uacc4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ubc84\uc804 \uc9c0\uc815\uc740 \uc218\uc2e0 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc694\uccad\uc5d0 \uc758\ud574 \uacb0\uc815\ub418\uba70 request URL\uc744 \uae30\ubc18\uc73c\ub85c\ud558\uac70\ub098 request \ud5e4\ub354\ub97c \uae30\ubc18\uc73c\ub85c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc84\uc804 \uad00\ub9ac\uc5d0 \uc811\uadfc\ud558\ub294\ub370\ub294 \uc5ec\ub7ec\uac00\uc9c0 \uc720\ud6a8\ud55c \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\ud788 \ubc84\uc804\uc744 \ubc97\uc5b4\ub09c \uc5ec\ub7ec \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uac00\uc9c4 \ub9e4\uc6b0 \uc7a5\uae30\uc801\uc778 \uc2dc\uc2a4\ud15c\uc744 \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1\ud558\ub294 \uacbd\uc6b0\uc5d0\ub294 \ubc84\uc804\uc774 \uc5c6\ub294 \uc2dc\uc2a4\ud15c\ub3c4 \uc801\ud569 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Versioning (\ubc84\uc804\uad00\ub9ac)"},{"location":"Versioning/#versioning-with-rest-framework","text":"API \ubc84\uc804 \uad00\ub9ac\uac00 \ud65c\uc131\ud654\ub418\uba74 request.version \uc18d\uc131\uc5d0\ub294 \ub4e4\uc5b4\uc624\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 request\uc5d0\uc11c \uc694\uccad \ub41c \ubc84\uc804\uc5d0 \ud574\ub2f9\ud558\ub294 \ubb38\uc790\uc5f4\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \ubc84\uc804 \uad00\ub9ac\ub294 \ud65c\uc131\ud654\ub418\uc5b4\uc788\uc9c0 \uc54a\uc73c\uba70 request.version \uc740 \ud56d\uc0c1 None \uc744 \ubc18\ud658\ud569\ub2c8\ub2e4.","title":"Versioning with REST framework"},{"location":"Versioning/#varying-behavior-based-on-the-version","text":"API\ub3d9\uc791\uc744 \ubcc0\uacbd\ud558\ub294 \ubc29\ubc95\uc740 \uc6b0\ub9ac\uc5d0\uac8c \ub2ec\ub824\uc788\uc9c0\ub9cc \uc77c\ubc18\uc801\uc778 \ud55c\uac00\uc9c0 \uc608\ub294 \ucd5c\uc2e0 \ubc84\uc804\uc758 \ub2e4\ub978 serializer \uc2a4\ud0c0\uc77c\ub85c \uc804\ud658\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc608: def get_serializer_class(self): if self.request.version == 'v1': return AccountSerializerVersion1 return AccountSerializer","title":"Varying behavior based on the version"},{"location":"Versioning/#reversing-urls-for-versioned-apis","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ud3ec\ud568 \ub41c \uc5ed\uc21c \ud568\uc218\ub294 \ubc84\uc804 \uad00\ub9ac\uccb4\uacc4\uc640 \uad00\ub828\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ud604\uc7ac request\ub97c \ud0a4\uc6cc\ub4dc \uc778\uc218\ub85c \ud3ec\ud568\uc2dc\ucf1c\uc57c \ud569\ub2c8\ub2e4. from rest_framework.reverse import reverse reverse('bookings-list', request=request) \uc704\uc758 \ud568\uc218\ub294 \uc694\uccad \ubc84\uc804\uc5d0 \uc801\ud569\ud55c \ubaa8\ub4e0 URL \ubcc0\ud658\uc744 \uc801\uc6a9\ud569\ub2c8\ub2e4. \uc608: NamespacedVersioning \uc774 \uc0ac\uc6a9\ub418\uace0 API \ubc84\uc804\uc774 'v1'\uc778 \uacbd\uc6b0 \uc0ac\uc6a9 \ub41c URL \uc870\ud68c\ub294 http://example.org/v1/bookings/ \uacfc \uac19\uc740 URL\ub85c \ud574\uc11d \ub420 \uc218\uc788\ub294 'v1 : bookings-list' \uc785\ub2c8\ub2e4. QueryParameterVersioning \uc774 \uc0ac\uc6a9\ub418\uace0 API \ubc84\uc804\uc774 1.0 \uc778 \uacbd\uc6b0 \ubc18\ud658 \ub41c URL\uc740 http://example.org/bookings/?version=1.0 \uacfc \uac19\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Reversing URLs for versioned APIs"},{"location":"Versioning/#versioned-apis-and-hyperlinked-serializers","text":"\ud558\uc774\ud37c \ub9c1\ud06c \ub41c serializer \uc2a4\ud0c0\uc77c\uc744 URL \uae30\ubc18 \ubc84\uc804 \uad00\ub9ac scheme\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud574\ub2f9 \uc694\uccad\uc744 \ucee8\ud14d\uc2a4\ud2b8\ub85c serializer\uc5d0 \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4. def get(self, request): queryset = Booking.objects.all() serializer = BookingsSerializer(queryset, many=True, context={'request': request}) return Response({'all_bookings': serializer.data}) \uc774\ub807\uac8c \ud558\uba74 \ubc18\ud658 \ub41c \ubaa8\ub4e0 URL\uc5d0 \uc801\uc808\ud55c \ubc84\uc804\uc774 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Versioned APIs and hyperlinked serializers"},{"location":"Versioning/#configuring-the-versioning-scheme","text":"\ubc84\uc804 \uad00\ub9ac scheme\ub294 DEFAULT_VERSIONING_CLASS \uc124\uc815 \ud0a4\ub85c \uc815\uc758\ub429\ub2c8\ub2e4. REST_FRAMEWORK = { 'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.NamespaceVersioning' } \uba85\uc2dc\uc801\uc73c\ub85c \uc124\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 DEFAULT_VERSIONING_CLASS \uc758 \uac12\uc740 None \uc774 \ub429\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 request.version \uc18d\uc131\uc740 \ud56d\uc0c1 None \uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uac1c\ubcc4 view\uc5d0\uc11c versioning scheme\ub97c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc804\uc5ed\uc801\uc73c\ub85c single versioning scheme\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \ub354 \ud569\ub9ac\uc801\uc774\ubbc0\ub85c \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud574\uc57c\ud55c\ub2e4\uba74 versioning_class \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc138\uc694. class ProfileList(APIView): versioning_class = versioning.QueryParameterVersioning","title":"Configuring the versioning scheme"},{"location":"Versioning/#other-versioning-settings","text":"\ub2e4\uc74c \uc124\uc815 \ud0a4\ub294 versioning\ub97c \uc81c\uc5b4\ud558\ub294\ub370\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. DEFAULT_VERSION : \ubc84\uc804 \uc815\ubcf4\uac00 \uc5c6\ub294 \uacbd\uc6b0 request.version \uc5d0 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \uac12\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 None \uc785\ub2c8\ub2e4. ALLOWED_VERSIONS : \uc774 \uac12\uc744 \uc124\uc815\ud558\uba74 versioning scheme\uc5d0\uc11c \ubc18\ud658 \ud560 \uc218 \uc788\ub294 \ubc84\uc804 \uc9d1\ud569\uc774 \uc81c\ud55c\ub418\uba70 \uc81c\uacf5\ub41c \ubc84\uc804\uc774 \uc774 \uc9d1\ud569\uc5d0 \uc5c6\ub294 \uacbd\uc6b0 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. DEFAULT_VERSION \uc124\uc815\uc5d0 \uc0ac\uc6a9 \ub41c \uac12\uc740 \ud56d\uc0c1 ALLOWED_VERSIONS set\uc758 \uc77c\ubd80\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4 (\ub2e8, None \uc774 \uc544\ub2cc \uacbd\uc6b0). \uae30\ubcf8\uac12\uc740 None \uc785\ub2c8\ub2e4. VERSION_PARAM : \ubbf8\ub514\uc5b4 \uc720\ud615 \ub610\ub294 URL \ucffc\ub9ac parameter\uc640 \uac19\uc774 \ubaa8\ub4e0 \ubc84\uc804 \uc9c0\uc815 parameter\uc5d0 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 'version' \uc785\ub2c8\ub2e4. \ub610\ud55c \uace0\uc720\ud55c versioning scheme\ub97c \uc815\uc758\ud558\uace0 default_version , allowed_version \ubc0f version_param \ud074\ub798\uc2a4 \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubc84\uc804 \ubcc4 \ub610\ub294 \ubdf0 set \ubcc4\ub85c \uc138 \uac00\uc9c0 \uac12\uc744 \ub354\ud55c \ubc84\uc804 \ud074\ub798\uc2a4\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, URLPathVersioning \ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \ud558\uc2ed\uc2dc\uc624. from rest_framework.versioning import URLPathVersioning from rest_framework.views import APIView class ExampleVersioning(URLPathVersioning): default_version = ... allowed_versions = ... version_param = ... class ExampleView(APIVIew): versioning_class = ExampleVersioning","title":"Other versioning settings"},{"location":"Versioning/#api-reference","text":"","title":"API Reference"},{"location":"Versioning/#acceptheaderversioning","text":"\uc774 scheme\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 Accept \ud5e4\ub354\uc758 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc758 \uc77c\ubd80\ub85c \ubc84\uc804\uc744 \uc9c0\uc815\ud558\ub3c4\ub85d \uc694\uad6c\ud569\ub2c8\ub2e4. \uc774 \ubc84\uc804\uc740 \uae30\ubcf8 \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc744 \ubcf4\uc644\ud558\ub294 \ubbf8\ub514\uc5b4 \ud0c0\uc785 parameter\ub85c \ud3ec\ud568\ub429\ub2c8\ub2e4. \ub2e4\uc74c accept \ud5e4\ub354 versioning \uc2a4\ud0c0\uc77c\uc744 \uc0ac\uc6a9\ud558\ub294 HTTP request\uc758 \uc608\uc785\ub2c8\ub2e4. GET /bookings/ HTTP/1.1 Host: example.com Accept: application/json; version=1.0 \uc704\uc758 \uc608\uc81c request\uc5d0\uc11c request.version \uc18d\uc131\uc740 '1.0' \ubb38\uc790\uc5f4\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. Accept \ud5e4\ub354\uc5d0 \uae30\ubc18\ud55c versioning\ub294 \uc77c\ubc18\uc801 \uc73c\ub85c \ubaa8\ubc94 \uc0ac\ub840 \ub85c \uac04\uc8fc\ub418\uc9c0\ub9cc \ud074\ub77c\uc774\uc5b8\ud2b8 \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub530\ub77c \ub2e4\ub978 \uc2a4\ud0c0\uc77c\uc774 \uc801\ud569\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"AcceptHeaderVersioning"},{"location":"Versioning/#using-accept-headers-with-vendor-media-types","text":"\uc5c4\ubc00\ud788 \ub9d0\ud558\uc790\uba74 json \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc740 \ucd94\uac00 parameter \ub97c \ud3ec\ud568\ud558\ub294 \uac83\uc73c\ub85c \uc9c0\uc815\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc798 \uc815\uc758 \ub41c \uacf5\uac1c API\ub97c \uc791\uc131\ud558\ub294 \uacbd\uc6b0 vendor media type \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\ub824\uba74 custom \ubbf8\ub514\uc5b4 \ud0c0\uc785\uc73c\ub85c JSON \uae30\ubc18 \ub80c\ub354\ub7ec\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ub80c\ub354\ub7ec\ub97c \uad6c\uc131\ud558\uc138\uc694. class BookingsAPIRenderer(JSONRenderer): media_type = 'application/vnd.megacorp.bookings+json' \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 request\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. GET /bookings/ HTTP/1.1 Host: example.com Accept: application/vnd.megacorp.bookings+json; version=1.0","title":"Using accept headers with vendor media types"},{"location":"Versioning/#urlpathversioning","text":"\uc774 \uc2a4\ud0a4\ub9c8\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 URL \uacbd\ub85c\uc758 \uc77c\ubd80\ub85c \ubc84\uc804\uc744 \uc9c0\uc815\ud558\ub3c4\ub85d \uc694\uad6c\ud569\ub2c8\ub2e4. GET /v1/bookings/ HTTP/1.1 Host: example.com Accept: application/json URL conf\uc5d0\ub294 'version' \ud0a4\uc6cc\ub4dc \uc778\uc218\uac00 \uc788\ub294 \ubc84\uc804\uacfc \uc77c\uce58\ud558\ub294 \ud328\ud134\uc774 \ud3ec\ud568\ub418\uc5b4\uc57c\ud558\ubbc0\ub85c \uc774 \uc815\ubcf4\ub97c versioning scheme\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. urlpatterns = [ url( r'^(?P<version>(v1|v2))/bookings/$', bookings_list, name='bookings-list' ), url( r'^(?P<version>(v1|v2))/bookings/(?P<pk>[0-9]+)/$', bookings_detail, name='bookings-detail' ) ]","title":"URLPathVersioning"},{"location":"Versioning/#namespaceversioning","text":"\ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc774 scheme\ub294 URLPathVersioning \uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4. \uc720\uc77c\ud55c \ucc28\uc774\uc810\uc740 URL \ud0a4\uc6cc\ub4dc \uc778\uc218 \ub300\uc2e0 URL \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\ubbc0\ub85c Django \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \uc5b4\ub5bb\uac8c \uad6c\uc131\ub418\uc5b4 \uc788\ub294\uc9c0\uc785\ub2c8\ub2e4. GET /v1/something/ HTTP/1.1 Host: example.com Accept: application/json \uc774 scheme\uc5d0\uc11c request.version \uc18d\uc131\uc740 \ud2c0\uc5b4\uc624\ub294 request \uacbd\ub85c\uc640 \uc77c\uce58\ud558\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uae30\ubc18\uc73c\ub85c \uacb0\uc815\ub429\ub2c8\ub2e4. \ub2e4\uc74c \uc608\uc81c\uc5d0\uc11c\ub294 \uc11c\ub85c \ub2e4\ub978 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4 \uc544\ub798\uc5d0 \uac01\uac01 \ub2e4\ub978 \ub450\uac00\uc9c0 URL \uc811\ub450\uc5b4\uac00 \uc788\ub294 \uc77c\ub828\uc758 view\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. # bookings/urls.py urlpatterns = [ url(r'^$', bookings_list, name='bookings-list'), url(r'^(?P<pk>[0-9]+)/$', bookings_detail, name='bookings-detail') ] # urls.py urlpatterns = [ url(r'^v1/bookings/', include('bookings.urls', namespace='v1')), url(r'^v2/bookings/', include('bookings.urls', namespace='v2')) ] \uac04\ub2e8\ud55c versioning scheme\uac00 \ud544\uc694\ud558\ub2e4\uba74 URLPathVersioning \uacfc NamespaceVersioning \ubaa8\ub450 \ud569\ub9ac\uc801\uc785\ub2c8\ub2e4.","title":"NamespaceVersioning"},{"location":"Versioning/#hostnameversioning","text":"hostname versioning scheme\uc5d0\uc11c\ub294 \ud074\ub77c\uc774\uc5b4\ud2bc\uac00 \uc694\uccad\ub41c \ubc84\uc804\uc744 URL\uc758 hostname\uc758 \uc77c\ubd80\ub85c \uc9c0\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub2e4\uc74c\uc740 http://v1.example.com/bookings/ URL\uc5d0 \ub300\ud55c HTTP \uc694\uccad\uc785\ub2c8\ub2e4. GET /bookings/ HTTP/1.1 Host: v1.example.com Accept: application/json \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uad6c\ud604\uc740 hostname\uc774 \ub2e4\uc74c\uacfc \uac19\uc740 \uac04\ub2e8\ud55c \uc815\uaddc\uc2dd\uacfc \uc77c\uce58 \ud560 \uac83\uc73c\ub85c \uae30\ub300\ud569\ub2c8\ub2e4. ^([a-zA-Z0-9]+)\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$ \uccab \ubc88\uc9f8 \uadf8\ub8f9\uc740 \ub300\uad04\ud638\ub85c \ubb36\uc5ec \uc788\uc73c\uba70 hostname\uc758 \uc77c\uce58\ud558\ub294 \ubd80\ubd84\uc784\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c 127.0.0.1 \uacfc \uac19\uc740 \uae30\uc874 IP\uc8fc\uc18c\uc5d0 \uc561\uc11c\uc2a4\ud558\ubbc0\ub85c HostNameVersioning scheme\ub294 \ub514\ubc84\uadf8 \ubaa8\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30\uac00 \uc5b4\ub824\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\ub294 custom subdomain \uc73c\ub85c localhost\uc5d0 \uc561\uc11c\uc2a4 \ud558\ub294 \ub2e4\uc591\ud55c \uc628\ub77c\uc778 \uc11c\ube44\uc2a4\uac00 \uc788\uc2b5\ub2c8\ub2e4. hostname versioning scheme\ub294 \uc5ec\ub7ec API \ubc84\uc804\uc5d0 \ub300\ud574 \uc11c\ub85c \ub2e4\ub978 DNS \ub808\ucf54\ub4dc\ub97c \uad6c\uc131\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \ub4e4\uc5b4\uc624\ub294 request\ub97c \ubc84\uc804\uc5d0 \ub530\ub77c \ub2e4\ub978 \uc11c\ubc84\ub85c \ub77c\uc6b0\ud305\ud574\uc57c\ud558\ub294 \uacbd\uc6b0\uc5d0 \ud2b9\ud788 \uc720\uc6a9\ud569\ub2c8\ub2e4.","title":"HostNameVersioning"},{"location":"Versioning/#queryparameterversioning","text":"\uc774 \uc2a4\ud0a4\ub9c8\ub294 URL\uc5d0 \ucffc\ub9ac parameter\ub85c \ubc84\uc804\uc744 \ud3ec\ud568\ud558\ub294 \uac04\ub2e8\ud55c \uc2a4\ud0c0\uc77c\uc785\ub2c8\ub2e4. \uc608: GET /something/?version=0.1 HTTP/1.1 Host: example.com Accept: application/json","title":"QueryParameterVersioning"},{"location":"Versioning/#custom-versioning-schemes","text":"custom versioning scheme\ub97c \uad6c\ud604\ud558\ub824\uba74 BaseVersioning \ub97c \uc11c\ube0c \ud074\ub798\uc2a4\ud654\ud558\uace0 .determine_version \uba54\uc11c\ub4dc\ub97c \ub300\uccb4\ud558\uc138\uc694.","title":"Custom versioning schemes"},{"location":"Versioning/#example","text":"\ub2e4\uc74c \uc608\uc5d0\uc11c\ub294 custom X-API-Version \ud5e4\uac70\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc694\uccad\ud55c \ubc84\uc804\uc744 \ud655\uc778\ud569\ub2c8\ub2e4. class XAPIVersionScheme(versioning.BaseVersioning): def determine_version(self, request, *args, **kwargs): return request.META.get('HTTP_X_API_VERSION', None) versioning scheme\uac00 request URL\uc744 \uae30\ubc18\uc73c\ub85c \ud558\ub294 \uacbd\uc6b0 \ubc84\uc804\uc774 \uc9c0\uc815\ub41c URL\uc758 \uacb0\uc815 \ubc29\ubc95\ub3c4 \ubcc0\uacbd\ud574\uc57c\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\ub824\uba74 \ud074\ub798\uc2a4\uc758 .reverse() \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud574\uc57c\ud569\ub2c8\ub2e4. \uc608\uc81c\ub294 \uc18c\uc2a4\ucf54\ub4dc\ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"Example"},{"location":"ViewSets/","text":"Django REST Framework - ViewSets \"After routing has determined which controller to use for a request, your controller is responsible for making sense of the request and producing the appropriate output.\" \"\ub77c\uc6b0\ud305\uc5d0\uc11c request\uc5d0 \uc0ac\uc6a9\ud560 \ucee8\ud2b8\ub864\ub7ec\ub97c \uacb0\uc815\ud55c \ud6c4\uc5d0 \ucee8\ud2b8\ub864\ub7ec\ub294 request\ub97c \uc774\ud574\ud558\uace0 \uc801\uc808\ud55c \ucd9c\ub825\uc744 \uc0dd\uc131\ud574\uc57c\ud569\ub2c8\ub2e4.\" \u2014 Ruby on Rails Documentation ViewSets Django REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud558\uba74 ViewSet \uc774\ub77c\uace0\ud558\ub294 \ub2e8\uc77c \ud074\ub798\uc2a4\uc5d0\uc11c ViewSet \uc5d0 \ub300\ud55c \ub17c\ub9ac\ub97c \uacb0\ud569\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\ub978 \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c\ub294 Resources \ub098 Controllers \uc640 \uac19\uc740 \uac1c\ub150\uc801\uc73c\ub85c \uc720\uc0ac\ud55c \uad6c\ud604\uc744 \ucc3e\uc744 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. ViewSet \ud074\ub798\uc2a4\ub294 \ub2e8\uc21c\ud788 .get() \uc774\ub098 .post() \uacfc \uac19\uc740 \uba54\uc18c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud558\uc9c0 \uc54a\uace0 CBV \uc720\ud615\uc774\uba70, \ub300\uc2e0 .list() \uc640 .create() \uc640 \uac19\uc740 \uc561\uc158\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. ViewSet \uc758 \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub294 .as_view() \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubdf0\ub97c \ub9c8\ubb34\ub9ac\ud558\ub294 \uc2dc\uc810\uc758 \ud574\ub2f9 \uc561\uc158\uc5d0\ub9cc \ubc14\uc778\ub529\ub429\ub2c8\ub2e4. \ubc14\uc778\ub529 : \uac01\uc885 \uac12\ub4e4\uc774 \ud655\uc815\ub418\uc5b4 \ub354\uc774\uc0c1 \ubcc0\uacbd \ud560 \uc218 \uc5c6\ub294 \uc0c1\ud0dc\uac00 \ub418\ub294\uac83. \uc2dd\ubcc4\uc790(identifier)\uac00 \uadf8 \ub300\uc0c1\uc778 \uba54\ubaa8\ub9ac \uc8fc\uc18c, \ub370\uc774\ud130\ud615 \ub610\ub294 \uc2e4\uc81c\uac12\uc73c\ub85c \ubc30\uc815\ub418\ub294 \uac83 \uc77c\ubc18\uc801\uc73c\ub85c urlconf\uc758 viewset\uc5d0 \ubdf0\ub97c \uba85\uc2dc\uc801\uc744 \ub4f1\ub85d\ud558\ub294 \ub300\uc2e0 viewset\uc744 router \ud074\ub798\uc2a4\ub85c \ub4f1\ub85d\ud558\uba74 \uc790\ub3d9\uc73c\ub85c urlconf\uac00 \uacb0\uc815\ub429\ub2c8\ub2e4. Example \uc2dc\uc2a4\ud15c\uc758 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790\ub97c \ub098\uc5f4\ud558\uac70\ub098 \uac80\uc0c9\ud558\ub294\ub370 \uc0ac\uc6a9 \ud560 \uc218 \uc788\ub294 \uac04\ub2e8\ud55c viewset\uc744 \uc815\uc758\ud569\uc2dc\ub2e4. from django.contrib.auth.models import User from django.shortcuts import get_object_or_404 from myapps.serializers import UserSerializer from rest_framework import viewsets from rest_framework.response import Response class UserViewSet(viewsets.ViewSet): \"\"\" A simple ViewSet for listing or retrieving users. \"\"\" def list(self, request): queryset = User.objects.all() serializer = UserSerializer(queryset, many=True) return Response(serializer.data) def retrieve(self, request, pk=None): queryset = User.objects.all() user = get_object_or_404(queryset, pk=pk) serializer = UserSerializer(user) return Response(serializer.data) \ud544\uc694\ud55c \uacbd\uc6b0 \uc774 viewset\uc744 \ub2e4\uc74c\uacfc \uac19\uc774 \ub450 \uac1c\uc758 \uac1c\ubcc4 \ubdf0 \ubc14\uc778\ub529 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. user_list = UserViewSet.as_view({'get': 'list'}) user_detail = UserViewSet.as_view({'get': 'retrieve'}) \ud3c9\uc18c\uc5d4 \uc6b0\ub9ac\ub294 \uc774\uac83\uc744 \ud558\uc9c0 \uc54a\uc744 \uac83\uc774\uc9c0\ub9cc, \ub300\uc2e0 viewset\uc744 \ub77c\uc6b0\ud130\uc5d0 \ub4f1\ub85d\ud558\uace0 urlconf\uac00 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub418\ub3c4\ub85d \ud560 \uac83\uc785\ub2c8\ub2e4. from myapp.views import UserViewSet from rest_framework.routers import DefaultRouter router = DefaultRouter() router.register(r'users', UserViewSet) urlpatterns = router.urls \uc790\uc2e0\ub9cc\uc758 viewset\ub97c \uc791\uc131\ud558\ub294 \ub300\uc2e0, \uae30\ubcf8 \ub3d9\uc791 set\uc744 \uc81c\uacf5\ud558\ub294 \uae30\uc874 \uae30\ubcf8 \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class UserViewSet(viewsets.ModelViewSet): \"\"\" A viewset for viewing and editing user instances. \"\"\" serializer_class = UserSerializer queryset = User.objects.all() View \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\ubcf4\ub2e4 ViewSet \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \ub450 \uac00\uc9c0 \uc8fc\uc694 \uc774\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ubc18\ubcf5 \ub17c\ub9ac\ub97c \ud558\ub098\uc758 \ud074\ub798\uc2a4\ub85c \uacb0\ud569 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc758 \uc608\uc5d0\uc11c \ucffc\ub9ac\uc14b\uc740 \ud55c\ubc88\ub9cc \uc9c0\uc815\ud558\uba74 \uc5ec\ub7ec view\uc5d0\uc11c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. router\ub97c \uc0ac\uc6a9\ud568\uc73c\ub85c\uc368 \uc6b0\ub9ac\ub294 \ub354 \uc774\uc0c1 URLconf\uc758 \uc5f0\uacb0\uc744 \ucc98\ub9ac \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \ub450\uac00\uc9c0 \ubaa8\ub450 \uc7a5\ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18 views\uc640 URL conf\ub97c \uc0ac\uc6a9\ud558\uba74 \ubcf4\ub2e4 \uba85\ud655\ud558\uac8c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ViewSet \ub294 \uc2e0\uc18d\ud558\uac8c \uc2dc\uc791\ud558\uace0 \uc2e4\ud589\ud558\ub824\ub294 \uacbd\uc6b0, \ub610\ub294 \ub300\uaddc\ubaa8 API\uac00 \uc788\uace0 \uc804\uccb4\uc801\uc73c\ub85c \uc77c\uad00\ub41c URL conf\ub97c \uc801\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0 \uc720\uc6a9\ud569\ub2c8\ub2e4. Marking extra actions for routing REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ud3ec\ud568 \ub41c \uae30\ubcf8 router\ub294 \uc544\ub798\uc640 \uac19\uc774 creste / retirieve / update / destroy \uc2a4\ud0c0\uc77c \uc791\uc5c5\uc758 \uae30\ubcf8 set\uc744 \uc704\ud55c \uacbd\ub85c\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. class UserViewSet(viewsets.ViewSet): \"\"\" Example empty viewset demonstrating the standard actions that will be handled by a router class. If you're using format suffixes, make sure to also include the `format=None` keyword argument for each action. \"\"\" def list(self, request): pass def create(self, request): pass def retrieve(self, request, pk=None): pass def update(self, request, pk=None): pass def partial_update(self, request, pk=None): pass def destroy(self, request, pk=None): pass \ub77c\uc6b0\ud305\ud574\uc57c \ud558\ub294 \uc784\uc2dc \uba54\uc18c\ub4dc\uac00 \uc788\ub294 \uacbd\uc6b0 @detail_router \ub098 @list_router \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub77c\uc6b0\ud305\uc744 \uc694\uad6c\ud558\ub294 \uac83\uc73c\ub85c \ud45c\uc2dc \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. @detail_router \ub370\ucf54\ub808\uc774\ud130\ub294 URL \ud328\ud134\uc5d0 pk \ub97c \ud3ec\ud568\ud558\uba70 \ub2e8\uc77c \uc778\uc2a4\ud134\uc2a4\uac00 \ud544\uc694\ud55c \uba54\uc18c\ub4dc\uc6a9\uc785\ub2c8\ub2e4. @list_router \ub370\ucf54\ub808\uc774\ud130\ub294 \uac1d\uccb4 \ubaa9\ub85d\uc5d0\uc11c \uc791\ub3d9\ud558\ub294 \uba54\uc18c\ub4dc\ub97c \ub300\uc0c1\uc73c\ub85c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: from django.contrib.auth.models import User from rest_framework import status from rest_framework import viewsets from rest_framework.decorators import detail_route, list_route from rest_framework.response import Response from myapp.serializers import UserSerializer, PasswordSerializer class UserViewSet(viewsets.ModelViewSet): \"\"\" A viewset that provides the standard actions \"\"\" queryset = User.objects.all() serializer_class = UserSerializer @detail_route(methods=['post']) def set_password(self, request, pk=None): user = self.get_object() serializer = PasswordSerializer(data=request.data) if serializer.is_valid(): user.set_password(serializer.data['password']) user.save() return Response({'status': 'password set'}) else: return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST) @list_route() def recent_users(self, request): recent_users = User.objects.all().order('-last_login') page = self.paginate_queryset(recent_users) if page is not None: serializer = self.get_serializer(page, many=True) return self.get_paginated_response(serializer.data) serializer = self.get_serializer(recent_users, many=True) return Response(serializer.data) \ub370\ucf54\ub808\uc774\ud130\ub294 \ub77c\uc6b0\ud2b8 \ub41c \ubdf0\uc5d0 \ub300\ud574\uc11c\ub9cc \uc124\uc815 \ud560 \ucd94\uac00 \uc778\uc218\ub97c \ucd94\uac00\ub85c \ucde8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4.. @detail_route(methods=['post'], permission_classes=[IsAdminOrIsSelf]) def set_password(self, request, pk=None): ... \uc774\ub7ec\ud55c \ub370\ucf54\ub808\uc774\ud130\ub294 \uae30\ubcf8\uc801\uc73c\ub85c GET request\ub97c \ub77c\uc6b0\ud2b8\ud558\uc9c0\ub9cc methods \uc778\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub2e4\ub978 HTTP \uba54\uc18c\ub4dc\ub97c \ucc44\ud0dd\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc608: @detail_route(methods=['post', 'delete']) def unset_password(self, request, pk=None): ... \ub450 \uac1c\uc758 \uc791\uc5c5\uc740 ^users/{pk}/set_password/$ \uacfc ^users/{pk}/unset_password/$ \uc5d0\uc11c \uc0ac\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. API Reference ViewSet ViewSet \ud074\ub798\uc2a4\ub294 APIView \uc5d0\uc11c \uc0c1\uc18d\ubc1b\uc2b5\ub2c8\ub2e4. viewset\uc5d0 \ub300\ud55c API \uc815\ucc45\uc744 \uc81c\uc5b4\ud558\uae30 \uc704\ud574 permission_classes , authentication_classes \uc640 \uac19\uc740 \ud45c\uc900 \uc18d\uc131\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ViewSet \ud074\ub798\uc2a4\ub294 \uc561\uc158\uc758 \uad6c\ud604\uc744 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. ViewSet \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \ud074\ub798\uc2a4\ub97c \uc624\ubc84\ub77c\uc774\ud2b8\ud558\uace0 \uc561\uc158 \uad6c\ud604\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ud574\uc57c\ud569\ub2c8\ub2e4. GenericViewSet GenericViewSet \ud074\ub798\uc2a4\ub294 GenericAPIView \uc5d0\uc11c \uc0c1\uc18d\ub418\uba70, get_object , get_queryset \uba54\uc18c\ub4dc\uc640 \uadf8 \uc678 generic view \uc758 \uae30\ubcf8 \ub3d9\uc791\uc758 \uae30\ubcf8 set\uc744 \uc81c\uacf5\ud558\uc9c0\ub9cc, \uae30\ubcf8\uc801\uc73c\ub85c \uc5b4\ub5a4 \uc561\uc158\ub3c4 \ud3ec\ud568\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. GenericViewSet \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \ud074\ub798\uc2a4\ub97c \uc7ac\uc815\uc758\ud558\uace0 \ud544\uc694\ud55c mixin \ud074\ub798\uc2a4\ub97c \ud63c\ud569\ud558\uac70\ub098 \uc561\uc158 \uad6c\ud604\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ud558\uc138\uc694. ModelViewSet ModelViewSet \ud074\ub798\uc2a4\ub294 GenericAPIView \ub97c \uc0c1\uc18d\ud558\uba70, \ub2e4\uc591\ud55c mixin \ud074\ub798\uc2a4\uc758 \ub3d9\uc791\uc744 \ud63c\ud569\ud558\uc5ec \ub2e4\uc591\ud55c \uc561\uc158\uc5d0 \ub300\ud55c \uad6c\ud604\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. ModelViewSet \ud074\ub798\uc2a4\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc791\uc5c5\uc740 .list() , .retrieve() , .create() , .update() , .partial_update() , .destroy() \uc785\ub2c8\ub2e4. Example ModelViewSet \uc740 GenericAPIView \ub97c \ud655\uc7a5\ud558\uae30 \ub54c\ubb38\uc5d0 \uc77c\ubc18\uc801\uc73c\ub85c \uc801\uc5b4\ub3c4 queryset \uacfc serializer_class \uc18d\uc131\uc744 \uc81c\uacf5\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608: class AccountViewSet(viewsets.ModelViewSet): \"\"\" A simple ViewSet for viewing and editing accounts. \"\"\" queryset = Account.objects.all() serializer_class = AccountSerializer permission_classes = [IsAccountAdminOrReadOnly] GenericAPIView \uac00 \uc81c\uacf5\ud558\ub294 \ud45c\uc900 \uc18d\uc131\uc774\ub098 \uba54\uc18c\ub4dc \uc624\ubc84\ub77c\uc774\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc791\ub3d9\ud574\uc57c\ud558\ub294 \ucffc\ub9ac\uc14b\uc744 \ub3d9\uc801\uc73c\ub85c \uacb0\uc815\ud558\ub294 viewset\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class AccountViewSet(viewsets.ModelViewSet): \"\"\" A simple ViewSet for viewing and editing the accounts associated with the user. \"\"\" serializer_class = AccountSerializer permission_classes = [IsAccountAdminOrReadOnly] def get_queryset(self): return self.request.user.accounts.all() \uadf8\ub7ec\ub098 ViewSet \uc5d0\uc11c queryset \uc18d\uc131\uc744 \uc81c\uac70\ud558\uba74 \uc5f0\uad00\ub41c \ub77c\uc6b0\ud130 \uac00 \ubaa8\ub378\uc758 base_name \uc744 \uc790\ub3d9\uc73c\ub85c \ud30c\uc0dd\uc2dc\ud0ac \uc218 \uc5c6\uc73c\ubbc0\ub85c \ub77c\uc6b0\ud130 \ub4f1\ub85d \uc758 \uc77c\ubd80\ub85c base_name kwarg \ub97c \uc9c0\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. \ub610\ud55c \uc774 \ud074\ub798\uc2a4\ub294 \uae30\ubcf8\uc801\uc73c\ub85c create / list / retrieve / update / destroy \uc561\uc158\uc758 \uc804\uccb4 set\uc744 \uc81c\uacf5\ud558\uc9c0\ub9cc \ud45c\uc900 \uad8c\ud55c \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc791\uc5c5\uc744 \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ReadOnlyModelViewSet ReadOnlyModelViewSet \ud074\ub798\uc2a4 \ub610\ud55c GenericAPIView \uc5d0\uc11c \uc0c1\uc18d\ubc1b\uc2b5\ub2c8\ub2e4. ModelViewSet \uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c \ub2e4\uc591\ud55c \uc561\uc158\uc5d0 \ub300\ud55c \uad6c\ud604\ub3c4 \ud3ec\ud568\ub418\uc9c0\ub9cc ModelViewSet \uacfc \ub2ec\ub9ac \uc77c\uae30 \uc804\uc6a9 \ub3d9\uc791\uc778 .list() , .retrieve() \ub9cc \uc81c\uacf5\ub429\ub2c8\ub2e4. Example ModelViewSet \uc5d0\uc11c\uc640 \uac19\uc774 \uc77c\ubc18\uc801\uc73c\ub85c \uc801\uc5b4\ub3c4 queryset \uacfc serializer_class \uc18d\uc131\uc744 \uc81c\uacf5\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608: class AccountViewSet(viewsets.ReadOnlyModelViewSet): \"\"\" A simple ViewSet for viewing accounts. \"\"\" queryset = Account.objects.all() serializer_class = AccountSerializer ModelViewSet \uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c GenericAPIView \uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ud45c\uc900 \uc18d\uc131\uacfc \uba54\uc18c\ub4dc \uc624\ubc84\ub77c\uc774\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Custom ViewSet base classes ModelViewSet \uc561\uc158\uc758 \uc804\uccb4 set\uc774 \uc5c6\uac70\ub098 \ub2e4\ub978 \ubc29\uc2dd\uc73c\ub85c \ub3d9\uc791\uc744 \uc0ac\uc6a9\uc790 \uc815\uc758\ud558\ub294 custom ViewSet \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Example create , list , retrieve \uc870\uc791\uc744 \uc81c\uacf5\ud558\uace0, GenericViewSet \uc5d0\uc11c \uc0c1\uc18d\ud558\uba70, \ud544\uc694\ud55c \uc870\uce58\ub97c mixin \ud558\ub294 \uae30\ubcf8 viewset\ub97c \uc791\uc131\ud558\ub824\uba74 \ub2e4\uc74c\uc744 \uc791\uc131\ud558\uc138\uc694. class CreateListRetrieveViewSet(mixins.CreateModelMixin, mixins.ListModelMixin, mixins.RetrieveModelMixin, viewsets.GenericViewSet): \"\"\" `retrieve`, `create`, `list` actions\uc744 \uc81c\uacf5\ud558\ub294 viewset\uc785\ub2c8\ub2e4. \uc774\uac83\ub4e4\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 \ud074\ub798\uc2a4\uc640 `.queryset`\uacfc `.serializer_class`\uc758 \uc18d\uc131\uc744 \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc138\uc694. \"\"\" pass \uace0\uc720\ud55c \uae30\ubcf8 ViewSet \ud074\ub798\uc2a4\ub97c \uc791\uc131\ud558\uc5ec API \uc804\ubc18\uc5d0 \uac78\uccd0 \uc5ec\ub7ec viewset\uc5d0\uc11c \uc7ac\uc0ac\uc6a9 \ud560 \uc218 \uc788\ub294 \uacf5\ud1b5\uc801\uc778 \ub3d9\uc791\uc744 \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Viewsets"},{"location":"ViewSets/#django-rest-framework-viewsets","text":"\"After routing has determined which controller to use for a request, your controller is responsible for making sense of the request and producing the appropriate output.\" \"\ub77c\uc6b0\ud305\uc5d0\uc11c request\uc5d0 \uc0ac\uc6a9\ud560 \ucee8\ud2b8\ub864\ub7ec\ub97c \uacb0\uc815\ud55c \ud6c4\uc5d0 \ucee8\ud2b8\ub864\ub7ec\ub294 request\ub97c \uc774\ud574\ud558\uace0 \uc801\uc808\ud55c \ucd9c\ub825\uc744 \uc0dd\uc131\ud574\uc57c\ud569\ub2c8\ub2e4.\" \u2014 Ruby on Rails Documentation","title":"Django REST Framework - ViewSets"},{"location":"ViewSets/#viewsets","text":"Django REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud558\uba74 ViewSet \uc774\ub77c\uace0\ud558\ub294 \ub2e8\uc77c \ud074\ub798\uc2a4\uc5d0\uc11c ViewSet \uc5d0 \ub300\ud55c \ub17c\ub9ac\ub97c \uacb0\ud569\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\ub978 \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c\ub294 Resources \ub098 Controllers \uc640 \uac19\uc740 \uac1c\ub150\uc801\uc73c\ub85c \uc720\uc0ac\ud55c \uad6c\ud604\uc744 \ucc3e\uc744 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. ViewSet \ud074\ub798\uc2a4\ub294 \ub2e8\uc21c\ud788 .get() \uc774\ub098 .post() \uacfc \uac19\uc740 \uba54\uc18c\ub4dc \ud578\ub4e4\ub7ec\ub97c \uc81c\uacf5\ud558\uc9c0 \uc54a\uace0 CBV \uc720\ud615\uc774\uba70, \ub300\uc2e0 .list() \uc640 .create() \uc640 \uac19\uc740 \uc561\uc158\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. ViewSet \uc758 \uba54\uc11c\ub4dc \ud578\ub4e4\ub7ec\ub294 .as_view() \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubdf0\ub97c \ub9c8\ubb34\ub9ac\ud558\ub294 \uc2dc\uc810\uc758 \ud574\ub2f9 \uc561\uc158\uc5d0\ub9cc \ubc14\uc778\ub529\ub429\ub2c8\ub2e4. \ubc14\uc778\ub529 : \uac01\uc885 \uac12\ub4e4\uc774 \ud655\uc815\ub418\uc5b4 \ub354\uc774\uc0c1 \ubcc0\uacbd \ud560 \uc218 \uc5c6\ub294 \uc0c1\ud0dc\uac00 \ub418\ub294\uac83. \uc2dd\ubcc4\uc790(identifier)\uac00 \uadf8 \ub300\uc0c1\uc778 \uba54\ubaa8\ub9ac \uc8fc\uc18c, \ub370\uc774\ud130\ud615 \ub610\ub294 \uc2e4\uc81c\uac12\uc73c\ub85c \ubc30\uc815\ub418\ub294 \uac83 \uc77c\ubc18\uc801\uc73c\ub85c urlconf\uc758 viewset\uc5d0 \ubdf0\ub97c \uba85\uc2dc\uc801\uc744 \ub4f1\ub85d\ud558\ub294 \ub300\uc2e0 viewset\uc744 router \ud074\ub798\uc2a4\ub85c \ub4f1\ub85d\ud558\uba74 \uc790\ub3d9\uc73c\ub85c urlconf\uac00 \uacb0\uc815\ub429\ub2c8\ub2e4.","title":"ViewSets"},{"location":"ViewSets/#example","text":"\uc2dc\uc2a4\ud15c\uc758 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790\ub97c \ub098\uc5f4\ud558\uac70\ub098 \uac80\uc0c9\ud558\ub294\ub370 \uc0ac\uc6a9 \ud560 \uc218 \uc788\ub294 \uac04\ub2e8\ud55c viewset\uc744 \uc815\uc758\ud569\uc2dc\ub2e4. from django.contrib.auth.models import User from django.shortcuts import get_object_or_404 from myapps.serializers import UserSerializer from rest_framework import viewsets from rest_framework.response import Response class UserViewSet(viewsets.ViewSet): \"\"\" A simple ViewSet for listing or retrieving users. \"\"\" def list(self, request): queryset = User.objects.all() serializer = UserSerializer(queryset, many=True) return Response(serializer.data) def retrieve(self, request, pk=None): queryset = User.objects.all() user = get_object_or_404(queryset, pk=pk) serializer = UserSerializer(user) return Response(serializer.data) \ud544\uc694\ud55c \uacbd\uc6b0 \uc774 viewset\uc744 \ub2e4\uc74c\uacfc \uac19\uc774 \ub450 \uac1c\uc758 \uac1c\ubcc4 \ubdf0 \ubc14\uc778\ub529 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. user_list = UserViewSet.as_view({'get': 'list'}) user_detail = UserViewSet.as_view({'get': 'retrieve'}) \ud3c9\uc18c\uc5d4 \uc6b0\ub9ac\ub294 \uc774\uac83\uc744 \ud558\uc9c0 \uc54a\uc744 \uac83\uc774\uc9c0\ub9cc, \ub300\uc2e0 viewset\uc744 \ub77c\uc6b0\ud130\uc5d0 \ub4f1\ub85d\ud558\uace0 urlconf\uac00 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub418\ub3c4\ub85d \ud560 \uac83\uc785\ub2c8\ub2e4. from myapp.views import UserViewSet from rest_framework.routers import DefaultRouter router = DefaultRouter() router.register(r'users', UserViewSet) urlpatterns = router.urls \uc790\uc2e0\ub9cc\uc758 viewset\ub97c \uc791\uc131\ud558\ub294 \ub300\uc2e0, \uae30\ubcf8 \ub3d9\uc791 set\uc744 \uc81c\uacf5\ud558\ub294 \uae30\uc874 \uae30\ubcf8 \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: class UserViewSet(viewsets.ModelViewSet): \"\"\" A viewset for viewing and editing user instances. \"\"\" serializer_class = UserSerializer queryset = User.objects.all() View \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\ubcf4\ub2e4 ViewSet \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \ub450 \uac00\uc9c0 \uc8fc\uc694 \uc774\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ubc18\ubcf5 \ub17c\ub9ac\ub97c \ud558\ub098\uc758 \ud074\ub798\uc2a4\ub85c \uacb0\ud569 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc758 \uc608\uc5d0\uc11c \ucffc\ub9ac\uc14b\uc740 \ud55c\ubc88\ub9cc \uc9c0\uc815\ud558\uba74 \uc5ec\ub7ec view\uc5d0\uc11c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. router\ub97c \uc0ac\uc6a9\ud568\uc73c\ub85c\uc368 \uc6b0\ub9ac\ub294 \ub354 \uc774\uc0c1 URLconf\uc758 \uc5f0\uacb0\uc744 \ucc98\ub9ac \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \ub450\uac00\uc9c0 \ubaa8\ub450 \uc7a5\ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18 views\uc640 URL conf\ub97c \uc0ac\uc6a9\ud558\uba74 \ubcf4\ub2e4 \uba85\ud655\ud558\uac8c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ViewSet \ub294 \uc2e0\uc18d\ud558\uac8c \uc2dc\uc791\ud558\uace0 \uc2e4\ud589\ud558\ub824\ub294 \uacbd\uc6b0, \ub610\ub294 \ub300\uaddc\ubaa8 API\uac00 \uc788\uace0 \uc804\uccb4\uc801\uc73c\ub85c \uc77c\uad00\ub41c URL conf\ub97c \uc801\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0 \uc720\uc6a9\ud569\ub2c8\ub2e4.","title":"Example"},{"location":"ViewSets/#marking-extra-actions-for-routing","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ud3ec\ud568 \ub41c \uae30\ubcf8 router\ub294 \uc544\ub798\uc640 \uac19\uc774 creste / retirieve / update / destroy \uc2a4\ud0c0\uc77c \uc791\uc5c5\uc758 \uae30\ubcf8 set\uc744 \uc704\ud55c \uacbd\ub85c\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. class UserViewSet(viewsets.ViewSet): \"\"\" Example empty viewset demonstrating the standard actions that will be handled by a router class. If you're using format suffixes, make sure to also include the `format=None` keyword argument for each action. \"\"\" def list(self, request): pass def create(self, request): pass def retrieve(self, request, pk=None): pass def update(self, request, pk=None): pass def partial_update(self, request, pk=None): pass def destroy(self, request, pk=None): pass \ub77c\uc6b0\ud305\ud574\uc57c \ud558\ub294 \uc784\uc2dc \uba54\uc18c\ub4dc\uac00 \uc788\ub294 \uacbd\uc6b0 @detail_router \ub098 @list_router \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub77c\uc6b0\ud305\uc744 \uc694\uad6c\ud558\ub294 \uac83\uc73c\ub85c \ud45c\uc2dc \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. @detail_router \ub370\ucf54\ub808\uc774\ud130\ub294 URL \ud328\ud134\uc5d0 pk \ub97c \ud3ec\ud568\ud558\uba70 \ub2e8\uc77c \uc778\uc2a4\ud134\uc2a4\uac00 \ud544\uc694\ud55c \uba54\uc18c\ub4dc\uc6a9\uc785\ub2c8\ub2e4. @list_router \ub370\ucf54\ub808\uc774\ud130\ub294 \uac1d\uccb4 \ubaa9\ub85d\uc5d0\uc11c \uc791\ub3d9\ud558\ub294 \uba54\uc18c\ub4dc\ub97c \ub300\uc0c1\uc73c\ub85c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: from django.contrib.auth.models import User from rest_framework import status from rest_framework import viewsets from rest_framework.decorators import detail_route, list_route from rest_framework.response import Response from myapp.serializers import UserSerializer, PasswordSerializer class UserViewSet(viewsets.ModelViewSet): \"\"\" A viewset that provides the standard actions \"\"\" queryset = User.objects.all() serializer_class = UserSerializer @detail_route(methods=['post']) def set_password(self, request, pk=None): user = self.get_object() serializer = PasswordSerializer(data=request.data) if serializer.is_valid(): user.set_password(serializer.data['password']) user.save() return Response({'status': 'password set'}) else: return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST) @list_route() def recent_users(self, request): recent_users = User.objects.all().order('-last_login') page = self.paginate_queryset(recent_users) if page is not None: serializer = self.get_serializer(page, many=True) return self.get_paginated_response(serializer.data) serializer = self.get_serializer(recent_users, many=True) return Response(serializer.data) \ub370\ucf54\ub808\uc774\ud130\ub294 \ub77c\uc6b0\ud2b8 \ub41c \ubdf0\uc5d0 \ub300\ud574\uc11c\ub9cc \uc124\uc815 \ud560 \ucd94\uac00 \uc778\uc218\ub97c \ucd94\uac00\ub85c \ucde8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4.. @detail_route(methods=['post'], permission_classes=[IsAdminOrIsSelf]) def set_password(self, request, pk=None): ... \uc774\ub7ec\ud55c \ub370\ucf54\ub808\uc774\ud130\ub294 \uae30\ubcf8\uc801\uc73c\ub85c GET request\ub97c \ub77c\uc6b0\ud2b8\ud558\uc9c0\ub9cc methods \uc778\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub2e4\ub978 HTTP \uba54\uc18c\ub4dc\ub97c \ucc44\ud0dd\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc608: @detail_route(methods=['post', 'delete']) def unset_password(self, request, pk=None): ... \ub450 \uac1c\uc758 \uc791\uc5c5\uc740 ^users/{pk}/set_password/$ \uacfc ^users/{pk}/unset_password/$ \uc5d0\uc11c \uc0ac\uc6a9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Marking extra actions for routing"},{"location":"ViewSets/#api-reference","text":"","title":"API Reference"},{"location":"ViewSets/#viewset","text":"ViewSet \ud074\ub798\uc2a4\ub294 APIView \uc5d0\uc11c \uc0c1\uc18d\ubc1b\uc2b5\ub2c8\ub2e4. viewset\uc5d0 \ub300\ud55c API \uc815\ucc45\uc744 \uc81c\uc5b4\ud558\uae30 \uc704\ud574 permission_classes , authentication_classes \uc640 \uac19\uc740 \ud45c\uc900 \uc18d\uc131\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ViewSet \ud074\ub798\uc2a4\ub294 \uc561\uc158\uc758 \uad6c\ud604\uc744 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. ViewSet \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \ud074\ub798\uc2a4\ub97c \uc624\ubc84\ub77c\uc774\ud2b8\ud558\uace0 \uc561\uc158 \uad6c\ud604\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ud574\uc57c\ud569\ub2c8\ub2e4.","title":"ViewSet"},{"location":"ViewSets/#genericviewset","text":"GenericViewSet \ud074\ub798\uc2a4\ub294 GenericAPIView \uc5d0\uc11c \uc0c1\uc18d\ub418\uba70, get_object , get_queryset \uba54\uc18c\ub4dc\uc640 \uadf8 \uc678 generic view \uc758 \uae30\ubcf8 \ub3d9\uc791\uc758 \uae30\ubcf8 set\uc744 \uc81c\uacf5\ud558\uc9c0\ub9cc, \uae30\ubcf8\uc801\uc73c\ub85c \uc5b4\ub5a4 \uc561\uc158\ub3c4 \ud3ec\ud568\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. GenericViewSet \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \ud074\ub798\uc2a4\ub97c \uc7ac\uc815\uc758\ud558\uace0 \ud544\uc694\ud55c mixin \ud074\ub798\uc2a4\ub97c \ud63c\ud569\ud558\uac70\ub098 \uc561\uc158 \uad6c\ud604\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ud558\uc138\uc694.","title":"GenericViewSet"},{"location":"ViewSets/#modelviewset","text":"ModelViewSet \ud074\ub798\uc2a4\ub294 GenericAPIView \ub97c \uc0c1\uc18d\ud558\uba70, \ub2e4\uc591\ud55c mixin \ud074\ub798\uc2a4\uc758 \ub3d9\uc791\uc744 \ud63c\ud569\ud558\uc5ec \ub2e4\uc591\ud55c \uc561\uc158\uc5d0 \ub300\ud55c \uad6c\ud604\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. ModelViewSet \ud074\ub798\uc2a4\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc791\uc5c5\uc740 .list() , .retrieve() , .create() , .update() , .partial_update() , .destroy() \uc785\ub2c8\ub2e4.","title":"ModelViewSet"},{"location":"ViewSets/#example_1","text":"ModelViewSet \uc740 GenericAPIView \ub97c \ud655\uc7a5\ud558\uae30 \ub54c\ubb38\uc5d0 \uc77c\ubc18\uc801\uc73c\ub85c \uc801\uc5b4\ub3c4 queryset \uacfc serializer_class \uc18d\uc131\uc744 \uc81c\uacf5\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608: class AccountViewSet(viewsets.ModelViewSet): \"\"\" A simple ViewSet for viewing and editing accounts. \"\"\" queryset = Account.objects.all() serializer_class = AccountSerializer permission_classes = [IsAccountAdminOrReadOnly] GenericAPIView \uac00 \uc81c\uacf5\ud558\ub294 \ud45c\uc900 \uc18d\uc131\uc774\ub098 \uba54\uc18c\ub4dc \uc624\ubc84\ub77c\uc774\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc791\ub3d9\ud574\uc57c\ud558\ub294 \ucffc\ub9ac\uc14b\uc744 \ub3d9\uc801\uc73c\ub85c \uacb0\uc815\ud558\ub294 viewset\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. class AccountViewSet(viewsets.ModelViewSet): \"\"\" A simple ViewSet for viewing and editing the accounts associated with the user. \"\"\" serializer_class = AccountSerializer permission_classes = [IsAccountAdminOrReadOnly] def get_queryset(self): return self.request.user.accounts.all() \uadf8\ub7ec\ub098 ViewSet \uc5d0\uc11c queryset \uc18d\uc131\uc744 \uc81c\uac70\ud558\uba74 \uc5f0\uad00\ub41c \ub77c\uc6b0\ud130 \uac00 \ubaa8\ub378\uc758 base_name \uc744 \uc790\ub3d9\uc73c\ub85c \ud30c\uc0dd\uc2dc\ud0ac \uc218 \uc5c6\uc73c\ubbc0\ub85c \ub77c\uc6b0\ud130 \ub4f1\ub85d \uc758 \uc77c\ubd80\ub85c base_name kwarg \ub97c \uc9c0\uc815\ud574\uc57c\ud569\ub2c8\ub2e4. \ub610\ud55c \uc774 \ud074\ub798\uc2a4\ub294 \uae30\ubcf8\uc801\uc73c\ub85c create / list / retrieve / update / destroy \uc561\uc158\uc758 \uc804\uccb4 set\uc744 \uc81c\uacf5\ud558\uc9c0\ub9cc \ud45c\uc900 \uad8c\ud55c \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc791\uc5c5\uc744 \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Example"},{"location":"ViewSets/#readonlymodelviewset","text":"ReadOnlyModelViewSet \ud074\ub798\uc2a4 \ub610\ud55c GenericAPIView \uc5d0\uc11c \uc0c1\uc18d\ubc1b\uc2b5\ub2c8\ub2e4. ModelViewSet \uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c \ub2e4\uc591\ud55c \uc561\uc158\uc5d0 \ub300\ud55c \uad6c\ud604\ub3c4 \ud3ec\ud568\ub418\uc9c0\ub9cc ModelViewSet \uacfc \ub2ec\ub9ac \uc77c\uae30 \uc804\uc6a9 \ub3d9\uc791\uc778 .list() , .retrieve() \ub9cc \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"ReadOnlyModelViewSet"},{"location":"ViewSets/#example_2","text":"ModelViewSet \uc5d0\uc11c\uc640 \uac19\uc774 \uc77c\ubc18\uc801\uc73c\ub85c \uc801\uc5b4\ub3c4 queryset \uacfc serializer_class \uc18d\uc131\uc744 \uc81c\uacf5\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608: class AccountViewSet(viewsets.ReadOnlyModelViewSet): \"\"\" A simple ViewSet for viewing accounts. \"\"\" queryset = Account.objects.all() serializer_class = AccountSerializer ModelViewSet \uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c GenericAPIView \uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ud45c\uc900 \uc18d\uc131\uacfc \uba54\uc18c\ub4dc \uc624\ubc84\ub77c\uc774\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Example"},{"location":"ViewSets/#custom-viewset-base-classes","text":"ModelViewSet \uc561\uc158\uc758 \uc804\uccb4 set\uc774 \uc5c6\uac70\ub098 \ub2e4\ub978 \ubc29\uc2dd\uc73c\ub85c \ub3d9\uc791\uc744 \uc0ac\uc6a9\uc790 \uc815\uc758\ud558\ub294 custom ViewSet \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"Custom ViewSet base classes"},{"location":"ViewSets/#example_3","text":"create , list , retrieve \uc870\uc791\uc744 \uc81c\uacf5\ud558\uace0, GenericViewSet \uc5d0\uc11c \uc0c1\uc18d\ud558\uba70, \ud544\uc694\ud55c \uc870\uce58\ub97c mixin \ud558\ub294 \uae30\ubcf8 viewset\ub97c \uc791\uc131\ud558\ub824\uba74 \ub2e4\uc74c\uc744 \uc791\uc131\ud558\uc138\uc694. class CreateListRetrieveViewSet(mixins.CreateModelMixin, mixins.ListModelMixin, mixins.RetrieveModelMixin, viewsets.GenericViewSet): \"\"\" `retrieve`, `create`, `list` actions\uc744 \uc81c\uacf5\ud558\ub294 viewset\uc785\ub2c8\ub2e4. \uc774\uac83\ub4e4\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 \ud074\ub798\uc2a4\uc640 `.queryset`\uacfc `.serializer_class`\uc758 \uc18d\uc131\uc744 \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc138\uc694. \"\"\" pass \uace0\uc720\ud55c \uae30\ubcf8 ViewSet \ud074\ub798\uc2a4\ub97c \uc791\uc131\ud558\uc5ec API \uc804\ubc18\uc5d0 \uac78\uccd0 \uc5ec\ub7ec viewset\uc5d0\uc11c \uc7ac\uc0ac\uc6a9 \ud560 \uc218 \uc788\ub294 \uacf5\ud1b5\uc801\uc778 \ub3d9\uc791\uc744 \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Example"},{"location":"Views/","text":"Django REST Framework - Views \"Django's class-based views are a welcome departure from the old-style views.\" \"Django\uc758 CBV\ub294 \uad6c\uc2dd \ubdf0\uc5d0\uc11c \ucd9c\ubc1c\ud558\ub294 \uac83\uc744 \ud658\uc601\ud569\ub2c8\ub2e4.\" \u2014 Reinout van Rees Class-based Views REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 Django\uc758 View \ud074\ub798\uc2a4\ub97c \ud558\uc704 \ud074\ub798\uc2a4\ub85c \ud558\ub294 APIView \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. APIView \ud074\ub798\uc2a4\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \uc77c\ubc18 View \ud074\ub798\uc2a4\uc640 \ub2e4\ub985\ub2c8\ub2e4. \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\uc5d0 \uc804\ub2ec \ub41c Request \ub294 Django\uc758 HttpRequest \uc778\uc2a4\ud134\uc2a4\uac00 \uc544\ub2cc REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 request \uc778\uc2a4\ud134\uc2a4\uac00 \ub429\ub2c8\ub2e4. \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\ub294 Django\uc758 HttpResponse \ub300\uc2e0 REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 Response \ub97c \ubc18\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubdf0\ub294 \ucf58\ud150\uce20 \ud611\uc0c1\uc744 \uad00\ub9ac\ud558\uace0 response \uc5d0\uc11c \uc62c\ubc14\ub978 \ub80c\ub354\ub7ec\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 APIException \uc608\uc678\uac00 \ubc1c\uacac\ub418\uba74 \uc801\uc808\ud55c response \uc73c\ub85c \uc870\uc815\ub429\ub2c8\ub2e4. \ub4e4\uc5b4\uc624\ub294 request\uac00 \uc778\uc99d\uc774 \ub41c request\ub97c \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\uc5d0 \ubcf4\ub0b4\uae30 \uc804\uc5d0 \uc801\uc808\ud55c \uad8c\ud55c\uacfc / \ub610\ub294 throttle(\uc81c\ud55c) \uccb4\ud06c\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. APIView \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc77c\ubc18 View \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uacfc \uac70\uc758 \uac19\uc2b5\ub2c8\ub2e4. \ub4e4\uc5b4\uc624\ub294 request\uc740 .get() \uc774\ub098 .post() \uc640 \uac19\uc740 \uc801\uc808\ud55c \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\ub85c \uc804\ub2ec\ub429\ub2c8\ub2e4. \ub610\ud55c API \uc815\ucc45\uc758 \ub2e4\uc591\ud55c \uce21\uba74\uc744 \uc81c\uc5b4\ud558\ub294 \uc5ec\ub7ec \uc18d\uc131\uc744 \ud074\ub798\uc2a4\uc5d0 \uc124\uc815 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import authentication, permissions class ListUsers(APIView): \"\"\" View to list all users in the system. * \ud1a0\ud070 \uc778\uc99d\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. * \uad00\ub9ac\uc790\ub9cc view\uc5d0 \uc561\uc11c\uc2a4 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \"\"\" authentication_classes = (authentication.TokenAuthentication,) permission_classes = (permissions.IsAdminUser,) def get(self, request, format=None): \"\"\" \ubaa8\ub4e0 \uc0ac\uc6a9\uc790 \ub9ac\uc2a4\ud2b8\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \"\"\" usernames = [user.username for user in User.objects.all()] return Response(usernames) API policy attributes(API \uc815\ucc45 \uc18d\uc131) \ub2e4\uc74c \uc18d\uc131\ub4e4\uc740 API view\uc758 \ud50c\ub7ec\uadf8 \uac00\ub2a5\ud55c \ubd80\ubd84\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4. .renderer_classes .parser_classes .authentication_classes .throttle_classes .permission_classes .content_negotiation_class API policy instantiation methods(API \uc815\ucc45 \uc778\uc2a4\ud134\uc2a4\ud654 \uba54\uc11c\ub4dc) \ub2e4\uc74c \uba54\uc11c\ub4dc\ub4e4\uc740 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c \ub2e4\uc591\ud55c \ud50c\ub7ec\uadf8\uac00 \uac00\ub2a5\ud55c API \uc815\ucc45\uc744 \uc778\uc2a4\ud134\uc2a4\ud654\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774\ub7ec\ud55c \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758 \ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. .get_renderers(self) .get_parsers(self) .get_authenticators(self) .get_throttles(self) .get_permissions(self) .get_content_negotiator(self) .get_exception_handler(self) API policy implementation methods(API \uc815\ucc45 \uad6c\ud604 \ubc29\ubc95) \ub2e4\uc74c \uba54\uc11c\ub4dc\ub294 \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\uc5d0 \uc804\ub2ec\ud558\uae30 \uc804\uc5d0 \ud638\ucd9c\ub429\ub2c8\ub2e4. .check_permissions(self, request) .check_throttles(self, request) .perform_content_negotiation(self, request, force=False) Dispatch methods (\ud30c\uacac \uba54\uc11c\ub4dc) \ub2e4\uc74c \uba54\uc11c\ub4dc\ub294 \ubdf0\uc758 .dispatch() \uba54\uc11c\ub4dc\uc5d0 \uc758\ud574 \uc9c1\uc811 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub4e4\uc740 .get() , .post() , put() , patch() \ubc0f .delete() \uc640 \uac19\uc740 \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\ub4e4\uc744 \ud638\ucd9c\ud558\uae30 \uc804\ud6c4\uc5d0 \uc218\ud589\ub418\uc5b4\uc57c\ud558\ub294 \ubaa8\ub4e0 \uc870\uce58\ub4e4\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. .initial(self, request, *args, **kwargs) \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\uac00 \ud638\ucd9c\ub418\uae30 \uc804\uc5d0 \ubc1c\uc0dd\ud574\uc57c\ud558\ub294 \ubaa8\ub4e0 \uc791\uc5c5\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 \uc0ac\uc6a9 \uad8c\ud55c \ubc0f \uc81c\ud55c\uc744 \uc801\uc6a9\ud558\uace0 \ucf58\ud150\uce20 \ud611\uc0c1\uc744 \uc218\ud589\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758 \ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. .handle_exception(self, exc) \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\uc5d0 \uc758\ud574 \ubc84\ub824\uc9c4 \uc608\uc678\ub294 Resopnse \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud558\uac70\ub098 \uc608\uc678\ub97c \ub2e4\uc2dc \ubc1c\uc0dd\uc2dc\ud0a4\ub294 \uc774 \uba54\uc11c\ub4dc\ub85c \uc804\ub2ec\ub429\ub2c8\ub2e4. \uae30\ubcf8 \uad6c\ud604\uc5d0\uc11c\ub294 Django\uc758 Http404 \uc640 PermissionDenied \uc608\uc678 \ubfd0\ub9cc \uc544\ub2c8\ub77c rest_framework.exceptions.APIXeception \uc758 \ud558\uc704 \ud074\ub798\uc2a4\ub97c \ucc98\ub9ac\ud558\uace0 \uc801\uc808\ud55c \uc624\ub958 response\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. API\uc5d0\uc11c \ubc18\ud658\ud558\ub294 \uc624\ub958 response\ub97c \uc0ac\uc6a9\uc790 \uc815\uc758\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 \uc774 \uba54\uc18c\ub4dc\ub97c \uc11c\ube0c \ud074\ub798\uc2a4\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. .initialize_request(self, request, *args, **kwargs) \ud578\ub4e4\ub7ec \uba54\uc18c\ub4dc\uc5d0 \uc804\ub2ec \ub41c request \uac1d\uccb4\uac00 \uc77c\ubc18\uc801\uc778 Django HttpRequest \uac00 \uc544\ub2cc Request \uc758 \uc778\uc2a4\ud134\uc2a4\uc778\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758 \ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. .finalize_response(self, request, response, *args, **kwargs) \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\uc5d0\uc11c \ubc18\ud658 \ub41c \ubaa8\ub4e0 Response \uac1d\uccb4\uac00 \ub0b4\uc6a9 \ud611\uc0c1\uc5d0 \uc758\ud574 \uacb0\uc815\ub41c \ub300\ub85c \uc62c\ubc14\ub978 \ub0b4\uc6a9 \uc720\ud615\uc73c\ub85c \ub80c\ub354\ub9c1\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uba54\uc11c\ub4dc\ub294 \uc7ac\uc815\uc758 \ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. Function Based Views \"Saying [that class-based views] is always the superior solution is a mistake.\" \"[\uadf8 \ud074\ub798\uc2a4 \uae30\ubc18\uc758 \uacac\ud574]\uac00 \ud56d\uc0c1 \uc6b0\uc6d4\ud55c \ud574\uacb0\ucc45\uc740 \uc2e4\uc218\ub77c\uace0 \ub9d0\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.\" \u2014 Nick Coghlan REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud558\uba74 \uc77c\ubc18 FBV\ub85c \uc791\uc5c5 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\uac83\uc740 \uac04\ub2e8\ud55c Django HttpRequest \uac00 \uc544\ub2cc Request \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc218\uc2e0\ud558\uace0 Django HttpResponse \ub300\uc2e0 response \uc744 \ub9ac\ud134 \ud560 \uc218 \uc788\ub3c4\ub85d FBV\ub97c \ub798\ud551\ud558\ub294 \uac04\ub2e8\ud55c \ub370\ucf54\ub808\uc774\ud130 \uc138\ud2b8\ub97c \uc81c\uacf5\ud558\uba70, request\uac00 \ucc98\ub9ac\ub429\ub2c8\ub2e4. @api_view() Signature : @api_view(http_method_names=['GET'], exclude_from_schema=False) \uc774 \uae30\ub2a5\uc758 \ud575\uc2ec\uc740 api_view \ub370\ucf54\ub808\uc774\ud130(\ubdf0\uac00 \uc751\ub2f5\ud574\uc57c\ud558\ub294 HTTP \uba54\uc11c\ub4dc \ub9ac\uc2a4\ud2b8\ub97c \uc0ac\uc6a9\ud568)\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c\uc740 \uba87 \uac00\uc9c0 \ub370\uc774\ud130\ub97c \uc218\ub3d9\uc73c\ub85c \ubc18\ud658\ud558\ub294 \uc544\uc8fc \uac04\ub2e8\ud55c view\ub97c \uc791\uc131\ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. from rest_framework.decorators import api_view @api_view() def hello_world(request): return Response({\"message\": \"Hello, world!\"}) \uc774 \ubdf0\ub294 \uc124\uc815 \uc5d0 \uc9c0\uc815\ub41c \uae30\ubcf8 \ub80c\ub354\ub7ec, \ud30c\uc11c, \uc778\uc99d \ud074\ub798\uc2a4 \ub4f1\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c GET \uba54\uc11c\ub4dc\ub9cc \ud5c8\uc6a9\ub429\ub2c8\ub2e4. \ub2e4\ub978 \uba54\uc11c\ub4dc\ub4e4\uc740 \"405 Method Not Allowed\"\ub85c \uc751\ub2f5\ud569\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc744 \ubcc0\uacbd\ud558\ub824\uba74 view\uc5d0\uc11c \ud5c8\uc6a9\ud558\ub294 \ubc29\ubc95\uc744 \uc9c0\uc815\ud558\uc138\uc694. @api_view(['GET', 'POST']) def hello_world(request): if request.method == 'POST': return Response({\"message\": \"Got some data!\", \"data\": request.data}) return Response({\"message\": \"Hello, world!\"}) exclude_from_schema \uc778\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec API \ubdf0\ub97c \uc790\ub3d9 \uc0dd\uc131 \uc2a4\ud0a4\ub9c8(auto-generated schema) \uc5d0\uc11c \uc0dd\ub7b5\ub41c \uac83\uc73c\ub85c \ud45c\uc2dc \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. @api_view(['GET'], exclude_from_schema=True) def api_docs(request): ... API policy decorators \uae30\ubcf8 \uc124\uc815\uc744 \uc7ac\uc815\uc758\ud558\uae30 \uc704\ud574 REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ubdf0\uc5d0 \ucd94\uac00 \ud560 \uc218 \uc788\ub294 \uc77c\ub828\uc758 \ucd94\uac00 \ub370\ucf54\ub808\uc774\ud130\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub4e4\uc740 @api_view \ub370\ucf54\ub808\uc774\ud130 \ub2e4\uc74c\uc5d0 \uc640\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, throttle \uc744 \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 \uc0ac\uc6a9\uc790\uac00 \ud558\ub8e8\uc5d0 \ud55c\ubc88\ub9cc \ud638\ucd9c \ud560 \uc218 \uc788\ub3c4\ub85d \ubdf0\ub97c \ub9cc\ub4e4\ub824\uba74 @thottle_classes \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec throttle \ud074\ub798\uc2a4 \ubaa9\ub85d\uc744 \uc804\ub2ec\ud558\uc138\uc694. from rest_framework.decorators import api_view, throttle_classes from rest_framework.throttling import UserRateThrottle class OncePerDayUserThrottle(UserRateThrottle): rate = '1/day' @api_view(['GET']) @throttle_classes([OncePerDayUserThrottle]) def view(request): return Response({\"message\": \"Hello for today! See you tomorrow!\"}) \uc774\ub7ec\ud55c \ub370\ucf54\ub808\uc774\ud130\ub294 \uc704\uc5d0\uc11c \uc124\uba85\ud55c APIView \ud558\uc704 \ud074\ub798\uc2a4\uc5d0 \uc124\uc815\ub41c \ud2b9\uc131\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ub370\ucf54\ub808\uc774\ud130\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. @renderer_classes(...) @parser_classes(...) @authentication_classes(...) @throttle_classes(...) @permission_classes(...) \uc774\ub7ec\ud55c \ub370\ucf54\ub808\uc774\ud130 \uac01\uac01\uc740 \ud074\ub798\uc2a4\uc758 list \ub098 tuple \uc778 \ub2e8\uc77c \uc778\uc218\ub97c \ucde8\ud569\ub2c8\ub2e4.","title":"Views"},{"location":"Views/#django-rest-framework-views","text":"\"Django's class-based views are a welcome departure from the old-style views.\" \"Django\uc758 CBV\ub294 \uad6c\uc2dd \ubdf0\uc5d0\uc11c \ucd9c\ubc1c\ud558\ub294 \uac83\uc744 \ud658\uc601\ud569\ub2c8\ub2e4.\" \u2014 Reinout van Rees","title":"Django REST Framework - Views"},{"location":"Views/#class-based-views","text":"REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 Django\uc758 View \ud074\ub798\uc2a4\ub97c \ud558\uc704 \ud074\ub798\uc2a4\ub85c \ud558\ub294 APIView \ud074\ub798\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. APIView \ud074\ub798\uc2a4\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \uc77c\ubc18 View \ud074\ub798\uc2a4\uc640 \ub2e4\ub985\ub2c8\ub2e4. \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\uc5d0 \uc804\ub2ec \ub41c Request \ub294 Django\uc758 HttpRequest \uc778\uc2a4\ud134\uc2a4\uac00 \uc544\ub2cc REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 request \uc778\uc2a4\ud134\uc2a4\uac00 \ub429\ub2c8\ub2e4. \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\ub294 Django\uc758 HttpResponse \ub300\uc2e0 REST \ud504\ub808\uc784\uc6cc\ud06c\uc758 Response \ub97c \ubc18\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubdf0\ub294 \ucf58\ud150\uce20 \ud611\uc0c1\uc744 \uad00\ub9ac\ud558\uace0 response \uc5d0\uc11c \uc62c\ubc14\ub978 \ub80c\ub354\ub7ec\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 APIException \uc608\uc678\uac00 \ubc1c\uacac\ub418\uba74 \uc801\uc808\ud55c response \uc73c\ub85c \uc870\uc815\ub429\ub2c8\ub2e4. \ub4e4\uc5b4\uc624\ub294 request\uac00 \uc778\uc99d\uc774 \ub41c request\ub97c \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\uc5d0 \ubcf4\ub0b4\uae30 \uc804\uc5d0 \uc801\uc808\ud55c \uad8c\ud55c\uacfc / \ub610\ub294 throttle(\uc81c\ud55c) \uccb4\ud06c\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. APIView \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc77c\ubc18 View \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uacfc \uac70\uc758 \uac19\uc2b5\ub2c8\ub2e4. \ub4e4\uc5b4\uc624\ub294 request\uc740 .get() \uc774\ub098 .post() \uc640 \uac19\uc740 \uc801\uc808\ud55c \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\ub85c \uc804\ub2ec\ub429\ub2c8\ub2e4. \ub610\ud55c API \uc815\ucc45\uc758 \ub2e4\uc591\ud55c \uce21\uba74\uc744 \uc81c\uc5b4\ud558\ub294 \uc5ec\ub7ec \uc18d\uc131\uc744 \ud074\ub798\uc2a4\uc5d0 \uc124\uc815 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import authentication, permissions class ListUsers(APIView): \"\"\" View to list all users in the system. * \ud1a0\ud070 \uc778\uc99d\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. * \uad00\ub9ac\uc790\ub9cc view\uc5d0 \uc561\uc11c\uc2a4 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \"\"\" authentication_classes = (authentication.TokenAuthentication,) permission_classes = (permissions.IsAdminUser,) def get(self, request, format=None): \"\"\" \ubaa8\ub4e0 \uc0ac\uc6a9\uc790 \ub9ac\uc2a4\ud2b8\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \"\"\" usernames = [user.username for user in User.objects.all()] return Response(usernames)","title":"Class-based Views"},{"location":"Views/#api-policy-attributesapi","text":"\ub2e4\uc74c \uc18d\uc131\ub4e4\uc740 API view\uc758 \ud50c\ub7ec\uadf8 \uac00\ub2a5\ud55c \ubd80\ubd84\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4. .renderer_classes .parser_classes .authentication_classes .throttle_classes .permission_classes .content_negotiation_class","title":"API policy attributes(API \uc815\ucc45 \uc18d\uc131)"},{"location":"Views/#api-policy-instantiation-methodsapi","text":"\ub2e4\uc74c \uba54\uc11c\ub4dc\ub4e4\uc740 REST \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c \ub2e4\uc591\ud55c \ud50c\ub7ec\uadf8\uac00 \uac00\ub2a5\ud55c API \uc815\ucc45\uc744 \uc778\uc2a4\ud134\uc2a4\ud654\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774\ub7ec\ud55c \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758 \ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. .get_renderers(self) .get_parsers(self) .get_authenticators(self) .get_throttles(self) .get_permissions(self) .get_content_negotiator(self) .get_exception_handler(self)","title":"API policy instantiation methods(API \uc815\ucc45 \uc778\uc2a4\ud134\uc2a4\ud654 \uba54\uc11c\ub4dc)"},{"location":"Views/#api-policy-implementation-methodsapi","text":"\ub2e4\uc74c \uba54\uc11c\ub4dc\ub294 \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\uc5d0 \uc804\ub2ec\ud558\uae30 \uc804\uc5d0 \ud638\ucd9c\ub429\ub2c8\ub2e4. .check_permissions(self, request) .check_throttles(self, request) .perform_content_negotiation(self, request, force=False)","title":"API policy implementation methods(API \uc815\ucc45 \uad6c\ud604 \ubc29\ubc95)"},{"location":"Views/#dispatch-methods","text":"\ub2e4\uc74c \uba54\uc11c\ub4dc\ub294 \ubdf0\uc758 .dispatch() \uba54\uc11c\ub4dc\uc5d0 \uc758\ud574 \uc9c1\uc811 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub4e4\uc740 .get() , .post() , put() , patch() \ubc0f .delete() \uc640 \uac19\uc740 \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\ub4e4\uc744 \ud638\ucd9c\ud558\uae30 \uc804\ud6c4\uc5d0 \uc218\ud589\ub418\uc5b4\uc57c\ud558\ub294 \ubaa8\ub4e0 \uc870\uce58\ub4e4\uc744 \uc218\ud589\ud569\ub2c8\ub2e4.","title":"Dispatch methods (\ud30c\uacac \uba54\uc11c\ub4dc)"},{"location":"Views/#initialself-request-args-kwargs","text":"\ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\uac00 \ud638\ucd9c\ub418\uae30 \uc804\uc5d0 \ubc1c\uc0dd\ud574\uc57c\ud558\ub294 \ubaa8\ub4e0 \uc791\uc5c5\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 \uc0ac\uc6a9 \uad8c\ud55c \ubc0f \uc81c\ud55c\uc744 \uc801\uc6a9\ud558\uace0 \ucf58\ud150\uce20 \ud611\uc0c1\uc744 \uc218\ud589\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758 \ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4.","title":".initial(self, request, *args, **kwargs)"},{"location":"Views/#handle_exceptionself-exc","text":"\ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\uc5d0 \uc758\ud574 \ubc84\ub824\uc9c4 \uc608\uc678\ub294 Resopnse \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud558\uac70\ub098 \uc608\uc678\ub97c \ub2e4\uc2dc \ubc1c\uc0dd\uc2dc\ud0a4\ub294 \uc774 \uba54\uc11c\ub4dc\ub85c \uc804\ub2ec\ub429\ub2c8\ub2e4. \uae30\ubcf8 \uad6c\ud604\uc5d0\uc11c\ub294 Django\uc758 Http404 \uc640 PermissionDenied \uc608\uc678 \ubfd0\ub9cc \uc544\ub2c8\ub77c rest_framework.exceptions.APIXeception \uc758 \ud558\uc704 \ud074\ub798\uc2a4\ub97c \ucc98\ub9ac\ud558\uace0 \uc801\uc808\ud55c \uc624\ub958 response\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. API\uc5d0\uc11c \ubc18\ud658\ud558\ub294 \uc624\ub958 response\ub97c \uc0ac\uc6a9\uc790 \uc815\uc758\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 \uc774 \uba54\uc18c\ub4dc\ub97c \uc11c\ube0c \ud074\ub798\uc2a4\ud654\ud574\uc57c \ud569\ub2c8\ub2e4.","title":".handle_exception(self, exc)"},{"location":"Views/#initialize_requestself-request-args-kwargs","text":"\ud578\ub4e4\ub7ec \uba54\uc18c\ub4dc\uc5d0 \uc804\ub2ec \ub41c request \uac1d\uccb4\uac00 \uc77c\ubc18\uc801\uc778 Django HttpRequest \uac00 \uc544\ub2cc Request \uc758 \uc778\uc2a4\ud134\uc2a4\uc778\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758 \ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4.","title":".initialize_request(self, request, *args, **kwargs)"},{"location":"Views/#finalize_responseself-request-response-args-kwargs","text":"\ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\uc5d0\uc11c \ubc18\ud658 \ub41c \ubaa8\ub4e0 Response \uac1d\uccb4\uac00 \ub0b4\uc6a9 \ud611\uc0c1\uc5d0 \uc758\ud574 \uacb0\uc815\ub41c \ub300\ub85c \uc62c\ubc14\ub978 \ub0b4\uc6a9 \uc720\ud615\uc73c\ub85c \ub80c\ub354\ub9c1\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uba54\uc11c\ub4dc\ub294 \uc7ac\uc815\uc758 \ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4.","title":".finalize_response(self, request, response, *args, **kwargs)"},{"location":"Views/#function-based-views","text":"\"Saying [that class-based views] is always the superior solution is a mistake.\" \"[\uadf8 \ud074\ub798\uc2a4 \uae30\ubc18\uc758 \uacac\ud574]\uac00 \ud56d\uc0c1 \uc6b0\uc6d4\ud55c \ud574\uacb0\ucc45\uc740 \uc2e4\uc218\ub77c\uace0 \ub9d0\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.\" \u2014 Nick Coghlan REST \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud558\uba74 \uc77c\ubc18 FBV\ub85c \uc791\uc5c5 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\uac83\uc740 \uac04\ub2e8\ud55c Django HttpRequest \uac00 \uc544\ub2cc Request \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc218\uc2e0\ud558\uace0 Django HttpResponse \ub300\uc2e0 response \uc744 \ub9ac\ud134 \ud560 \uc218 \uc788\ub3c4\ub85d FBV\ub97c \ub798\ud551\ud558\ub294 \uac04\ub2e8\ud55c \ub370\ucf54\ub808\uc774\ud130 \uc138\ud2b8\ub97c \uc81c\uacf5\ud558\uba70, request\uac00 \ucc98\ub9ac\ub429\ub2c8\ub2e4.","title":"Function Based Views"},{"location":"Views/#api_view","text":"Signature : @api_view(http_method_names=['GET'], exclude_from_schema=False) \uc774 \uae30\ub2a5\uc758 \ud575\uc2ec\uc740 api_view \ub370\ucf54\ub808\uc774\ud130(\ubdf0\uac00 \uc751\ub2f5\ud574\uc57c\ud558\ub294 HTTP \uba54\uc11c\ub4dc \ub9ac\uc2a4\ud2b8\ub97c \uc0ac\uc6a9\ud568)\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c\uc740 \uba87 \uac00\uc9c0 \ub370\uc774\ud130\ub97c \uc218\ub3d9\uc73c\ub85c \ubc18\ud658\ud558\ub294 \uc544\uc8fc \uac04\ub2e8\ud55c view\ub97c \uc791\uc131\ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. from rest_framework.decorators import api_view @api_view() def hello_world(request): return Response({\"message\": \"Hello, world!\"}) \uc774 \ubdf0\ub294 \uc124\uc815 \uc5d0 \uc9c0\uc815\ub41c \uae30\ubcf8 \ub80c\ub354\ub7ec, \ud30c\uc11c, \uc778\uc99d \ud074\ub798\uc2a4 \ub4f1\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c GET \uba54\uc11c\ub4dc\ub9cc \ud5c8\uc6a9\ub429\ub2c8\ub2e4. \ub2e4\ub978 \uba54\uc11c\ub4dc\ub4e4\uc740 \"405 Method Not Allowed\"\ub85c \uc751\ub2f5\ud569\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc744 \ubcc0\uacbd\ud558\ub824\uba74 view\uc5d0\uc11c \ud5c8\uc6a9\ud558\ub294 \ubc29\ubc95\uc744 \uc9c0\uc815\ud558\uc138\uc694. @api_view(['GET', 'POST']) def hello_world(request): if request.method == 'POST': return Response({\"message\": \"Got some data!\", \"data\": request.data}) return Response({\"message\": \"Hello, world!\"}) exclude_from_schema \uc778\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec API \ubdf0\ub97c \uc790\ub3d9 \uc0dd\uc131 \uc2a4\ud0a4\ub9c8(auto-generated schema) \uc5d0\uc11c \uc0dd\ub7b5\ub41c \uac83\uc73c\ub85c \ud45c\uc2dc \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. @api_view(['GET'], exclude_from_schema=True) def api_docs(request): ...","title":"@api_view()"},{"location":"Views/#api-policy-decorators","text":"\uae30\ubcf8 \uc124\uc815\uc744 \uc7ac\uc815\uc758\ud558\uae30 \uc704\ud574 REST \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ubdf0\uc5d0 \ucd94\uac00 \ud560 \uc218 \uc788\ub294 \uc77c\ub828\uc758 \ucd94\uac00 \ub370\ucf54\ub808\uc774\ud130\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub4e4\uc740 @api_view \ub370\ucf54\ub808\uc774\ud130 \ub2e4\uc74c\uc5d0 \uc640\uc57c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, throttle \uc744 \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 \uc0ac\uc6a9\uc790\uac00 \ud558\ub8e8\uc5d0 \ud55c\ubc88\ub9cc \ud638\ucd9c \ud560 \uc218 \uc788\ub3c4\ub85d \ubdf0\ub97c \ub9cc\ub4e4\ub824\uba74 @thottle_classes \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec throttle \ud074\ub798\uc2a4 \ubaa9\ub85d\uc744 \uc804\ub2ec\ud558\uc138\uc694. from rest_framework.decorators import api_view, throttle_classes from rest_framework.throttling import UserRateThrottle class OncePerDayUserThrottle(UserRateThrottle): rate = '1/day' @api_view(['GET']) @throttle_classes([OncePerDayUserThrottle]) def view(request): return Response({\"message\": \"Hello for today! See you tomorrow!\"}) \uc774\ub7ec\ud55c \ub370\ucf54\ub808\uc774\ud130\ub294 \uc704\uc5d0\uc11c \uc124\uba85\ud55c APIView \ud558\uc704 \ud074\ub798\uc2a4\uc5d0 \uc124\uc815\ub41c \ud2b9\uc131\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ub370\ucf54\ub808\uc774\ud130\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. @renderer_classes(...) @parser_classes(...) @authentication_classes(...) @throttle_classes(...) @permission_classes(...) \uc774\ub7ec\ud55c \ub370\ucf54\ub808\uc774\ud130 \uac01\uac01\uc740 \ud074\ub798\uc2a4\uc758 list \ub098 tuple \uc778 \ub2e8\uc77c \uc778\uc218\ub97c \ucde8\ud569\ub2c8\ub2e4.","title":"API policy decorators"}]}